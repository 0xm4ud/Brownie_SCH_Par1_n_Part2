{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_pair",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "borrow",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "debt",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "deposited",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "isSafeDebt",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pair",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "repay",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token0",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token1",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "13": "/Users/m4ud/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/utils/Address.sol",
    "29": "contracts/interfaces/IUniswapV2.sol",
    "3": "/Users/m4ud/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/token/ERC20/IERC20.sol",
    "31": "contracts/oracle-manipulation-2/Lendly.sol",
    "7": "/Users/m4ud/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
    "8": "/Users/m4ud/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/token/ERC20/utils/SafeERC20.sol"
  },
  "ast": {
    "absolutePath": "contracts/oracle-manipulation-2/Lendly.sol",
    "exportedSymbols": {
      "Address": [
        5264
      ],
      "IERC20": [
        3218
      ],
      "IERC20Permit": [
        4934
      ],
      "IUniswapV2Pair": [
        2705
      ],
      "IWETH9": [
        3522
      ],
      "Lendly": [
        1076
      ],
      "SafeERC20": [
        3499
      ]
    },
    "id": 1077,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 774,
        "literals": [
          "solidity",
          "0.8",
          ".13"
        ],
        "nodeType": "PragmaDirective",
        "src": "116:23:31"
      },
      {
        "absolutePath": "contracts/interfaces/IUniswapV2.sol",
        "file": "../interfaces/IUniswapV2.sol",
        "id": 776,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1077,
        "sourceUnit": 3097,
        "src": "141:60:31",
        "symbolAliases": [
          {
            "foreign": {
              "id": 775,
              "name": "IUniswapV2Pair",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 2705,
              "src": "149:14:31",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/interfaces/IWETH9.sol",
        "file": "../interfaces/IWETH9.sol",
        "id": 778,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1077,
        "sourceUnit": 3523,
        "src": "202:48:31",
        "symbolAliases": [
          {
            "foreign": {
              "id": 777,
              "name": "IWETH9",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 3522,
              "src": "210:6:31",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/m4ud/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 780,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1077,
        "sourceUnit": 3219,
        "src": "251:70:31",
        "symbolAliases": [
          {
            "foreign": {
              "id": 779,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 3218,
              "src": "259:6:31",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/m4ud/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "id": 781,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1077,
        "sourceUnit": 3500,
        "src": "322:65:31",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Lendly",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 782,
          "nodeType": "StructuredDocumentation",
          "src": "389:82:31",
          "text": " @title Lendly\n @author JohnnyTime (https://smartcontractshacking.com)"
        },
        "fullyImplemented": true,
        "id": 1076,
        "linearizedBaseContracts": [
          1076
        ],
        "name": "Lendly",
        "nameLocation": "481:6:31",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "global": false,
            "id": 786,
            "libraryName": {
              "id": 783,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3499,
              "src": "501:9:31"
            },
            "nodeType": "UsingForDirective",
            "src": "495:27:31",
            "typeName": {
              "id": 785,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 784,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3218,
                "src": "515:6:31"
              },
              "referencedDeclaration": 3218,
              "src": "515:6:31",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$3218",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "a8aa1b31",
            "id": 788,
            "mutability": "mutable",
            "name": "pair",
            "nameLocation": "547:4:31",
            "nodeType": "VariableDeclaration",
            "scope": 1076,
            "src": "532:19:31",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 787,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "532:7:31",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "0dfe1681",
            "id": 790,
            "mutability": "mutable",
            "name": "token0",
            "nameLocation": "572:6:31",
            "nodeType": "VariableDeclaration",
            "scope": 1076,
            "src": "557:21:31",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 789,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "557:7:31",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d21220a7",
            "id": 792,
            "mutability": "mutable",
            "name": "token1",
            "nameLocation": "599:6:31",
            "nodeType": "VariableDeclaration",
            "scope": 1076,
            "src": "584:21:31",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 791,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "584:7:31",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "91130db6",
            "id": 798,
            "mutability": "mutable",
            "name": "deposited",
            "nameLocation": "699:9:31",
            "nodeType": "VariableDeclaration",
            "scope": 1076,
            "src": "643:65:31",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(address => uint256))"
            },
            "typeName": {
              "id": 797,
              "keyType": {
                "id": 793,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "651:7:31",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "643:48:31",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(address => uint256))"
              },
              "valueType": {
                "id": 796,
                "keyType": {
                  "id": 794,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "671:7:31",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "662:28:31",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueType": {
                  "id": 795,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "682:7:31",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d449300d",
            "id": 804,
            "mutability": "mutable",
            "name": "debt",
            "nameLocation": "782:4:31",
            "nodeType": "VariableDeclaration",
            "scope": 1076,
            "src": "726:60:31",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(address => uint256))"
            },
            "typeName": {
              "id": 803,
              "keyType": {
                "id": 799,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "734:7:31",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "726:48:31",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(address => uint256))"
              },
              "valueType": {
                "id": 802,
                "keyType": {
                  "id": 800,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "754:7:31",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "745:28:31",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueType": {
                  "id": 801,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "765:7:31",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 820,
              "nodeType": "Block",
              "src": "844:96:31",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 815,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 811,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 809,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 806,
                            "src": "862:6:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 810,
                            "name": "token0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 790,
                            "src": "872:6:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "862:16:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 814,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 812,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 806,
                            "src": "882:6:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 813,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 792,
                            "src": "892:6:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "882:16:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "862:36:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f7420737570706f7274656420746f6b656e",
                        "id": 816,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "900:21:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1d085a3e746b292e030c10269fec3801ac262012aa560d737b3321af97c2fb32",
                          "typeString": "literal_string \"not supported token\""
                        },
                        "value": "not supported token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1d085a3e746b292e030c10269fec3801ac262012aa560d737b3321af97c2fb32",
                          "typeString": "literal_string \"not supported token\""
                        }
                      ],
                      "id": 808,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "854:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 817,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "854:68:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 818,
                  "nodeType": "ExpressionStatement",
                  "src": "854:68:31"
                },
                {
                  "id": 819,
                  "nodeType": "PlaceholderStatement",
                  "src": "932:1:31"
                }
              ]
            },
            "id": 821,
            "name": "isSupportedToken",
            "nameLocation": "811:16:31",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 807,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 806,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "836:6:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 821,
                  "src": "828:14:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 805,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "828:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "827:16:31"
            },
            "src": "802:138:31",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 846,
              "nodeType": "Block",
              "src": "974:125:31",
              "statements": [
                {
                  "expression": {
                    "id": 828,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 826,
                      "name": "pair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 788,
                      "src": "984:4:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 827,
                      "name": "_pair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 823,
                      "src": "991:5:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "984:12:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 829,
                  "nodeType": "ExpressionStatement",
                  "src": "984:12:31"
                },
                {
                  "expression": {
                    "id": 836,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 830,
                      "name": "token0",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 790,
                      "src": "1006:6:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "arguments": [
                            {
                              "id": 832,
                              "name": "pair",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 788,
                              "src": "1030:4:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 831,
                            "name": "IUniswapV2Pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2705,
                            "src": "1015:14:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IUniswapV2Pair_$2705_$",
                              "typeString": "type(contract IUniswapV2Pair)"
                            }
                          },
                          "id": 833,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1015:20:31",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IUniswapV2Pair_$2705",
                            "typeString": "contract IUniswapV2Pair"
                          }
                        },
                        "id": 834,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "token0",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2633,
                        "src": "1015:27:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                          "typeString": "function () view external returns (address)"
                        }
                      },
                      "id": 835,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1015:29:31",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1006:38:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 837,
                  "nodeType": "ExpressionStatement",
                  "src": "1006:38:31"
                },
                {
                  "expression": {
                    "id": 844,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 838,
                      "name": "token1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 792,
                      "src": "1054:6:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "arguments": [
                            {
                              "id": 840,
                              "name": "pair",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 788,
                              "src": "1078:4:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 839,
                            "name": "IUniswapV2Pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2705,
                            "src": "1063:14:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IUniswapV2Pair_$2705_$",
                              "typeString": "type(contract IUniswapV2Pair)"
                            }
                          },
                          "id": 841,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1063:20:31",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IUniswapV2Pair_$2705",
                            "typeString": "contract IUniswapV2Pair"
                          }
                        },
                        "id": 842,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "token1",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2638,
                        "src": "1063:27:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                          "typeString": "function () view external returns (address)"
                        }
                      },
                      "id": 843,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1063:29:31",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1054:38:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 845,
                  "nodeType": "ExpressionStatement",
                  "src": "1054:38:31"
                }
              ]
            },
            "id": 847,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 824,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 823,
                  "mutability": "mutable",
                  "name": "_pair",
                  "nameLocation": "967:5:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 847,
                  "src": "959:13:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 822,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "959:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "958:15:31"
            },
            "returnParameters": {
              "id": 825,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "974:0:31"
            },
            "scope": 1076,
            "src": "946:153:31",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 879,
              "nodeType": "Block",
              "src": "1187:134:31",
              "statements": [
                {
                  "expression": {
                    "id": 864,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 857,
                          "name": "deposited",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 798,
                          "src": "1197:9:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 861,
                        "indexExpression": {
                          "id": 858,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 849,
                          "src": "1207:6:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1197:17:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 862,
                      "indexExpression": {
                        "expression": {
                          "id": 859,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1215:3:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 860,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1215:10:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1197:29:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 863,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 851,
                      "src": "1230:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1197:40:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 865,
                  "nodeType": "ExpressionStatement",
                  "src": "1197:40:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 870,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1279:3:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 871,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1279:10:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 874,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1299:4:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Lendly_$1076",
                              "typeString": "contract Lendly"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Lendly_$1076",
                              "typeString": "contract Lendly"
                            }
                          ],
                          "id": 873,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1291:7:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 872,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1291:7:31",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 875,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1291:13:31",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 876,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 851,
                        "src": "1306:7:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 867,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 849,
                            "src": "1254:6:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 866,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3218,
                          "src": "1247:6:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$3218_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 868,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1247:14:31",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3218",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 869,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3276,
                      "src": "1247:31:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$3218_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$3218_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 877,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1247:67:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 878,
                  "nodeType": "ExpressionStatement",
                  "src": "1247:67:31"
                }
              ]
            },
            "functionSelector": "47e7ef24",
            "id": 880,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 854,
                    "name": "_token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 849,
                    "src": "1179:6:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 855,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 853,
                  "name": "isSupportedToken",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 821,
                  "src": "1162:16:31"
                },
                "nodeType": "ModifierInvocation",
                "src": "1162:24:31"
              }
            ],
            "name": "deposit",
            "nameLocation": "1114:7:31",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 852,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 849,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "1130:6:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 880,
                  "src": "1122:14:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 848,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1122:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 851,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1146:7:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 880,
                  "src": "1138:15:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 850,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1138:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1121:33:31"
            },
            "returnParameters": {
              "id": 856,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1187:0:31"
            },
            "scope": 1076,
            "src": "1105:216:31",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 926,
              "nodeType": "Block",
              "src": "1410:258:31",
              "statements": [
                {
                  "expression": {
                    "id": 897,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 890,
                          "name": "deposited",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 798,
                          "src": "1420:9:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 894,
                        "indexExpression": {
                          "id": 891,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 882,
                          "src": "1430:6:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1420:17:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 895,
                      "indexExpression": {
                        "expression": {
                          "id": 892,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1438:3:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 893,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1438:10:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1420:29:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 896,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 884,
                      "src": "1453:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1420:40:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 898,
                  "nodeType": "ExpressionStatement",
                  "src": "1420:40:31"
                },
                {
                  "assignments": [
                    900
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 900,
                      "mutability": "mutable",
                      "name": "otherToken",
                      "nameLocation": "1478:10:31",
                      "nodeType": "VariableDeclaration",
                      "scope": 926,
                      "src": "1470:18:31",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 899,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1470:7:31",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 907,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 903,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 901,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 882,
                        "src": "1491:6:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "id": 902,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 790,
                        "src": "1501:6:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "1491:16:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "id": 905,
                      "name": "token0",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 790,
                      "src": "1519:6:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 906,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "1491:34:31",
                    "trueExpression": {
                      "id": 904,
                      "name": "token1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 792,
                      "src": "1510:6:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1470:55:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 910,
                            "name": "otherToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 900,
                            "src": "1554:10:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "id": 911,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1566:3:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 912,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1566:10:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 909,
                          "name": "isSafeDebt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1075,
                          "src": "1543:10:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address,address) view returns (bool)"
                          }
                        },
                        "id": 913,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1543:34:31",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f75676820636f6c6c61746572616c",
                        "id": 914,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1579:23:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e42269280f022b5df6e5eae774a08f38938716498f7a73e2e4f479b5cfe359ad",
                          "typeString": "literal_string \"Not enough collateral\""
                        },
                        "value": "Not enough collateral"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e42269280f022b5df6e5eae774a08f38938716498f7a73e2e4f479b5cfe359ad",
                          "typeString": "literal_string \"Not enough collateral\""
                        }
                      ],
                      "id": 908,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1535:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 915,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1535:68:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 916,
                  "nodeType": "ExpressionStatement",
                  "src": "1535:68:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 921,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1641:3:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 922,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1641:10:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 923,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 884,
                        "src": "1653:7:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 918,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 882,
                            "src": "1620:6:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 917,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3218,
                          "src": "1613:6:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$3218_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 919,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1613:14:31",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3218",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 920,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3250,
                      "src": "1613:27:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$3218_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$3218_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 924,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1613:48:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 925,
                  "nodeType": "ExpressionStatement",
                  "src": "1613:48:31"
                }
              ]
            },
            "functionSelector": "f3fef3a3",
            "id": 927,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 887,
                    "name": "_token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 882,
                    "src": "1402:6:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 888,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 886,
                  "name": "isSupportedToken",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 821,
                  "src": "1385:16:31"
                },
                "nodeType": "ModifierInvocation",
                "src": "1385:24:31"
              }
            ],
            "name": "withdraw",
            "nameLocation": "1336:8:31",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 885,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 882,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "1353:6:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 927,
                  "src": "1345:14:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 881,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1345:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 884,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1369:7:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 927,
                  "src": "1361:15:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 883,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1361:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1344:33:31"
            },
            "returnParameters": {
              "id": 889,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1410:0:31"
            },
            "scope": 1076,
            "src": "1327:341:31",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 964,
              "nodeType": "Block",
              "src": "1755:248:31",
              "statements": [
                {
                  "expression": {
                    "id": 944,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 937,
                          "name": "debt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 804,
                          "src": "1829:4:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 941,
                        "indexExpression": {
                          "id": 938,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 929,
                          "src": "1834:6:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1829:12:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 942,
                      "indexExpression": {
                        "expression": {
                          "id": 939,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1842:3:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 940,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1842:10:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1829:24:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 943,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 931,
                      "src": "1857:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1829:35:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 945,
                  "nodeType": "ExpressionStatement",
                  "src": "1829:35:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 948,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 929,
                            "src": "1893:6:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "id": 949,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1901:3:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 950,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1901:10:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 947,
                          "name": "isSafeDebt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1075,
                          "src": "1882:10:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address,address) view returns (bool)"
                          }
                        },
                        "id": 951,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1882:30:31",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f75676820636f6c6c61746572616c",
                        "id": 952,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1914:23:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e42269280f022b5df6e5eae774a08f38938716498f7a73e2e4f479b5cfe359ad",
                          "typeString": "literal_string \"Not enough collateral\""
                        },
                        "value": "Not enough collateral"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e42269280f022b5df6e5eae774a08f38938716498f7a73e2e4f479b5cfe359ad",
                          "typeString": "literal_string \"Not enough collateral\""
                        }
                      ],
                      "id": 946,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1874:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 953,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1874:64:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 954,
                  "nodeType": "ExpressionStatement",
                  "src": "1874:64:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 959,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1976:3:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 960,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1976:10:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 961,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 931,
                        "src": "1988:7:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 956,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 929,
                            "src": "1955:6:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 955,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3218,
                          "src": "1948:6:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$3218_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 957,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1948:14:31",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3218",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 958,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3250,
                      "src": "1948:27:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$3218_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$3218_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 962,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1948:48:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 963,
                  "nodeType": "ExpressionStatement",
                  "src": "1948:48:31"
                }
              ]
            },
            "functionSelector": "4b8a3529",
            "id": 965,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 934,
                    "name": "_token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 929,
                    "src": "1747:6:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 935,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 933,
                  "name": "isSupportedToken",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 821,
                  "src": "1730:16:31"
                },
                "nodeType": "ModifierInvocation",
                "src": "1730:24:31"
              }
            ],
            "name": "borrow",
            "nameLocation": "1683:6:31",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 932,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 929,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "1698:6:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 965,
                  "src": "1690:14:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 928,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1690:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 931,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1714:7:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 965,
                  "src": "1706:15:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 930,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1706:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1689:33:31"
            },
            "returnParameters": {
              "id": 936,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1755:0:31"
            },
            "scope": 1076,
            "src": "1674:329:31",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 997,
              "nodeType": "Block",
              "src": "2089:129:31",
              "statements": [
                {
                  "expression": {
                    "id": 982,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 975,
                          "name": "debt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 804,
                          "src": "2099:4:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 979,
                        "indexExpression": {
                          "id": 976,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 967,
                          "src": "2104:6:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2099:12:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 980,
                      "indexExpression": {
                        "expression": {
                          "id": 977,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2112:3:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 978,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2112:10:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2099:24:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 981,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 969,
                      "src": "2127:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2099:35:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 983,
                  "nodeType": "ExpressionStatement",
                  "src": "2099:35:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 988,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2176:3:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 989,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2176:10:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 992,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2196:4:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Lendly_$1076",
                              "typeString": "contract Lendly"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Lendly_$1076",
                              "typeString": "contract Lendly"
                            }
                          ],
                          "id": 991,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2188:7:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 990,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2188:7:31",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 993,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2188:13:31",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 994,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 969,
                        "src": "2203:7:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 985,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 967,
                            "src": "2151:6:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 984,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3218,
                          "src": "2144:6:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$3218_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 986,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2144:14:31",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3218",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 987,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3276,
                      "src": "2144:31:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$3218_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$3218_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 995,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2144:67:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 996,
                  "nodeType": "ExpressionStatement",
                  "src": "2144:67:31"
                }
              ]
            },
            "functionSelector": "22867d78",
            "id": 998,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 972,
                    "name": "_token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 967,
                    "src": "2081:6:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 973,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 971,
                  "name": "isSupportedToken",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 821,
                  "src": "2064:16:31"
                },
                "nodeType": "ModifierInvocation",
                "src": "2064:24:31"
              }
            ],
            "name": "repay",
            "nameLocation": "2018:5:31",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 970,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 967,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "2032:6:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 998,
                  "src": "2024:14:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 966,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2024:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 969,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2048:7:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 998,
                  "src": "2040:15:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 968,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2040:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2023:33:31"
            },
            "returnParameters": {
              "id": 974,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2089:0:31"
            },
            "scope": 1076,
            "src": "2009:209:31",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1074,
              "nodeType": "Block",
              "src": "2400:502:31",
              "statements": [
                {
                  "assignments": [
                    1008
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1008,
                      "mutability": "mutable",
                      "name": "reserve0",
                      "nameLocation": "2424:8:31",
                      "nodeType": "VariableDeclaration",
                      "scope": 1074,
                      "src": "2419:13:31",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1007,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2419:4:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1015,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1013,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 788,
                        "src": "2460:4:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1010,
                            "name": "token0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 790,
                            "src": "2442:6:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1009,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3218,
                          "src": "2435:6:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$3218_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 1011,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2435:14:31",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3218",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1012,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3175,
                      "src": "2435:24:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 1014,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2435:30:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2419:46:31"
                },
                {
                  "assignments": [
                    1017
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1017,
                      "mutability": "mutable",
                      "name": "reserve1",
                      "nameLocation": "2480:8:31",
                      "nodeType": "VariableDeclaration",
                      "scope": 1074,
                      "src": "2475:13:31",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1016,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2475:4:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1024,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1022,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 788,
                        "src": "2516:4:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1019,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 792,
                            "src": "2498:6:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1018,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3218,
                          "src": "2491:6:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$3218_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 1020,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2491:14:31",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3218",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1021,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3175,
                      "src": "2491:24:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 1023,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2491:30:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2475:46:31"
                },
                {
                  "assignments": [
                    1026
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1026,
                      "mutability": "mutable",
                      "name": "collateral",
                      "nameLocation": "2536:10:31",
                      "nodeType": "VariableDeclaration",
                      "scope": 1074,
                      "src": "2531:15:31",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1025,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2531:4:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1027,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2531:15:31"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1030,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1028,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1000,
                      "src": "2581:6:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 1029,
                      "name": "token0",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 790,
                      "src": "2591:6:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2581:16:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1056,
                    "nodeType": "Block",
                    "src": "2690:84:31",
                    "statements": [
                      {
                        "expression": {
                          "id": 1054,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1044,
                            "name": "collateral",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1026,
                            "src": "2704:10:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1053,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1051,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "baseExpression": {
                                    "id": 1045,
                                    "name": "deposited",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 798,
                                    "src": "2717:9:31",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                      "typeString": "mapping(address => mapping(address => uint256))"
                                    }
                                  },
                                  "id": 1047,
                                  "indexExpression": {
                                    "id": 1046,
                                    "name": "token0",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 790,
                                    "src": "2727:6:31",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "2717:17:31",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 1049,
                                "indexExpression": {
                                  "id": 1048,
                                  "name": "_user",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1002,
                                  "src": "2735:5:31",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2717:24:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "id": 1050,
                                "name": "reserve1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1017,
                                "src": "2744:8:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2717:35:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "id": 1052,
                              "name": "reserve0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1008,
                              "src": "2755:8:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "2717:46:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2704:59:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1055,
                        "nodeType": "ExpressionStatement",
                        "src": "2704:59:31"
                      }
                    ]
                  },
                  "id": 1057,
                  "nodeType": "IfStatement",
                  "src": "2578:196:31",
                  "trueBody": {
                    "id": 1043,
                    "nodeType": "Block",
                    "src": "2599:85:31",
                    "statements": [
                      {
                        "expression": {
                          "id": 1041,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1031,
                            "name": "collateral",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1026,
                            "src": "2614:10:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1040,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1038,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "baseExpression": {
                                    "id": 1032,
                                    "name": "deposited",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 798,
                                    "src": "2627:9:31",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                      "typeString": "mapping(address => mapping(address => uint256))"
                                    }
                                  },
                                  "id": 1034,
                                  "indexExpression": {
                                    "id": 1033,
                                    "name": "token1",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 792,
                                    "src": "2637:6:31",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "2627:17:31",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 1036,
                                "indexExpression": {
                                  "id": 1035,
                                  "name": "_user",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1002,
                                  "src": "2645:5:31",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2627:24:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "id": 1037,
                                "name": "reserve0",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1008,
                                "src": "2654:8:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2627:35:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "id": 1039,
                              "name": "reserve1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1017,
                              "src": "2665:8:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "2627:46:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2614:59:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1042,
                        "nodeType": "ExpressionStatement",
                        "src": "2614:59:31"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    1059
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1059,
                      "mutability": "mutable",
                      "name": "allowance",
                      "nameLocation": "2789:9:31",
                      "nodeType": "VariableDeclaration",
                      "scope": 1074,
                      "src": "2784:14:31",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1058,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2784:4:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1065,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1064,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1062,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1060,
                        "name": "collateral",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1026,
                        "src": "2801:10:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "hexValue": "32",
                        "id": 1061,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2814:1:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "src": "2801:14:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "33",
                      "id": 1063,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2818:1:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_3_by_1",
                        "typeString": "int_const 3"
                      },
                      "value": "3"
                    },
                    "src": "2801:18:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2784:35:31"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1072,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1066,
                      "name": "allowance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1059,
                      "src": "2863:9:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 1067,
                          "name": "debt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 804,
                          "src": "2876:4:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 1069,
                        "indexExpression": {
                          "id": 1068,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1000,
                          "src": "2881:6:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2876:12:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1071,
                      "indexExpression": {
                        "id": 1070,
                        "name": "_user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1002,
                        "src": "2889:5:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2876:19:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2863:32:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1006,
                  "id": 1073,
                  "nodeType": "Return",
                  "src": "2856:39:31"
                }
              ]
            },
            "functionSelector": "4a489cc2",
            "id": 1075,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isSafeDebt",
            "nameLocation": "2331:10:31",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1003,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1000,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "2350:6:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 1075,
                  "src": "2342:14:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 999,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2342:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1002,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "2366:5:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 1075,
                  "src": "2358:13:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1001,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2358:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2341:31:31"
            },
            "returnParameters": {
              "id": 1006,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1005,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1075,
                  "src": "2394:4:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1004,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2394:4:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2393:6:31"
            },
            "scope": 1076,
            "src": "2322:580:31",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1077,
        "src": "472:2432:31",
        "usedErrors": []
      }
    ],
    "src": "116:2788:31"
  },
  "bytecode": "608060405234801561001057600080fd5b50604051610d79380380610d7983398101604081905261002f91610154565b600080546001600160a01b0319166001600160a01b03831690811790915560408051630dfe168160e01b81529051630dfe1681916004808201926020929091908290030181865afa158015610088573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100ac9190610154565b600180546001600160a01b0319166001600160a01b039283161790556000546040805163d21220a760e01b81529051919092169163d21220a79160048083019260209291908290030181865afa15801561010a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061012e9190610154565b600280546001600160a01b0319166001600160a01b039290921691909117905550610184565b60006020828403121561016657600080fd5b81516001600160a01b038116811461017d57600080fd5b9392505050565b610be6806101936000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c806391130db61161006657806391130db614610131578063a8aa1b311461016a578063d21220a71461017d578063d449300d14610190578063f3fef3a3146101bb57600080fd5b80630dfe1681146100a357806322867d78146100d357806347e7ef24146100e85780634a489cc2146100fb5780634b8a35291461011e575b600080fd5b6001546100b6906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100e66100e13660046109e3565b6101ce565b005b6100e66100f63660046109e3565b610271565b61010e610109366004610a0d565b6102eb565b60405190151581526020016100ca565b6100e661012c3660046109e3565b6104c9565b61015c61013f366004610a0d565b600360209081526000928352604080842090915290825290205481565b6040519081526020016100ca565b6000546100b6906001600160a01b031681565b6002546100b6906001600160a01b031681565b61015c61019e366004610a0d565b600460209081526000928352604080842090915290825290205481565b6100e66101c93660046109e3565b6105ab565b60015482906001600160a01b03808316911614806101f957506002546001600160a01b038281169116145b61021e5760405162461bcd60e51b815260040161021590610a40565b60405180910390fd5b6001600160a01b038316600090815260046020908152604080832033845290915281208054849290610251908490610a83565b9091555061026c90506001600160a01b0384163330856106ca565b505050565b60015482906001600160a01b038083169116148061029c57506002546001600160a01b038281169116145b6102b85760405162461bcd60e51b815260040161021590610a40565b6001600160a01b038316600090815260036020908152604080832033845290915281208054849290610251908490610a9a565b600154600080546040516370a0823160e01b81526001600160a01b039182166004820152919283929116906370a0823190602401602060405180830381865afa15801561033c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103609190610ab2565b600254600080546040516370a0823160e01b81526001600160a01b03918216600482015293945090929116906370a0823190602401602060405180830381865afa1580156103b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103d69190610ab2565b6001549091506000906001600160a01b0390811690871603610439576002546001600160a01b039081166000908152600360209081526040808320938916835292905220548290610428908590610acb565b6104329190610aea565b905061047c565b6001546001600160a01b03908116600090815260036020908152604080832093891683529290522054839061046f908490610acb565b6104799190610aea565b90505b6000600361048b836002610acb565b6104959190610aea565b6001600160a01b038089166000908152600460209081526040808320938b1683529290522054111594505050505092915050565b60015482906001600160a01b03808316911614806104f457506002546001600160a01b038281169116145b6105105760405162461bcd60e51b815260040161021590610a40565b6001600160a01b038316600090815260046020908152604080832033845290915281208054849290610543908490610a9a565b90915550610553905083336102eb565b6105975760405162461bcd60e51b8152602060048201526015602482015274139bdd08195b9bdd59da0818dbdb1b185d195c985b605a1b6044820152606401610215565b61026c6001600160a01b0384163384610735565b60015482906001600160a01b03808316911614806105d657506002546001600160a01b038281169116145b6105f25760405162461bcd60e51b815260040161021590610a40565b6001600160a01b038316600090815260036020908152604080832033845290915281208054849290610625908490610a83565b90915550506001546000906001600160a01b03858116911614610653576001546001600160a01b0316610660565b6002546001600160a01b03165b905061066c81336102eb565b6106b05760405162461bcd60e51b8152602060048201526015602482015274139bdd08195b9bdd59da0818dbdb1b185d195c985b605a1b6044820152606401610215565b6106c46001600160a01b0385163385610735565b50505050565b6040516001600160a01b03808516602483015283166044820152606481018290526106c49085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610765565b6040516001600160a01b03831660248201526044810182905261026c90849063a9059cbb60e01b906064016106fe565b60006107ba826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166108379092919063ffffffff16565b80519091501561026c57808060200190518101906107d89190610b0c565b61026c5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610215565b6060610846848460008561084e565b949350505050565b6060824710156108af5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610215565b600080866001600160a01b031685876040516108cb9190610b61565b60006040518083038185875af1925050503d8060008114610908576040519150601f19603f3d011682016040523d82523d6000602084013e61090d565b606091505b509150915061091e87838387610929565b979650505050505050565b60608315610998578251600003610991576001600160a01b0385163b6109915760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610215565b5081610846565b61084683838151156109ad5781518083602001fd5b8060405162461bcd60e51b81526004016102159190610b7d565b80356001600160a01b03811681146109de57600080fd5b919050565b600080604083850312156109f657600080fd5b6109ff836109c7565b946020939093013593505050565b60008060408385031215610a2057600080fd5b610a29836109c7565b9150610a37602084016109c7565b90509250929050565b6020808252601390820152723737ba1039bab83837b93a32b2103a37b5b2b760691b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600082821015610a9557610a95610a6d565b500390565b60008219821115610aad57610aad610a6d565b500190565b600060208284031215610ac457600080fd5b5051919050565b6000816000190483118215151615610ae557610ae5610a6d565b500290565b600082610b0757634e487b7160e01b600052601260045260246000fd5b500490565b600060208284031215610b1e57600080fd5b81518015158114610b2e57600080fd5b9392505050565b60005b83811015610b50578181015183820152602001610b38565b838111156106c45750506000910152565b60008251610b73818460208701610b35565b9190910192915050565b6020815260008251806020840152610b9c816040850160208701610b35565b601f01601f1916919091016040019291505056fea26469706673582212209922988c06ea863b99407e454847a29e7d521427b9519c126f669389712908be64736f6c634300080d0033",
  "bytecodeSha1": "85281b6d2560f812781cb58b8c7a607b40e8c93d",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.13+commit.abaa5c0e"
  },
  "contractName": "Lendly",
  "coverageMap": {
    "branches": {
      "13": {
        "Address._revert": {
          "31": [
            8775,
            8796,
            false
          ]
        },
        "Address.functionCallWithValue": {
          "28": [
            5157,
            5187,
            true
          ]
        },
        "Address.verifyCallResultFromTarget": {
          "29": [
            7674,
            7681,
            false
          ],
          "30": [
            7701,
            7723,
            false
          ]
        }
      },
      "29": {},
      "3": {},
      "31": {
        "Lendly.borrow": {
          "24": [
            1882,
            1912,
            true
          ]
        },
        "Lendly.isSafeDebt": {
          "23": [
            2581,
            2597,
            false
          ]
        },
        "Lendly.withdraw": {
          "25": [
            862,
            878,
            true
          ],
          "26": [
            1491,
            1507,
            true
          ],
          "27": [
            1543,
            1577,
            true
          ]
        }
      },
      "7": {},
      "8": {
        "SafeERC20._callOptionalReturn": {
          "32": [
            4275,
            4296,
            false
          ],
          "33": [
            4359,
            4389,
            true
          ]
        }
      }
    },
    "statements": {
      "13": {
        "Address._revert": {
          "22": [
            9119,
            9139
          ]
        },
        "Address.functionCall": {
          "15": [
            4030,
            4089
          ]
        },
        "Address.functionCallWithValue": {
          "16": [
            5149,
            5230
          ],
          "17": [
            5323,
            5399
          ]
        },
        "Address.isContract": {
          "18": [
            1458,
            1488
          ]
        },
        "Address.verifyCallResultFromTarget": {
          "19": [
            7908,
            7968
          ],
          "20": [
            7996,
            8013
          ],
          "21": [
            8044,
            8077
          ]
        }
      },
      "29": {},
      "3": {},
      "31": {
        "Lendly.borrow": {
          "6": [
            1829,
            1864
          ],
          "7": [
            1874,
            1938
          ],
          "8": [
            1948,
            1996
          ]
        },
        "Lendly.deposit": {
          "2": [
            1197,
            1237
          ]
        },
        "Lendly.isSafeDebt": {
          "3": [
            2614,
            2673
          ],
          "4": [
            2704,
            2763
          ],
          "5": [
            2856,
            2895
          ]
        },
        "Lendly.repay": {
          "0": [
            2099,
            2134
          ],
          "1": [
            2144,
            2211
          ]
        },
        "Lendly.withdraw": {
          "9": [
            1420,
            1460
          ],
          "10": [
            1535,
            1603
          ],
          "11": [
            1613,
            1661
          ]
        }
      },
      "7": {},
      "8": {
        "SafeERC20._callOptionalReturn": {
          "14": [
            4351,
            4436
          ]
        },
        "SafeERC20.safeTransfer": {
          "13": [
            875,
            961
          ]
        },
        "SafeERC20.safeTransferFrom": {
          "12": [
            1112,
            1208
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.8.0/Address",
    "OpenZeppelin/openzeppelin-contracts@4.8.0/IERC20",
    "OpenZeppelin/openzeppelin-contracts@4.8.0/IERC20Permit",
    "IUniswapV2Pair",
    "OpenZeppelin/openzeppelin-contracts@4.8.0/SafeERC20"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b506004361061009e5760003560e01c806391130db61161006657806391130db614610131578063a8aa1b311461016a578063d21220a71461017d578063d449300d14610190578063f3fef3a3146101bb57600080fd5b80630dfe1681146100a357806322867d78146100d357806347e7ef24146100e85780634a489cc2146100fb5780634b8a35291461011e575b600080fd5b6001546100b6906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100e66100e13660046109e3565b6101ce565b005b6100e66100f63660046109e3565b610271565b61010e610109366004610a0d565b6102eb565b60405190151581526020016100ca565b6100e661012c3660046109e3565b6104c9565b61015c61013f366004610a0d565b600360209081526000928352604080842090915290825290205481565b6040519081526020016100ca565b6000546100b6906001600160a01b031681565b6002546100b6906001600160a01b031681565b61015c61019e366004610a0d565b600460209081526000928352604080842090915290825290205481565b6100e66101c93660046109e3565b6105ab565b60015482906001600160a01b03808316911614806101f957506002546001600160a01b038281169116145b61021e5760405162461bcd60e51b815260040161021590610a40565b60405180910390fd5b6001600160a01b038316600090815260046020908152604080832033845290915281208054849290610251908490610a83565b9091555061026c90506001600160a01b0384163330856106ca565b505050565b60015482906001600160a01b038083169116148061029c57506002546001600160a01b038281169116145b6102b85760405162461bcd60e51b815260040161021590610a40565b6001600160a01b038316600090815260036020908152604080832033845290915281208054849290610251908490610a9a565b600154600080546040516370a0823160e01b81526001600160a01b039182166004820152919283929116906370a0823190602401602060405180830381865afa15801561033c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103609190610ab2565b600254600080546040516370a0823160e01b81526001600160a01b03918216600482015293945090929116906370a0823190602401602060405180830381865afa1580156103b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103d69190610ab2565b6001549091506000906001600160a01b0390811690871603610439576002546001600160a01b039081166000908152600360209081526040808320938916835292905220548290610428908590610acb565b6104329190610aea565b905061047c565b6001546001600160a01b03908116600090815260036020908152604080832093891683529290522054839061046f908490610acb565b6104799190610aea565b90505b6000600361048b836002610acb565b6104959190610aea565b6001600160a01b038089166000908152600460209081526040808320938b1683529290522054111594505050505092915050565b60015482906001600160a01b03808316911614806104f457506002546001600160a01b038281169116145b6105105760405162461bcd60e51b815260040161021590610a40565b6001600160a01b038316600090815260046020908152604080832033845290915281208054849290610543908490610a9a565b90915550610553905083336102eb565b6105975760405162461bcd60e51b8152602060048201526015602482015274139bdd08195b9bdd59da0818dbdb1b185d195c985b605a1b6044820152606401610215565b61026c6001600160a01b0384163384610735565b60015482906001600160a01b03808316911614806105d657506002546001600160a01b038281169116145b6105f25760405162461bcd60e51b815260040161021590610a40565b6001600160a01b038316600090815260036020908152604080832033845290915281208054849290610625908490610a83565b90915550506001546000906001600160a01b03858116911614610653576001546001600160a01b0316610660565b6002546001600160a01b03165b905061066c81336102eb565b6106b05760405162461bcd60e51b8152602060048201526015602482015274139bdd08195b9bdd59da0818dbdb1b185d195c985b605a1b6044820152606401610215565b6106c46001600160a01b0385163385610735565b50505050565b6040516001600160a01b03808516602483015283166044820152606481018290526106c49085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610765565b6040516001600160a01b03831660248201526044810182905261026c90849063a9059cbb60e01b906064016106fe565b60006107ba826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166108379092919063ffffffff16565b80519091501561026c57808060200190518101906107d89190610b0c565b61026c5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610215565b6060610846848460008561084e565b949350505050565b6060824710156108af5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610215565b600080866001600160a01b031685876040516108cb9190610b61565b60006040518083038185875af1925050503d8060008114610908576040519150601f19603f3d011682016040523d82523d6000602084013e61090d565b606091505b509150915061091e87838387610929565b979650505050505050565b60608315610998578251600003610991576001600160a01b0385163b6109915760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610215565b5081610846565b61084683838151156109ad5781518083602001fd5b8060405162461bcd60e51b81526004016102159190610b7d565b80356001600160a01b03811681146109de57600080fd5b919050565b600080604083850312156109f657600080fd5b6109ff836109c7565b946020939093013593505050565b60008060408385031215610a2057600080fd5b610a29836109c7565b9150610a37602084016109c7565b90509250929050565b6020808252601390820152723737ba1039bab83837b93a32b2103a37b5b2b760691b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600082821015610a9557610a95610a6d565b500390565b60008219821115610aad57610aad610a6d565b500190565b600060208284031215610ac457600080fd5b5051919050565b6000816000190483118215151615610ae557610ae5610a6d565b500290565b600082610b0757634e487b7160e01b600052601260045260246000fd5b500490565b600060208284031215610b1e57600080fd5b81518015158114610b2e57600080fd5b9392505050565b60005b83811015610b50578181015183820152602001610b38565b838111156106c45750506000910152565b60008251610b73818460208701610b35565b9190910192915050565b6020815260008251806020840152610b9c816040850160208701610b35565b601f01601f1916919091016040019291505056fea26469706673582212209922988c06ea863b99407e454847a29e7d521427b9519c126f669389712908be64736f6c634300080d0033",
  "deployedSourceMap": "472:2432:31:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;557:21;;;;;-1:-1:-1;;;;;557:21:31;;;;;;-1:-1:-1;;;;;178:32:34;;;160:51;;148:2;133:18;557:21:31;;;;;;;;2009:209;;;;;;:::i;:::-;;:::i;:::-;;1105:216;;;;;;:::i;:::-;;:::i;2322:580::-;;;;;;:::i;:::-;;:::i;:::-;;;1089:14:34;;1082:22;1064:41;;1052:2;1037:18;2322:580:31;924:187:34;1674:329:31;;;;;;:::i;:::-;;:::i;643:65::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;1262:25:34;;;1250:2;1235:18;643:65:31;1116:177:34;532:19:31;;;;;-1:-1:-1;;;;;532:19:31;;;584:21;;;;;-1:-1:-1;;;;;584:21:31;;;726:60;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;1327:341;;;;;;:::i;:::-;;:::i;2009:209::-;872:6;;2081;;-1:-1:-1;;;;;862:16:31;;;872:6;;862:16;;:36;;-1:-1:-1;892:6:31;;-1:-1:-1;;;;;882:16:31;;;892:6;;882:16;862:36;854:68;;;;-1:-1:-1;;;854:68:31;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;2099:12:31;::::1;;::::0;;;:4:::1;:12;::::0;;;;;;;2112:10:::1;2099:24:::0;;;;;;;:35;;2127:7;;2099:12;:35:::1;::::0;2127:7;;2099:35:::1;:::i;:::-;::::0;;;-1:-1:-1;2144:67:31::1;::::0;-1:-1:-1;;;;;;2144:31:31;::::1;2176:10;2196:4;2203:7:::0;2144:31:::1;:67::i;:::-;2009:209:::0;;;:::o;1105:216::-;872:6;;1179;;-1:-1:-1;;;;;862:16:31;;;872:6;;862:16;;:36;;-1:-1:-1;892:6:31;;-1:-1:-1;;;;;882:16:31;;;892:6;;882:16;862:36;854:68;;;;-1:-1:-1;;;854:68:31;;;;;;;:::i;:::-;-1:-1:-1;;;;;1197:17:31;::::1;;::::0;;;:9:::1;:17;::::0;;;;;;;1215:10:::1;1197:29:::0;;;;;;;:40;;1230:7;;1197:17;:40:::1;::::0;1230:7;;1197:40:::1;:::i;2322:580::-:0;2442:6;;2394:4;2460;;2435:30;;-1:-1:-1;;;2435:30:31;;-1:-1:-1;;;;;2460:4:31;;;2435:30;;;160:51:34;2394:4:31;;;;2442:6;;;2435:24;;133:18:34;;2435:30:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2498:6;;2475:13;2516:4;;2491:30;;-1:-1:-1;;;2491:30:31;;-1:-1:-1;;;;;2516:4:31;;;2491:30;;;160:51:34;2419:46:31;;-1:-1:-1;2475:13:31;;2498:6;;;2491:24;;133:18:34;;2491:30:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2591:6;;2475:46;;-1:-1:-1;2531:15:31;;-1:-1:-1;;;;;2591:6:31;;;2581:16;;;;2578:196;;2637:6;;-1:-1:-1;;;;;2637:6:31;;;2627:17;;;;:9;:17;;;;;;;;:24;;;;;;;;;;2665:8;;2627:35;;2654:8;;2627:35;:::i;:::-;:46;;;;:::i;:::-;2614:59;;2578:196;;;2727:6;;-1:-1:-1;;;;;2727:6:31;;;2717:17;;;;:9;:17;;;;;;;;:24;;;;;;;;;;2755:8;;2717:35;;2744:8;;2717:35;:::i;:::-;:46;;;;:::i;:::-;2704:59;;2578:196;2784:14;2818:1;2801:14;:10;2814:1;2801:14;:::i;:::-;:18;;;;:::i;:::-;-1:-1:-1;;;;;2876:12:31;;;;;;;:4;:12;;;;;;;;:19;;;;;;;;;;-1:-1:-1;2863:32:31;;-1:-1:-1;;;;;2322:580:31;;;;:::o;1674:329::-;872:6;;1747;;-1:-1:-1;;;;;862:16:31;;;872:6;;862:16;;:36;;-1:-1:-1;892:6:31;;-1:-1:-1;;;;;882:16:31;;;892:6;;882:16;862:36;854:68;;;;-1:-1:-1;;;854:68:31;;;;;;;:::i;:::-;-1:-1:-1;;;;;1829:12:31;::::1;;::::0;;;:4:::1;:12;::::0;;;;;;;1842:10:::1;1829:24:::0;;;;;;;:35;;1857:7;;1829:12;:35:::1;::::0;1857:7;;1829:35:::1;:::i;:::-;::::0;;;-1:-1:-1;1882:30:31::1;::::0;-1:-1:-1;1893:6:31;1901:10:::1;1882;:30::i;:::-;1874:64;;;::::0;-1:-1:-1;;;1874:64:31;;2827:2:34;1874:64:31::1;::::0;::::1;2809:21:34::0;2866:2;2846:18;;;2839:30;-1:-1:-1;;;2885:18:34;;;2878:51;2946:18;;1874:64:31::1;2625:345:34::0;1874:64:31::1;1948:48;-1:-1:-1::0;;;;;1948:27:31;::::1;1976:10;1988:7:::0;1948:27:::1;:48::i;1327:341::-:0;872:6;;1402;;-1:-1:-1;;;;;862:16:31;;;872:6;;862:16;;:36;;-1:-1:-1;892:6:31;;-1:-1:-1;;;;;882:16:31;;;892:6;;882:16;862:36;854:68;;;;-1:-1:-1;;;854:68:31;;;;;;;:::i;:::-;-1:-1:-1;;;;;1420:17:31;::::1;;::::0;;;:9:::1;:17;::::0;;;;;;;1438:10:::1;1420:29:::0;;;;;;;:40;;1453:7;;1420:17;:40:::1;::::0;1453:7;;1420:40:::1;:::i;:::-;::::0;;;-1:-1:-1;;1501:6:31::1;::::0;1470:18:::1;::::0;-1:-1:-1;;;;;1491:16:31;;::::1;1501:6:::0;::::1;1491:16;:34;;1519:6;::::0;-1:-1:-1;;;;;1519:6:31::1;1491:34;;;1510:6;::::0;-1:-1:-1;;;;;1510:6:31::1;1491:34;1470:55;;1543:34;1554:10;1566;1543;:34::i;:::-;1535:68;;;::::0;-1:-1:-1;;;1535:68:31;;2827:2:34;1535:68:31::1;::::0;::::1;2809:21:34::0;2866:2;2846:18;;;2839:30;-1:-1:-1;;;2885:18:34;;;2878:51;2946:18;;1535:68:31::1;2625:345:34::0;1535:68:31::1;1613:48;-1:-1:-1::0;;;;;1613:27:31;::::1;1641:10;1653:7:::0;1613:27:::1;:48::i;:::-;1410:258;1327:341:::0;;;:::o;974:241:8:-;1139:68;;-1:-1:-1;;;;;3233:15:34;;;1139:68:8;;;3215:34:34;3285:15;;3265:18;;;3258:43;3317:18;;;3310:34;;;1112:96:8;;1132:5;;-1:-1:-1;;;1162:27:8;3150:18:34;;1139:68:8;;;;-1:-1:-1;;1139:68:8;;;;;;;;;;;;;;-1:-1:-1;;;;;1139:68:8;-1:-1:-1;;;;;;1139:68:8;;;;;;;;;;1112:19;:96::i;763:205::-;902:58;;-1:-1:-1;;;;;3547:32:34;;902:58:8;;;3529:51:34;3596:18;;;3589:34;;;875:86:8;;895:5;;-1:-1:-1;;;925:23:8;3502:18:34;;902:58:8;3355:274:34;3747:706:8;4166:23;4192:69;4220:4;4192:69;;;;;;;;;;;;;;;;;4200:5;-1:-1:-1;;;;;4192:27:8;;;:69;;;;;:::i;:::-;4275:17;;4166:95;;-1:-1:-1;4275:21:8;4271:176;;4370:10;4359:30;;;;;;;;;;;;:::i;:::-;4351:85;;;;-1:-1:-1;;;4351:85:8;;4118:2:34;4351:85:8;;;4100:21:34;4157:2;4137:18;;;4130:30;4196:34;4176:18;;;4169:62;-1:-1:-1;;;4247:18:34;;;4240:40;4297:19;;4351:85:8;3916:406:34;3873:223:13;4006:12;4037:52;4059:6;4067:4;4073:1;4076:12;4037:21;:52::i;:::-;4030:59;3873:223;-1:-1:-1;;;;3873:223:13:o;4960:446::-;5125:12;5182:5;5157:21;:30;;5149:81;;;;-1:-1:-1;;;5149:81:13;;4529:2:34;5149:81:13;;;4511:21:34;4568:2;4548:18;;;4541:30;4607:34;4587:18;;;4580:62;-1:-1:-1;;;4658:18:34;;;4651:36;4704:19;;5149:81:13;4327:402:34;5149:81:13;5241:12;5255:23;5282:6;-1:-1:-1;;;;;5282:11:13;5301:5;5308:4;5282:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5240:73;;;;5330:69;5357:6;5365:7;5374:10;5386:12;5330:26;:69::i;:::-;5323:76;4960:446;-1:-1:-1;;;;;;;4960:446:13:o;7466:628::-;7646:12;7674:7;7670:418;;;7701:10;:17;7722:1;7701:22;7697:286;;-1:-1:-1;;;;;1465:19:13;;;7908:60;;;;-1:-1:-1;;;7908:60:13;;5478:2:34;7908:60:13;;;5460:21:34;5517:2;5497:18;;;5490:30;5556:31;5536:18;;;5529:59;5605:18;;7908:60:13;5276:353:34;7908:60:13;-1:-1:-1;8003:10:13;7996:17;;7670:418;8044:33;8052:10;8064:12;8775:17;;:21;8771:379;;9003:10;8997:17;9059:15;9046:10;9042:2;9038:19;9031:44;8771:379;9126:12;9119:20;;-1:-1:-1;;;9119:20:13;;;;;;;;:::i;222:173:34:-;290:20;;-1:-1:-1;;;;;339:31:34;;329:42;;319:70;;385:1;382;375:12;319:70;222:173;;;:::o;400:254::-;468:6;476;529:2;517:9;508:7;504:23;500:32;497:52;;;545:1;542;535:12;497:52;568:29;587:9;568:29;:::i;:::-;558:39;644:2;629:18;;;;616:32;;-1:-1:-1;;;400:254:34:o;659:260::-;727:6;735;788:2;776:9;767:7;763:23;759:32;756:52;;;804:1;801;794:12;756:52;827:29;846:9;827:29;:::i;:::-;817:39;;875:38;909:2;898:9;894:18;875:38;:::i;:::-;865:48;;659:260;;;;;:::o;1298:343::-;1500:2;1482:21;;;1539:2;1519:18;;;1512:30;-1:-1:-1;;;1573:2:34;1558:18;;1551:49;1632:2;1617:18;;1298:343::o;1646:127::-;1707:10;1702:3;1698:20;1695:1;1688:31;1738:4;1735:1;1728:15;1762:4;1759:1;1752:15;1778:125;1818:4;1846:1;1843;1840:8;1837:34;;;1851:18;;:::i;:::-;-1:-1:-1;1888:9:34;;1778:125::o;1908:128::-;1948:3;1979:1;1975:6;1972:1;1969:13;1966:39;;;1985:18;;:::i;:::-;-1:-1:-1;2021:9:34;;1908:128::o;2041:184::-;2111:6;2164:2;2152:9;2143:7;2139:23;2135:32;2132:52;;;2180:1;2177;2170:12;2132:52;-1:-1:-1;2203:16:34;;2041:184;-1:-1:-1;2041:184:34:o;2230:168::-;2270:7;2336:1;2332;2328:6;2324:14;2321:1;2318:21;2313:1;2306:9;2299:17;2295:45;2292:71;;;2343:18;;:::i;:::-;-1:-1:-1;2383:9:34;;2230:168::o;2403:217::-;2443:1;2469;2459:132;;2513:10;2508:3;2504:20;2501:1;2494:31;2548:4;2545:1;2538:15;2576:4;2573:1;2566:15;2459:132;-1:-1:-1;2605:9:34;;2403:217::o;3634:277::-;3701:6;3754:2;3742:9;3733:7;3729:23;3725:32;3722:52;;;3770:1;3767;3760:12;3722:52;3802:9;3796:16;3855:5;3848:13;3841:21;3834:5;3831:32;3821:60;;3877:1;3874;3867:12;3821:60;3900:5;3634:277;-1:-1:-1;;;3634:277:34:o;4734:258::-;4806:1;4816:113;4830:6;4827:1;4824:13;4816:113;;;4906:11;;;4900:18;4887:11;;;4880:39;4852:2;4845:10;4816:113;;;4947:6;4944:1;4941:13;4938:48;;;-1:-1:-1;;4982:1:34;4964:16;;4957:27;4734:258::o;4997:274::-;5126:3;5164:6;5158:13;5180:53;5226:6;5221:3;5214:4;5206:6;5202:17;5180:53;:::i;:::-;5249:16;;;;;4997:274;-1:-1:-1;;4997:274:34:o;5634:383::-;5783:2;5772:9;5765:21;5746:4;5815:6;5809:13;5858:6;5853:2;5842:9;5838:18;5831:34;5874:66;5933:6;5928:2;5917:9;5913:18;5908:2;5900:6;5896:15;5874:66;:::i;:::-;6001:2;5980:15;-1:-1:-1;;5976:29:34;5961:45;;;;6008:2;5957:54;;5634:383;-1:-1:-1;;5634:383:34:o",
  "language": "Solidity",
  "natspec": {
    "author": "JohnnyTime (https://smartcontractshacking.com)",
    "kind": "dev",
    "methods": {},
    "title": "Lendly",
    "version": 1
  },
  "offset": [
    472,
    2904
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x91130DB6 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x91130DB6 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0xA8AA1B31 EQ PUSH2 0x16A JUMPI DUP1 PUSH4 0xD21220A7 EQ PUSH2 0x17D JUMPI DUP1 PUSH4 0xD449300D EQ PUSH2 0x190 JUMPI DUP1 PUSH4 0xF3FEF3A3 EQ PUSH2 0x1BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xDFE1681 EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x22867D78 EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0x47E7EF24 EQ PUSH2 0xE8 JUMPI DUP1 PUSH4 0x4A489CC2 EQ PUSH2 0xFB JUMPI DUP1 PUSH4 0x4B8A3529 EQ PUSH2 0x11E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH2 0xB6 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH2 0xE1 CALLDATASIZE PUSH1 0x4 PUSH2 0x9E3 JUMP JUMPDEST PUSH2 0x1CE JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE6 PUSH2 0xF6 CALLDATASIZE PUSH1 0x4 PUSH2 0x9E3 JUMP JUMPDEST PUSH2 0x271 JUMP JUMPDEST PUSH2 0x10E PUSH2 0x109 CALLDATASIZE PUSH1 0x4 PUSH2 0xA0D JUMP JUMPDEST PUSH2 0x2EB JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCA JUMP JUMPDEST PUSH2 0xE6 PUSH2 0x12C CALLDATASIZE PUSH1 0x4 PUSH2 0x9E3 JUMP JUMPDEST PUSH2 0x4C9 JUMP JUMPDEST PUSH2 0x15C PUSH2 0x13F CALLDATASIZE PUSH1 0x4 PUSH2 0xA0D JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCA JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0xB6 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0xB6 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x15C PUSH2 0x19E CALLDATASIZE PUSH1 0x4 PUSH2 0xA0D JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xE6 PUSH2 0x1C9 CALLDATASIZE PUSH1 0x4 PUSH2 0x9E3 JUMP JUMPDEST PUSH2 0x5AB JUMP JUMPDEST PUSH1 0x1 SLOAD DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND SWAP2 AND EQ DUP1 PUSH2 0x1F9 JUMPI POP PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND SWAP2 AND EQ JUMPDEST PUSH2 0x21E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x215 SWAP1 PUSH2 0xA40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x251 SWAP1 DUP5 SWAP1 PUSH2 0xA83 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x26C SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND CALLER ADDRESS DUP6 PUSH2 0x6CA JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND SWAP2 AND EQ DUP1 PUSH2 0x29C JUMPI POP PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND SWAP2 AND EQ JUMPDEST PUSH2 0x2B8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x215 SWAP1 PUSH2 0xA40 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x251 SWAP1 DUP5 SWAP1 PUSH2 0xA9A JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP2 SWAP3 DUP4 SWAP3 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x33C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x360 SWAP2 SWAP1 PUSH2 0xAB2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP4 SWAP5 POP SWAP1 SWAP3 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3B2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3D6 SWAP2 SWAP1 PUSH2 0xAB2 JUMP JUMPDEST PUSH1 0x1 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP8 AND SUB PUSH2 0x439 JUMPI PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP10 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD DUP3 SWAP1 PUSH2 0x428 SWAP1 DUP6 SWAP1 PUSH2 0xACB JUMP JUMPDEST PUSH2 0x432 SWAP2 SWAP1 PUSH2 0xAEA JUMP JUMPDEST SWAP1 POP PUSH2 0x47C JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP10 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD DUP4 SWAP1 PUSH2 0x46F SWAP1 DUP5 SWAP1 PUSH2 0xACB JUMP JUMPDEST PUSH2 0x479 SWAP2 SWAP1 PUSH2 0xAEA JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH2 0x48B DUP4 PUSH1 0x2 PUSH2 0xACB JUMP JUMPDEST PUSH2 0x495 SWAP2 SWAP1 PUSH2 0xAEA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP12 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD GT ISZERO SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND SWAP2 AND EQ DUP1 PUSH2 0x4F4 JUMPI POP PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND SWAP2 AND EQ JUMPDEST PUSH2 0x510 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x215 SWAP1 PUSH2 0xA40 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x543 SWAP1 DUP5 SWAP1 PUSH2 0xA9A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x553 SWAP1 POP DUP4 CALLER PUSH2 0x2EB JUMP JUMPDEST PUSH2 0x597 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x139BDD08195B9BDD59DA0818DBDB1B185D195C985B PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x215 JUMP JUMPDEST PUSH2 0x26C PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND CALLER DUP5 PUSH2 0x735 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND SWAP2 AND EQ DUP1 PUSH2 0x5D6 JUMPI POP PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND SWAP2 AND EQ JUMPDEST PUSH2 0x5F2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x215 SWAP1 PUSH2 0xA40 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x625 SWAP1 DUP5 SWAP1 PUSH2 0xA83 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP2 AND EQ PUSH2 0x653 JUMPI PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x660 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST SWAP1 POP PUSH2 0x66C DUP2 CALLER PUSH2 0x2EB JUMP JUMPDEST PUSH2 0x6B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x139BDD08195B9BDD59DA0818DBDB1B185D195C985B PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x215 JUMP JUMPDEST PUSH2 0x6C4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER DUP6 PUSH2 0x735 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x6C4 SWAP1 DUP6 SWAP1 PUSH4 0x23B872DD PUSH1 0xE0 SHL SWAP1 PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0x765 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x26C SWAP1 DUP5 SWAP1 PUSH4 0xA9059CBB PUSH1 0xE0 SHL SWAP1 PUSH1 0x64 ADD PUSH2 0x6FE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7BA DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x837 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x26C JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x7D8 SWAP2 SWAP1 PUSH2 0xB0C JUMP JUMPDEST PUSH2 0x26C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x215 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x846 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x84E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x8AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x215 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x8CB SWAP2 SWAP1 PUSH2 0xB61 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x908 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x90D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x91E DUP8 DUP4 DUP4 DUP8 PUSH2 0x929 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x998 JUMPI DUP3 MLOAD PUSH1 0x0 SUB PUSH2 0x991 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x991 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x215 JUMP JUMPDEST POP DUP2 PUSH2 0x846 JUMP JUMPDEST PUSH2 0x846 DUP4 DUP4 DUP2 MLOAD ISZERO PUSH2 0x9AD JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x215 SWAP2 SWAP1 PUSH2 0xB7D JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x9DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x9F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9FF DUP4 PUSH2 0x9C7 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA20 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA29 DUP4 PUSH2 0x9C7 JUMP JUMPDEST SWAP2 POP PUSH2 0xA37 PUSH1 0x20 DUP5 ADD PUSH2 0x9C7 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x13 SWAP1 DUP3 ADD MSTORE PUSH19 0x3737BA1039BAB83837B93A32B2103A37B5B2B7 PUSH1 0x69 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xA95 JUMPI PUSH2 0xA95 PUSH2 0xA6D JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xAAD JUMPI PUSH2 0xAAD PUSH2 0xA6D JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xAE5 JUMPI PUSH2 0xAE5 PUSH2 0xA6D JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xB07 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB1E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xB2E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xB50 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xB38 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x6C4 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0xB73 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0xB35 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0xB9C DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0xB35 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP10 0x22 SWAP9 DUP13 MOD 0xEA DUP7 EXTCODESIZE SWAP10 BLOCKHASH PUSH31 0x454847A29E7D521427B9519C126F669389712908BE64736F6C634300080D00 CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        472,
        2904
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        472,
        2904
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        472,
        2904
      ],
      "op": "MSTORE",
      "path": "31"
    },
    "5": {
      "fn": null,
      "offset": [
        472,
        2904
      ],
      "op": "CALLVALUE",
      "path": "31"
    },
    "6": {
      "fn": null,
      "offset": [
        472,
        2904
      ],
      "op": "DUP1",
      "path": "31"
    },
    "7": {
      "fn": null,
      "offset": [
        472,
        2904
      ],
      "op": "ISZERO",
      "path": "31"
    },
    "8": {
      "fn": null,
      "offset": [
        472,
        2904
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        472,
        2904
      ],
      "op": "JUMPI",
      "path": "31"
    },
    "12": {
      "fn": null,
      "offset": [
        472,
        2904
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        472,
        2904
      ],
      "op": "DUP1",
      "path": "31"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        472,
        2904
      ],
      "op": "REVERT",
      "path": "31"
    },
    "16": {
      "fn": null,
      "offset": [
        472,
        2904
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "17": {
      "fn": null,
      "offset": [
        472,
        2904
      ],
      "op": "POP",
      "path": "31"
    },
    "18": {
      "fn": null,
      "offset": [
        472,
        2904
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        472,
        2904
      ],
      "op": "CALLDATASIZE",
      "path": "31"
    },
    "21": {
      "fn": null,
      "offset": [
        472,
        2904
      ],
      "op": "LT",
      "path": "31"
    },
    "22": {
      "fn": null,
      "offset": [
        472,
        2904
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x9E"
    },
    "25": {
      "fn": null,
      "offset": [
        472,
        2904
      ],
      "op": "JUMPI",
      "path": "31"
    },
    "26": {
      "fn": null,
      "offset": [
        472,
        2904
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        472,
        2904
      ],
      "op": "CALLDATALOAD",
      "path": "31"
    },
    "29": {
      "fn": null,
      "offset": [
        472,
        2904
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        472,
        2904
      ],
      "op": "SHR",
      "path": "31"
    },
    "32": {
      "fn": null,
      "offset": [
        472,
        2904
      ],
      "op": "DUP1",
      "path": "31"
    },
    "33": {
      "fn": null,
      "offset": [
        472,
        2904
      ],
      "op": "PUSH4",
      "path": "31",
      "value": "0x91130DB6"
    },
    "38": {
      "fn": null,
      "offset": [
        472,
        2904
      ],
      "op": "GT",
      "path": "31"
    },
    "39": {
      "fn": null,
      "offset": [
        472,
        2904
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x66"
    },
    "42": {
      "fn": null,
      "offset": [
        472,
        2904
      ],
      "op": "JUMPI",
      "path": "31"
    },
    "43": {
      "fn": null,
      "offset": [
        472,
        2904
      ],
      "op": "DUP1",
      "path": "31"
    },
    "44": {
      "fn": null,
      "offset": [
        472,
        2904
      ],
      "op": "PUSH4",
      "path": "31",
      "value": "0x91130DB6"
    },
    "49": {
      "fn": null,
      "offset": [
        472,
        2904
      ],
      "op": "EQ",
      "path": "31"
    },
    "50": {
      "fn": null,
      "offset": [
        472,
        2904
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x131"
    },
    "53": {
      "fn": null,
      "offset": [
        472,
        2904
      ],
      "op": "JUMPI",
      "path": "31"
    },
    "54": {
      "fn": null,
      "offset": [
        472,
        2904
      ],
      "op": "DUP1",
      "path": "31"
    },
    "55": {
      "fn": null,
      "offset": [
        472,
        2904
      ],
      "op": "PUSH4",
      "path": "31",
      "value": "0xA8AA1B31"
    },
    "60": {
      "fn": null,
      "offset": [
        472,
        2904
      ],
      "op": "EQ",
      "path": "31"
    },
    "61": {
      "fn": null,
      "offset": [
        472,
        2904
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x16A"
    },
    "64": {
      "fn": null,
      "offset": [
        472,
        2904
      ],
      "op": "JUMPI",
      "path": "31"
    },
    "65": {
      "fn": null,
      "offset": [
        472,
        2904
      ],
      "op": "DUP1",
      "path": "31"
    },
    "66": {
      "fn": null,
      "offset": [
        472,
        2904
      ],
      "op": "PUSH4",
      "path": "31",
      "value": "0xD21220A7"
    },
    "71": {
      "fn": null,
      "offset": [
        472,
        2904
      ],
      "op": "EQ",
      "path": "31"
    },
    "72": {
      "fn": null,
      "offset": [
        472,
        2904
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x17D"
    },
    "75": {
      "fn": null,
      "offset": [
        472,
        2904
      ],
      "op": "JUMPI",
      "path": "31"
    },
    "76": {
      "fn": null,
      "offset": [
        472,
        2904
      ],
      "op": "DUP1",
      "path": "31"
    },
    "77": {
      "fn": null,
      "offset": [
        472,
        2904
      ],
      "op": "PUSH4",
      "path": "31",
      "value": "0xD449300D"
    },
    "82": {
      "fn": null,
      "offset": [
        472,
        2904
      ],
      "op": "EQ",
      "path": "31"
    },
    "83": {
      "fn": null,
      "offset": [
        472,
        2904
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x190"
    },
    "86": {
      "fn": null,
      "offset": [
        472,
        2904
      ],
      "op": "JUMPI",
      "path": "31"
    },
    "87": {
      "fn": null,
      "offset": [
        472,
        2904
      ],
      "op": "DUP1",
      "path": "31"
    },
    "88": {
      "fn": null,
      "offset": [
        472,
        2904
      ],
      "op": "PUSH4",
      "path": "31",
      "value": "0xF3FEF3A3"
    },
    "93": {
      "fn": null,
      "offset": [
        472,
        2904
      ],
      "op": "EQ",
      "path": "31"
    },
    "94": {
      "fn": null,
      "offset": [
        472,
        2904
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x1BB"
    },
    "97": {
      "fn": null,
      "offset": [
        472,
        2904
      ],
      "op": "JUMPI",
      "path": "31"
    },
    "98": {
      "fn": null,
      "offset": [
        472,
        2904
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x0"
    },
    "100": {
      "fn": null,
      "offset": [
        472,
        2904
      ],
      "op": "DUP1",
      "path": "31"
    },
    "101": {
      "fn": null,
      "offset": [
        472,
        2904
      ],
      "op": "REVERT",
      "path": "31"
    },
    "102": {
      "fn": null,
      "offset": [
        472,
        2904
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "103": {
      "fn": null,
      "offset": [
        472,
        2904
      ],
      "op": "DUP1",
      "path": "31"
    },
    "104": {
      "fn": null,
      "offset": [
        472,
        2904
      ],
      "op": "PUSH4",
      "path": "31",
      "value": "0xDFE1681"
    },
    "109": {
      "fn": null,
      "offset": [
        472,
        2904
      ],
      "op": "EQ",
      "path": "31"
    },
    "110": {
      "fn": null,
      "offset": [
        472,
        2904
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0xA3"
    },
    "113": {
      "fn": null,
      "offset": [
        472,
        2904
      ],
      "op": "JUMPI",
      "path": "31"
    },
    "114": {
      "fn": null,
      "offset": [
        472,
        2904
      ],
      "op": "DUP1",
      "path": "31"
    },
    "115": {
      "fn": null,
      "offset": [
        472,
        2904
      ],
      "op": "PUSH4",
      "path": "31",
      "value": "0x22867D78"
    },
    "120": {
      "fn": null,
      "offset": [
        472,
        2904
      ],
      "op": "EQ",
      "path": "31"
    },
    "121": {
      "fn": null,
      "offset": [
        472,
        2904
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0xD3"
    },
    "124": {
      "fn": null,
      "offset": [
        472,
        2904
      ],
      "op": "JUMPI",
      "path": "31"
    },
    "125": {
      "fn": null,
      "offset": [
        472,
        2904
      ],
      "op": "DUP1",
      "path": "31"
    },
    "126": {
      "fn": null,
      "offset": [
        472,
        2904
      ],
      "op": "PUSH4",
      "path": "31",
      "value": "0x47E7EF24"
    },
    "131": {
      "fn": null,
      "offset": [
        472,
        2904
      ],
      "op": "EQ",
      "path": "31"
    },
    "132": {
      "fn": null,
      "offset": [
        472,
        2904
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0xE8"
    },
    "135": {
      "fn": null,
      "offset": [
        472,
        2904
      ],
      "op": "JUMPI",
      "path": "31"
    },
    "136": {
      "fn": null,
      "offset": [
        472,
        2904
      ],
      "op": "DUP1",
      "path": "31"
    },
    "137": {
      "fn": null,
      "offset": [
        472,
        2904
      ],
      "op": "PUSH4",
      "path": "31",
      "value": "0x4A489CC2"
    },
    "142": {
      "fn": null,
      "offset": [
        472,
        2904
      ],
      "op": "EQ",
      "path": "31"
    },
    "143": {
      "fn": null,
      "offset": [
        472,
        2904
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0xFB"
    },
    "146": {
      "fn": null,
      "offset": [
        472,
        2904
      ],
      "op": "JUMPI",
      "path": "31"
    },
    "147": {
      "fn": null,
      "offset": [
        472,
        2904
      ],
      "op": "DUP1",
      "path": "31"
    },
    "148": {
      "fn": null,
      "offset": [
        472,
        2904
      ],
      "op": "PUSH4",
      "path": "31",
      "value": "0x4B8A3529"
    },
    "153": {
      "fn": null,
      "offset": [
        472,
        2904
      ],
      "op": "EQ",
      "path": "31"
    },
    "154": {
      "fn": null,
      "offset": [
        472,
        2904
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x11E"
    },
    "157": {
      "fn": null,
      "offset": [
        472,
        2904
      ],
      "op": "JUMPI",
      "path": "31"
    },
    "158": {
      "fn": null,
      "offset": [
        472,
        2904
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "159": {
      "fn": null,
      "offset": [
        472,
        2904
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x0"
    },
    "161": {
      "fn": null,
      "offset": [
        472,
        2904
      ],
      "op": "DUP1",
      "path": "31"
    },
    "162": {
      "first_revert": true,
      "fn": null,
      "offset": [
        472,
        2904
      ],
      "op": "REVERT",
      "path": "31"
    },
    "163": {
      "offset": [
        557,
        578
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "164": {
      "fn": null,
      "offset": [
        557,
        578
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x1"
    },
    "166": {
      "fn": null,
      "offset": [
        557,
        578
      ],
      "op": "SLOAD",
      "path": "31"
    },
    "167": {
      "fn": null,
      "offset": [
        557,
        578
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0xB6"
    },
    "170": {
      "fn": null,
      "offset": [
        557,
        578
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "171": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "173": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "175": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "177": {
      "op": "SHL"
    },
    "178": {
      "op": "SUB"
    },
    "179": {
      "offset": [
        557,
        578
      ],
      "op": "AND",
      "path": "31"
    },
    "180": {
      "fn": null,
      "offset": [
        557,
        578
      ],
      "op": "DUP2",
      "path": "31"
    },
    "181": {
      "fn": null,
      "offset": [
        557,
        578
      ],
      "op": "JUMP",
      "path": "31"
    },
    "182": {
      "fn": null,
      "offset": [
        557,
        578
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "183": {
      "fn": null,
      "offset": [
        557,
        578
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x40"
    },
    "185": {
      "fn": null,
      "offset": [
        557,
        578
      ],
      "op": "MLOAD",
      "path": "31"
    },
    "186": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "188": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "190": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "192": {
      "op": "SHL"
    },
    "193": {
      "op": "SUB"
    },
    "194": {
      "op": "SWAP1"
    },
    "195": {
      "op": "SWAP2"
    },
    "196": {
      "op": "AND"
    },
    "197": {
      "op": "DUP2"
    },
    "198": {
      "op": "MSTORE"
    },
    "199": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "201": {
      "op": "ADD"
    },
    "202": {
      "offset": [
        557,
        578
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "203": {
      "fn": null,
      "offset": [
        557,
        578
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x40"
    },
    "205": {
      "fn": null,
      "offset": [
        557,
        578
      ],
      "op": "MLOAD",
      "path": "31"
    },
    "206": {
      "fn": null,
      "offset": [
        557,
        578
      ],
      "op": "DUP1",
      "path": "31"
    },
    "207": {
      "fn": null,
      "offset": [
        557,
        578
      ],
      "op": "SWAP2",
      "path": "31"
    },
    "208": {
      "fn": null,
      "offset": [
        557,
        578
      ],
      "op": "SUB",
      "path": "31"
    },
    "209": {
      "fn": null,
      "offset": [
        557,
        578
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "210": {
      "fn": null,
      "offset": [
        557,
        578
      ],
      "op": "RETURN",
      "path": "31"
    },
    "211": {
      "fn": "Lendly.repay",
      "offset": [
        2009,
        2218
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "212": {
      "fn": "Lendly.repay",
      "offset": [
        2009,
        2218
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0xE6"
    },
    "215": {
      "fn": "Lendly.repay",
      "offset": [
        2009,
        2218
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0xE1"
    },
    "218": {
      "fn": "Lendly.repay",
      "offset": [
        2009,
        2218
      ],
      "op": "CALLDATASIZE",
      "path": "31"
    },
    "219": {
      "fn": "Lendly.repay",
      "offset": [
        2009,
        2218
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x4"
    },
    "221": {
      "fn": "Lendly.repay",
      "offset": [
        2009,
        2218
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x9E3"
    },
    "224": {
      "fn": "Lendly.repay",
      "jump": "i",
      "offset": [
        2009,
        2218
      ],
      "op": "JUMP",
      "path": "31"
    },
    "225": {
      "fn": "Lendly.repay",
      "offset": [
        2009,
        2218
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "226": {
      "fn": "Lendly.repay",
      "offset": [
        2009,
        2218
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x1CE"
    },
    "229": {
      "fn": "Lendly.repay",
      "jump": "i",
      "offset": [
        2009,
        2218
      ],
      "op": "JUMP",
      "path": "31"
    },
    "230": {
      "fn": "Lendly.repay",
      "offset": [
        2009,
        2218
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "231": {
      "fn": "Lendly.repay",
      "offset": [
        2009,
        2218
      ],
      "op": "STOP",
      "path": "31"
    },
    "232": {
      "fn": "Lendly.deposit",
      "offset": [
        1105,
        1321
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "233": {
      "fn": "Lendly.deposit",
      "offset": [
        1105,
        1321
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0xE6"
    },
    "236": {
      "fn": "Lendly.deposit",
      "offset": [
        1105,
        1321
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0xF6"
    },
    "239": {
      "fn": "Lendly.deposit",
      "offset": [
        1105,
        1321
      ],
      "op": "CALLDATASIZE",
      "path": "31"
    },
    "240": {
      "fn": "Lendly.deposit",
      "offset": [
        1105,
        1321
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x4"
    },
    "242": {
      "fn": "Lendly.deposit",
      "offset": [
        1105,
        1321
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x9E3"
    },
    "245": {
      "fn": "Lendly.deposit",
      "jump": "i",
      "offset": [
        1105,
        1321
      ],
      "op": "JUMP",
      "path": "31"
    },
    "246": {
      "fn": "Lendly.deposit",
      "offset": [
        1105,
        1321
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "247": {
      "fn": "Lendly.deposit",
      "offset": [
        1105,
        1321
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x271"
    },
    "250": {
      "fn": "Lendly.deposit",
      "jump": "i",
      "offset": [
        1105,
        1321
      ],
      "op": "JUMP",
      "path": "31"
    },
    "251": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2322,
        2902
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "252": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2322,
        2902
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x10E"
    },
    "255": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2322,
        2902
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x109"
    },
    "258": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2322,
        2902
      ],
      "op": "CALLDATASIZE",
      "path": "31"
    },
    "259": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2322,
        2902
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x4"
    },
    "261": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2322,
        2902
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0xA0D"
    },
    "264": {
      "fn": "Lendly.isSafeDebt",
      "jump": "i",
      "offset": [
        2322,
        2902
      ],
      "op": "JUMP",
      "path": "31"
    },
    "265": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2322,
        2902
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "266": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2322,
        2902
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x2EB"
    },
    "269": {
      "fn": "Lendly.isSafeDebt",
      "jump": "i",
      "offset": [
        2322,
        2902
      ],
      "op": "JUMP",
      "path": "31"
    },
    "270": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2322,
        2902
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "271": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2322,
        2902
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x40"
    },
    "273": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2322,
        2902
      ],
      "op": "MLOAD",
      "path": "31"
    },
    "274": {
      "op": "SWAP1"
    },
    "275": {
      "op": "ISZERO"
    },
    "276": {
      "op": "ISZERO"
    },
    "277": {
      "op": "DUP2"
    },
    "278": {
      "op": "MSTORE"
    },
    "279": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "281": {
      "op": "ADD"
    },
    "282": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2322,
        2902
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0xCA"
    },
    "285": {
      "op": "JUMP"
    },
    "286": {
      "fn": "Lendly.borrow",
      "offset": [
        1674,
        2003
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "287": {
      "fn": "Lendly.borrow",
      "offset": [
        1674,
        2003
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0xE6"
    },
    "290": {
      "fn": "Lendly.borrow",
      "offset": [
        1674,
        2003
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x12C"
    },
    "293": {
      "fn": "Lendly.borrow",
      "offset": [
        1674,
        2003
      ],
      "op": "CALLDATASIZE",
      "path": "31"
    },
    "294": {
      "fn": "Lendly.borrow",
      "offset": [
        1674,
        2003
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x4"
    },
    "296": {
      "fn": "Lendly.borrow",
      "offset": [
        1674,
        2003
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x9E3"
    },
    "299": {
      "fn": "Lendly.borrow",
      "jump": "i",
      "offset": [
        1674,
        2003
      ],
      "op": "JUMP",
      "path": "31"
    },
    "300": {
      "fn": "Lendly.borrow",
      "offset": [
        1674,
        2003
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "301": {
      "fn": "Lendly.borrow",
      "offset": [
        1674,
        2003
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x4C9"
    },
    "304": {
      "fn": "Lendly.borrow",
      "jump": "i",
      "offset": [
        1674,
        2003
      ],
      "op": "JUMP",
      "path": "31"
    },
    "305": {
      "offset": [
        643,
        708
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "306": {
      "fn": "Lendly.borrow",
      "offset": [
        643,
        708
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x15C"
    },
    "309": {
      "fn": "Lendly.borrow",
      "offset": [
        643,
        708
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x13F"
    },
    "312": {
      "fn": "Lendly.borrow",
      "offset": [
        643,
        708
      ],
      "op": "CALLDATASIZE",
      "path": "31"
    },
    "313": {
      "fn": "Lendly.borrow",
      "offset": [
        643,
        708
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x4"
    },
    "315": {
      "fn": "Lendly.borrow",
      "offset": [
        643,
        708
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0xA0D"
    },
    "318": {
      "fn": "Lendly.borrow",
      "jump": "i",
      "offset": [
        643,
        708
      ],
      "op": "JUMP",
      "path": "31"
    },
    "319": {
      "fn": "Lendly.borrow",
      "offset": [
        643,
        708
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "320": {
      "fn": "Lendly.borrow",
      "offset": [
        643,
        708
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x3"
    },
    "322": {
      "fn": "Lendly.borrow",
      "offset": [
        643,
        708
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x20"
    },
    "324": {
      "fn": "Lendly.borrow",
      "offset": [
        643,
        708
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "325": {
      "fn": "Lendly.borrow",
      "offset": [
        643,
        708
      ],
      "op": "DUP2",
      "path": "31"
    },
    "326": {
      "fn": "Lendly.borrow",
      "offset": [
        643,
        708
      ],
      "op": "MSTORE",
      "path": "31"
    },
    "327": {
      "fn": "Lendly.borrow",
      "offset": [
        643,
        708
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x0"
    },
    "329": {
      "fn": "Lendly.borrow",
      "offset": [
        643,
        708
      ],
      "op": "SWAP3",
      "path": "31"
    },
    "330": {
      "fn": "Lendly.borrow",
      "offset": [
        643,
        708
      ],
      "op": "DUP4",
      "path": "31"
    },
    "331": {
      "fn": "Lendly.borrow",
      "offset": [
        643,
        708
      ],
      "op": "MSTORE",
      "path": "31"
    },
    "332": {
      "fn": "Lendly.borrow",
      "offset": [
        643,
        708
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x40"
    },
    "334": {
      "fn": "Lendly.borrow",
      "offset": [
        643,
        708
      ],
      "op": "DUP1",
      "path": "31"
    },
    "335": {
      "fn": "Lendly.borrow",
      "offset": [
        643,
        708
      ],
      "op": "DUP5",
      "path": "31"
    },
    "336": {
      "fn": "Lendly.borrow",
      "offset": [
        643,
        708
      ],
      "op": "KECCAK256",
      "path": "31"
    },
    "337": {
      "fn": "Lendly.borrow",
      "offset": [
        643,
        708
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "338": {
      "fn": "Lendly.borrow",
      "offset": [
        643,
        708
      ],
      "op": "SWAP2",
      "path": "31"
    },
    "339": {
      "fn": "Lendly.borrow",
      "offset": [
        643,
        708
      ],
      "op": "MSTORE",
      "path": "31"
    },
    "340": {
      "fn": "Lendly.borrow",
      "offset": [
        643,
        708
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "341": {
      "fn": "Lendly.borrow",
      "offset": [
        643,
        708
      ],
      "op": "DUP3",
      "path": "31"
    },
    "342": {
      "fn": "Lendly.borrow",
      "offset": [
        643,
        708
      ],
      "op": "MSTORE",
      "path": "31"
    },
    "343": {
      "fn": "Lendly.borrow",
      "offset": [
        643,
        708
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "344": {
      "fn": "Lendly.borrow",
      "offset": [
        643,
        708
      ],
      "op": "KECCAK256",
      "path": "31"
    },
    "345": {
      "fn": "Lendly.borrow",
      "offset": [
        643,
        708
      ],
      "op": "SLOAD",
      "path": "31"
    },
    "346": {
      "fn": "Lendly.borrow",
      "offset": [
        643,
        708
      ],
      "op": "DUP2",
      "path": "31"
    },
    "347": {
      "fn": "Lendly.borrow",
      "offset": [
        643,
        708
      ],
      "op": "JUMP",
      "path": "31"
    },
    "348": {
      "fn": "Lendly.borrow",
      "offset": [
        643,
        708
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "349": {
      "fn": "Lendly.borrow",
      "offset": [
        643,
        708
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x40"
    },
    "351": {
      "fn": "Lendly.borrow",
      "offset": [
        643,
        708
      ],
      "op": "MLOAD",
      "path": "31"
    },
    "352": {
      "op": "SWAP1"
    },
    "353": {
      "op": "DUP2"
    },
    "354": {
      "op": "MSTORE"
    },
    "355": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "357": {
      "op": "ADD"
    },
    "358": {
      "offset": [
        643,
        708
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0xCA"
    },
    "361": {
      "op": "JUMP"
    },
    "362": {
      "offset": [
        532,
        551
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "363": {
      "fn": "Lendly.borrow",
      "offset": [
        532,
        551
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x0"
    },
    "365": {
      "fn": "Lendly.borrow",
      "offset": [
        532,
        551
      ],
      "op": "SLOAD",
      "path": "31"
    },
    "366": {
      "fn": "Lendly.borrow",
      "offset": [
        532,
        551
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0xB6"
    },
    "369": {
      "fn": "Lendly.borrow",
      "offset": [
        532,
        551
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "370": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "372": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "374": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "376": {
      "op": "SHL"
    },
    "377": {
      "op": "SUB"
    },
    "378": {
      "offset": [
        532,
        551
      ],
      "op": "AND",
      "path": "31"
    },
    "379": {
      "fn": "Lendly.borrow",
      "offset": [
        532,
        551
      ],
      "op": "DUP2",
      "path": "31"
    },
    "380": {
      "fn": "Lendly.borrow",
      "offset": [
        532,
        551
      ],
      "op": "JUMP",
      "path": "31"
    },
    "381": {
      "offset": [
        584,
        605
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "382": {
      "fn": "Lendly.borrow",
      "offset": [
        584,
        605
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x2"
    },
    "384": {
      "fn": "Lendly.borrow",
      "offset": [
        584,
        605
      ],
      "op": "SLOAD",
      "path": "31"
    },
    "385": {
      "fn": "Lendly.borrow",
      "offset": [
        584,
        605
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0xB6"
    },
    "388": {
      "fn": "Lendly.borrow",
      "offset": [
        584,
        605
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "389": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "391": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "393": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "395": {
      "op": "SHL"
    },
    "396": {
      "op": "SUB"
    },
    "397": {
      "offset": [
        584,
        605
      ],
      "op": "AND",
      "path": "31"
    },
    "398": {
      "fn": "Lendly.borrow",
      "offset": [
        584,
        605
      ],
      "op": "DUP2",
      "path": "31"
    },
    "399": {
      "fn": "Lendly.borrow",
      "offset": [
        584,
        605
      ],
      "op": "JUMP",
      "path": "31"
    },
    "400": {
      "offset": [
        726,
        786
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "401": {
      "fn": "Lendly.borrow",
      "offset": [
        726,
        786
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x15C"
    },
    "404": {
      "fn": "Lendly.borrow",
      "offset": [
        726,
        786
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x19E"
    },
    "407": {
      "fn": "Lendly.borrow",
      "offset": [
        726,
        786
      ],
      "op": "CALLDATASIZE",
      "path": "31"
    },
    "408": {
      "fn": "Lendly.borrow",
      "offset": [
        726,
        786
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x4"
    },
    "410": {
      "fn": "Lendly.borrow",
      "offset": [
        726,
        786
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0xA0D"
    },
    "413": {
      "fn": "Lendly.borrow",
      "jump": "i",
      "offset": [
        726,
        786
      ],
      "op": "JUMP",
      "path": "31"
    },
    "414": {
      "fn": "Lendly.borrow",
      "offset": [
        726,
        786
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "415": {
      "fn": "Lendly.borrow",
      "offset": [
        726,
        786
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x4"
    },
    "417": {
      "fn": "Lendly.borrow",
      "offset": [
        726,
        786
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x20"
    },
    "419": {
      "fn": "Lendly.borrow",
      "offset": [
        726,
        786
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "420": {
      "fn": "Lendly.borrow",
      "offset": [
        726,
        786
      ],
      "op": "DUP2",
      "path": "31"
    },
    "421": {
      "fn": "Lendly.borrow",
      "offset": [
        726,
        786
      ],
      "op": "MSTORE",
      "path": "31"
    },
    "422": {
      "fn": "Lendly.borrow",
      "offset": [
        726,
        786
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x0"
    },
    "424": {
      "fn": "Lendly.borrow",
      "offset": [
        726,
        786
      ],
      "op": "SWAP3",
      "path": "31"
    },
    "425": {
      "fn": "Lendly.borrow",
      "offset": [
        726,
        786
      ],
      "op": "DUP4",
      "path": "31"
    },
    "426": {
      "fn": "Lendly.borrow",
      "offset": [
        726,
        786
      ],
      "op": "MSTORE",
      "path": "31"
    },
    "427": {
      "fn": "Lendly.borrow",
      "offset": [
        726,
        786
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x40"
    },
    "429": {
      "fn": "Lendly.borrow",
      "offset": [
        726,
        786
      ],
      "op": "DUP1",
      "path": "31"
    },
    "430": {
      "fn": "Lendly.borrow",
      "offset": [
        726,
        786
      ],
      "op": "DUP5",
      "path": "31"
    },
    "431": {
      "fn": "Lendly.borrow",
      "offset": [
        726,
        786
      ],
      "op": "KECCAK256",
      "path": "31"
    },
    "432": {
      "fn": "Lendly.borrow",
      "offset": [
        726,
        786
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "433": {
      "fn": "Lendly.borrow",
      "offset": [
        726,
        786
      ],
      "op": "SWAP2",
      "path": "31"
    },
    "434": {
      "fn": "Lendly.borrow",
      "offset": [
        726,
        786
      ],
      "op": "MSTORE",
      "path": "31"
    },
    "435": {
      "fn": "Lendly.borrow",
      "offset": [
        726,
        786
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "436": {
      "fn": "Lendly.borrow",
      "offset": [
        726,
        786
      ],
      "op": "DUP3",
      "path": "31"
    },
    "437": {
      "fn": "Lendly.borrow",
      "offset": [
        726,
        786
      ],
      "op": "MSTORE",
      "path": "31"
    },
    "438": {
      "fn": "Lendly.borrow",
      "offset": [
        726,
        786
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "439": {
      "fn": "Lendly.borrow",
      "offset": [
        726,
        786
      ],
      "op": "KECCAK256",
      "path": "31"
    },
    "440": {
      "fn": "Lendly.borrow",
      "offset": [
        726,
        786
      ],
      "op": "SLOAD",
      "path": "31"
    },
    "441": {
      "fn": "Lendly.borrow",
      "offset": [
        726,
        786
      ],
      "op": "DUP2",
      "path": "31"
    },
    "442": {
      "fn": "Lendly.borrow",
      "offset": [
        726,
        786
      ],
      "op": "JUMP",
      "path": "31"
    },
    "443": {
      "fn": "Lendly.withdraw",
      "offset": [
        1327,
        1668
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "444": {
      "fn": "Lendly.withdraw",
      "offset": [
        1327,
        1668
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0xE6"
    },
    "447": {
      "fn": "Lendly.withdraw",
      "offset": [
        1327,
        1668
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x1C9"
    },
    "450": {
      "fn": "Lendly.withdraw",
      "offset": [
        1327,
        1668
      ],
      "op": "CALLDATASIZE",
      "path": "31"
    },
    "451": {
      "fn": "Lendly.withdraw",
      "offset": [
        1327,
        1668
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x4"
    },
    "453": {
      "fn": "Lendly.withdraw",
      "offset": [
        1327,
        1668
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x9E3"
    },
    "456": {
      "fn": "Lendly.withdraw",
      "jump": "i",
      "offset": [
        1327,
        1668
      ],
      "op": "JUMP",
      "path": "31"
    },
    "457": {
      "fn": "Lendly.withdraw",
      "offset": [
        1327,
        1668
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "458": {
      "fn": "Lendly.withdraw",
      "offset": [
        1327,
        1668
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x5AB"
    },
    "461": {
      "fn": "Lendly.withdraw",
      "jump": "i",
      "offset": [
        1327,
        1668
      ],
      "op": "JUMP",
      "path": "31"
    },
    "462": {
      "fn": "Lendly.repay",
      "offset": [
        2009,
        2218
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "463": {
      "offset": [
        872,
        878
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x1"
    },
    "465": {
      "fn": "Lendly.repay",
      "offset": [
        872,
        878
      ],
      "op": "SLOAD",
      "path": "31"
    },
    "466": {
      "fn": "Lendly.repay",
      "offset": [
        2081,
        2087
      ],
      "op": "DUP3",
      "path": "31"
    },
    "467": {
      "fn": "Lendly.repay",
      "offset": [
        2081,
        2087
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "468": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "470": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "472": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "474": {
      "op": "SHL"
    },
    "475": {
      "op": "SUB"
    },
    "476": {
      "offset": [
        862,
        878
      ],
      "op": "DUP1",
      "path": "31"
    },
    "477": {
      "fn": "Lendly.repay",
      "offset": [
        862,
        878
      ],
      "op": "DUP4",
      "path": "31"
    },
    "478": {
      "fn": "Lendly.repay",
      "offset": [
        862,
        878
      ],
      "op": "AND",
      "path": "31"
    },
    "479": {
      "offset": [
        872,
        878
      ],
      "op": "SWAP2",
      "path": "31"
    },
    "480": {
      "fn": "Lendly.repay",
      "offset": [
        872,
        878
      ],
      "op": "AND",
      "path": "31"
    },
    "481": {
      "offset": [
        862,
        878
      ],
      "op": "EQ",
      "path": "31"
    },
    "482": {
      "fn": "Lendly.repay",
      "offset": [
        862,
        878
      ],
      "op": "DUP1",
      "path": "31"
    },
    "483": {
      "offset": [
        862,
        898
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x1F9"
    },
    "486": {
      "offset": [
        862,
        898
      ],
      "op": "JUMPI",
      "path": "31"
    },
    "487": {
      "op": "POP"
    },
    "488": {
      "offset": [
        892,
        898
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x2"
    },
    "490": {
      "fn": "Lendly.repay",
      "offset": [
        892,
        898
      ],
      "op": "SLOAD",
      "path": "31"
    },
    "491": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "493": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "495": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "497": {
      "op": "SHL"
    },
    "498": {
      "op": "SUB"
    },
    "499": {
      "offset": [
        882,
        898
      ],
      "op": "DUP3",
      "path": "31"
    },
    "500": {
      "fn": "Lendly.repay",
      "offset": [
        882,
        898
      ],
      "op": "DUP2",
      "path": "31"
    },
    "501": {
      "fn": "Lendly.repay",
      "offset": [
        882,
        898
      ],
      "op": "AND",
      "path": "31"
    },
    "502": {
      "offset": [
        892,
        898
      ],
      "op": "SWAP2",
      "path": "31"
    },
    "503": {
      "fn": "Lendly.repay",
      "offset": [
        892,
        898
      ],
      "op": "AND",
      "path": "31"
    },
    "504": {
      "offset": [
        882,
        898
      ],
      "op": "EQ",
      "path": "31"
    },
    "505": {
      "offset": [
        862,
        898
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "506": {
      "offset": [
        854,
        922
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x21E"
    },
    "509": {
      "offset": [
        854,
        922
      ],
      "op": "JUMPI",
      "path": "31"
    },
    "510": {
      "fn": "Lendly.repay",
      "offset": [
        854,
        922
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x40"
    },
    "512": {
      "fn": "Lendly.repay",
      "offset": [
        854,
        922
      ],
      "op": "MLOAD",
      "path": "31"
    },
    "513": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "517": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "519": {
      "op": "SHL"
    },
    "520": {
      "offset": [
        854,
        922
      ],
      "op": "DUP2",
      "path": "31"
    },
    "521": {
      "fn": "Lendly.repay",
      "offset": [
        854,
        922
      ],
      "op": "MSTORE",
      "path": "31"
    },
    "522": {
      "fn": "Lendly.repay",
      "offset": [
        854,
        922
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x4"
    },
    "524": {
      "fn": "Lendly.repay",
      "offset": [
        854,
        922
      ],
      "op": "ADD",
      "path": "31"
    },
    "525": {
      "fn": "Lendly.repay",
      "offset": [
        854,
        922
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x215"
    },
    "528": {
      "fn": "Lendly.repay",
      "offset": [
        854,
        922
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "529": {
      "fn": "Lendly.repay",
      "offset": [
        854,
        922
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0xA40"
    },
    "532": {
      "fn": "Lendly.repay",
      "jump": "i",
      "offset": [
        854,
        922
      ],
      "op": "JUMP",
      "path": "31"
    },
    "533": {
      "fn": "Lendly.repay",
      "offset": [
        854,
        922
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "534": {
      "fn": "Lendly.repay",
      "offset": [
        854,
        922
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x40"
    },
    "536": {
      "fn": "Lendly.repay",
      "offset": [
        854,
        922
      ],
      "op": "MLOAD",
      "path": "31"
    },
    "537": {
      "fn": "Lendly.repay",
      "offset": [
        854,
        922
      ],
      "op": "DUP1",
      "path": "31"
    },
    "538": {
      "fn": "Lendly.repay",
      "offset": [
        854,
        922
      ],
      "op": "SWAP2",
      "path": "31"
    },
    "539": {
      "fn": "Lendly.repay",
      "offset": [
        854,
        922
      ],
      "op": "SUB",
      "path": "31"
    },
    "540": {
      "fn": "Lendly.repay",
      "offset": [
        854,
        922
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "541": {
      "fn": "Lendly.repay",
      "offset": [
        854,
        922
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "31"
    },
    "542": {
      "fn": "Lendly.repay",
      "offset": [
        854,
        922
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "543": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "545": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "547": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "549": {
      "op": "SHL"
    },
    "550": {
      "op": "SUB"
    },
    "551": {
      "fn": "Lendly.repay",
      "offset": [
        2099,
        2111
      ],
      "op": "DUP4",
      "path": "31",
      "statement": 0
    },
    "552": {
      "fn": "Lendly.repay",
      "offset": [
        2099,
        2111
      ],
      "op": "AND",
      "path": "31"
    },
    "553": {
      "fn": "Lendly.repay",
      "offset": [
        2099,
        2111
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x0"
    },
    "555": {
      "fn": "Lendly.repay",
      "offset": [
        2099,
        2111
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "556": {
      "fn": "Lendly.repay",
      "offset": [
        2099,
        2111
      ],
      "op": "DUP2",
      "path": "31"
    },
    "557": {
      "fn": "Lendly.repay",
      "offset": [
        2099,
        2111
      ],
      "op": "MSTORE",
      "path": "31"
    },
    "558": {
      "fn": "Lendly.repay",
      "offset": [
        2099,
        2103
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x4"
    },
    "560": {
      "fn": "Lendly.repay",
      "offset": [
        2099,
        2111
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x20"
    },
    "562": {
      "fn": "Lendly.repay",
      "offset": [
        2099,
        2111
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "563": {
      "fn": "Lendly.repay",
      "offset": [
        2099,
        2111
      ],
      "op": "DUP2",
      "path": "31"
    },
    "564": {
      "fn": "Lendly.repay",
      "offset": [
        2099,
        2111
      ],
      "op": "MSTORE",
      "path": "31"
    },
    "565": {
      "fn": "Lendly.repay",
      "offset": [
        2099,
        2111
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x40"
    },
    "567": {
      "fn": "Lendly.repay",
      "offset": [
        2099,
        2111
      ],
      "op": "DUP1",
      "path": "31"
    },
    "568": {
      "fn": "Lendly.repay",
      "offset": [
        2099,
        2111
      ],
      "op": "DUP4",
      "path": "31"
    },
    "569": {
      "fn": "Lendly.repay",
      "offset": [
        2099,
        2111
      ],
      "op": "KECCAK256",
      "path": "31"
    },
    "570": {
      "fn": "Lendly.repay",
      "offset": [
        2112,
        2122
      ],
      "op": "CALLER",
      "path": "31"
    },
    "571": {
      "fn": "Lendly.repay",
      "offset": [
        2099,
        2123
      ],
      "op": "DUP5",
      "path": "31"
    },
    "572": {
      "fn": "Lendly.repay",
      "offset": [
        2099,
        2123
      ],
      "op": "MSTORE",
      "path": "31"
    },
    "573": {
      "fn": "Lendly.repay",
      "offset": [
        2099,
        2123
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "574": {
      "fn": "Lendly.repay",
      "offset": [
        2099,
        2123
      ],
      "op": "SWAP2",
      "path": "31"
    },
    "575": {
      "fn": "Lendly.repay",
      "offset": [
        2099,
        2123
      ],
      "op": "MSTORE",
      "path": "31"
    },
    "576": {
      "fn": "Lendly.repay",
      "offset": [
        2099,
        2123
      ],
      "op": "DUP2",
      "path": "31"
    },
    "577": {
      "fn": "Lendly.repay",
      "offset": [
        2099,
        2123
      ],
      "op": "KECCAK256",
      "path": "31"
    },
    "578": {
      "fn": "Lendly.repay",
      "offset": [
        2099,
        2134
      ],
      "op": "DUP1",
      "path": "31"
    },
    "579": {
      "fn": "Lendly.repay",
      "offset": [
        2099,
        2134
      ],
      "op": "SLOAD",
      "path": "31"
    },
    "580": {
      "fn": "Lendly.repay",
      "offset": [
        2127,
        2134
      ],
      "op": "DUP5",
      "path": "31"
    },
    "581": {
      "fn": "Lendly.repay",
      "offset": [
        2127,
        2134
      ],
      "op": "SWAP3",
      "path": "31"
    },
    "582": {
      "fn": "Lendly.repay",
      "offset": [
        2099,
        2111
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "583": {
      "fn": "Lendly.repay",
      "offset": [
        2099,
        2134
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x251"
    },
    "586": {
      "fn": "Lendly.repay",
      "offset": [
        2099,
        2134
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "587": {
      "fn": "Lendly.repay",
      "offset": [
        2127,
        2134
      ],
      "op": "DUP5",
      "path": "31"
    },
    "588": {
      "fn": "Lendly.repay",
      "offset": [
        2127,
        2134
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "589": {
      "fn": "Lendly.repay",
      "offset": [
        2099,
        2134
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0xA83"
    },
    "592": {
      "fn": "Lendly.repay",
      "jump": "i",
      "offset": [
        2099,
        2134
      ],
      "op": "JUMP",
      "path": "31"
    },
    "593": {
      "fn": "Lendly.repay",
      "offset": [
        2099,
        2134
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "594": {
      "fn": "Lendly.repay",
      "offset": [
        2099,
        2134
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "595": {
      "fn": "Lendly.repay",
      "offset": [
        2099,
        2134
      ],
      "op": "SWAP2",
      "path": "31"
    },
    "596": {
      "fn": "Lendly.repay",
      "offset": [
        2099,
        2134
      ],
      "op": "SSTORE",
      "path": "31"
    },
    "597": {
      "op": "POP"
    },
    "598": {
      "fn": "Lendly.repay",
      "offset": [
        2144,
        2211
      ],
      "op": "PUSH2",
      "path": "31",
      "statement": 1,
      "value": "0x26C"
    },
    "601": {
      "fn": "Lendly.repay",
      "offset": [
        2144,
        2211
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "602": {
      "op": "POP"
    },
    "603": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "605": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "607": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "609": {
      "op": "SHL"
    },
    "610": {
      "op": "SUB"
    },
    "611": {
      "fn": "Lendly.repay",
      "offset": [
        2144,
        2175
      ],
      "op": "DUP5",
      "path": "31"
    },
    "612": {
      "fn": "Lendly.repay",
      "offset": [
        2144,
        2175
      ],
      "op": "AND",
      "path": "31"
    },
    "613": {
      "fn": "Lendly.repay",
      "offset": [
        2176,
        2186
      ],
      "op": "CALLER",
      "path": "31"
    },
    "614": {
      "fn": "Lendly.repay",
      "offset": [
        2196,
        2200
      ],
      "op": "ADDRESS",
      "path": "31"
    },
    "615": {
      "fn": "Lendly.repay",
      "offset": [
        2203,
        2210
      ],
      "op": "DUP6",
      "path": "31"
    },
    "616": {
      "fn": "Lendly.repay",
      "offset": [
        2144,
        2175
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x6CA"
    },
    "619": {
      "fn": "Lendly.repay",
      "jump": "i",
      "offset": [
        2144,
        2211
      ],
      "op": "JUMP",
      "path": "31"
    },
    "620": {
      "fn": "Lendly.repay",
      "offset": [
        2144,
        2211
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "621": {
      "fn": "Lendly.repay",
      "offset": [
        2009,
        2218
      ],
      "op": "POP",
      "path": "31"
    },
    "622": {
      "fn": "Lendly.repay",
      "offset": [
        2009,
        2218
      ],
      "op": "POP",
      "path": "31"
    },
    "623": {
      "fn": "Lendly.repay",
      "offset": [
        2009,
        2218
      ],
      "op": "POP",
      "path": "31"
    },
    "624": {
      "fn": "Lendly.repay",
      "jump": "o",
      "offset": [
        2009,
        2218
      ],
      "op": "JUMP",
      "path": "31"
    },
    "625": {
      "fn": "Lendly.deposit",
      "offset": [
        1105,
        1321
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "626": {
      "offset": [
        872,
        878
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x1"
    },
    "628": {
      "fn": "Lendly.deposit",
      "offset": [
        872,
        878
      ],
      "op": "SLOAD",
      "path": "31"
    },
    "629": {
      "fn": "Lendly.deposit",
      "offset": [
        1179,
        1185
      ],
      "op": "DUP3",
      "path": "31"
    },
    "630": {
      "fn": "Lendly.deposit",
      "offset": [
        1179,
        1185
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "631": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "633": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "635": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "637": {
      "op": "SHL"
    },
    "638": {
      "op": "SUB"
    },
    "639": {
      "offset": [
        862,
        878
      ],
      "op": "DUP1",
      "path": "31"
    },
    "640": {
      "fn": "Lendly.deposit",
      "offset": [
        862,
        878
      ],
      "op": "DUP4",
      "path": "31"
    },
    "641": {
      "fn": "Lendly.deposit",
      "offset": [
        862,
        878
      ],
      "op": "AND",
      "path": "31"
    },
    "642": {
      "offset": [
        872,
        878
      ],
      "op": "SWAP2",
      "path": "31"
    },
    "643": {
      "fn": "Lendly.deposit",
      "offset": [
        872,
        878
      ],
      "op": "AND",
      "path": "31"
    },
    "644": {
      "offset": [
        862,
        878
      ],
      "op": "EQ",
      "path": "31"
    },
    "645": {
      "fn": "Lendly.deposit",
      "offset": [
        862,
        878
      ],
      "op": "DUP1",
      "path": "31"
    },
    "646": {
      "offset": [
        862,
        898
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x29C"
    },
    "649": {
      "offset": [
        862,
        898
      ],
      "op": "JUMPI",
      "path": "31"
    },
    "650": {
      "op": "POP"
    },
    "651": {
      "offset": [
        892,
        898
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x2"
    },
    "653": {
      "fn": "Lendly.deposit",
      "offset": [
        892,
        898
      ],
      "op": "SLOAD",
      "path": "31"
    },
    "654": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "656": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "658": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "660": {
      "op": "SHL"
    },
    "661": {
      "op": "SUB"
    },
    "662": {
      "offset": [
        882,
        898
      ],
      "op": "DUP3",
      "path": "31"
    },
    "663": {
      "fn": "Lendly.deposit",
      "offset": [
        882,
        898
      ],
      "op": "DUP2",
      "path": "31"
    },
    "664": {
      "fn": "Lendly.deposit",
      "offset": [
        882,
        898
      ],
      "op": "AND",
      "path": "31"
    },
    "665": {
      "offset": [
        892,
        898
      ],
      "op": "SWAP2",
      "path": "31"
    },
    "666": {
      "fn": "Lendly.deposit",
      "offset": [
        892,
        898
      ],
      "op": "AND",
      "path": "31"
    },
    "667": {
      "offset": [
        882,
        898
      ],
      "op": "EQ",
      "path": "31"
    },
    "668": {
      "offset": [
        862,
        898
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "669": {
      "offset": [
        854,
        922
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x2B8"
    },
    "672": {
      "offset": [
        854,
        922
      ],
      "op": "JUMPI",
      "path": "31"
    },
    "673": {
      "fn": "Lendly.deposit",
      "offset": [
        854,
        922
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x40"
    },
    "675": {
      "fn": "Lendly.deposit",
      "offset": [
        854,
        922
      ],
      "op": "MLOAD",
      "path": "31"
    },
    "676": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "680": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "682": {
      "op": "SHL"
    },
    "683": {
      "offset": [
        854,
        922
      ],
      "op": "DUP2",
      "path": "31"
    },
    "684": {
      "fn": "Lendly.deposit",
      "offset": [
        854,
        922
      ],
      "op": "MSTORE",
      "path": "31"
    },
    "685": {
      "fn": "Lendly.deposit",
      "offset": [
        854,
        922
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x4"
    },
    "687": {
      "fn": "Lendly.deposit",
      "offset": [
        854,
        922
      ],
      "op": "ADD",
      "path": "31"
    },
    "688": {
      "fn": "Lendly.deposit",
      "offset": [
        854,
        922
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x215"
    },
    "691": {
      "fn": "Lendly.deposit",
      "offset": [
        854,
        922
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "692": {
      "fn": "Lendly.deposit",
      "offset": [
        854,
        922
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0xA40"
    },
    "695": {
      "fn": "Lendly.deposit",
      "jump": "i",
      "offset": [
        854,
        922
      ],
      "op": "JUMP",
      "path": "31"
    },
    "696": {
      "fn": "Lendly.deposit",
      "offset": [
        854,
        922
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "697": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "699": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "701": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "703": {
      "op": "SHL"
    },
    "704": {
      "op": "SUB"
    },
    "705": {
      "fn": "Lendly.deposit",
      "offset": [
        1197,
        1214
      ],
      "op": "DUP4",
      "path": "31",
      "statement": 2
    },
    "706": {
      "fn": "Lendly.deposit",
      "offset": [
        1197,
        1214
      ],
      "op": "AND",
      "path": "31"
    },
    "707": {
      "fn": "Lendly.deposit",
      "offset": [
        1197,
        1214
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x0"
    },
    "709": {
      "fn": "Lendly.deposit",
      "offset": [
        1197,
        1214
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "710": {
      "fn": "Lendly.deposit",
      "offset": [
        1197,
        1214
      ],
      "op": "DUP2",
      "path": "31"
    },
    "711": {
      "fn": "Lendly.deposit",
      "offset": [
        1197,
        1214
      ],
      "op": "MSTORE",
      "path": "31"
    },
    "712": {
      "fn": "Lendly.deposit",
      "offset": [
        1197,
        1206
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x3"
    },
    "714": {
      "fn": "Lendly.deposit",
      "offset": [
        1197,
        1214
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x20"
    },
    "716": {
      "fn": "Lendly.deposit",
      "offset": [
        1197,
        1214
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "717": {
      "fn": "Lendly.deposit",
      "offset": [
        1197,
        1214
      ],
      "op": "DUP2",
      "path": "31"
    },
    "718": {
      "fn": "Lendly.deposit",
      "offset": [
        1197,
        1214
      ],
      "op": "MSTORE",
      "path": "31"
    },
    "719": {
      "fn": "Lendly.deposit",
      "offset": [
        1197,
        1214
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x40"
    },
    "721": {
      "fn": "Lendly.deposit",
      "offset": [
        1197,
        1214
      ],
      "op": "DUP1",
      "path": "31"
    },
    "722": {
      "fn": "Lendly.deposit",
      "offset": [
        1197,
        1214
      ],
      "op": "DUP4",
      "path": "31"
    },
    "723": {
      "fn": "Lendly.deposit",
      "offset": [
        1197,
        1214
      ],
      "op": "KECCAK256",
      "path": "31"
    },
    "724": {
      "fn": "Lendly.deposit",
      "offset": [
        1215,
        1225
      ],
      "op": "CALLER",
      "path": "31"
    },
    "725": {
      "fn": "Lendly.deposit",
      "offset": [
        1197,
        1226
      ],
      "op": "DUP5",
      "path": "31"
    },
    "726": {
      "fn": "Lendly.deposit",
      "offset": [
        1197,
        1226
      ],
      "op": "MSTORE",
      "path": "31"
    },
    "727": {
      "fn": "Lendly.deposit",
      "offset": [
        1197,
        1226
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "728": {
      "fn": "Lendly.deposit",
      "offset": [
        1197,
        1226
      ],
      "op": "SWAP2",
      "path": "31"
    },
    "729": {
      "fn": "Lendly.deposit",
      "offset": [
        1197,
        1226
      ],
      "op": "MSTORE",
      "path": "31"
    },
    "730": {
      "fn": "Lendly.deposit",
      "offset": [
        1197,
        1226
      ],
      "op": "DUP2",
      "path": "31"
    },
    "731": {
      "fn": "Lendly.deposit",
      "offset": [
        1197,
        1226
      ],
      "op": "KECCAK256",
      "path": "31"
    },
    "732": {
      "fn": "Lendly.deposit",
      "offset": [
        1197,
        1237
      ],
      "op": "DUP1",
      "path": "31"
    },
    "733": {
      "fn": "Lendly.deposit",
      "offset": [
        1197,
        1237
      ],
      "op": "SLOAD",
      "path": "31"
    },
    "734": {
      "fn": "Lendly.deposit",
      "offset": [
        1230,
        1237
      ],
      "op": "DUP5",
      "path": "31"
    },
    "735": {
      "fn": "Lendly.deposit",
      "offset": [
        1230,
        1237
      ],
      "op": "SWAP3",
      "path": "31"
    },
    "736": {
      "fn": "Lendly.deposit",
      "offset": [
        1197,
        1214
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "737": {
      "fn": "Lendly.deposit",
      "offset": [
        1197,
        1237
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x251"
    },
    "740": {
      "fn": "Lendly.deposit",
      "offset": [
        1197,
        1237
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "741": {
      "fn": "Lendly.deposit",
      "offset": [
        1230,
        1237
      ],
      "op": "DUP5",
      "path": "31"
    },
    "742": {
      "fn": "Lendly.deposit",
      "offset": [
        1230,
        1237
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "743": {
      "fn": "Lendly.deposit",
      "offset": [
        1197,
        1237
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0xA9A"
    },
    "746": {
      "fn": "Lendly.deposit",
      "jump": "i",
      "offset": [
        1197,
        1237
      ],
      "op": "JUMP",
      "path": "31"
    },
    "747": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2322,
        2902
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "748": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2442,
        2448
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x1"
    },
    "750": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2442,
        2448
      ],
      "op": "SLOAD",
      "path": "31"
    },
    "751": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2394,
        2398
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x0"
    },
    "753": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2460,
        2464
      ],
      "op": "DUP1",
      "path": "31"
    },
    "754": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2460,
        2464
      ],
      "op": "SLOAD",
      "path": "31"
    },
    "755": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2435,
        2465
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x40"
    },
    "757": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2435,
        2465
      ],
      "op": "MLOAD",
      "path": "31"
    },
    "758": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "763": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "765": {
      "op": "SHL"
    },
    "766": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2435,
        2465
      ],
      "op": "DUP2",
      "path": "31"
    },
    "767": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2435,
        2465
      ],
      "op": "MSTORE",
      "path": "31"
    },
    "768": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "770": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "772": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "774": {
      "op": "SHL"
    },
    "775": {
      "op": "SUB"
    },
    "776": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2460,
        2464
      ],
      "op": "SWAP2",
      "path": "31"
    },
    "777": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2460,
        2464
      ],
      "op": "DUP3",
      "path": "31"
    },
    "778": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2460,
        2464
      ],
      "op": "AND",
      "path": "31"
    },
    "779": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2435,
        2465
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x4"
    },
    "781": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2435,
        2465
      ],
      "op": "DUP3",
      "path": "31"
    },
    "782": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2435,
        2465
      ],
      "op": "ADD",
      "path": "31"
    },
    "783": {
      "op": "MSTORE"
    },
    "784": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2394,
        2398
      ],
      "op": "SWAP2",
      "path": "31"
    },
    "785": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2394,
        2398
      ],
      "op": "SWAP3",
      "path": "31"
    },
    "786": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2394,
        2398
      ],
      "op": "DUP4",
      "path": "31"
    },
    "787": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2394,
        2398
      ],
      "op": "SWAP3",
      "path": "31"
    },
    "788": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2442,
        2448
      ],
      "op": "SWAP2",
      "path": "31"
    },
    "789": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2442,
        2448
      ],
      "op": "AND",
      "path": "31"
    },
    "790": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2442,
        2448
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "791": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2435,
        2459
      ],
      "op": "PUSH4",
      "path": "31",
      "value": "0x70A08231"
    },
    "796": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2435,
        2459
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "797": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "799": {
      "op": "ADD"
    },
    "800": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2435,
        2465
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x20"
    },
    "802": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2435,
        2465
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x40"
    },
    "804": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2435,
        2465
      ],
      "op": "MLOAD",
      "path": "31"
    },
    "805": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2435,
        2465
      ],
      "op": "DUP1",
      "path": "31"
    },
    "806": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2435,
        2465
      ],
      "op": "DUP4",
      "path": "31"
    },
    "807": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2435,
        2465
      ],
      "op": "SUB",
      "path": "31"
    },
    "808": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2435,
        2465
      ],
      "op": "DUP2",
      "path": "31"
    },
    "809": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2435,
        2465
      ],
      "op": "DUP7",
      "path": "31"
    },
    "810": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2435,
        2465
      ],
      "op": "GAS",
      "path": "31"
    },
    "811": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2435,
        2465
      ],
      "op": "STATICCALL",
      "path": "31"
    },
    "812": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2435,
        2465
      ],
      "op": "ISZERO",
      "path": "31"
    },
    "813": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2435,
        2465
      ],
      "op": "DUP1",
      "path": "31"
    },
    "814": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2435,
        2465
      ],
      "op": "ISZERO",
      "path": "31"
    },
    "815": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2435,
        2465
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x33C"
    },
    "818": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2435,
        2465
      ],
      "op": "JUMPI",
      "path": "31"
    },
    "819": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2435,
        2465
      ],
      "op": "RETURNDATASIZE",
      "path": "31"
    },
    "820": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2435,
        2465
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x0"
    },
    "822": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2435,
        2465
      ],
      "op": "DUP1",
      "path": "31"
    },
    "823": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2435,
        2465
      ],
      "op": "RETURNDATACOPY",
      "path": "31"
    },
    "824": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2435,
        2465
      ],
      "op": "RETURNDATASIZE",
      "path": "31"
    },
    "825": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2435,
        2465
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x0"
    },
    "827": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2435,
        2465
      ],
      "op": "REVERT",
      "path": "31"
    },
    "828": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2435,
        2465
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "829": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2435,
        2465
      ],
      "op": "POP",
      "path": "31"
    },
    "830": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2435,
        2465
      ],
      "op": "POP",
      "path": "31"
    },
    "831": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2435,
        2465
      ],
      "op": "POP",
      "path": "31"
    },
    "832": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2435,
        2465
      ],
      "op": "POP",
      "path": "31"
    },
    "833": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2435,
        2465
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x40"
    },
    "835": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2435,
        2465
      ],
      "op": "MLOAD",
      "path": "31"
    },
    "836": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2435,
        2465
      ],
      "op": "RETURNDATASIZE",
      "path": "31"
    },
    "837": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2435,
        2465
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x1F"
    },
    "839": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2435,
        2465
      ],
      "op": "NOT",
      "path": "31"
    },
    "840": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2435,
        2465
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x1F"
    },
    "842": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2435,
        2465
      ],
      "op": "DUP3",
      "path": "31"
    },
    "843": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2435,
        2465
      ],
      "op": "ADD",
      "path": "31"
    },
    "844": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2435,
        2465
      ],
      "op": "AND",
      "path": "31"
    },
    "845": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2435,
        2465
      ],
      "op": "DUP3",
      "path": "31"
    },
    "846": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2435,
        2465
      ],
      "op": "ADD",
      "path": "31"
    },
    "847": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2435,
        2465
      ],
      "op": "DUP1",
      "path": "31"
    },
    "848": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2435,
        2465
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x40"
    },
    "850": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2435,
        2465
      ],
      "op": "MSTORE",
      "path": "31"
    },
    "851": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2435,
        2465
      ],
      "op": "POP",
      "path": "31"
    },
    "852": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2435,
        2465
      ],
      "op": "DUP2",
      "path": "31"
    },
    "853": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2435,
        2465
      ],
      "op": "ADD",
      "path": "31"
    },
    "854": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2435,
        2465
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "855": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2435,
        2465
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x360"
    },
    "858": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2435,
        2465
      ],
      "op": "SWAP2",
      "path": "31"
    },
    "859": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2435,
        2465
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "860": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2435,
        2465
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0xAB2"
    },
    "863": {
      "fn": "Lendly.isSafeDebt",
      "jump": "i",
      "offset": [
        2435,
        2465
      ],
      "op": "JUMP",
      "path": "31"
    },
    "864": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2435,
        2465
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "865": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2498,
        2504
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x2"
    },
    "867": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2498,
        2504
      ],
      "op": "SLOAD",
      "path": "31"
    },
    "868": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2475,
        2488
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x0"
    },
    "870": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2516,
        2520
      ],
      "op": "DUP1",
      "path": "31"
    },
    "871": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2516,
        2520
      ],
      "op": "SLOAD",
      "path": "31"
    },
    "872": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2491,
        2521
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x40"
    },
    "874": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2491,
        2521
      ],
      "op": "MLOAD",
      "path": "31"
    },
    "875": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "880": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "882": {
      "op": "SHL"
    },
    "883": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2491,
        2521
      ],
      "op": "DUP2",
      "path": "31"
    },
    "884": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2491,
        2521
      ],
      "op": "MSTORE",
      "path": "31"
    },
    "885": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "887": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "889": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "891": {
      "op": "SHL"
    },
    "892": {
      "op": "SUB"
    },
    "893": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2516,
        2520
      ],
      "op": "SWAP2",
      "path": "31"
    },
    "894": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2516,
        2520
      ],
      "op": "DUP3",
      "path": "31"
    },
    "895": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2516,
        2520
      ],
      "op": "AND",
      "path": "31"
    },
    "896": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2491,
        2521
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x4"
    },
    "898": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2491,
        2521
      ],
      "op": "DUP3",
      "path": "31"
    },
    "899": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2491,
        2521
      ],
      "op": "ADD",
      "path": "31"
    },
    "900": {
      "op": "MSTORE"
    },
    "901": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2419,
        2465
      ],
      "op": "SWAP4",
      "path": "31"
    },
    "902": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2419,
        2465
      ],
      "op": "SWAP5",
      "path": "31"
    },
    "903": {
      "op": "POP"
    },
    "904": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2475,
        2488
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "905": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2475,
        2488
      ],
      "op": "SWAP3",
      "path": "31"
    },
    "906": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2498,
        2504
      ],
      "op": "SWAP2",
      "path": "31"
    },
    "907": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2498,
        2504
      ],
      "op": "AND",
      "path": "31"
    },
    "908": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2498,
        2504
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "909": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2491,
        2515
      ],
      "op": "PUSH4",
      "path": "31",
      "value": "0x70A08231"
    },
    "914": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2491,
        2515
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "915": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "917": {
      "op": "ADD"
    },
    "918": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2491,
        2521
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x20"
    },
    "920": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2491,
        2521
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x40"
    },
    "922": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2491,
        2521
      ],
      "op": "MLOAD",
      "path": "31"
    },
    "923": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2491,
        2521
      ],
      "op": "DUP1",
      "path": "31"
    },
    "924": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2491,
        2521
      ],
      "op": "DUP4",
      "path": "31"
    },
    "925": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2491,
        2521
      ],
      "op": "SUB",
      "path": "31"
    },
    "926": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2491,
        2521
      ],
      "op": "DUP2",
      "path": "31"
    },
    "927": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2491,
        2521
      ],
      "op": "DUP7",
      "path": "31"
    },
    "928": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2491,
        2521
      ],
      "op": "GAS",
      "path": "31"
    },
    "929": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2491,
        2521
      ],
      "op": "STATICCALL",
      "path": "31"
    },
    "930": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2491,
        2521
      ],
      "op": "ISZERO",
      "path": "31"
    },
    "931": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2491,
        2521
      ],
      "op": "DUP1",
      "path": "31"
    },
    "932": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2491,
        2521
      ],
      "op": "ISZERO",
      "path": "31"
    },
    "933": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2491,
        2521
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x3B2"
    },
    "936": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2491,
        2521
      ],
      "op": "JUMPI",
      "path": "31"
    },
    "937": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2491,
        2521
      ],
      "op": "RETURNDATASIZE",
      "path": "31"
    },
    "938": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2491,
        2521
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x0"
    },
    "940": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2491,
        2521
      ],
      "op": "DUP1",
      "path": "31"
    },
    "941": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2491,
        2521
      ],
      "op": "RETURNDATACOPY",
      "path": "31"
    },
    "942": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2491,
        2521
      ],
      "op": "RETURNDATASIZE",
      "path": "31"
    },
    "943": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2491,
        2521
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x0"
    },
    "945": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2491,
        2521
      ],
      "op": "REVERT",
      "path": "31"
    },
    "946": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2491,
        2521
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "947": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2491,
        2521
      ],
      "op": "POP",
      "path": "31"
    },
    "948": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2491,
        2521
      ],
      "op": "POP",
      "path": "31"
    },
    "949": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2491,
        2521
      ],
      "op": "POP",
      "path": "31"
    },
    "950": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2491,
        2521
      ],
      "op": "POP",
      "path": "31"
    },
    "951": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2491,
        2521
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x40"
    },
    "953": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2491,
        2521
      ],
      "op": "MLOAD",
      "path": "31"
    },
    "954": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2491,
        2521
      ],
      "op": "RETURNDATASIZE",
      "path": "31"
    },
    "955": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2491,
        2521
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x1F"
    },
    "957": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2491,
        2521
      ],
      "op": "NOT",
      "path": "31"
    },
    "958": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2491,
        2521
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x1F"
    },
    "960": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2491,
        2521
      ],
      "op": "DUP3",
      "path": "31"
    },
    "961": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2491,
        2521
      ],
      "op": "ADD",
      "path": "31"
    },
    "962": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2491,
        2521
      ],
      "op": "AND",
      "path": "31"
    },
    "963": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2491,
        2521
      ],
      "op": "DUP3",
      "path": "31"
    },
    "964": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2491,
        2521
      ],
      "op": "ADD",
      "path": "31"
    },
    "965": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2491,
        2521
      ],
      "op": "DUP1",
      "path": "31"
    },
    "966": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2491,
        2521
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x40"
    },
    "968": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2491,
        2521
      ],
      "op": "MSTORE",
      "path": "31"
    },
    "969": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2491,
        2521
      ],
      "op": "POP",
      "path": "31"
    },
    "970": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2491,
        2521
      ],
      "op": "DUP2",
      "path": "31"
    },
    "971": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2491,
        2521
      ],
      "op": "ADD",
      "path": "31"
    },
    "972": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2491,
        2521
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "973": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2491,
        2521
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x3D6"
    },
    "976": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2491,
        2521
      ],
      "op": "SWAP2",
      "path": "31"
    },
    "977": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2491,
        2521
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "978": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2491,
        2521
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0xAB2"
    },
    "981": {
      "fn": "Lendly.isSafeDebt",
      "jump": "i",
      "offset": [
        2491,
        2521
      ],
      "op": "JUMP",
      "path": "31"
    },
    "982": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2491,
        2521
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "983": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2591,
        2597
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x1"
    },
    "985": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2591,
        2597
      ],
      "op": "SLOAD",
      "path": "31"
    },
    "986": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2475,
        2521
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "987": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2475,
        2521
      ],
      "op": "SWAP2",
      "path": "31"
    },
    "988": {
      "op": "POP"
    },
    "989": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2531,
        2546
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x0"
    },
    "991": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2531,
        2546
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "992": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "994": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "996": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "998": {
      "op": "SHL"
    },
    "999": {
      "op": "SUB"
    },
    "1000": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2591,
        2597
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "1001": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2591,
        2597
      ],
      "op": "DUP2",
      "path": "31"
    },
    "1002": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2591,
        2597
      ],
      "op": "AND",
      "path": "31"
    },
    "1003": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2581,
        2597
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "1004": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2581,
        2597
      ],
      "op": "DUP8",
      "path": "31"
    },
    "1005": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2581,
        2597
      ],
      "op": "AND",
      "path": "31"
    },
    "1006": {
      "branch": 23,
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2581,
        2597
      ],
      "op": "SUB",
      "path": "31"
    },
    "1007": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2578,
        2774
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x439"
    },
    "1010": {
      "branch": 23,
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2578,
        2774
      ],
      "op": "JUMPI",
      "path": "31"
    },
    "1011": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2637,
        2643
      ],
      "op": "PUSH1",
      "path": "31",
      "statement": 3,
      "value": "0x2"
    },
    "1013": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2637,
        2643
      ],
      "op": "SLOAD",
      "path": "31"
    },
    "1014": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1016": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1018": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1020": {
      "op": "SHL"
    },
    "1021": {
      "op": "SUB"
    },
    "1022": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2637,
        2643
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "1023": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2637,
        2643
      ],
      "op": "DUP2",
      "path": "31"
    },
    "1024": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2637,
        2643
      ],
      "op": "AND",
      "path": "31"
    },
    "1025": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2627,
        2644
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x0"
    },
    "1027": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2627,
        2644
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "1028": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2627,
        2644
      ],
      "op": "DUP2",
      "path": "31"
    },
    "1029": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2627,
        2644
      ],
      "op": "MSTORE",
      "path": "31"
    },
    "1030": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2627,
        2636
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x3"
    },
    "1032": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2627,
        2644
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x20"
    },
    "1034": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2627,
        2644
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "1035": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2627,
        2644
      ],
      "op": "DUP2",
      "path": "31"
    },
    "1036": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2627,
        2644
      ],
      "op": "MSTORE",
      "path": "31"
    },
    "1037": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2627,
        2644
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x40"
    },
    "1039": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2627,
        2644
      ],
      "op": "DUP1",
      "path": "31"
    },
    "1040": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2627,
        2644
      ],
      "op": "DUP4",
      "path": "31"
    },
    "1041": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2627,
        2644
      ],
      "op": "KECCAK256",
      "path": "31"
    },
    "1042": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2627,
        2651
      ],
      "op": "SWAP4",
      "path": "31"
    },
    "1043": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2627,
        2651
      ],
      "op": "DUP10",
      "path": "31"
    },
    "1044": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2627,
        2651
      ],
      "op": "AND",
      "path": "31"
    },
    "1045": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2627,
        2651
      ],
      "op": "DUP4",
      "path": "31"
    },
    "1046": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2627,
        2651
      ],
      "op": "MSTORE",
      "path": "31"
    },
    "1047": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2627,
        2651
      ],
      "op": "SWAP3",
      "path": "31"
    },
    "1048": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2627,
        2651
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "1049": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2627,
        2651
      ],
      "op": "MSTORE",
      "path": "31"
    },
    "1050": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2627,
        2651
      ],
      "op": "KECCAK256",
      "path": "31"
    },
    "1051": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2627,
        2651
      ],
      "op": "SLOAD",
      "path": "31"
    },
    "1052": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2665,
        2673
      ],
      "op": "DUP3",
      "path": "31"
    },
    "1053": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2665,
        2673
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "1054": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2627,
        2662
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x428"
    },
    "1057": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2627,
        2662
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "1058": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2654,
        2662
      ],
      "op": "DUP6",
      "path": "31"
    },
    "1059": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2654,
        2662
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "1060": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2627,
        2662
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0xACB"
    },
    "1063": {
      "fn": "Lendly.isSafeDebt",
      "jump": "i",
      "offset": [
        2627,
        2662
      ],
      "op": "JUMP",
      "path": "31"
    },
    "1064": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2627,
        2662
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "1065": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2627,
        2673
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x432"
    },
    "1068": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2627,
        2673
      ],
      "op": "SWAP2",
      "path": "31"
    },
    "1069": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2627,
        2673
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "1070": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2627,
        2673
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0xAEA"
    },
    "1073": {
      "fn": "Lendly.isSafeDebt",
      "jump": "i",
      "offset": [
        2627,
        2673
      ],
      "op": "JUMP",
      "path": "31"
    },
    "1074": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2627,
        2673
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "1075": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2614,
        2673
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "1076": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2614,
        2673
      ],
      "op": "POP",
      "path": "31"
    },
    "1077": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2578,
        2774
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x47C"
    },
    "1080": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2578,
        2774
      ],
      "op": "JUMP",
      "path": "31"
    },
    "1081": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2578,
        2774
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "1082": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2727,
        2733
      ],
      "op": "PUSH1",
      "path": "31",
      "statement": 4,
      "value": "0x1"
    },
    "1084": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2727,
        2733
      ],
      "op": "SLOAD",
      "path": "31"
    },
    "1085": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1087": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1089": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1091": {
      "op": "SHL"
    },
    "1092": {
      "op": "SUB"
    },
    "1093": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2727,
        2733
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "1094": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2727,
        2733
      ],
      "op": "DUP2",
      "path": "31"
    },
    "1095": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2727,
        2733
      ],
      "op": "AND",
      "path": "31"
    },
    "1096": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2717,
        2734
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x0"
    },
    "1098": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2717,
        2734
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "1099": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2717,
        2734
      ],
      "op": "DUP2",
      "path": "31"
    },
    "1100": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2717,
        2734
      ],
      "op": "MSTORE",
      "path": "31"
    },
    "1101": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2717,
        2726
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x3"
    },
    "1103": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2717,
        2734
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x20"
    },
    "1105": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2717,
        2734
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "1106": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2717,
        2734
      ],
      "op": "DUP2",
      "path": "31"
    },
    "1107": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2717,
        2734
      ],
      "op": "MSTORE",
      "path": "31"
    },
    "1108": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2717,
        2734
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x40"
    },
    "1110": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2717,
        2734
      ],
      "op": "DUP1",
      "path": "31"
    },
    "1111": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2717,
        2734
      ],
      "op": "DUP4",
      "path": "31"
    },
    "1112": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2717,
        2734
      ],
      "op": "KECCAK256",
      "path": "31"
    },
    "1113": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2717,
        2741
      ],
      "op": "SWAP4",
      "path": "31"
    },
    "1114": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2717,
        2741
      ],
      "op": "DUP10",
      "path": "31"
    },
    "1115": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2717,
        2741
      ],
      "op": "AND",
      "path": "31"
    },
    "1116": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2717,
        2741
      ],
      "op": "DUP4",
      "path": "31"
    },
    "1117": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2717,
        2741
      ],
      "op": "MSTORE",
      "path": "31"
    },
    "1118": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2717,
        2741
      ],
      "op": "SWAP3",
      "path": "31"
    },
    "1119": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2717,
        2741
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "1120": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2717,
        2741
      ],
      "op": "MSTORE",
      "path": "31"
    },
    "1121": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2717,
        2741
      ],
      "op": "KECCAK256",
      "path": "31"
    },
    "1122": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2717,
        2741
      ],
      "op": "SLOAD",
      "path": "31"
    },
    "1123": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2755,
        2763
      ],
      "op": "DUP4",
      "path": "31"
    },
    "1124": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2755,
        2763
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "1125": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2717,
        2752
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x46F"
    },
    "1128": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2717,
        2752
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "1129": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2744,
        2752
      ],
      "op": "DUP5",
      "path": "31"
    },
    "1130": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2744,
        2752
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "1131": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2717,
        2752
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0xACB"
    },
    "1134": {
      "fn": "Lendly.isSafeDebt",
      "jump": "i",
      "offset": [
        2717,
        2752
      ],
      "op": "JUMP",
      "path": "31"
    },
    "1135": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2717,
        2752
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "1136": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2717,
        2763
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x479"
    },
    "1139": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2717,
        2763
      ],
      "op": "SWAP2",
      "path": "31"
    },
    "1140": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2717,
        2763
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "1141": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2717,
        2763
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0xAEA"
    },
    "1144": {
      "fn": "Lendly.isSafeDebt",
      "jump": "i",
      "offset": [
        2717,
        2763
      ],
      "op": "JUMP",
      "path": "31"
    },
    "1145": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2717,
        2763
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "1146": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2704,
        2763
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "1147": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2704,
        2763
      ],
      "op": "POP",
      "path": "31"
    },
    "1148": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2578,
        2774
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "1149": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2784,
        2798
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x0"
    },
    "1151": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2818,
        2819
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x3"
    },
    "1153": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2801,
        2815
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x48B"
    },
    "1156": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2801,
        2811
      ],
      "op": "DUP4",
      "path": "31"
    },
    "1157": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2814,
        2815
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x2"
    },
    "1159": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2801,
        2815
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0xACB"
    },
    "1162": {
      "fn": "Lendly.isSafeDebt",
      "jump": "i",
      "offset": [
        2801,
        2815
      ],
      "op": "JUMP",
      "path": "31"
    },
    "1163": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2801,
        2815
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "1164": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2801,
        2819
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x495"
    },
    "1167": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2801,
        2819
      ],
      "op": "SWAP2",
      "path": "31"
    },
    "1168": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2801,
        2819
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "1169": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2801,
        2819
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0xAEA"
    },
    "1172": {
      "fn": "Lendly.isSafeDebt",
      "jump": "i",
      "offset": [
        2801,
        2819
      ],
      "op": "JUMP",
      "path": "31"
    },
    "1173": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2801,
        2819
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "1174": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1176": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1178": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1180": {
      "op": "SHL"
    },
    "1181": {
      "op": "SUB"
    },
    "1182": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2876,
        2888
      ],
      "op": "DUP1",
      "path": "31",
      "statement": 5
    },
    "1183": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2876,
        2888
      ],
      "op": "DUP10",
      "path": "31"
    },
    "1184": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2876,
        2888
      ],
      "op": "AND",
      "path": "31"
    },
    "1185": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2876,
        2888
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x0"
    },
    "1187": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2876,
        2888
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "1188": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2876,
        2888
      ],
      "op": "DUP2",
      "path": "31"
    },
    "1189": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2876,
        2888
      ],
      "op": "MSTORE",
      "path": "31"
    },
    "1190": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2876,
        2880
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x4"
    },
    "1192": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2876,
        2888
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x20"
    },
    "1194": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2876,
        2888
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "1195": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2876,
        2888
      ],
      "op": "DUP2",
      "path": "31"
    },
    "1196": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2876,
        2888
      ],
      "op": "MSTORE",
      "path": "31"
    },
    "1197": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2876,
        2888
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x40"
    },
    "1199": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2876,
        2888
      ],
      "op": "DUP1",
      "path": "31"
    },
    "1200": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2876,
        2888
      ],
      "op": "DUP4",
      "path": "31"
    },
    "1201": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2876,
        2888
      ],
      "op": "KECCAK256",
      "path": "31"
    },
    "1202": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2876,
        2895
      ],
      "op": "SWAP4",
      "path": "31"
    },
    "1203": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2876,
        2895
      ],
      "op": "DUP12",
      "path": "31"
    },
    "1204": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2876,
        2895
      ],
      "op": "AND",
      "path": "31"
    },
    "1205": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2876,
        2895
      ],
      "op": "DUP4",
      "path": "31"
    },
    "1206": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2876,
        2895
      ],
      "op": "MSTORE",
      "path": "31"
    },
    "1207": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2876,
        2895
      ],
      "op": "SWAP3",
      "path": "31"
    },
    "1208": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2876,
        2895
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "1209": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2876,
        2895
      ],
      "op": "MSTORE",
      "path": "31"
    },
    "1210": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2876,
        2895
      ],
      "op": "KECCAK256",
      "path": "31"
    },
    "1211": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2876,
        2895
      ],
      "op": "SLOAD",
      "path": "31"
    },
    "1212": {
      "op": "GT"
    },
    "1213": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2863,
        2895
      ],
      "op": "ISZERO",
      "path": "31"
    },
    "1214": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2863,
        2895
      ],
      "op": "SWAP5",
      "path": "31"
    },
    "1215": {
      "op": "POP"
    },
    "1216": {
      "op": "POP"
    },
    "1217": {
      "op": "POP"
    },
    "1218": {
      "op": "POP"
    },
    "1219": {
      "op": "POP"
    },
    "1220": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2322,
        2902
      ],
      "op": "SWAP3",
      "path": "31"
    },
    "1221": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2322,
        2902
      ],
      "op": "SWAP2",
      "path": "31"
    },
    "1222": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2322,
        2902
      ],
      "op": "POP",
      "path": "31"
    },
    "1223": {
      "fn": "Lendly.isSafeDebt",
      "offset": [
        2322,
        2902
      ],
      "op": "POP",
      "path": "31"
    },
    "1224": {
      "fn": "Lendly.isSafeDebt",
      "jump": "o",
      "offset": [
        2322,
        2902
      ],
      "op": "JUMP",
      "path": "31"
    },
    "1225": {
      "fn": "Lendly.borrow",
      "offset": [
        1674,
        2003
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "1226": {
      "offset": [
        872,
        878
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x1"
    },
    "1228": {
      "fn": "Lendly.borrow",
      "offset": [
        872,
        878
      ],
      "op": "SLOAD",
      "path": "31"
    },
    "1229": {
      "fn": "Lendly.borrow",
      "offset": [
        1747,
        1753
      ],
      "op": "DUP3",
      "path": "31"
    },
    "1230": {
      "fn": "Lendly.borrow",
      "offset": [
        1747,
        1753
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "1231": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1233": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1235": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1237": {
      "op": "SHL"
    },
    "1238": {
      "op": "SUB"
    },
    "1239": {
      "offset": [
        862,
        878
      ],
      "op": "DUP1",
      "path": "31"
    },
    "1240": {
      "fn": "Lendly.borrow",
      "offset": [
        862,
        878
      ],
      "op": "DUP4",
      "path": "31"
    },
    "1241": {
      "fn": "Lendly.borrow",
      "offset": [
        862,
        878
      ],
      "op": "AND",
      "path": "31"
    },
    "1242": {
      "offset": [
        872,
        878
      ],
      "op": "SWAP2",
      "path": "31"
    },
    "1243": {
      "fn": "Lendly.borrow",
      "offset": [
        872,
        878
      ],
      "op": "AND",
      "path": "31"
    },
    "1244": {
      "offset": [
        862,
        878
      ],
      "op": "EQ",
      "path": "31"
    },
    "1245": {
      "fn": "Lendly.borrow",
      "offset": [
        862,
        878
      ],
      "op": "DUP1",
      "path": "31"
    },
    "1246": {
      "offset": [
        862,
        898
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x4F4"
    },
    "1249": {
      "offset": [
        862,
        898
      ],
      "op": "JUMPI",
      "path": "31"
    },
    "1250": {
      "op": "POP"
    },
    "1251": {
      "offset": [
        892,
        898
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x2"
    },
    "1253": {
      "fn": "Lendly.borrow",
      "offset": [
        892,
        898
      ],
      "op": "SLOAD",
      "path": "31"
    },
    "1254": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1256": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1258": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1260": {
      "op": "SHL"
    },
    "1261": {
      "op": "SUB"
    },
    "1262": {
      "offset": [
        882,
        898
      ],
      "op": "DUP3",
      "path": "31"
    },
    "1263": {
      "fn": "Lendly.borrow",
      "offset": [
        882,
        898
      ],
      "op": "DUP2",
      "path": "31"
    },
    "1264": {
      "fn": "Lendly.borrow",
      "offset": [
        882,
        898
      ],
      "op": "AND",
      "path": "31"
    },
    "1265": {
      "offset": [
        892,
        898
      ],
      "op": "SWAP2",
      "path": "31"
    },
    "1266": {
      "fn": "Lendly.borrow",
      "offset": [
        892,
        898
      ],
      "op": "AND",
      "path": "31"
    },
    "1267": {
      "offset": [
        882,
        898
      ],
      "op": "EQ",
      "path": "31"
    },
    "1268": {
      "offset": [
        862,
        898
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "1269": {
      "offset": [
        854,
        922
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x510"
    },
    "1272": {
      "offset": [
        854,
        922
      ],
      "op": "JUMPI",
      "path": "31"
    },
    "1273": {
      "fn": "Lendly.borrow",
      "offset": [
        854,
        922
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x40"
    },
    "1275": {
      "fn": "Lendly.borrow",
      "offset": [
        854,
        922
      ],
      "op": "MLOAD",
      "path": "31"
    },
    "1276": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1280": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1282": {
      "op": "SHL"
    },
    "1283": {
      "offset": [
        854,
        922
      ],
      "op": "DUP2",
      "path": "31"
    },
    "1284": {
      "fn": "Lendly.borrow",
      "offset": [
        854,
        922
      ],
      "op": "MSTORE",
      "path": "31"
    },
    "1285": {
      "fn": "Lendly.borrow",
      "offset": [
        854,
        922
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x4"
    },
    "1287": {
      "fn": "Lendly.borrow",
      "offset": [
        854,
        922
      ],
      "op": "ADD",
      "path": "31"
    },
    "1288": {
      "fn": "Lendly.borrow",
      "offset": [
        854,
        922
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x215"
    },
    "1291": {
      "fn": "Lendly.borrow",
      "offset": [
        854,
        922
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "1292": {
      "fn": "Lendly.borrow",
      "offset": [
        854,
        922
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0xA40"
    },
    "1295": {
      "fn": "Lendly.borrow",
      "jump": "i",
      "offset": [
        854,
        922
      ],
      "op": "JUMP",
      "path": "31"
    },
    "1296": {
      "fn": "Lendly.borrow",
      "offset": [
        854,
        922
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "1297": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1299": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1301": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1303": {
      "op": "SHL"
    },
    "1304": {
      "op": "SUB"
    },
    "1305": {
      "fn": "Lendly.borrow",
      "offset": [
        1829,
        1841
      ],
      "op": "DUP4",
      "path": "31",
      "statement": 6
    },
    "1306": {
      "fn": "Lendly.borrow",
      "offset": [
        1829,
        1841
      ],
      "op": "AND",
      "path": "31"
    },
    "1307": {
      "fn": "Lendly.borrow",
      "offset": [
        1829,
        1841
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x0"
    },
    "1309": {
      "fn": "Lendly.borrow",
      "offset": [
        1829,
        1841
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "1310": {
      "fn": "Lendly.borrow",
      "offset": [
        1829,
        1841
      ],
      "op": "DUP2",
      "path": "31"
    },
    "1311": {
      "fn": "Lendly.borrow",
      "offset": [
        1829,
        1841
      ],
      "op": "MSTORE",
      "path": "31"
    },
    "1312": {
      "fn": "Lendly.borrow",
      "offset": [
        1829,
        1833
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x4"
    },
    "1314": {
      "fn": "Lendly.borrow",
      "offset": [
        1829,
        1841
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x20"
    },
    "1316": {
      "fn": "Lendly.borrow",
      "offset": [
        1829,
        1841
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "1317": {
      "fn": "Lendly.borrow",
      "offset": [
        1829,
        1841
      ],
      "op": "DUP2",
      "path": "31"
    },
    "1318": {
      "fn": "Lendly.borrow",
      "offset": [
        1829,
        1841
      ],
      "op": "MSTORE",
      "path": "31"
    },
    "1319": {
      "fn": "Lendly.borrow",
      "offset": [
        1829,
        1841
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x40"
    },
    "1321": {
      "fn": "Lendly.borrow",
      "offset": [
        1829,
        1841
      ],
      "op": "DUP1",
      "path": "31"
    },
    "1322": {
      "fn": "Lendly.borrow",
      "offset": [
        1829,
        1841
      ],
      "op": "DUP4",
      "path": "31"
    },
    "1323": {
      "fn": "Lendly.borrow",
      "offset": [
        1829,
        1841
      ],
      "op": "KECCAK256",
      "path": "31"
    },
    "1324": {
      "fn": "Lendly.borrow",
      "offset": [
        1842,
        1852
      ],
      "op": "CALLER",
      "path": "31"
    },
    "1325": {
      "fn": "Lendly.borrow",
      "offset": [
        1829,
        1853
      ],
      "op": "DUP5",
      "path": "31"
    },
    "1326": {
      "fn": "Lendly.borrow",
      "offset": [
        1829,
        1853
      ],
      "op": "MSTORE",
      "path": "31"
    },
    "1327": {
      "fn": "Lendly.borrow",
      "offset": [
        1829,
        1853
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "1328": {
      "fn": "Lendly.borrow",
      "offset": [
        1829,
        1853
      ],
      "op": "SWAP2",
      "path": "31"
    },
    "1329": {
      "fn": "Lendly.borrow",
      "offset": [
        1829,
        1853
      ],
      "op": "MSTORE",
      "path": "31"
    },
    "1330": {
      "fn": "Lendly.borrow",
      "offset": [
        1829,
        1853
      ],
      "op": "DUP2",
      "path": "31"
    },
    "1331": {
      "fn": "Lendly.borrow",
      "offset": [
        1829,
        1853
      ],
      "op": "KECCAK256",
      "path": "31"
    },
    "1332": {
      "fn": "Lendly.borrow",
      "offset": [
        1829,
        1864
      ],
      "op": "DUP1",
      "path": "31"
    },
    "1333": {
      "fn": "Lendly.borrow",
      "offset": [
        1829,
        1864
      ],
      "op": "SLOAD",
      "path": "31"
    },
    "1334": {
      "fn": "Lendly.borrow",
      "offset": [
        1857,
        1864
      ],
      "op": "DUP5",
      "path": "31"
    },
    "1335": {
      "fn": "Lendly.borrow",
      "offset": [
        1857,
        1864
      ],
      "op": "SWAP3",
      "path": "31"
    },
    "1336": {
      "fn": "Lendly.borrow",
      "offset": [
        1829,
        1841
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "1337": {
      "fn": "Lendly.borrow",
      "offset": [
        1829,
        1864
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x543"
    },
    "1340": {
      "fn": "Lendly.borrow",
      "offset": [
        1829,
        1864
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "1341": {
      "fn": "Lendly.borrow",
      "offset": [
        1857,
        1864
      ],
      "op": "DUP5",
      "path": "31"
    },
    "1342": {
      "fn": "Lendly.borrow",
      "offset": [
        1857,
        1864
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "1343": {
      "fn": "Lendly.borrow",
      "offset": [
        1829,
        1864
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0xA9A"
    },
    "1346": {
      "fn": "Lendly.borrow",
      "jump": "i",
      "offset": [
        1829,
        1864
      ],
      "op": "JUMP",
      "path": "31"
    },
    "1347": {
      "fn": "Lendly.borrow",
      "offset": [
        1829,
        1864
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "1348": {
      "fn": "Lendly.borrow",
      "offset": [
        1829,
        1864
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "1349": {
      "fn": "Lendly.borrow",
      "offset": [
        1829,
        1864
      ],
      "op": "SWAP2",
      "path": "31"
    },
    "1350": {
      "fn": "Lendly.borrow",
      "offset": [
        1829,
        1864
      ],
      "op": "SSTORE",
      "path": "31"
    },
    "1351": {
      "op": "POP"
    },
    "1352": {
      "fn": "Lendly.borrow",
      "offset": [
        1882,
        1912
      ],
      "op": "PUSH2",
      "path": "31",
      "statement": 7,
      "value": "0x553"
    },
    "1355": {
      "fn": "Lendly.borrow",
      "offset": [
        1882,
        1912
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "1356": {
      "op": "POP"
    },
    "1357": {
      "fn": "Lendly.borrow",
      "offset": [
        1893,
        1899
      ],
      "op": "DUP4",
      "path": "31"
    },
    "1358": {
      "fn": "Lendly.borrow",
      "offset": [
        1901,
        1911
      ],
      "op": "CALLER",
      "path": "31"
    },
    "1359": {
      "fn": "Lendly.borrow",
      "offset": [
        1882,
        1892
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x2EB"
    },
    "1362": {
      "fn": "Lendly.borrow",
      "jump": "i",
      "offset": [
        1882,
        1912
      ],
      "op": "JUMP",
      "path": "31"
    },
    "1363": {
      "branch": 24,
      "fn": "Lendly.borrow",
      "offset": [
        1882,
        1912
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "1364": {
      "fn": "Lendly.borrow",
      "offset": [
        1874,
        1938
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x597"
    },
    "1367": {
      "branch": 24,
      "fn": "Lendly.borrow",
      "offset": [
        1874,
        1938
      ],
      "op": "JUMPI",
      "path": "31"
    },
    "1368": {
      "fn": "Lendly.borrow",
      "offset": [
        1874,
        1938
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x40"
    },
    "1370": {
      "fn": "Lendly.borrow",
      "offset": [
        1874,
        1938
      ],
      "op": "MLOAD",
      "path": "31"
    },
    "1371": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1375": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1377": {
      "op": "SHL"
    },
    "1378": {
      "fn": "Lendly.borrow",
      "offset": [
        1874,
        1938
      ],
      "op": "DUP2",
      "path": "31"
    },
    "1379": {
      "fn": "Lendly.borrow",
      "offset": [
        1874,
        1938
      ],
      "op": "MSTORE",
      "path": "31"
    },
    "1380": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1382": {
      "fn": "Lendly.borrow",
      "offset": [
        1874,
        1938
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x4"
    },
    "1384": {
      "fn": "Lendly.borrow",
      "offset": [
        1874,
        1938
      ],
      "op": "DUP3",
      "path": "31"
    },
    "1385": {
      "fn": "Lendly.borrow",
      "offset": [
        1874,
        1938
      ],
      "op": "ADD",
      "path": "31"
    },
    "1386": {
      "op": "MSTORE"
    },
    "1387": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "1389": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1391": {
      "op": "DUP3"
    },
    "1392": {
      "op": "ADD"
    },
    "1393": {
      "op": "MSTORE"
    },
    "1394": {
      "op": "PUSH21",
      "value": "0x139BDD08195B9BDD59DA0818DBDB1B185D195C985B"
    },
    "1416": {
      "op": "PUSH1",
      "value": "0x5A"
    },
    "1418": {
      "op": "SHL"
    },
    "1419": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1421": {
      "op": "DUP3"
    },
    "1422": {
      "op": "ADD"
    },
    "1423": {
      "op": "MSTORE"
    },
    "1424": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1426": {
      "op": "ADD"
    },
    "1427": {
      "fn": "Lendly.borrow",
      "offset": [
        1874,
        1938
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x215"
    },
    "1430": {
      "op": "JUMP"
    },
    "1431": {
      "fn": "Lendly.borrow",
      "offset": [
        1874,
        1938
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "1432": {
      "fn": "Lendly.borrow",
      "offset": [
        1948,
        1996
      ],
      "op": "PUSH2",
      "path": "31",
      "statement": 8,
      "value": "0x26C"
    },
    "1435": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1437": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1439": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1441": {
      "op": "SHL"
    },
    "1442": {
      "op": "SUB"
    },
    "1443": {
      "fn": "Lendly.borrow",
      "offset": [
        1948,
        1975
      ],
      "op": "DUP5",
      "path": "31"
    },
    "1444": {
      "fn": "Lendly.borrow",
      "offset": [
        1948,
        1975
      ],
      "op": "AND",
      "path": "31"
    },
    "1445": {
      "fn": "Lendly.borrow",
      "offset": [
        1976,
        1986
      ],
      "op": "CALLER",
      "path": "31"
    },
    "1446": {
      "fn": "Lendly.borrow",
      "offset": [
        1988,
        1995
      ],
      "op": "DUP5",
      "path": "31"
    },
    "1447": {
      "fn": "Lendly.borrow",
      "offset": [
        1948,
        1975
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x735"
    },
    "1450": {
      "fn": "Lendly.borrow",
      "jump": "i",
      "offset": [
        1948,
        1996
      ],
      "op": "JUMP",
      "path": "31"
    },
    "1451": {
      "fn": "Lendly.withdraw",
      "offset": [
        1327,
        1668
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "1452": {
      "offset": [
        872,
        878
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x1"
    },
    "1454": {
      "fn": "Lendly.withdraw",
      "offset": [
        872,
        878
      ],
      "op": "SLOAD",
      "path": "31"
    },
    "1455": {
      "fn": "Lendly.withdraw",
      "offset": [
        1402,
        1408
      ],
      "op": "DUP3",
      "path": "31"
    },
    "1456": {
      "fn": "Lendly.withdraw",
      "offset": [
        1402,
        1408
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "1457": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1459": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1461": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1463": {
      "op": "SHL"
    },
    "1464": {
      "op": "SUB"
    },
    "1465": {
      "offset": [
        862,
        878
      ],
      "op": "DUP1",
      "path": "31"
    },
    "1466": {
      "fn": "Lendly.withdraw",
      "offset": [
        862,
        878
      ],
      "op": "DUP4",
      "path": "31"
    },
    "1467": {
      "fn": "Lendly.withdraw",
      "offset": [
        862,
        878
      ],
      "op": "AND",
      "path": "31"
    },
    "1468": {
      "offset": [
        872,
        878
      ],
      "op": "SWAP2",
      "path": "31"
    },
    "1469": {
      "fn": "Lendly.withdraw",
      "offset": [
        872,
        878
      ],
      "op": "AND",
      "path": "31"
    },
    "1470": {
      "offset": [
        862,
        878
      ],
      "op": "EQ",
      "path": "31"
    },
    "1471": {
      "branch": 25,
      "fn": "Lendly.withdraw",
      "offset": [
        862,
        878
      ],
      "op": "DUP1",
      "path": "31"
    },
    "1472": {
      "offset": [
        862,
        898
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x5D6"
    },
    "1475": {
      "branch": 25,
      "offset": [
        862,
        898
      ],
      "op": "JUMPI",
      "path": "31"
    },
    "1476": {
      "op": "POP"
    },
    "1477": {
      "offset": [
        892,
        898
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x2"
    },
    "1479": {
      "fn": "Lendly.withdraw",
      "offset": [
        892,
        898
      ],
      "op": "SLOAD",
      "path": "31"
    },
    "1480": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1482": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1484": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1486": {
      "op": "SHL"
    },
    "1487": {
      "op": "SUB"
    },
    "1488": {
      "offset": [
        882,
        898
      ],
      "op": "DUP3",
      "path": "31"
    },
    "1489": {
      "fn": "Lendly.withdraw",
      "offset": [
        882,
        898
      ],
      "op": "DUP2",
      "path": "31"
    },
    "1490": {
      "fn": "Lendly.withdraw",
      "offset": [
        882,
        898
      ],
      "op": "AND",
      "path": "31"
    },
    "1491": {
      "offset": [
        892,
        898
      ],
      "op": "SWAP2",
      "path": "31"
    },
    "1492": {
      "fn": "Lendly.withdraw",
      "offset": [
        892,
        898
      ],
      "op": "AND",
      "path": "31"
    },
    "1493": {
      "offset": [
        882,
        898
      ],
      "op": "EQ",
      "path": "31"
    },
    "1494": {
      "offset": [
        862,
        898
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "1495": {
      "offset": [
        854,
        922
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x5F2"
    },
    "1498": {
      "offset": [
        854,
        922
      ],
      "op": "JUMPI",
      "path": "31"
    },
    "1499": {
      "fn": "Lendly.withdraw",
      "offset": [
        854,
        922
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x40"
    },
    "1501": {
      "fn": "Lendly.withdraw",
      "offset": [
        854,
        922
      ],
      "op": "MLOAD",
      "path": "31"
    },
    "1502": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1506": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1508": {
      "op": "SHL"
    },
    "1509": {
      "offset": [
        854,
        922
      ],
      "op": "DUP2",
      "path": "31"
    },
    "1510": {
      "fn": "Lendly.withdraw",
      "offset": [
        854,
        922
      ],
      "op": "MSTORE",
      "path": "31"
    },
    "1511": {
      "fn": "Lendly.withdraw",
      "offset": [
        854,
        922
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x4"
    },
    "1513": {
      "fn": "Lendly.withdraw",
      "offset": [
        854,
        922
      ],
      "op": "ADD",
      "path": "31"
    },
    "1514": {
      "fn": "Lendly.withdraw",
      "offset": [
        854,
        922
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x215"
    },
    "1517": {
      "fn": "Lendly.withdraw",
      "offset": [
        854,
        922
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "1518": {
      "fn": "Lendly.withdraw",
      "offset": [
        854,
        922
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0xA40"
    },
    "1521": {
      "fn": "Lendly.withdraw",
      "jump": "i",
      "offset": [
        854,
        922
      ],
      "op": "JUMP",
      "path": "31"
    },
    "1522": {
      "fn": "Lendly.withdraw",
      "offset": [
        854,
        922
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "1523": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1525": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1527": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1529": {
      "op": "SHL"
    },
    "1530": {
      "op": "SUB"
    },
    "1531": {
      "fn": "Lendly.withdraw",
      "offset": [
        1420,
        1437
      ],
      "op": "DUP4",
      "path": "31",
      "statement": 9
    },
    "1532": {
      "fn": "Lendly.withdraw",
      "offset": [
        1420,
        1437
      ],
      "op": "AND",
      "path": "31"
    },
    "1533": {
      "fn": "Lendly.withdraw",
      "offset": [
        1420,
        1437
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x0"
    },
    "1535": {
      "fn": "Lendly.withdraw",
      "offset": [
        1420,
        1437
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "1536": {
      "fn": "Lendly.withdraw",
      "offset": [
        1420,
        1437
      ],
      "op": "DUP2",
      "path": "31"
    },
    "1537": {
      "fn": "Lendly.withdraw",
      "offset": [
        1420,
        1437
      ],
      "op": "MSTORE",
      "path": "31"
    },
    "1538": {
      "fn": "Lendly.withdraw",
      "offset": [
        1420,
        1429
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x3"
    },
    "1540": {
      "fn": "Lendly.withdraw",
      "offset": [
        1420,
        1437
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x20"
    },
    "1542": {
      "fn": "Lendly.withdraw",
      "offset": [
        1420,
        1437
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "1543": {
      "fn": "Lendly.withdraw",
      "offset": [
        1420,
        1437
      ],
      "op": "DUP2",
      "path": "31"
    },
    "1544": {
      "fn": "Lendly.withdraw",
      "offset": [
        1420,
        1437
      ],
      "op": "MSTORE",
      "path": "31"
    },
    "1545": {
      "fn": "Lendly.withdraw",
      "offset": [
        1420,
        1437
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x40"
    },
    "1547": {
      "fn": "Lendly.withdraw",
      "offset": [
        1420,
        1437
      ],
      "op": "DUP1",
      "path": "31"
    },
    "1548": {
      "fn": "Lendly.withdraw",
      "offset": [
        1420,
        1437
      ],
      "op": "DUP4",
      "path": "31"
    },
    "1549": {
      "fn": "Lendly.withdraw",
      "offset": [
        1420,
        1437
      ],
      "op": "KECCAK256",
      "path": "31"
    },
    "1550": {
      "fn": "Lendly.withdraw",
      "offset": [
        1438,
        1448
      ],
      "op": "CALLER",
      "path": "31"
    },
    "1551": {
      "fn": "Lendly.withdraw",
      "offset": [
        1420,
        1449
      ],
      "op": "DUP5",
      "path": "31"
    },
    "1552": {
      "fn": "Lendly.withdraw",
      "offset": [
        1420,
        1449
      ],
      "op": "MSTORE",
      "path": "31"
    },
    "1553": {
      "fn": "Lendly.withdraw",
      "offset": [
        1420,
        1449
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "1554": {
      "fn": "Lendly.withdraw",
      "offset": [
        1420,
        1449
      ],
      "op": "SWAP2",
      "path": "31"
    },
    "1555": {
      "fn": "Lendly.withdraw",
      "offset": [
        1420,
        1449
      ],
      "op": "MSTORE",
      "path": "31"
    },
    "1556": {
      "fn": "Lendly.withdraw",
      "offset": [
        1420,
        1449
      ],
      "op": "DUP2",
      "path": "31"
    },
    "1557": {
      "fn": "Lendly.withdraw",
      "offset": [
        1420,
        1449
      ],
      "op": "KECCAK256",
      "path": "31"
    },
    "1558": {
      "fn": "Lendly.withdraw",
      "offset": [
        1420,
        1460
      ],
      "op": "DUP1",
      "path": "31"
    },
    "1559": {
      "fn": "Lendly.withdraw",
      "offset": [
        1420,
        1460
      ],
      "op": "SLOAD",
      "path": "31"
    },
    "1560": {
      "fn": "Lendly.withdraw",
      "offset": [
        1453,
        1460
      ],
      "op": "DUP5",
      "path": "31"
    },
    "1561": {
      "fn": "Lendly.withdraw",
      "offset": [
        1453,
        1460
      ],
      "op": "SWAP3",
      "path": "31"
    },
    "1562": {
      "fn": "Lendly.withdraw",
      "offset": [
        1420,
        1437
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "1563": {
      "fn": "Lendly.withdraw",
      "offset": [
        1420,
        1460
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x625"
    },
    "1566": {
      "fn": "Lendly.withdraw",
      "offset": [
        1420,
        1460
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "1567": {
      "fn": "Lendly.withdraw",
      "offset": [
        1453,
        1460
      ],
      "op": "DUP5",
      "path": "31"
    },
    "1568": {
      "fn": "Lendly.withdraw",
      "offset": [
        1453,
        1460
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "1569": {
      "fn": "Lendly.withdraw",
      "offset": [
        1420,
        1460
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0xA83"
    },
    "1572": {
      "fn": "Lendly.withdraw",
      "jump": "i",
      "offset": [
        1420,
        1460
      ],
      "op": "JUMP",
      "path": "31"
    },
    "1573": {
      "fn": "Lendly.withdraw",
      "offset": [
        1420,
        1460
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "1574": {
      "fn": "Lendly.withdraw",
      "offset": [
        1420,
        1460
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "1575": {
      "fn": "Lendly.withdraw",
      "offset": [
        1420,
        1460
      ],
      "op": "SWAP2",
      "path": "31"
    },
    "1576": {
      "fn": "Lendly.withdraw",
      "offset": [
        1420,
        1460
      ],
      "op": "SSTORE",
      "path": "31"
    },
    "1577": {
      "op": "POP"
    },
    "1578": {
      "op": "POP"
    },
    "1579": {
      "fn": "Lendly.withdraw",
      "offset": [
        1501,
        1507
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x1"
    },
    "1581": {
      "fn": "Lendly.withdraw",
      "offset": [
        1501,
        1507
      ],
      "op": "SLOAD",
      "path": "31"
    },
    "1582": {
      "fn": "Lendly.withdraw",
      "offset": [
        1470,
        1488
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x0"
    },
    "1584": {
      "fn": "Lendly.withdraw",
      "offset": [
        1470,
        1488
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "1585": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1587": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1589": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1591": {
      "op": "SHL"
    },
    "1592": {
      "op": "SUB"
    },
    "1593": {
      "fn": "Lendly.withdraw",
      "offset": [
        1491,
        1507
      ],
      "op": "DUP6",
      "path": "31"
    },
    "1594": {
      "fn": "Lendly.withdraw",
      "offset": [
        1491,
        1507
      ],
      "op": "DUP2",
      "path": "31"
    },
    "1595": {
      "fn": "Lendly.withdraw",
      "offset": [
        1491,
        1507
      ],
      "op": "AND",
      "path": "31"
    },
    "1596": {
      "fn": "Lendly.withdraw",
      "offset": [
        1501,
        1507
      ],
      "op": "SWAP2",
      "path": "31"
    },
    "1597": {
      "fn": "Lendly.withdraw",
      "offset": [
        1501,
        1507
      ],
      "op": "AND",
      "path": "31"
    },
    "1598": {
      "branch": 26,
      "fn": "Lendly.withdraw",
      "offset": [
        1491,
        1507
      ],
      "op": "EQ",
      "path": "31"
    },
    "1599": {
      "fn": "Lendly.withdraw",
      "offset": [
        1491,
        1525
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x653"
    },
    "1602": {
      "branch": 26,
      "fn": "Lendly.withdraw",
      "offset": [
        1491,
        1525
      ],
      "op": "JUMPI",
      "path": "31"
    },
    "1603": {
      "fn": "Lendly.withdraw",
      "offset": [
        1519,
        1525
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x1"
    },
    "1605": {
      "fn": "Lendly.withdraw",
      "offset": [
        1519,
        1525
      ],
      "op": "SLOAD",
      "path": "31"
    },
    "1606": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1608": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1610": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1612": {
      "op": "SHL"
    },
    "1613": {
      "op": "SUB"
    },
    "1614": {
      "fn": "Lendly.withdraw",
      "offset": [
        1519,
        1525
      ],
      "op": "AND",
      "path": "31"
    },
    "1615": {
      "fn": "Lendly.withdraw",
      "offset": [
        1491,
        1525
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x660"
    },
    "1618": {
      "fn": "Lendly.withdraw",
      "offset": [
        1491,
        1525
      ],
      "op": "JUMP",
      "path": "31"
    },
    "1619": {
      "fn": "Lendly.withdraw",
      "offset": [
        1491,
        1525
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "1620": {
      "fn": "Lendly.withdraw",
      "offset": [
        1510,
        1516
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x2"
    },
    "1622": {
      "fn": "Lendly.withdraw",
      "offset": [
        1510,
        1516
      ],
      "op": "SLOAD",
      "path": "31"
    },
    "1623": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1625": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1627": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1629": {
      "op": "SHL"
    },
    "1630": {
      "op": "SUB"
    },
    "1631": {
      "fn": "Lendly.withdraw",
      "offset": [
        1510,
        1516
      ],
      "op": "AND",
      "path": "31"
    },
    "1632": {
      "fn": "Lendly.withdraw",
      "offset": [
        1491,
        1525
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "1633": {
      "fn": "Lendly.withdraw",
      "offset": [
        1470,
        1525
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "1634": {
      "fn": "Lendly.withdraw",
      "offset": [
        1470,
        1525
      ],
      "op": "POP",
      "path": "31"
    },
    "1635": {
      "fn": "Lendly.withdraw",
      "offset": [
        1543,
        1577
      ],
      "op": "PUSH2",
      "path": "31",
      "statement": 10,
      "value": "0x66C"
    },
    "1638": {
      "fn": "Lendly.withdraw",
      "offset": [
        1554,
        1564
      ],
      "op": "DUP2",
      "path": "31"
    },
    "1639": {
      "fn": "Lendly.withdraw",
      "offset": [
        1566,
        1576
      ],
      "op": "CALLER",
      "path": "31"
    },
    "1640": {
      "fn": "Lendly.withdraw",
      "offset": [
        1543,
        1553
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x2EB"
    },
    "1643": {
      "fn": "Lendly.withdraw",
      "jump": "i",
      "offset": [
        1543,
        1577
      ],
      "op": "JUMP",
      "path": "31"
    },
    "1644": {
      "branch": 27,
      "fn": "Lendly.withdraw",
      "offset": [
        1543,
        1577
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "1645": {
      "fn": "Lendly.withdraw",
      "offset": [
        1535,
        1603
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x6B0"
    },
    "1648": {
      "branch": 27,
      "fn": "Lendly.withdraw",
      "offset": [
        1535,
        1603
      ],
      "op": "JUMPI",
      "path": "31"
    },
    "1649": {
      "fn": "Lendly.withdraw",
      "offset": [
        1535,
        1603
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x40"
    },
    "1651": {
      "fn": "Lendly.withdraw",
      "offset": [
        1535,
        1603
      ],
      "op": "MLOAD",
      "path": "31"
    },
    "1652": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1656": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1658": {
      "op": "SHL"
    },
    "1659": {
      "fn": "Lendly.withdraw",
      "offset": [
        1535,
        1603
      ],
      "op": "DUP2",
      "path": "31"
    },
    "1660": {
      "fn": "Lendly.withdraw",
      "offset": [
        1535,
        1603
      ],
      "op": "MSTORE",
      "path": "31"
    },
    "1661": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1663": {
      "fn": "Lendly.withdraw",
      "offset": [
        1535,
        1603
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x4"
    },
    "1665": {
      "fn": "Lendly.withdraw",
      "offset": [
        1535,
        1603
      ],
      "op": "DUP3",
      "path": "31"
    },
    "1666": {
      "fn": "Lendly.withdraw",
      "offset": [
        1535,
        1603
      ],
      "op": "ADD",
      "path": "31"
    },
    "1667": {
      "op": "MSTORE"
    },
    "1668": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "1670": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1672": {
      "op": "DUP3"
    },
    "1673": {
      "op": "ADD"
    },
    "1674": {
      "op": "MSTORE"
    },
    "1675": {
      "op": "PUSH21",
      "value": "0x139BDD08195B9BDD59DA0818DBDB1B185D195C985B"
    },
    "1697": {
      "op": "PUSH1",
      "value": "0x5A"
    },
    "1699": {
      "op": "SHL"
    },
    "1700": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1702": {
      "op": "DUP3"
    },
    "1703": {
      "op": "ADD"
    },
    "1704": {
      "op": "MSTORE"
    },
    "1705": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1707": {
      "op": "ADD"
    },
    "1708": {
      "fn": "Lendly.withdraw",
      "offset": [
        1535,
        1603
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x215"
    },
    "1711": {
      "op": "JUMP"
    },
    "1712": {
      "fn": "Lendly.withdraw",
      "offset": [
        1535,
        1603
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "1713": {
      "fn": "Lendly.withdraw",
      "offset": [
        1613,
        1661
      ],
      "op": "PUSH2",
      "path": "31",
      "statement": 11,
      "value": "0x6C4"
    },
    "1716": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1718": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1720": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1722": {
      "op": "SHL"
    },
    "1723": {
      "op": "SUB"
    },
    "1724": {
      "fn": "Lendly.withdraw",
      "offset": [
        1613,
        1640
      ],
      "op": "DUP6",
      "path": "31"
    },
    "1725": {
      "fn": "Lendly.withdraw",
      "offset": [
        1613,
        1640
      ],
      "op": "AND",
      "path": "31"
    },
    "1726": {
      "fn": "Lendly.withdraw",
      "offset": [
        1641,
        1651
      ],
      "op": "CALLER",
      "path": "31"
    },
    "1727": {
      "fn": "Lendly.withdraw",
      "offset": [
        1653,
        1660
      ],
      "op": "DUP6",
      "path": "31"
    },
    "1728": {
      "fn": "Lendly.withdraw",
      "offset": [
        1613,
        1640
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x735"
    },
    "1731": {
      "fn": "Lendly.withdraw",
      "jump": "i",
      "offset": [
        1613,
        1661
      ],
      "op": "JUMP",
      "path": "31"
    },
    "1732": {
      "fn": "Lendly.withdraw",
      "offset": [
        1613,
        1661
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "1733": {
      "fn": "Lendly.withdraw",
      "offset": [
        1410,
        1668
      ],
      "op": "POP",
      "path": "31"
    },
    "1734": {
      "fn": "Lendly.withdraw",
      "offset": [
        1327,
        1668
      ],
      "op": "POP",
      "path": "31"
    },
    "1735": {
      "fn": "Lendly.withdraw",
      "offset": [
        1327,
        1668
      ],
      "op": "POP",
      "path": "31"
    },
    "1736": {
      "fn": "Lendly.withdraw",
      "offset": [
        1327,
        1668
      ],
      "op": "POP",
      "path": "31"
    },
    "1737": {
      "fn": "Lendly.withdraw",
      "jump": "o",
      "offset": [
        1327,
        1668
      ],
      "op": "JUMP",
      "path": "31"
    },
    "1738": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        974,
        1215
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1739": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 12,
      "value": "0x40"
    },
    "1741": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1742": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1744": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1746": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1748": {
      "op": "SHL"
    },
    "1749": {
      "op": "SUB"
    },
    "1750": {
      "op": "DUP1"
    },
    "1751": {
      "op": "DUP6"
    },
    "1752": {
      "op": "AND"
    },
    "1753": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x24"
    },
    "1755": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "DUP4",
      "path": "8"
    },
    "1756": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "ADD",
      "path": "8"
    },
    "1757": {
      "op": "MSTORE"
    },
    "1758": {
      "op": "DUP4"
    },
    "1759": {
      "op": "AND"
    },
    "1760": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1762": {
      "op": "DUP3"
    },
    "1763": {
      "op": "ADD"
    },
    "1764": {
      "op": "MSTORE"
    },
    "1765": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1767": {
      "op": "DUP2"
    },
    "1768": {
      "op": "ADD"
    },
    "1769": {
      "op": "DUP3"
    },
    "1770": {
      "op": "SWAP1"
    },
    "1771": {
      "op": "MSTORE"
    },
    "1772": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1112,
        1208
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x6C4"
    },
    "1775": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1112,
        1208
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1776": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1132,
        1137
      ],
      "op": "DUP6",
      "path": "8"
    },
    "1777": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1132,
        1137
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1778": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "1783": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1785": {
      "op": "SHL"
    },
    "1786": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1162,
        1189
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1787": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1789": {
      "op": "ADD"
    },
    "1790": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1791": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1793": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1794": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1795": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1797": {
      "op": "NOT"
    },
    "1798": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1799": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "DUP5",
      "path": "8"
    },
    "1800": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "SUB",
      "path": "8"
    },
    "1801": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "ADD",
      "path": "8"
    },
    "1802": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1803": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1804": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1805": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1806": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1807": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "1809": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1810": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "ADD",
      "path": "8"
    },
    "1811": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1812": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1813": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1815": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1817": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1819": {
      "op": "SHL"
    },
    "1820": {
      "op": "SUB"
    },
    "1821": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "AND",
      "path": "8"
    },
    "1822": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1824": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1826": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1828": {
      "op": "SHL"
    },
    "1829": {
      "op": "SUB"
    },
    "1830": {
      "op": "NOT"
    },
    "1831": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1832": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "1833": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "AND",
      "path": "8"
    },
    "1834": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "1835": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1836": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "1837": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "OR",
      "path": "8"
    },
    "1838": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1839": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1840": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1841": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1112,
        1131
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x765"
    },
    "1844": {
      "fn": "SafeERC20.safeTransferFrom",
      "jump": "i",
      "offset": [
        1112,
        1208
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1845": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        763,
        968
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1846": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        902,
        960
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 13,
      "value": "0x40"
    },
    "1848": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        902,
        960
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1849": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1851": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1853": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1855": {
      "op": "SHL"
    },
    "1856": {
      "op": "SUB"
    },
    "1857": {
      "op": "DUP4"
    },
    "1858": {
      "op": "AND"
    },
    "1859": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        902,
        960
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x24"
    },
    "1861": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        902,
        960
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1862": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        902,
        960
      ],
      "op": "ADD",
      "path": "8"
    },
    "1863": {
      "op": "MSTORE"
    },
    "1864": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1866": {
      "op": "DUP2"
    },
    "1867": {
      "op": "ADD"
    },
    "1868": {
      "op": "DUP3"
    },
    "1869": {
      "op": "SWAP1"
    },
    "1870": {
      "op": "MSTORE"
    },
    "1871": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        875,
        961
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x26C"
    },
    "1874": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        875,
        961
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1875": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        895,
        900
      ],
      "op": "DUP5",
      "path": "8"
    },
    "1876": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        895,
        900
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1877": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "1882": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1884": {
      "op": "SHL"
    },
    "1885": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        925,
        948
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1886": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1888": {
      "op": "ADD"
    },
    "1889": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        902,
        960
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x6FE"
    },
    "1892": {
      "op": "JUMP"
    },
    "1893": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3747,
        4453
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1894": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4166,
        4189
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1896": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4261
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x7BA"
    },
    "1899": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4220,
        4224
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1900": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4261
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1902": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4261
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1903": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4261
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1904": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4261
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1906": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4261
      ],
      "op": "ADD",
      "path": "8"
    },
    "1907": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4261
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1909": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4261
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1910": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4261
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1911": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4261
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "1913": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4261
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1914": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4261
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1915": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4261
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "1917": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4261
      ],
      "op": "ADD",
      "path": "8"
    },
    "1918": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4261
      ],
      "op": "PUSH32",
      "path": "8",
      "value": "0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
    },
    "1951": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4261
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1952": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4261
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1953": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4261
      ],
      "op": "POP",
      "path": "8"
    },
    "1954": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4200,
        4205
      ],
      "op": "DUP6",
      "path": "8"
    },
    "1955": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1957": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1959": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1961": {
      "op": "SHL"
    },
    "1962": {
      "op": "SUB"
    },
    "1963": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4219
      ],
      "op": "AND",
      "path": "8"
    },
    "1964": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4219
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x837"
    },
    "1967": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4219
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1968": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4261
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "1969": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4261
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1970": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4261
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1971": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4261
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xFFFFFFFF"
    },
    "1976": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4261
      ],
      "op": "AND",
      "path": "8"
    },
    "1977": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        4192,
        4261
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1978": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4261
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1979": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4275,
        4292
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1980": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4275,
        4292
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1981": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4166,
        4261
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1982": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4166,
        4261
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1983": {
      "op": "POP"
    },
    "1984": {
      "branch": 32,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4275,
        4296
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "1985": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4271,
        4447
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x26C"
    },
    "1988": {
      "branch": 32,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4271,
        4447
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1989": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4370,
        4380
      ],
      "op": "DUP1",
      "path": "8",
      "statement": 14
    },
    "1990": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4359,
        4389
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1991": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4359,
        4389
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "1993": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4359,
        4389
      ],
      "op": "ADD",
      "path": "8"
    },
    "1994": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4359,
        4389
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1995": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4359,
        4389
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1996": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4359,
        4389
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1997": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4359,
        4389
      ],
      "op": "ADD",
      "path": "8"
    },
    "1998": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4359,
        4389
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1999": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4359,
        4389
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x7D8"
    },
    "2002": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4359,
        4389
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2003": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4359,
        4389
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2004": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4359,
        4389
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xB0C"
    },
    "2007": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        4359,
        4389
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2008": {
      "branch": 33,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4359,
        4389
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2009": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4351,
        4436
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x26C"
    },
    "2012": {
      "branch": 33,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4351,
        4436
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "2013": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4351,
        4436
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2015": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4351,
        4436
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2016": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2020": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2022": {
      "op": "SHL"
    },
    "2023": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4351,
        4436
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2024": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4351,
        4436
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2025": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2027": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4351,
        4436
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "2029": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4351,
        4436
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2030": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4351,
        4436
      ],
      "op": "ADD",
      "path": "8"
    },
    "2031": {
      "op": "MSTORE"
    },
    "2032": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "2034": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2036": {
      "op": "DUP3"
    },
    "2037": {
      "op": "ADD"
    },
    "2038": {
      "op": "MSTORE"
    },
    "2039": {
      "op": "PUSH32",
      "value": "0x5361666545524332303A204552433230206F7065726174696F6E20646964206E"
    },
    "2072": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2074": {
      "op": "DUP3"
    },
    "2075": {
      "op": "ADD"
    },
    "2076": {
      "op": "MSTORE"
    },
    "2077": {
      "op": "PUSH10",
      "value": "0x1BDD081CDD58D8D95959"
    },
    "2088": {
      "op": "PUSH1",
      "value": "0xB2"
    },
    "2090": {
      "op": "SHL"
    },
    "2091": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2093": {
      "op": "DUP3"
    },
    "2094": {
      "op": "ADD"
    },
    "2095": {
      "op": "MSTORE"
    },
    "2096": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2098": {
      "op": "ADD"
    },
    "2099": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4351,
        4436
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x215"
    },
    "2102": {
      "op": "JUMP"
    },
    "2103": {
      "fn": "Address.functionCall",
      "offset": [
        3873,
        4096
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2104": {
      "fn": "Address.functionCall",
      "offset": [
        4006,
        4018
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x60"
    },
    "2106": {
      "fn": "Address.functionCall",
      "offset": [
        4037,
        4089
      ],
      "op": "PUSH2",
      "path": "13",
      "statement": 15,
      "value": "0x846"
    },
    "2109": {
      "fn": "Address.functionCall",
      "offset": [
        4059,
        4065
      ],
      "op": "DUP5",
      "path": "13"
    },
    "2110": {
      "fn": "Address.functionCall",
      "offset": [
        4067,
        4071
      ],
      "op": "DUP5",
      "path": "13"
    },
    "2111": {
      "fn": "Address.functionCall",
      "offset": [
        4073,
        4074
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2113": {
      "fn": "Address.functionCall",
      "offset": [
        4076,
        4088
      ],
      "op": "DUP6",
      "path": "13"
    },
    "2114": {
      "fn": "Address.functionCall",
      "offset": [
        4037,
        4058
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x84E"
    },
    "2117": {
      "fn": "Address.functionCall",
      "jump": "i",
      "offset": [
        4037,
        4089
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2118": {
      "fn": "Address.functionCall",
      "offset": [
        4037,
        4089
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2119": {
      "fn": "Address.functionCall",
      "offset": [
        4030,
        4089
      ],
      "op": "SWAP5",
      "path": "13"
    },
    "2120": {
      "fn": "Address.functionCall",
      "offset": [
        3873,
        4096
      ],
      "op": "SWAP4",
      "path": "13"
    },
    "2121": {
      "op": "POP"
    },
    "2122": {
      "op": "POP"
    },
    "2123": {
      "op": "POP"
    },
    "2124": {
      "op": "POP"
    },
    "2125": {
      "fn": "Address.functionCall",
      "jump": "o",
      "offset": [
        3873,
        4096
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2126": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4960,
        5406
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2127": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5125,
        5137
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x60"
    },
    "2129": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5182,
        5187
      ],
      "op": "DUP3",
      "path": "13",
      "statement": 16
    },
    "2130": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5157,
        5178
      ],
      "op": "SELFBALANCE",
      "path": "13"
    },
    "2131": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5157,
        5187
      ],
      "op": "LT",
      "path": "13"
    },
    "2132": {
      "branch": 28,
      "fn": "Address.functionCallWithValue",
      "offset": [
        5157,
        5187
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2133": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5149,
        5230
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x8AF"
    },
    "2136": {
      "branch": 28,
      "fn": "Address.functionCallWithValue",
      "offset": [
        5149,
        5230
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2137": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5149,
        5230
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2139": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5149,
        5230
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2140": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2144": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2146": {
      "op": "SHL"
    },
    "2147": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5149,
        5230
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2148": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5149,
        5230
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2149": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2151": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5149,
        5230
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "2153": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5149,
        5230
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2154": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5149,
        5230
      ],
      "op": "ADD",
      "path": "13"
    },
    "2155": {
      "op": "MSTORE"
    },
    "2156": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "2158": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2160": {
      "op": "DUP3"
    },
    "2161": {
      "op": "ADD"
    },
    "2162": {
      "op": "MSTORE"
    },
    "2163": {
      "op": "PUSH32",
      "value": "0x416464726573733A20696E73756666696369656E742062616C616E636520666F"
    },
    "2196": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2198": {
      "op": "DUP3"
    },
    "2199": {
      "op": "ADD"
    },
    "2200": {
      "op": "MSTORE"
    },
    "2201": {
      "op": "PUSH6",
      "value": "0x1C8818D85B1B"
    },
    "2208": {
      "op": "PUSH1",
      "value": "0xD2"
    },
    "2210": {
      "op": "SHL"
    },
    "2211": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2213": {
      "op": "DUP3"
    },
    "2214": {
      "op": "ADD"
    },
    "2215": {
      "op": "MSTORE"
    },
    "2216": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2218": {
      "op": "ADD"
    },
    "2219": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5149,
        5230
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x215"
    },
    "2222": {
      "op": "JUMP"
    },
    "2223": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5149,
        5230
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2224": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5241,
        5253
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2226": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5255,
        5278
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2227": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5288
      ],
      "op": "DUP7",
      "path": "13"
    },
    "2228": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2230": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2232": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2234": {
      "op": "SHL"
    },
    "2235": {
      "op": "SUB"
    },
    "2236": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5293
      ],
      "op": "AND",
      "path": "13"
    },
    "2237": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5301,
        5306
      ],
      "op": "DUP6",
      "path": "13"
    },
    "2238": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5308,
        5312
      ],
      "op": "DUP8",
      "path": "13"
    },
    "2239": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2241": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2242": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x8CB"
    },
    "2245": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2246": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2247": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xB61"
    },
    "2250": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        5282,
        5313
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2251": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2252": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2254": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2256": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2257": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2258": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "DUP4",
      "path": "13"
    },
    "2259": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "SUB",
      "path": "13"
    },
    "2260": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2261": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "DUP6",
      "path": "13"
    },
    "2262": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "DUP8",
      "path": "13"
    },
    "2263": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "GAS",
      "path": "13"
    },
    "2264": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "CALL",
      "path": "13"
    },
    "2265": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "2266": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "POP",
      "path": "13"
    },
    "2267": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "POP",
      "path": "13"
    },
    "2268": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "POP",
      "path": "13"
    },
    "2269": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "2270": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2271": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2273": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2274": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "EQ",
      "path": "13"
    },
    "2275": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x908"
    },
    "2278": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2279": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2281": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2282": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2283": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "POP",
      "path": "13"
    },
    "2284": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "2286": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "NOT",
      "path": "13"
    },
    "2287": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x3F"
    },
    "2289": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "2290": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "ADD",
      "path": "13"
    },
    "2291": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "AND",
      "path": "13"
    },
    "2292": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2293": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "ADD",
      "path": "13"
    },
    "2294": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2296": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2297": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "2298": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2299": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2300": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "2301": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2303": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "2305": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "DUP5",
      "path": "13"
    },
    "2306": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "ADD",
      "path": "13"
    },
    "2307": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "RETURNDATACOPY",
      "path": "13"
    },
    "2308": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x90D"
    },
    "2311": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2312": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2313": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x60"
    },
    "2315": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2316": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "POP",
      "path": "13"
    },
    "2317": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2318": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "POP",
      "path": "13"
    },
    "2319": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5240,
        5313
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2320": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5240,
        5313
      ],
      "op": "POP",
      "path": "13"
    },
    "2321": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5240,
        5313
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2322": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5240,
        5313
      ],
      "op": "POP",
      "path": "13"
    },
    "2323": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5330,
        5399
      ],
      "op": "PUSH2",
      "path": "13",
      "statement": 17,
      "value": "0x91E"
    },
    "2326": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5357,
        5363
      ],
      "op": "DUP8",
      "path": "13"
    },
    "2327": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5365,
        5372
      ],
      "op": "DUP4",
      "path": "13"
    },
    "2328": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5374,
        5384
      ],
      "op": "DUP4",
      "path": "13"
    },
    "2329": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5386,
        5398
      ],
      "op": "DUP8",
      "path": "13"
    },
    "2330": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5330,
        5356
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x929"
    },
    "2333": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        5330,
        5399
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2334": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5330,
        5399
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2335": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5323,
        5399
      ],
      "op": "SWAP8",
      "path": "13"
    },
    "2336": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4960,
        5406
      ],
      "op": "SWAP7",
      "path": "13"
    },
    "2337": {
      "op": "POP"
    },
    "2338": {
      "op": "POP"
    },
    "2339": {
      "op": "POP"
    },
    "2340": {
      "op": "POP"
    },
    "2341": {
      "op": "POP"
    },
    "2342": {
      "op": "POP"
    },
    "2343": {
      "op": "POP"
    },
    "2344": {
      "fn": "Address.functionCallWithValue",
      "jump": "o",
      "offset": [
        4960,
        5406
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2345": {
      "fn": "Address.verifyCallResultFromTarget",
      "offset": [
        7466,
        8094
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2346": {
      "fn": "Address.verifyCallResultFromTarget",
      "offset": [
        7646,
        7658
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x60"
    },
    "2348": {
      "branch": 29,
      "fn": "Address.verifyCallResultFromTarget",
      "offset": [
        7674,
        7681
      ],
      "op": "DUP4",
      "path": "13"
    },
    "2349": {
      "fn": "Address.verifyCallResultFromTarget",
      "offset": [
        7670,
        8088
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2350": {
      "fn": "Address.verifyCallResultFromTarget",
      "offset": [
        7670,
        8088
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x998"
    },
    "2353": {
      "branch": 29,
      "fn": "Address.verifyCallResultFromTarget",
      "offset": [
        7670,
        8088
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2354": {
      "fn": "Address.verifyCallResultFromTarget",
      "offset": [
        7701,
        7711
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2355": {
      "fn": "Address.verifyCallResultFromTarget",
      "offset": [
        7701,
        7718
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2356": {
      "fn": "Address.verifyCallResultFromTarget",
      "offset": [
        7722,
        7723
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2358": {
      "branch": 30,
      "fn": "Address.verifyCallResultFromTarget",
      "offset": [
        7701,
        7723
      ],
      "op": "SUB",
      "path": "13"
    },
    "2359": {
      "fn": "Address.verifyCallResultFromTarget",
      "offset": [
        7697,
        7983
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x991"
    },
    "2362": {
      "branch": 30,
      "fn": "Address.verifyCallResultFromTarget",
      "offset": [
        7697,
        7983
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2363": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2365": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2367": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2369": {
      "op": "SHL"
    },
    "2370": {
      "op": "SUB"
    },
    "2371": {
      "fn": "Address.isContract",
      "offset": [
        1465,
        1484
      ],
      "op": "DUP6",
      "path": "13",
      "statement": 18
    },
    "2372": {
      "fn": "Address.isContract",
      "offset": [
        1465,
        1484
      ],
      "op": "AND",
      "path": "13"
    },
    "2373": {
      "fn": "Address.isContract",
      "offset": [
        1465,
        1484
      ],
      "op": "EXTCODESIZE",
      "path": "13"
    },
    "2374": {
      "fn": "Address.verifyCallResultFromTarget",
      "offset": [
        7908,
        7968
      ],
      "op": "PUSH2",
      "path": "13",
      "statement": 19,
      "value": "0x991"
    },
    "2377": {
      "fn": "Address.verifyCallResultFromTarget",
      "offset": [
        7908,
        7968
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2378": {
      "fn": "Address.verifyCallResultFromTarget",
      "offset": [
        7908,
        7968
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2380": {
      "fn": "Address.verifyCallResultFromTarget",
      "offset": [
        7908,
        7968
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2381": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2385": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2387": {
      "op": "SHL"
    },
    "2388": {
      "fn": "Address.verifyCallResultFromTarget",
      "offset": [
        7908,
        7968
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2389": {
      "fn": "Address.verifyCallResultFromTarget",
      "offset": [
        7908,
        7968
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2390": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2392": {
      "fn": "Address.verifyCallResultFromTarget",
      "offset": [
        7908,
        7968
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "2394": {
      "fn": "Address.verifyCallResultFromTarget",
      "offset": [
        7908,
        7968
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2395": {
      "fn": "Address.verifyCallResultFromTarget",
      "offset": [
        7908,
        7968
      ],
      "op": "ADD",
      "path": "13"
    },
    "2396": {
      "op": "MSTORE"
    },
    "2397": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "2399": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2401": {
      "op": "DUP3"
    },
    "2402": {
      "op": "ADD"
    },
    "2403": {
      "op": "MSTORE"
    },
    "2404": {
      "op": "PUSH32",
      "value": "0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
    },
    "2437": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2439": {
      "op": "DUP3"
    },
    "2440": {
      "op": "ADD"
    },
    "2441": {
      "op": "MSTORE"
    },
    "2442": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2444": {
      "op": "ADD"
    },
    "2445": {
      "fn": "Address.verifyCallResultFromTarget",
      "offset": [
        7908,
        7968
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x215"
    },
    "2448": {
      "op": "JUMP"
    },
    "2449": {
      "fn": "Address.verifyCallResultFromTarget",
      "offset": [
        7908,
        7968
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2450": {
      "op": "POP"
    },
    "2451": {
      "fn": "Address.verifyCallResultFromTarget",
      "offset": [
        8003,
        8013
      ],
      "op": "DUP2",
      "path": "13",
      "statement": 20
    },
    "2452": {
      "fn": "Address.verifyCallResultFromTarget",
      "offset": [
        7996,
        8013
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x846"
    },
    "2455": {
      "fn": "Address.verifyCallResultFromTarget",
      "offset": [
        7996,
        8013
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2456": {
      "fn": "Address.verifyCallResultFromTarget",
      "offset": [
        7670,
        8088
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2457": {
      "fn": "Address.verifyCallResultFromTarget",
      "offset": [
        8044,
        8077
      ],
      "op": "PUSH2",
      "path": "13",
      "statement": 21,
      "value": "0x846"
    },
    "2460": {
      "fn": "Address.verifyCallResultFromTarget",
      "offset": [
        8052,
        8062
      ],
      "op": "DUP4",
      "path": "13"
    },
    "2461": {
      "fn": "Address.verifyCallResultFromTarget",
      "offset": [
        8064,
        8076
      ],
      "op": "DUP4",
      "path": "13"
    },
    "2462": {
      "fn": "Address._revert",
      "offset": [
        8775,
        8792
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2463": {
      "fn": "Address._revert",
      "offset": [
        8775,
        8792
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2464": {
      "branch": 31,
      "fn": "Address._revert",
      "offset": [
        8775,
        8796
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2465": {
      "fn": "Address._revert",
      "offset": [
        8771,
        9150
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x9AD"
    },
    "2468": {
      "branch": 31,
      "fn": "Address._revert",
      "offset": [
        8771,
        9150
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2469": {
      "fn": "Address._revert",
      "offset": [
        9003,
        9013
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2470": {
      "fn": "Address._revert",
      "offset": [
        8997,
        9014
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2471": {
      "fn": "Address._revert",
      "offset": [
        9059,
        9074
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2472": {
      "fn": "Address._revert",
      "offset": [
        9046,
        9056
      ],
      "op": "DUP4",
      "path": "13"
    },
    "2473": {
      "fn": "Address._revert",
      "offset": [
        9042,
        9044
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "2475": {
      "fn": "Address._revert",
      "offset": [
        9038,
        9057
      ],
      "op": "ADD",
      "path": "13"
    },
    "2476": {
      "fn": "Address._revert",
      "offset": [
        9031,
        9075
      ],
      "op": "REVERT",
      "path": "13"
    },
    "2477": {
      "fn": "Address._revert",
      "offset": [
        8771,
        9150
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2478": {
      "fn": "Address._revert",
      "offset": [
        9126,
        9138
      ],
      "op": "DUP1",
      "path": "13",
      "statement": 22
    },
    "2479": {
      "fn": "Address._revert",
      "offset": [
        9119,
        9139
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2481": {
      "fn": "Address._revert",
      "offset": [
        9119,
        9139
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2482": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2486": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2488": {
      "op": "SHL"
    },
    "2489": {
      "fn": "Address._revert",
      "offset": [
        9119,
        9139
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2490": {
      "fn": "Address._revert",
      "offset": [
        9119,
        9139
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2491": {
      "fn": "Address._revert",
      "offset": [
        9119,
        9139
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "2493": {
      "fn": "Address._revert",
      "offset": [
        9119,
        9139
      ],
      "op": "ADD",
      "path": "13"
    },
    "2494": {
      "fn": "Address._revert",
      "offset": [
        9119,
        9139
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x215"
    },
    "2497": {
      "fn": "Address._revert",
      "offset": [
        9119,
        9139
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2498": {
      "fn": "Address._revert",
      "offset": [
        9119,
        9139
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2499": {
      "fn": "Address._revert",
      "offset": [
        9119,
        9139
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xB7D"
    },
    "2502": {
      "fn": "Address._revert",
      "jump": "i",
      "offset": [
        9119,
        9139
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2503": {
      "op": "JUMPDEST"
    },
    "2504": {
      "op": "DUP1"
    },
    "2505": {
      "op": "CALLDATALOAD"
    },
    "2506": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2508": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2510": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2512": {
      "op": "SHL"
    },
    "2513": {
      "op": "SUB"
    },
    "2514": {
      "op": "DUP2"
    },
    "2515": {
      "op": "AND"
    },
    "2516": {
      "op": "DUP2"
    },
    "2517": {
      "op": "EQ"
    },
    "2518": {
      "op": "PUSH2",
      "value": "0x9DE"
    },
    "2521": {
      "op": "JUMPI"
    },
    "2522": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2524": {
      "op": "DUP1"
    },
    "2525": {
      "op": "REVERT"
    },
    "2526": {
      "op": "JUMPDEST"
    },
    "2527": {
      "op": "SWAP2"
    },
    "2528": {
      "op": "SWAP1"
    },
    "2529": {
      "op": "POP"
    },
    "2530": {
      "jump": "o",
      "op": "JUMP"
    },
    "2531": {
      "op": "JUMPDEST"
    },
    "2532": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2534": {
      "op": "DUP1"
    },
    "2535": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2537": {
      "op": "DUP4"
    },
    "2538": {
      "op": "DUP6"
    },
    "2539": {
      "op": "SUB"
    },
    "2540": {
      "op": "SLT"
    },
    "2541": {
      "op": "ISZERO"
    },
    "2542": {
      "op": "PUSH2",
      "value": "0x9F6"
    },
    "2545": {
      "op": "JUMPI"
    },
    "2546": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2548": {
      "op": "DUP1"
    },
    "2549": {
      "op": "REVERT"
    },
    "2550": {
      "op": "JUMPDEST"
    },
    "2551": {
      "op": "PUSH2",
      "value": "0x9FF"
    },
    "2554": {
      "op": "DUP4"
    },
    "2555": {
      "op": "PUSH2",
      "value": "0x9C7"
    },
    "2558": {
      "jump": "i",
      "op": "JUMP"
    },
    "2559": {
      "op": "JUMPDEST"
    },
    "2560": {
      "op": "SWAP5"
    },
    "2561": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2563": {
      "op": "SWAP4"
    },
    "2564": {
      "op": "SWAP1"
    },
    "2565": {
      "op": "SWAP4"
    },
    "2566": {
      "op": "ADD"
    },
    "2567": {
      "op": "CALLDATALOAD"
    },
    "2568": {
      "op": "SWAP4"
    },
    "2569": {
      "op": "POP"
    },
    "2570": {
      "op": "POP"
    },
    "2571": {
      "op": "POP"
    },
    "2572": {
      "jump": "o",
      "op": "JUMP"
    },
    "2573": {
      "op": "JUMPDEST"
    },
    "2574": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2576": {
      "op": "DUP1"
    },
    "2577": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2579": {
      "op": "DUP4"
    },
    "2580": {
      "op": "DUP6"
    },
    "2581": {
      "op": "SUB"
    },
    "2582": {
      "op": "SLT"
    },
    "2583": {
      "op": "ISZERO"
    },
    "2584": {
      "op": "PUSH2",
      "value": "0xA20"
    },
    "2587": {
      "op": "JUMPI"
    },
    "2588": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2590": {
      "op": "DUP1"
    },
    "2591": {
      "op": "REVERT"
    },
    "2592": {
      "op": "JUMPDEST"
    },
    "2593": {
      "op": "PUSH2",
      "value": "0xA29"
    },
    "2596": {
      "op": "DUP4"
    },
    "2597": {
      "op": "PUSH2",
      "value": "0x9C7"
    },
    "2600": {
      "jump": "i",
      "op": "JUMP"
    },
    "2601": {
      "op": "JUMPDEST"
    },
    "2602": {
      "op": "SWAP2"
    },
    "2603": {
      "op": "POP"
    },
    "2604": {
      "op": "PUSH2",
      "value": "0xA37"
    },
    "2607": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2609": {
      "op": "DUP5"
    },
    "2610": {
      "op": "ADD"
    },
    "2611": {
      "op": "PUSH2",
      "value": "0x9C7"
    },
    "2614": {
      "jump": "i",
      "op": "JUMP"
    },
    "2615": {
      "op": "JUMPDEST"
    },
    "2616": {
      "op": "SWAP1"
    },
    "2617": {
      "op": "POP"
    },
    "2618": {
      "op": "SWAP3"
    },
    "2619": {
      "op": "POP"
    },
    "2620": {
      "op": "SWAP3"
    },
    "2621": {
      "op": "SWAP1"
    },
    "2622": {
      "op": "POP"
    },
    "2623": {
      "jump": "o",
      "op": "JUMP"
    },
    "2624": {
      "op": "JUMPDEST"
    },
    "2625": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2627": {
      "op": "DUP1"
    },
    "2628": {
      "op": "DUP3"
    },
    "2629": {
      "op": "MSTORE"
    },
    "2630": {
      "op": "PUSH1",
      "value": "0x13"
    },
    "2632": {
      "op": "SWAP1"
    },
    "2633": {
      "op": "DUP3"
    },
    "2634": {
      "op": "ADD"
    },
    "2635": {
      "op": "MSTORE"
    },
    "2636": {
      "op": "PUSH19",
      "value": "0x3737BA1039BAB83837B93A32B2103A37B5B2B7"
    },
    "2656": {
      "op": "PUSH1",
      "value": "0x69"
    },
    "2658": {
      "op": "SHL"
    },
    "2659": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2661": {
      "op": "DUP3"
    },
    "2662": {
      "op": "ADD"
    },
    "2663": {
      "op": "MSTORE"
    },
    "2664": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2666": {
      "op": "ADD"
    },
    "2667": {
      "op": "SWAP1"
    },
    "2668": {
      "jump": "o",
      "op": "JUMP"
    },
    "2669": {
      "op": "JUMPDEST"
    },
    "2670": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2675": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2677": {
      "op": "SHL"
    },
    "2678": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2680": {
      "op": "MSTORE"
    },
    "2681": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "2683": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2685": {
      "op": "MSTORE"
    },
    "2686": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2688": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2690": {
      "op": "REVERT"
    },
    "2691": {
      "op": "JUMPDEST"
    },
    "2692": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2694": {
      "op": "DUP3"
    },
    "2695": {
      "op": "DUP3"
    },
    "2696": {
      "op": "LT"
    },
    "2697": {
      "op": "ISZERO"
    },
    "2698": {
      "op": "PUSH2",
      "value": "0xA95"
    },
    "2701": {
      "op": "JUMPI"
    },
    "2702": {
      "op": "PUSH2",
      "value": "0xA95"
    },
    "2705": {
      "op": "PUSH2",
      "value": "0xA6D"
    },
    "2708": {
      "jump": "i",
      "op": "JUMP"
    },
    "2709": {
      "op": "JUMPDEST"
    },
    "2710": {
      "op": "POP"
    },
    "2711": {
      "op": "SUB"
    },
    "2712": {
      "op": "SWAP1"
    },
    "2713": {
      "jump": "o",
      "op": "JUMP"
    },
    "2714": {
      "op": "JUMPDEST"
    },
    "2715": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2717": {
      "op": "DUP3"
    },
    "2718": {
      "op": "NOT"
    },
    "2719": {
      "op": "DUP3"
    },
    "2720": {
      "op": "GT"
    },
    "2721": {
      "op": "ISZERO"
    },
    "2722": {
      "op": "PUSH2",
      "value": "0xAAD"
    },
    "2725": {
      "op": "JUMPI"
    },
    "2726": {
      "op": "PUSH2",
      "value": "0xAAD"
    },
    "2729": {
      "op": "PUSH2",
      "value": "0xA6D"
    },
    "2732": {
      "jump": "i",
      "op": "JUMP"
    },
    "2733": {
      "op": "JUMPDEST"
    },
    "2734": {
      "op": "POP"
    },
    "2735": {
      "op": "ADD"
    },
    "2736": {
      "op": "SWAP1"
    },
    "2737": {
      "jump": "o",
      "op": "JUMP"
    },
    "2738": {
      "op": "JUMPDEST"
    },
    "2739": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2741": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2743": {
      "op": "DUP3"
    },
    "2744": {
      "op": "DUP5"
    },
    "2745": {
      "op": "SUB"
    },
    "2746": {
      "op": "SLT"
    },
    "2747": {
      "op": "ISZERO"
    },
    "2748": {
      "op": "PUSH2",
      "value": "0xAC4"
    },
    "2751": {
      "op": "JUMPI"
    },
    "2752": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2754": {
      "op": "DUP1"
    },
    "2755": {
      "op": "REVERT"
    },
    "2756": {
      "op": "JUMPDEST"
    },
    "2757": {
      "op": "POP"
    },
    "2758": {
      "op": "MLOAD"
    },
    "2759": {
      "op": "SWAP2"
    },
    "2760": {
      "op": "SWAP1"
    },
    "2761": {
      "op": "POP"
    },
    "2762": {
      "jump": "o",
      "op": "JUMP"
    },
    "2763": {
      "op": "JUMPDEST"
    },
    "2764": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2766": {
      "op": "DUP2"
    },
    "2767": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2769": {
      "op": "NOT"
    },
    "2770": {
      "op": "DIV"
    },
    "2771": {
      "op": "DUP4"
    },
    "2772": {
      "op": "GT"
    },
    "2773": {
      "op": "DUP3"
    },
    "2774": {
      "op": "ISZERO"
    },
    "2775": {
      "op": "ISZERO"
    },
    "2776": {
      "op": "AND"
    },
    "2777": {
      "op": "ISZERO"
    },
    "2778": {
      "op": "PUSH2",
      "value": "0xAE5"
    },
    "2781": {
      "op": "JUMPI"
    },
    "2782": {
      "op": "PUSH2",
      "value": "0xAE5"
    },
    "2785": {
      "op": "PUSH2",
      "value": "0xA6D"
    },
    "2788": {
      "jump": "i",
      "op": "JUMP"
    },
    "2789": {
      "op": "JUMPDEST"
    },
    "2790": {
      "op": "POP"
    },
    "2791": {
      "op": "MUL"
    },
    "2792": {
      "op": "SWAP1"
    },
    "2793": {
      "jump": "o",
      "op": "JUMP"
    },
    "2794": {
      "op": "JUMPDEST"
    },
    "2795": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2797": {
      "op": "DUP3"
    },
    "2798": {
      "op": "PUSH2",
      "value": "0xB07"
    },
    "2801": {
      "op": "JUMPI"
    },
    "2802": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2807": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2809": {
      "op": "SHL"
    },
    "2810": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2812": {
      "op": "MSTORE"
    },
    "2813": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "2815": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2817": {
      "op": "MSTORE"
    },
    "2818": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2820": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2822": {
      "op": "REVERT"
    },
    "2823": {
      "op": "JUMPDEST"
    },
    "2824": {
      "op": "POP"
    },
    "2825": {
      "op": "DIV"
    },
    "2826": {
      "op": "SWAP1"
    },
    "2827": {
      "jump": "o",
      "op": "JUMP"
    },
    "2828": {
      "op": "JUMPDEST"
    },
    "2829": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2831": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2833": {
      "op": "DUP3"
    },
    "2834": {
      "op": "DUP5"
    },
    "2835": {
      "op": "SUB"
    },
    "2836": {
      "op": "SLT"
    },
    "2837": {
      "op": "ISZERO"
    },
    "2838": {
      "op": "PUSH2",
      "value": "0xB1E"
    },
    "2841": {
      "op": "JUMPI"
    },
    "2842": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2844": {
      "op": "DUP1"
    },
    "2845": {
      "op": "REVERT"
    },
    "2846": {
      "op": "JUMPDEST"
    },
    "2847": {
      "op": "DUP2"
    },
    "2848": {
      "op": "MLOAD"
    },
    "2849": {
      "op": "DUP1"
    },
    "2850": {
      "op": "ISZERO"
    },
    "2851": {
      "op": "ISZERO"
    },
    "2852": {
      "op": "DUP2"
    },
    "2853": {
      "op": "EQ"
    },
    "2854": {
      "op": "PUSH2",
      "value": "0xB2E"
    },
    "2857": {
      "op": "JUMPI"
    },
    "2858": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2860": {
      "op": "DUP1"
    },
    "2861": {
      "op": "REVERT"
    },
    "2862": {
      "op": "JUMPDEST"
    },
    "2863": {
      "op": "SWAP4"
    },
    "2864": {
      "op": "SWAP3"
    },
    "2865": {
      "op": "POP"
    },
    "2866": {
      "op": "POP"
    },
    "2867": {
      "op": "POP"
    },
    "2868": {
      "jump": "o",
      "op": "JUMP"
    },
    "2869": {
      "op": "JUMPDEST"
    },
    "2870": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2872": {
      "op": "JUMPDEST"
    },
    "2873": {
      "op": "DUP4"
    },
    "2874": {
      "op": "DUP2"
    },
    "2875": {
      "op": "LT"
    },
    "2876": {
      "op": "ISZERO"
    },
    "2877": {
      "op": "PUSH2",
      "value": "0xB50"
    },
    "2880": {
      "op": "JUMPI"
    },
    "2881": {
      "op": "DUP2"
    },
    "2882": {
      "op": "DUP2"
    },
    "2883": {
      "op": "ADD"
    },
    "2884": {
      "op": "MLOAD"
    },
    "2885": {
      "op": "DUP4"
    },
    "2886": {
      "op": "DUP3"
    },
    "2887": {
      "op": "ADD"
    },
    "2888": {
      "op": "MSTORE"
    },
    "2889": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2891": {
      "op": "ADD"
    },
    "2892": {
      "op": "PUSH2",
      "value": "0xB38"
    },
    "2895": {
      "op": "JUMP"
    },
    "2896": {
      "op": "JUMPDEST"
    },
    "2897": {
      "op": "DUP4"
    },
    "2898": {
      "op": "DUP2"
    },
    "2899": {
      "op": "GT"
    },
    "2900": {
      "op": "ISZERO"
    },
    "2901": {
      "op": "PUSH2",
      "value": "0x6C4"
    },
    "2904": {
      "op": "JUMPI"
    },
    "2905": {
      "op": "POP"
    },
    "2906": {
      "op": "POP"
    },
    "2907": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2909": {
      "op": "SWAP2"
    },
    "2910": {
      "op": "ADD"
    },
    "2911": {
      "op": "MSTORE"
    },
    "2912": {
      "jump": "o",
      "op": "JUMP"
    },
    "2913": {
      "op": "JUMPDEST"
    },
    "2914": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2916": {
      "op": "DUP3"
    },
    "2917": {
      "op": "MLOAD"
    },
    "2918": {
      "op": "PUSH2",
      "value": "0xB73"
    },
    "2921": {
      "op": "DUP2"
    },
    "2922": {
      "op": "DUP5"
    },
    "2923": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2925": {
      "op": "DUP8"
    },
    "2926": {
      "op": "ADD"
    },
    "2927": {
      "op": "PUSH2",
      "value": "0xB35"
    },
    "2930": {
      "jump": "i",
      "op": "JUMP"
    },
    "2931": {
      "op": "JUMPDEST"
    },
    "2932": {
      "op": "SWAP2"
    },
    "2933": {
      "op": "SWAP1"
    },
    "2934": {
      "op": "SWAP2"
    },
    "2935": {
      "op": "ADD"
    },
    "2936": {
      "op": "SWAP3"
    },
    "2937": {
      "op": "SWAP2"
    },
    "2938": {
      "op": "POP"
    },
    "2939": {
      "op": "POP"
    },
    "2940": {
      "jump": "o",
      "op": "JUMP"
    },
    "2941": {
      "op": "JUMPDEST"
    },
    "2942": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2944": {
      "op": "DUP2"
    },
    "2945": {
      "op": "MSTORE"
    },
    "2946": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2948": {
      "op": "DUP3"
    },
    "2949": {
      "op": "MLOAD"
    },
    "2950": {
      "op": "DUP1"
    },
    "2951": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2953": {
      "op": "DUP5"
    },
    "2954": {
      "op": "ADD"
    },
    "2955": {
      "op": "MSTORE"
    },
    "2956": {
      "op": "PUSH2",
      "value": "0xB9C"
    },
    "2959": {
      "op": "DUP2"
    },
    "2960": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2962": {
      "op": "DUP6"
    },
    "2963": {
      "op": "ADD"
    },
    "2964": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2966": {
      "op": "DUP8"
    },
    "2967": {
      "op": "ADD"
    },
    "2968": {
      "op": "PUSH2",
      "value": "0xB35"
    },
    "2971": {
      "jump": "i",
      "op": "JUMP"
    },
    "2972": {
      "op": "JUMPDEST"
    },
    "2973": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2975": {
      "op": "ADD"
    },
    "2976": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2978": {
      "op": "NOT"
    },
    "2979": {
      "op": "AND"
    },
    "2980": {
      "op": "SWAP2"
    },
    "2981": {
      "op": "SWAP1"
    },
    "2982": {
      "op": "SWAP2"
    },
    "2983": {
      "op": "ADD"
    },
    "2984": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2986": {
      "op": "ADD"
    },
    "2987": {
      "op": "SWAP3"
    },
    "2988": {
      "op": "SWAP2"
    },
    "2989": {
      "op": "POP"
    },
    "2990": {
      "op": "POP"
    },
    "2991": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "d3d9a4ac9914677438cd6d3b63d35f4052ef38c3",
  "source": "// SCH Course Copyright Policy (C): DO-NOT-SHARE-WITH-ANYONE\n// https://smartcontractshacking.com/#copyright-policy\npragma solidity 0.8.13;\n\nimport {IUniswapV2Pair} from \"../interfaces/IUniswapV2.sol\";\nimport {IWETH9} from \"../interfaces/IWETH9.sol\";\nimport {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\n\n/**\n * @title Lendly\n * @author JohnnyTime (https://smartcontractshacking.com)\n */\ncontract Lendly {\n\n    using SafeERC20 for IERC20;\n    \n    address public pair;\n    address public token0;\n    address public token1;\n\n    // token -> user -> amount\n    mapping(address => mapping (address => uint256)) public deposited; // Deposits\n    mapping(address => mapping (address => uint256)) public debt; // Debts\n\n    modifier isSupportedToken(address _token) {\n        require(_token == token0 || _token == token1, \"not supported token\");\n        _;\n    }\n\n    constructor (address _pair) {\n        pair = _pair;\n        token0 = IUniswapV2Pair(pair).token0();\n        token1 = IUniswapV2Pair(pair).token1();\n    }\n\n    function deposit(address _token, uint256 _amount) public isSupportedToken(_token) {\n        deposited[_token][msg.sender] += _amount;\n        IERC20(_token).safeTransferFrom(msg.sender, address(this), _amount);\n    }\n\n    function withdraw(address _token, uint256 _amount) public isSupportedToken(_token) {\n        deposited[_token][msg.sender] -= _amount;\n        address otherToken = _token == token0 ? token1 : token0;\n        require(isSafeDebt(otherToken, msg.sender), \"Not enough collateral\");\n        IERC20(_token).safeTransfer(msg.sender, _amount);\n    }\n\n    function borrow(address _token, uint256 _amount) public isSupportedToken(_token) {\n        // Add wanted borrow amount before checking debt safety\n        debt[_token][msg.sender] += _amount;\n        require(isSafeDebt(_token, msg.sender), \"Not enough collateral\");\n        IERC20(_token).safeTransfer(msg.sender, _amount);\n    }\n\n    function repay(address _token, uint256 _amount) public isSupportedToken(_token) {\n        debt[_token][msg.sender] -= _amount;\n        IERC20(_token).safeTransferFrom(msg.sender, address(this), _amount);\n    }\n\n    // _token - which the user want's to take from the protocol\n    // _user - the user's address\n    function isSafeDebt(address _token, address _user) public view returns (bool) {\n        \n        uint reserve0 = IERC20(token0).balanceOf(pair);\n        uint reserve1 = IERC20(token1).balanceOf(pair);\n        uint collateral; // user's collateral\n\n        if(_token == token0) { \n            collateral = deposited[token1][_user] * reserve0 / reserve1;\n        } else {\n            collateral = deposited[token0][_user] * reserve1 / reserve0;\n        }\n\n        uint allowance = collateral * 2 / 3; // 66% LTV (Loan To Value)\n        return allowance >= debt[_token][_user];\n    }\n}",
  "sourceMap": "472:2432:31:-:0;;;946:153;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;984:4;:12;;-1:-1:-1;;;;;;984:12:31;-1:-1:-1;;;;;984:12:31;;;;;;;;1015:29;;;-1:-1:-1;;;1015:29:31;;;;:27;;:29;;;;;;;;;;;;;;;984:12;1015:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1006:6;:38;;-1:-1:-1;;;;;;1006:38:31;-1:-1:-1;;;;;1006:38:31;;;;;;-1:-1:-1;1078:4:31;1063:29;;;-1:-1:-1;;;1063:29:31;;;;1078:4;;;;;1063:27;;:29;;;;;;;;;;;;;;1078:4;1063:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1054:6;:38;;-1:-1:-1;;;;;;1054:38:31;-1:-1:-1;;;;;1054:38:31;;;;;;;;;;-1:-1:-1;472:2432:31;;14:290:34;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:34;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:34:o;:::-;472:2432:31;;;;;;",
  "sourcePath": "contracts/oracle-manipulation-2/Lendly.sol",
  "type": "contract"
}