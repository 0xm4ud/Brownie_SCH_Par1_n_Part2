{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "depositETH",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "flashLoanETH",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawETH",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "12": "/Users/m4ud/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/utils/Address.sol",
    "31": "contracts/flash-loan-attacks-2/AdvancedVault.sol"
  },
  "ast": {
    "absolutePath": "contracts/flash-loan-attacks-2/AdvancedVault.sol",
    "exportedSymbols": {
      "Address": [
        6061
      ],
      "AdvancedVault": [
        1613
      ],
      "IFlashLoanEtherReceiver": [
        1520
      ]
    },
    "id": 1614,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1515,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".13"
        ],
        "nodeType": "PragmaDirective",
        "src": "116:24:31"
      },
      {
        "absolutePath": "/Users/m4ud/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/utils/Address.sol",
        "file": "@openzeppelin/contracts/utils/Address.sol",
        "id": 1516,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1614,
        "sourceUnit": 6062,
        "src": "142:51:31",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IFlashLoanEtherReceiver",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 1520,
        "linearizedBaseContracts": [
          1520
        ],
        "name": "IFlashLoanEtherReceiver",
        "nameLocation": "205:23:31",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "functionSelector": "6347f70e",
            "id": 1519,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "callBack",
            "nameLocation": "244:8:31",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1517,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "252:2:31"
            },
            "returnParameters": {
              "id": 1518,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "271:0:31"
            },
            "scope": 1520,
            "src": "235:37:31",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1614,
        "src": "195:79:31",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "AdvancedVault",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 1521,
          "nodeType": "StructuredDocumentation",
          "src": "276:89:31",
          "text": " @title AdvancedVault\n @author JohnnyTime (https://smartcontractshacking.com)"
        },
        "fullyImplemented": true,
        "id": 1613,
        "linearizedBaseContracts": [
          1613
        ],
        "name": "AdvancedVault",
        "nameLocation": "375:13:31",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "global": false,
            "id": 1524,
            "libraryName": {
              "id": 1522,
              "name": "Address",
              "nameLocations": [
                "402:7:31"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6061,
              "src": "402:7:31"
            },
            "nodeType": "UsingForDirective",
            "src": "396:34:31",
            "typeName": {
              "id": 1523,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "414:15:31",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            }
          },
          {
            "constant": false,
            "id": 1528,
            "mutability": "mutable",
            "name": "balances",
            "nameLocation": "472:8:31",
            "nodeType": "VariableDeclaration",
            "scope": 1613,
            "src": "435:45:31",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 1527,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 1525,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "444:7:31",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "435:28:31",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 1526,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "455:7:31",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 1531,
              "nodeType": "Block",
              "src": "513:2:31",
              "statements": []
            },
            "id": 1532,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1529,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "502:2:31"
            },
            "returnParameters": {
              "id": 1530,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "513:0:31"
            },
            "scope": 1613,
            "src": "491:24:31",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1543,
              "nodeType": "Block",
              "src": "560:50:31",
              "statements": [
                {
                  "expression": {
                    "id": 1541,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1535,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1528,
                        "src": "570:8:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1538,
                      "indexExpression": {
                        "expression": {
                          "id": 1536,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "579:3:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1537,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "583:6:31",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "579:10:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "570:20:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1539,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "594:3:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1540,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "598:5:31",
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "594:9:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "570:33:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1542,
                  "nodeType": "ExpressionStatement",
                  "src": "570:33:31"
                }
              ]
            },
            "functionSelector": "f6326fb3",
            "id": 1544,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "depositETH",
            "nameLocation": "530:10:31",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1533,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "540:2:31"
            },
            "returnParameters": {
              "id": 1534,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "560:0:31"
            },
            "scope": 1613,
            "src": "521:89:31",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1570,
              "nodeType": "Block",
              "src": "648:135:31",
              "statements": [
                {
                  "assignments": [
                    1548
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1548,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "666:6:31",
                      "nodeType": "VariableDeclaration",
                      "scope": 1570,
                      "src": "658:14:31",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1547,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "658:7:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1553,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1549,
                      "name": "balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1528,
                      "src": "675:8:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 1552,
                    "indexExpression": {
                      "expression": {
                        "id": 1550,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "684:3:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1551,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "688:6:31",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "684:10:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "675:20:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "658:37:31"
                },
                {
                  "expression": {
                    "id": 1559,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1554,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1528,
                        "src": "705:8:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1557,
                      "indexExpression": {
                        "expression": {
                          "id": 1555,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "714:3:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1556,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "718:6:31",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "714:10:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "705:20:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 1558,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "728:1:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "705:24:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1560,
                  "nodeType": "ExpressionStatement",
                  "src": "705:24:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1567,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1548,
                        "src": "769:6:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 1563,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "747:3:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1564,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "751:6:31",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "747:10:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1562,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "739:8:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 1561,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "739:8:31",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1565,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "739:19:31",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 1566,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "759:9:31",
                      "memberName": "sendValue",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5783,
                      "src": "739:29:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$__$attached_to$_t_address_payable_$",
                        "typeString": "function (address payable,uint256)"
                      }
                    },
                    "id": 1568,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "739:37:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1569,
                  "nodeType": "ExpressionStatement",
                  "src": "739:37:31"
                }
              ]
            },
            "functionSelector": "e086e5ec",
            "id": 1571,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawETH",
            "nameLocation": "625:11:31",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1545,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "636:2:31"
            },
            "returnParameters": {
              "id": 1546,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "648:0:31"
            },
            "scope": 1613,
            "src": "616:167:31",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1611,
              "nodeType": "Block",
              "src": "836:319:31",
              "statements": [
                {
                  "assignments": [
                    1577
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1577,
                      "mutability": "mutable",
                      "name": "balanceBefore",
                      "nameLocation": "854:13:31",
                      "nodeType": "VariableDeclaration",
                      "scope": 1611,
                      "src": "846:21:31",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1576,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "846:7:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1583,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 1580,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "878:4:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AdvancedVault_$1613",
                            "typeString": "contract AdvancedVault"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_AdvancedVault_$1613",
                            "typeString": "contract AdvancedVault"
                          }
                        ],
                        "id": 1579,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "870:7:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1578,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "870:7:31",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1581,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "870:13:31",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1582,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "884:7:31",
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "870:21:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "846:45:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1587,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1585,
                          "name": "balanceBefore",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1577,
                          "src": "909:13:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1586,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1573,
                          "src": "926:6:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "909:23:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52657175657374656420616d6f756e742069732067726561746572207468616e205661756c742062616c616e6365",
                        "id": 1588,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "934:48:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c9c49fb38b0d6e618e05d311868b108aa15f2acd01579f85d80d16a6c96ef84f",
                          "typeString": "literal_string \"Requested amount is greater than Vault balance\""
                        },
                        "value": "Requested amount is greater than Vault balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c9c49fb38b0d6e618e05d311868b108aa15f2acd01579f85d80d16a6c96ef84f",
                          "typeString": "literal_string \"Requested amount is greater than Vault balance\""
                        }
                      ],
                      "id": 1584,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "901:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1589,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "901:82:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1590,
                  "nodeType": "ExpressionStatement",
                  "src": "901:82:31"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1592,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1017:3:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1593,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1021:6:31",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1017:10:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1591,
                            "name": "IFlashLoanEtherReceiver",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1520,
                            "src": "993:23:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IFlashLoanEtherReceiver_$1520_$",
                              "typeString": "type(contract IFlashLoanEtherReceiver)"
                            }
                          },
                          "id": 1594,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "993:35:31",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IFlashLoanEtherReceiver_$1520",
                            "typeString": "contract IFlashLoanEtherReceiver"
                          }
                        },
                        "id": 1595,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1029:8:31",
                        "memberName": "callBack",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1519,
                        "src": "993:44:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$__$returns$__$",
                          "typeString": "function () payable external"
                        }
                      },
                      "id": 1597,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 1596,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1573,
                          "src": "1045:6:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "993:59:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                        "typeString": "function () payable external"
                      }
                    },
                    "id": 1598,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "993:61:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1599,
                  "nodeType": "ExpressionStatement",
                  "src": "993:61:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1607,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 1603,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "1080:4:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_AdvancedVault_$1613",
                                  "typeString": "contract AdvancedVault"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_AdvancedVault_$1613",
                                  "typeString": "contract AdvancedVault"
                                }
                              ],
                              "id": 1602,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1072:7:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1601,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1072:7:31",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1604,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1072:13:31",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 1605,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1086:7:31",
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "1072:21:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1606,
                          "name": "balanceBefore",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1577,
                          "src": "1097:13:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1072:38:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e65656420746f20706179206261636b20746865206c6f616e",
                        "id": 1608,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1112:27:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1d67773786ca1a84c3b17fc039618e27e2ceaca3ea7b1967ff151549dd30ac22",
                          "typeString": "literal_string \"Need to pay back the loan\""
                        },
                        "value": "Need to pay back the loan"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1d67773786ca1a84c3b17fc039618e27e2ceaca3ea7b1967ff151549dd30ac22",
                          "typeString": "literal_string \"Need to pay back the loan\""
                        }
                      ],
                      "id": 1600,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1064:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1609,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1064:76:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1610,
                  "nodeType": "ExpressionStatement",
                  "src": "1064:76:31"
                }
              ]
            },
            "functionSelector": "5b1ec4e0",
            "id": 1612,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "flashLoanETH",
            "nameLocation": "798:12:31",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1574,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1573,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "819:6:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 1612,
                  "src": "811:14:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1572,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "811:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "810:16:31"
            },
            "returnParameters": {
              "id": 1575,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "836:0:31"
            },
            "scope": 1613,
            "src": "789:366:31",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1614,
        "src": "366:792:31",
        "usedErrors": []
      }
    ],
    "src": "116:1043:31"
  },
  "bytecode": "6080604052610369806100136000396000f3fe6080604052600436106100345760003560e01c80635b1ec4e014610039578063e086e5ec1461005b578063f6326fb314610070575b600080fd5b34801561004557600080fd5b506100596100543660046102f3565b610078565b005b34801561006757600080fd5b5061005961018d565b6100596101af565b47818110156100e55760405162461bcd60e51b815260206004820152602e60248201527f52657175657374656420616d6f756e742069732067726561746572207468616e60448201526d205661756c742062616c616e636560901b60648201526084015b60405180910390fd5b336001600160a01b0316636347f70e836040518263ffffffff1660e01b81526004016000604051808303818588803b15801561012057600080fd5b505af1158015610134573d6000803e3d6000fd5b5050505050804710156101895760405162461bcd60e51b815260206004820152601960248201527f4e65656420746f20706179206261636b20746865206c6f616e0000000000000060448201526064016100dc565b5050565b3360008181526020819052604081208054919055906101ac90826101d5565b50565b33600090815260208190526040812080543492906101ce90849061030c565b9091555050565b804710156102255760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e636500000060448201526064016100dc565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610272576040519150601f19603f3d011682016040523d82523d6000602084013e610277565b606091505b50509050806102ee5760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d6179206861766520726576657274656400000000000060648201526084016100dc565b505050565b60006020828403121561030557600080fd5b5035919050565b8082018082111561032d57634e487b7160e01b600052601160045260246000fd5b9291505056fea26469706673582212204a083c672c760412c53ada8390c3fd4194d2b67b3fe5868dbb390fa7100f908264736f6c63430008130033",
  "bytecodeSha1": "d1b826b3bd9de15dcbe0e736f46bc5f0f3e84b15",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.19+commit.7dd6d404"
  },
  "contractName": "AdvancedVault",
  "coverageMap": {
    "branches": {
      "12": {
        "Address.sendValue": {
          "10": [
            2501,
            2532,
            true
          ],
          "11": [
            2647,
            2654,
            true
          ]
        }
      },
      "31": {
        "AdvancedVault.flashLoanETH": {
          "8": [
            909,
            932,
            true
          ],
          "9": [
            1072,
            1110,
            true
          ]
        }
      }
    },
    "statements": {
      "12": {
        "Address.sendValue": {
          "6": [
            2493,
            2566
          ],
          "7": [
            2639,
            2717
          ]
        }
      },
      "31": {
        "AdvancedVault.depositETH": {
          "5": [
            570,
            603
          ]
        },
        "AdvancedVault.flashLoanETH": {
          "0": [
            901,
            983
          ],
          "1": [
            993,
            1054
          ],
          "2": [
            1064,
            1140
          ]
        },
        "AdvancedVault.withdrawETH": {
          "3": [
            705,
            729
          ],
          "4": [
            739,
            776
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.8.0/Address",
    "IFlashLoanEtherReceiver"
  ],
  "deployedBytecode": "6080604052600436106100345760003560e01c80635b1ec4e014610039578063e086e5ec1461005b578063f6326fb314610070575b600080fd5b34801561004557600080fd5b506100596100543660046102f3565b610078565b005b34801561006757600080fd5b5061005961018d565b6100596101af565b47818110156100e55760405162461bcd60e51b815260206004820152602e60248201527f52657175657374656420616d6f756e742069732067726561746572207468616e60448201526d205661756c742062616c616e636560901b60648201526084015b60405180910390fd5b336001600160a01b0316636347f70e836040518263ffffffff1660e01b81526004016000604051808303818588803b15801561012057600080fd5b505af1158015610134573d6000803e3d6000fd5b5050505050804710156101895760405162461bcd60e51b815260206004820152601960248201527f4e65656420746f20706179206261636b20746865206c6f616e0000000000000060448201526064016100dc565b5050565b3360008181526020819052604081208054919055906101ac90826101d5565b50565b33600090815260208190526040812080543492906101ce90849061030c565b9091555050565b804710156102255760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e636500000060448201526064016100dc565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610272576040519150601f19603f3d011682016040523d82523d6000602084013e610277565b606091505b50509050806102ee5760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d6179206861766520726576657274656400000000000060648201526084016100dc565b505050565b60006020828403121561030557600080fd5b5035919050565b8082018082111561032d57634e487b7160e01b600052601160045260246000fd5b9291505056fea26469706673582212204a083c672c760412c53ada8390c3fd4194d2b67b3fe5868dbb390fa7100f908264736f6c63430008130033",
  "deployedSourceMap": "366:792:31:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;789:366;;;;;;;;;;-1:-1:-1;789:366:31;;;;;:::i;:::-;;:::i;:::-;;616:167;;;;;;;;;;;;;:::i;521:89::-;;;:::i;789:366::-;870:21;909:23;;;;901:82;;;;-1:-1:-1;;;901:82:31;;401:2:63;901:82:31;;;383:21:63;440:2;420:18;;;413:30;479:34;459:18;;;452:62;-1:-1:-1;;;530:18:63;;;523:44;584:19;;901:82:31;;;;;;;;;1017:10;-1:-1:-1;;;;;993:44:31;;1045:6;993:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1097:13;1072:21;:38;;1064:76;;;;-1:-1:-1;;;1064:76:31;;816:2:63;1064:76:31;;;798:21:63;855:2;835:18;;;828:30;894:27;874:18;;;867:55;939:18;;1064:76:31;614:349:63;1064:76:31;836:319;789:366;:::o;616:167::-;684:10;658:14;675:20;;;;;;;;;;;;705:24;;;675:20;739:37;;675:20;739:29;:37::i;:::-;648:135;616:167::o;521:89::-;579:10;570:8;:20;;;;;;;;;;:33;;594:9;;570:8;:33;;594:9;;570:33;:::i;:::-;;;;-1:-1:-1;;521:89:31:o;2412:312:12:-;2526:6;2501:21;:31;;2493:73;;;;-1:-1:-1;;;2493:73:12;;1397:2:63;2493:73:12;;;1379:21:63;1436:2;1416:18;;;1409:30;1475:31;1455:18;;;1448:59;1524:18;;2493:73:12;1195:353:63;2493:73:12;2578:12;2596:9;-1:-1:-1;;;;;2596:14:12;2618:6;2596:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2577:52;;;2647:7;2639:78;;;;-1:-1:-1;;;2639:78:12;;1965:2:63;2639:78:12;;;1947:21:63;2004:2;1984:18;;;1977:30;2043:34;2023:18;;;2016:62;2114:28;2094:18;;;2087:56;2160:19;;2639:78:12;1763:422:63;2639:78:12;2483:241;2412:312;;:::o;14:180:63:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:63;;14:180;-1:-1:-1;14:180:63:o;968:222::-;1033:9;;;1054:10;;;1051:133;;;1106:10;1101:3;1097:20;1094:1;1087:31;1141:4;1138:1;1131:15;1169:4;1166:1;1159:15;1051:133;968:222;;;;:::o",
  "language": "Solidity",
  "natspec": {
    "author": "JohnnyTime (https://smartcontractshacking.com)",
    "kind": "dev",
    "methods": {},
    "title": "AdvancedVault",
    "version": 1
  },
  "offset": [
    366,
    1158
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5B1EC4E0 EQ PUSH2 0x39 JUMPI DUP1 PUSH4 0xE086E5EC EQ PUSH2 0x5B JUMPI DUP1 PUSH4 0xF6326FB3 EQ PUSH2 0x70 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x59 PUSH2 0x54 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F3 JUMP JUMPDEST PUSH2 0x78 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x59 PUSH2 0x18D JUMP JUMPDEST PUSH2 0x59 PUSH2 0x1AF JUMP JUMPDEST SELFBALANCE DUP2 DUP2 LT ISZERO PUSH2 0xE5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52657175657374656420616D6F756E742069732067726561746572207468616E PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x205661756C742062616C616E6365 PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x6347F70E DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x120 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x134 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP DUP1 SELFBALANCE LT ISZERO PUSH2 0x189 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E65656420746F20706179206261636B20746865206C6F616E00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xDC JUMP JUMPDEST POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP2 SWAP1 SSTORE SWAP1 PUSH2 0x1AC SWAP1 DUP3 PUSH2 0x1D5 JUMP JUMPDEST POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD CALLVALUE SWAP3 SWAP1 PUSH2 0x1CE SWAP1 DUP5 SWAP1 PUSH2 0x30C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMP JUMPDEST DUP1 SELFBALANCE LT ISZERO PUSH2 0x225 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xDC JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x272 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x277 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x2EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20756E61626C6520746F2073656E642076616C75652C2072 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6563697069656E74206D61792068617665207265766572746564000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xDC JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x305 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x32D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4A ADDMOD EXTCODECOPY PUSH8 0x2C760412C53ADA83 SWAP1 0xC3 REVERT COINBASE SWAP5 0xD2 0xB6 PUSH28 0x3FE5868DBB390FA7100F908264736F6C634300081300330000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        366,
        1158
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        366,
        1158
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        366,
        1158
      ],
      "op": "MSTORE",
      "path": "31"
    },
    "5": {
      "fn": null,
      "offset": [
        366,
        1158
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        366,
        1158
      ],
      "op": "CALLDATASIZE",
      "path": "31"
    },
    "8": {
      "fn": null,
      "offset": [
        366,
        1158
      ],
      "op": "LT",
      "path": "31"
    },
    "9": {
      "fn": null,
      "offset": [
        366,
        1158
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x34"
    },
    "12": {
      "fn": null,
      "offset": [
        366,
        1158
      ],
      "op": "JUMPI",
      "path": "31"
    },
    "13": {
      "fn": null,
      "offset": [
        366,
        1158
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        366,
        1158
      ],
      "op": "CALLDATALOAD",
      "path": "31"
    },
    "16": {
      "fn": null,
      "offset": [
        366,
        1158
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        366,
        1158
      ],
      "op": "SHR",
      "path": "31"
    },
    "19": {
      "fn": null,
      "offset": [
        366,
        1158
      ],
      "op": "DUP1",
      "path": "31"
    },
    "20": {
      "fn": null,
      "offset": [
        366,
        1158
      ],
      "op": "PUSH4",
      "path": "31",
      "value": "0x5B1EC4E0"
    },
    "25": {
      "fn": null,
      "offset": [
        366,
        1158
      ],
      "op": "EQ",
      "path": "31"
    },
    "26": {
      "fn": null,
      "offset": [
        366,
        1158
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x39"
    },
    "29": {
      "fn": null,
      "offset": [
        366,
        1158
      ],
      "op": "JUMPI",
      "path": "31"
    },
    "30": {
      "fn": null,
      "offset": [
        366,
        1158
      ],
      "op": "DUP1",
      "path": "31"
    },
    "31": {
      "fn": null,
      "offset": [
        366,
        1158
      ],
      "op": "PUSH4",
      "path": "31",
      "value": "0xE086E5EC"
    },
    "36": {
      "fn": null,
      "offset": [
        366,
        1158
      ],
      "op": "EQ",
      "path": "31"
    },
    "37": {
      "fn": null,
      "offset": [
        366,
        1158
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x5B"
    },
    "40": {
      "fn": null,
      "offset": [
        366,
        1158
      ],
      "op": "JUMPI",
      "path": "31"
    },
    "41": {
      "fn": null,
      "offset": [
        366,
        1158
      ],
      "op": "DUP1",
      "path": "31"
    },
    "42": {
      "fn": null,
      "offset": [
        366,
        1158
      ],
      "op": "PUSH4",
      "path": "31",
      "value": "0xF6326FB3"
    },
    "47": {
      "fn": null,
      "offset": [
        366,
        1158
      ],
      "op": "EQ",
      "path": "31"
    },
    "48": {
      "fn": null,
      "offset": [
        366,
        1158
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x70"
    },
    "51": {
      "fn": null,
      "offset": [
        366,
        1158
      ],
      "op": "JUMPI",
      "path": "31"
    },
    "52": {
      "fn": null,
      "offset": [
        366,
        1158
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "53": {
      "fn": null,
      "offset": [
        366,
        1158
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x0"
    },
    "55": {
      "fn": null,
      "offset": [
        366,
        1158
      ],
      "op": "DUP1",
      "path": "31"
    },
    "56": {
      "first_revert": true,
      "fn": null,
      "offset": [
        366,
        1158
      ],
      "op": "REVERT",
      "path": "31"
    },
    "57": {
      "fn": "AdvancedVault.flashLoanETH",
      "offset": [
        789,
        1155
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "58": {
      "fn": "AdvancedVault.flashLoanETH",
      "offset": [
        789,
        1155
      ],
      "op": "CALLVALUE",
      "path": "31"
    },
    "59": {
      "fn": "AdvancedVault.flashLoanETH",
      "offset": [
        789,
        1155
      ],
      "op": "DUP1",
      "path": "31"
    },
    "60": {
      "fn": "AdvancedVault.flashLoanETH",
      "offset": [
        789,
        1155
      ],
      "op": "ISZERO",
      "path": "31"
    },
    "61": {
      "fn": "AdvancedVault.flashLoanETH",
      "offset": [
        789,
        1155
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x45"
    },
    "64": {
      "fn": "AdvancedVault.flashLoanETH",
      "offset": [
        789,
        1155
      ],
      "op": "JUMPI",
      "path": "31"
    },
    "65": {
      "fn": "AdvancedVault.flashLoanETH",
      "offset": [
        789,
        1155
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x0"
    },
    "67": {
      "fn": "AdvancedVault.flashLoanETH",
      "offset": [
        789,
        1155
      ],
      "op": "DUP1",
      "path": "31"
    },
    "68": {
      "fn": "AdvancedVault.flashLoanETH",
      "offset": [
        789,
        1155
      ],
      "op": "REVERT",
      "path": "31"
    },
    "69": {
      "fn": "AdvancedVault.flashLoanETH",
      "offset": [
        789,
        1155
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "70": {
      "op": "POP"
    },
    "71": {
      "fn": "AdvancedVault.flashLoanETH",
      "offset": [
        789,
        1155
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x59"
    },
    "74": {
      "fn": "AdvancedVault.flashLoanETH",
      "offset": [
        789,
        1155
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x54"
    },
    "77": {
      "fn": "AdvancedVault.flashLoanETH",
      "offset": [
        789,
        1155
      ],
      "op": "CALLDATASIZE",
      "path": "31"
    },
    "78": {
      "fn": "AdvancedVault.flashLoanETH",
      "offset": [
        789,
        1155
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x4"
    },
    "80": {
      "fn": "AdvancedVault.flashLoanETH",
      "offset": [
        789,
        1155
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x2F3"
    },
    "83": {
      "fn": "AdvancedVault.flashLoanETH",
      "jump": "i",
      "offset": [
        789,
        1155
      ],
      "op": "JUMP",
      "path": "31"
    },
    "84": {
      "fn": "AdvancedVault.flashLoanETH",
      "offset": [
        789,
        1155
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "85": {
      "fn": "AdvancedVault.flashLoanETH",
      "offset": [
        789,
        1155
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x78"
    },
    "88": {
      "fn": "AdvancedVault.flashLoanETH",
      "jump": "i",
      "offset": [
        789,
        1155
      ],
      "op": "JUMP",
      "path": "31"
    },
    "89": {
      "fn": "AdvancedVault.flashLoanETH",
      "offset": [
        789,
        1155
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "90": {
      "fn": "AdvancedVault.flashLoanETH",
      "offset": [
        789,
        1155
      ],
      "op": "STOP",
      "path": "31"
    },
    "91": {
      "fn": "AdvancedVault.withdrawETH",
      "offset": [
        616,
        783
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "92": {
      "fn": "AdvancedVault.withdrawETH",
      "offset": [
        616,
        783
      ],
      "op": "CALLVALUE",
      "path": "31"
    },
    "93": {
      "fn": "AdvancedVault.withdrawETH",
      "offset": [
        616,
        783
      ],
      "op": "DUP1",
      "path": "31"
    },
    "94": {
      "fn": "AdvancedVault.withdrawETH",
      "offset": [
        616,
        783
      ],
      "op": "ISZERO",
      "path": "31"
    },
    "95": {
      "fn": "AdvancedVault.withdrawETH",
      "offset": [
        616,
        783
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x67"
    },
    "98": {
      "fn": "AdvancedVault.withdrawETH",
      "offset": [
        616,
        783
      ],
      "op": "JUMPI",
      "path": "31"
    },
    "99": {
      "fn": "AdvancedVault.withdrawETH",
      "offset": [
        616,
        783
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x0"
    },
    "101": {
      "fn": "AdvancedVault.withdrawETH",
      "offset": [
        616,
        783
      ],
      "op": "DUP1",
      "path": "31"
    },
    "102": {
      "fn": "AdvancedVault.withdrawETH",
      "offset": [
        616,
        783
      ],
      "op": "REVERT",
      "path": "31"
    },
    "103": {
      "fn": "AdvancedVault.withdrawETH",
      "offset": [
        616,
        783
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "104": {
      "fn": "AdvancedVault.withdrawETH",
      "offset": [
        616,
        783
      ],
      "op": "POP",
      "path": "31"
    },
    "105": {
      "fn": "AdvancedVault.withdrawETH",
      "offset": [
        616,
        783
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x59"
    },
    "108": {
      "fn": "AdvancedVault.withdrawETH",
      "offset": [
        616,
        783
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x18D"
    },
    "111": {
      "fn": "AdvancedVault.withdrawETH",
      "jump": "i",
      "offset": [
        616,
        783
      ],
      "op": "JUMP",
      "path": "31"
    },
    "112": {
      "fn": "AdvancedVault.depositETH",
      "offset": [
        521,
        610
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "113": {
      "fn": "AdvancedVault.depositETH",
      "offset": [
        521,
        610
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x59"
    },
    "116": {
      "fn": "AdvancedVault.depositETH",
      "offset": [
        521,
        610
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x1AF"
    },
    "119": {
      "fn": "AdvancedVault.depositETH",
      "jump": "i",
      "offset": [
        521,
        610
      ],
      "op": "JUMP",
      "path": "31"
    },
    "120": {
      "fn": "AdvancedVault.flashLoanETH",
      "offset": [
        789,
        1155
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "121": {
      "fn": "AdvancedVault.flashLoanETH",
      "offset": [
        870,
        891
      ],
      "op": "SELFBALANCE",
      "path": "31"
    },
    "122": {
      "fn": "AdvancedVault.flashLoanETH",
      "offset": [
        909,
        932
      ],
      "op": "DUP2",
      "path": "31",
      "statement": 0
    },
    "123": {
      "fn": "AdvancedVault.flashLoanETH",
      "offset": [
        909,
        932
      ],
      "op": "DUP2",
      "path": "31"
    },
    "124": {
      "fn": "AdvancedVault.flashLoanETH",
      "offset": [
        909,
        932
      ],
      "op": "LT",
      "path": "31"
    },
    "125": {
      "branch": 8,
      "fn": "AdvancedVault.flashLoanETH",
      "offset": [
        909,
        932
      ],
      "op": "ISZERO",
      "path": "31"
    },
    "126": {
      "fn": "AdvancedVault.flashLoanETH",
      "offset": [
        901,
        983
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0xE5"
    },
    "129": {
      "branch": 8,
      "fn": "AdvancedVault.flashLoanETH",
      "offset": [
        901,
        983
      ],
      "op": "JUMPI",
      "path": "31"
    },
    "130": {
      "fn": "AdvancedVault.flashLoanETH",
      "offset": [
        901,
        983
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x40"
    },
    "132": {
      "fn": "AdvancedVault.flashLoanETH",
      "offset": [
        901,
        983
      ],
      "op": "MLOAD",
      "path": "31"
    },
    "133": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "137": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "139": {
      "op": "SHL"
    },
    "140": {
      "fn": "AdvancedVault.flashLoanETH",
      "offset": [
        901,
        983
      ],
      "op": "DUP2",
      "path": "31"
    },
    "141": {
      "fn": "AdvancedVault.flashLoanETH",
      "offset": [
        901,
        983
      ],
      "op": "MSTORE",
      "path": "31"
    },
    "142": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "144": {
      "fn": "AdvancedVault.flashLoanETH",
      "offset": [
        901,
        983
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x4"
    },
    "146": {
      "fn": "AdvancedVault.flashLoanETH",
      "offset": [
        901,
        983
      ],
      "op": "DUP3",
      "path": "31"
    },
    "147": {
      "fn": "AdvancedVault.flashLoanETH",
      "offset": [
        901,
        983
      ],
      "op": "ADD",
      "path": "31"
    },
    "148": {
      "op": "MSTORE"
    },
    "149": {
      "op": "PUSH1",
      "value": "0x2E"
    },
    "151": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "153": {
      "op": "DUP3"
    },
    "154": {
      "op": "ADD"
    },
    "155": {
      "op": "MSTORE"
    },
    "156": {
      "op": "PUSH32",
      "value": "0x52657175657374656420616D6F756E742069732067726561746572207468616E"
    },
    "189": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "191": {
      "op": "DUP3"
    },
    "192": {
      "op": "ADD"
    },
    "193": {
      "op": "MSTORE"
    },
    "194": {
      "op": "PUSH14",
      "value": "0x205661756C742062616C616E6365"
    },
    "209": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "211": {
      "op": "SHL"
    },
    "212": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "214": {
      "op": "DUP3"
    },
    "215": {
      "op": "ADD"
    },
    "216": {
      "op": "MSTORE"
    },
    "217": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "219": {
      "op": "ADD"
    },
    "220": {
      "fn": "AdvancedVault.flashLoanETH",
      "offset": [
        901,
        983
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "221": {
      "fn": "AdvancedVault.flashLoanETH",
      "offset": [
        901,
        983
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x40"
    },
    "223": {
      "fn": "AdvancedVault.flashLoanETH",
      "offset": [
        901,
        983
      ],
      "op": "MLOAD",
      "path": "31"
    },
    "224": {
      "fn": "AdvancedVault.flashLoanETH",
      "offset": [
        901,
        983
      ],
      "op": "DUP1",
      "path": "31"
    },
    "225": {
      "fn": "AdvancedVault.flashLoanETH",
      "offset": [
        901,
        983
      ],
      "op": "SWAP2",
      "path": "31"
    },
    "226": {
      "fn": "AdvancedVault.flashLoanETH",
      "offset": [
        901,
        983
      ],
      "op": "SUB",
      "path": "31"
    },
    "227": {
      "fn": "AdvancedVault.flashLoanETH",
      "offset": [
        901,
        983
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "228": {
      "fn": "AdvancedVault.flashLoanETH",
      "offset": [
        901,
        983
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "31"
    },
    "229": {
      "fn": "AdvancedVault.flashLoanETH",
      "offset": [
        901,
        983
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "230": {
      "fn": "AdvancedVault.flashLoanETH",
      "offset": [
        1017,
        1027
      ],
      "op": "CALLER",
      "path": "31",
      "statement": 1
    },
    "231": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "233": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "235": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "237": {
      "op": "SHL"
    },
    "238": {
      "op": "SUB"
    },
    "239": {
      "fn": "AdvancedVault.flashLoanETH",
      "offset": [
        993,
        1037
      ],
      "op": "AND",
      "path": "31"
    },
    "240": {
      "fn": "AdvancedVault.flashLoanETH",
      "offset": [
        993,
        1037
      ],
      "op": "PUSH4",
      "path": "31",
      "value": "0x6347F70E"
    },
    "245": {
      "fn": "AdvancedVault.flashLoanETH",
      "offset": [
        1045,
        1051
      ],
      "op": "DUP4",
      "path": "31"
    },
    "246": {
      "fn": "AdvancedVault.flashLoanETH",
      "offset": [
        993,
        1054
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x40"
    },
    "248": {
      "fn": "AdvancedVault.flashLoanETH",
      "offset": [
        993,
        1054
      ],
      "op": "MLOAD",
      "path": "31"
    },
    "249": {
      "fn": "AdvancedVault.flashLoanETH",
      "offset": [
        993,
        1054
      ],
      "op": "DUP3",
      "path": "31"
    },
    "250": {
      "fn": "AdvancedVault.flashLoanETH",
      "offset": [
        993,
        1054
      ],
      "op": "PUSH4",
      "path": "31",
      "value": "0xFFFFFFFF"
    },
    "255": {
      "fn": "AdvancedVault.flashLoanETH",
      "offset": [
        993,
        1054
      ],
      "op": "AND",
      "path": "31"
    },
    "256": {
      "fn": "AdvancedVault.flashLoanETH",
      "offset": [
        993,
        1054
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0xE0"
    },
    "258": {
      "fn": "AdvancedVault.flashLoanETH",
      "offset": [
        993,
        1054
      ],
      "op": "SHL",
      "path": "31"
    },
    "259": {
      "fn": "AdvancedVault.flashLoanETH",
      "offset": [
        993,
        1054
      ],
      "op": "DUP2",
      "path": "31"
    },
    "260": {
      "fn": "AdvancedVault.flashLoanETH",
      "offset": [
        993,
        1054
      ],
      "op": "MSTORE",
      "path": "31"
    },
    "261": {
      "fn": "AdvancedVault.flashLoanETH",
      "offset": [
        993,
        1054
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x4"
    },
    "263": {
      "fn": "AdvancedVault.flashLoanETH",
      "offset": [
        993,
        1054
      ],
      "op": "ADD",
      "path": "31"
    },
    "264": {
      "fn": "AdvancedVault.flashLoanETH",
      "offset": [
        993,
        1054
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x0"
    },
    "266": {
      "fn": "AdvancedVault.flashLoanETH",
      "offset": [
        993,
        1054
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x40"
    },
    "268": {
      "fn": "AdvancedVault.flashLoanETH",
      "offset": [
        993,
        1054
      ],
      "op": "MLOAD",
      "path": "31"
    },
    "269": {
      "fn": "AdvancedVault.flashLoanETH",
      "offset": [
        993,
        1054
      ],
      "op": "DUP1",
      "path": "31"
    },
    "270": {
      "fn": "AdvancedVault.flashLoanETH",
      "offset": [
        993,
        1054
      ],
      "op": "DUP4",
      "path": "31"
    },
    "271": {
      "fn": "AdvancedVault.flashLoanETH",
      "offset": [
        993,
        1054
      ],
      "op": "SUB",
      "path": "31"
    },
    "272": {
      "fn": "AdvancedVault.flashLoanETH",
      "offset": [
        993,
        1054
      ],
      "op": "DUP2",
      "path": "31"
    },
    "273": {
      "fn": "AdvancedVault.flashLoanETH",
      "offset": [
        993,
        1054
      ],
      "op": "DUP6",
      "path": "31"
    },
    "274": {
      "fn": "AdvancedVault.flashLoanETH",
      "offset": [
        993,
        1054
      ],
      "op": "DUP9",
      "path": "31"
    },
    "275": {
      "fn": "AdvancedVault.flashLoanETH",
      "offset": [
        993,
        1054
      ],
      "op": "DUP1",
      "path": "31"
    },
    "276": {
      "fn": "AdvancedVault.flashLoanETH",
      "offset": [
        993,
        1054
      ],
      "op": "EXTCODESIZE",
      "path": "31"
    },
    "277": {
      "fn": "AdvancedVault.flashLoanETH",
      "offset": [
        993,
        1054
      ],
      "op": "ISZERO",
      "path": "31"
    },
    "278": {
      "fn": "AdvancedVault.flashLoanETH",
      "offset": [
        993,
        1054
      ],
      "op": "DUP1",
      "path": "31"
    },
    "279": {
      "fn": "AdvancedVault.flashLoanETH",
      "offset": [
        993,
        1054
      ],
      "op": "ISZERO",
      "path": "31"
    },
    "280": {
      "fn": "AdvancedVault.flashLoanETH",
      "offset": [
        993,
        1054
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x120"
    },
    "283": {
      "fn": "AdvancedVault.flashLoanETH",
      "offset": [
        993,
        1054
      ],
      "op": "JUMPI",
      "path": "31"
    },
    "284": {
      "fn": "AdvancedVault.flashLoanETH",
      "offset": [
        993,
        1054
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x0"
    },
    "286": {
      "fn": "AdvancedVault.flashLoanETH",
      "offset": [
        993,
        1054
      ],
      "op": "DUP1",
      "path": "31"
    },
    "287": {
      "fn": "AdvancedVault.flashLoanETH",
      "offset": [
        993,
        1054
      ],
      "op": "REVERT",
      "path": "31"
    },
    "288": {
      "fn": "AdvancedVault.flashLoanETH",
      "offset": [
        993,
        1054
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "289": {
      "fn": "AdvancedVault.flashLoanETH",
      "offset": [
        993,
        1054
      ],
      "op": "POP",
      "path": "31"
    },
    "290": {
      "fn": "AdvancedVault.flashLoanETH",
      "offset": [
        993,
        1054
      ],
      "op": "GAS",
      "path": "31"
    },
    "291": {
      "fn": "AdvancedVault.flashLoanETH",
      "offset": [
        993,
        1054
      ],
      "op": "CALL",
      "path": "31"
    },
    "292": {
      "fn": "AdvancedVault.flashLoanETH",
      "offset": [
        993,
        1054
      ],
      "op": "ISZERO",
      "path": "31"
    },
    "293": {
      "fn": "AdvancedVault.flashLoanETH",
      "offset": [
        993,
        1054
      ],
      "op": "DUP1",
      "path": "31"
    },
    "294": {
      "fn": "AdvancedVault.flashLoanETH",
      "offset": [
        993,
        1054
      ],
      "op": "ISZERO",
      "path": "31"
    },
    "295": {
      "fn": "AdvancedVault.flashLoanETH",
      "offset": [
        993,
        1054
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x134"
    },
    "298": {
      "fn": "AdvancedVault.flashLoanETH",
      "offset": [
        993,
        1054
      ],
      "op": "JUMPI",
      "path": "31"
    },
    "299": {
      "fn": "AdvancedVault.flashLoanETH",
      "offset": [
        993,
        1054
      ],
      "op": "RETURNDATASIZE",
      "path": "31"
    },
    "300": {
      "fn": "AdvancedVault.flashLoanETH",
      "offset": [
        993,
        1054
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x0"
    },
    "302": {
      "fn": "AdvancedVault.flashLoanETH",
      "offset": [
        993,
        1054
      ],
      "op": "DUP1",
      "path": "31"
    },
    "303": {
      "fn": "AdvancedVault.flashLoanETH",
      "offset": [
        993,
        1054
      ],
      "op": "RETURNDATACOPY",
      "path": "31"
    },
    "304": {
      "fn": "AdvancedVault.flashLoanETH",
      "offset": [
        993,
        1054
      ],
      "op": "RETURNDATASIZE",
      "path": "31"
    },
    "305": {
      "fn": "AdvancedVault.flashLoanETH",
      "offset": [
        993,
        1054
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x0"
    },
    "307": {
      "fn": "AdvancedVault.flashLoanETH",
      "offset": [
        993,
        1054
      ],
      "op": "REVERT",
      "path": "31"
    },
    "308": {
      "fn": "AdvancedVault.flashLoanETH",
      "offset": [
        993,
        1054
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "309": {
      "fn": "AdvancedVault.flashLoanETH",
      "offset": [
        993,
        1054
      ],
      "op": "POP",
      "path": "31"
    },
    "310": {
      "fn": "AdvancedVault.flashLoanETH",
      "offset": [
        993,
        1054
      ],
      "op": "POP",
      "path": "31"
    },
    "311": {
      "fn": "AdvancedVault.flashLoanETH",
      "offset": [
        993,
        1054
      ],
      "op": "POP",
      "path": "31"
    },
    "312": {
      "fn": "AdvancedVault.flashLoanETH",
      "offset": [
        993,
        1054
      ],
      "op": "POP",
      "path": "31"
    },
    "313": {
      "fn": "AdvancedVault.flashLoanETH",
      "offset": [
        993,
        1054
      ],
      "op": "POP",
      "path": "31"
    },
    "314": {
      "fn": "AdvancedVault.flashLoanETH",
      "offset": [
        1097,
        1110
      ],
      "op": "DUP1",
      "path": "31",
      "statement": 2
    },
    "315": {
      "fn": "AdvancedVault.flashLoanETH",
      "offset": [
        1072,
        1093
      ],
      "op": "SELFBALANCE",
      "path": "31"
    },
    "316": {
      "fn": "AdvancedVault.flashLoanETH",
      "offset": [
        1072,
        1110
      ],
      "op": "LT",
      "path": "31"
    },
    "317": {
      "branch": 9,
      "fn": "AdvancedVault.flashLoanETH",
      "offset": [
        1072,
        1110
      ],
      "op": "ISZERO",
      "path": "31"
    },
    "318": {
      "fn": "AdvancedVault.flashLoanETH",
      "offset": [
        1064,
        1140
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x189"
    },
    "321": {
      "branch": 9,
      "fn": "AdvancedVault.flashLoanETH",
      "offset": [
        1064,
        1140
      ],
      "op": "JUMPI",
      "path": "31"
    },
    "322": {
      "fn": "AdvancedVault.flashLoanETH",
      "offset": [
        1064,
        1140
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x40"
    },
    "324": {
      "fn": "AdvancedVault.flashLoanETH",
      "offset": [
        1064,
        1140
      ],
      "op": "MLOAD",
      "path": "31"
    },
    "325": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "329": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "331": {
      "op": "SHL"
    },
    "332": {
      "fn": "AdvancedVault.flashLoanETH",
      "offset": [
        1064,
        1140
      ],
      "op": "DUP2",
      "path": "31"
    },
    "333": {
      "fn": "AdvancedVault.flashLoanETH",
      "offset": [
        1064,
        1140
      ],
      "op": "MSTORE",
      "path": "31"
    },
    "334": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "336": {
      "fn": "AdvancedVault.flashLoanETH",
      "offset": [
        1064,
        1140
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x4"
    },
    "338": {
      "fn": "AdvancedVault.flashLoanETH",
      "offset": [
        1064,
        1140
      ],
      "op": "DUP3",
      "path": "31"
    },
    "339": {
      "fn": "AdvancedVault.flashLoanETH",
      "offset": [
        1064,
        1140
      ],
      "op": "ADD",
      "path": "31"
    },
    "340": {
      "op": "MSTORE"
    },
    "341": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "343": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "345": {
      "op": "DUP3"
    },
    "346": {
      "op": "ADD"
    },
    "347": {
      "op": "MSTORE"
    },
    "348": {
      "op": "PUSH32",
      "value": "0x4E65656420746F20706179206261636B20746865206C6F616E00000000000000"
    },
    "381": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "383": {
      "op": "DUP3"
    },
    "384": {
      "op": "ADD"
    },
    "385": {
      "op": "MSTORE"
    },
    "386": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "388": {
      "op": "ADD"
    },
    "389": {
      "fn": "AdvancedVault.flashLoanETH",
      "offset": [
        1064,
        1140
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0xDC"
    },
    "392": {
      "op": "JUMP"
    },
    "393": {
      "fn": "AdvancedVault.flashLoanETH",
      "offset": [
        1064,
        1140
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "394": {
      "fn": "AdvancedVault.flashLoanETH",
      "offset": [
        836,
        1155
      ],
      "op": "POP",
      "path": "31"
    },
    "395": {
      "fn": "AdvancedVault.flashLoanETH",
      "offset": [
        789,
        1155
      ],
      "op": "POP",
      "path": "31"
    },
    "396": {
      "fn": "AdvancedVault.flashLoanETH",
      "jump": "o",
      "offset": [
        789,
        1155
      ],
      "op": "JUMP",
      "path": "31"
    },
    "397": {
      "fn": "AdvancedVault.withdrawETH",
      "offset": [
        616,
        783
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "398": {
      "fn": "AdvancedVault.withdrawETH",
      "offset": [
        684,
        694
      ],
      "op": "CALLER",
      "path": "31"
    },
    "399": {
      "fn": "AdvancedVault.withdrawETH",
      "offset": [
        658,
        672
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x0"
    },
    "401": {
      "fn": "AdvancedVault.withdrawETH",
      "offset": [
        675,
        695
      ],
      "op": "DUP2",
      "path": "31"
    },
    "402": {
      "fn": "AdvancedVault.withdrawETH",
      "offset": [
        675,
        695
      ],
      "op": "DUP2",
      "path": "31"
    },
    "403": {
      "fn": "AdvancedVault.withdrawETH",
      "offset": [
        675,
        695
      ],
      "op": "MSTORE",
      "path": "31"
    },
    "404": {
      "fn": "AdvancedVault.withdrawETH",
      "offset": [
        675,
        695
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x20"
    },
    "406": {
      "fn": "AdvancedVault.withdrawETH",
      "offset": [
        675,
        695
      ],
      "op": "DUP2",
      "path": "31"
    },
    "407": {
      "fn": "AdvancedVault.withdrawETH",
      "offset": [
        675,
        695
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "408": {
      "fn": "AdvancedVault.withdrawETH",
      "offset": [
        675,
        695
      ],
      "op": "MSTORE",
      "path": "31"
    },
    "409": {
      "fn": "AdvancedVault.withdrawETH",
      "offset": [
        675,
        695
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x40"
    },
    "411": {
      "fn": "AdvancedVault.withdrawETH",
      "offset": [
        675,
        695
      ],
      "op": "DUP2",
      "path": "31"
    },
    "412": {
      "fn": "AdvancedVault.withdrawETH",
      "offset": [
        675,
        695
      ],
      "op": "KECCAK256",
      "path": "31"
    },
    "413": {
      "fn": "AdvancedVault.withdrawETH",
      "offset": [
        675,
        695
      ],
      "op": "DUP1",
      "path": "31"
    },
    "414": {
      "fn": "AdvancedVault.withdrawETH",
      "offset": [
        675,
        695
      ],
      "op": "SLOAD",
      "path": "31"
    },
    "415": {
      "fn": "AdvancedVault.withdrawETH",
      "offset": [
        705,
        729
      ],
      "op": "SWAP2",
      "path": "31",
      "statement": 3
    },
    "416": {
      "fn": "AdvancedVault.withdrawETH",
      "offset": [
        705,
        729
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "417": {
      "fn": "AdvancedVault.withdrawETH",
      "offset": [
        705,
        729
      ],
      "op": "SSTORE",
      "path": "31"
    },
    "418": {
      "fn": "AdvancedVault.withdrawETH",
      "offset": [
        675,
        695
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "419": {
      "fn": "AdvancedVault.withdrawETH",
      "offset": [
        739,
        776
      ],
      "op": "PUSH2",
      "path": "31",
      "statement": 4,
      "value": "0x1AC"
    },
    "422": {
      "fn": "AdvancedVault.withdrawETH",
      "offset": [
        739,
        776
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "423": {
      "fn": "AdvancedVault.withdrawETH",
      "offset": [
        675,
        695
      ],
      "op": "DUP3",
      "path": "31"
    },
    "424": {
      "fn": "AdvancedVault.withdrawETH",
      "offset": [
        739,
        768
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x1D5"
    },
    "427": {
      "fn": "AdvancedVault.withdrawETH",
      "jump": "i",
      "offset": [
        739,
        776
      ],
      "op": "JUMP",
      "path": "31"
    },
    "428": {
      "fn": "AdvancedVault.withdrawETH",
      "offset": [
        739,
        776
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "429": {
      "fn": "AdvancedVault.withdrawETH",
      "offset": [
        648,
        783
      ],
      "op": "POP",
      "path": "31"
    },
    "430": {
      "fn": "AdvancedVault.withdrawETH",
      "jump": "o",
      "offset": [
        616,
        783
      ],
      "op": "JUMP",
      "path": "31"
    },
    "431": {
      "fn": "AdvancedVault.depositETH",
      "offset": [
        521,
        610
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "432": {
      "fn": "AdvancedVault.depositETH",
      "offset": [
        579,
        589
      ],
      "op": "CALLER",
      "path": "31",
      "statement": 5
    },
    "433": {
      "fn": "AdvancedVault.depositETH",
      "offset": [
        570,
        578
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x0"
    },
    "435": {
      "fn": "AdvancedVault.depositETH",
      "offset": [
        570,
        590
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "436": {
      "fn": "AdvancedVault.depositETH",
      "offset": [
        570,
        590
      ],
      "op": "DUP2",
      "path": "31"
    },
    "437": {
      "fn": "AdvancedVault.depositETH",
      "offset": [
        570,
        590
      ],
      "op": "MSTORE",
      "path": "31"
    },
    "438": {
      "fn": "AdvancedVault.depositETH",
      "offset": [
        570,
        590
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x20"
    },
    "440": {
      "fn": "AdvancedVault.depositETH",
      "offset": [
        570,
        590
      ],
      "op": "DUP2",
      "path": "31"
    },
    "441": {
      "fn": "AdvancedVault.depositETH",
      "offset": [
        570,
        590
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "442": {
      "fn": "AdvancedVault.depositETH",
      "offset": [
        570,
        590
      ],
      "op": "MSTORE",
      "path": "31"
    },
    "443": {
      "fn": "AdvancedVault.depositETH",
      "offset": [
        570,
        590
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x40"
    },
    "445": {
      "fn": "AdvancedVault.depositETH",
      "offset": [
        570,
        590
      ],
      "op": "DUP2",
      "path": "31"
    },
    "446": {
      "fn": "AdvancedVault.depositETH",
      "offset": [
        570,
        590
      ],
      "op": "KECCAK256",
      "path": "31"
    },
    "447": {
      "fn": "AdvancedVault.depositETH",
      "offset": [
        570,
        603
      ],
      "op": "DUP1",
      "path": "31"
    },
    "448": {
      "fn": "AdvancedVault.depositETH",
      "offset": [
        570,
        603
      ],
      "op": "SLOAD",
      "path": "31"
    },
    "449": {
      "fn": "AdvancedVault.depositETH",
      "offset": [
        594,
        603
      ],
      "op": "CALLVALUE",
      "path": "31"
    },
    "450": {
      "fn": "AdvancedVault.depositETH",
      "offset": [
        594,
        603
      ],
      "op": "SWAP3",
      "path": "31"
    },
    "451": {
      "fn": "AdvancedVault.depositETH",
      "offset": [
        570,
        578
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "452": {
      "fn": "AdvancedVault.depositETH",
      "offset": [
        570,
        603
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x1CE"
    },
    "455": {
      "fn": "AdvancedVault.depositETH",
      "offset": [
        570,
        603
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "456": {
      "fn": "AdvancedVault.depositETH",
      "offset": [
        594,
        603
      ],
      "op": "DUP5",
      "path": "31"
    },
    "457": {
      "fn": "AdvancedVault.depositETH",
      "offset": [
        594,
        603
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "458": {
      "fn": "AdvancedVault.depositETH",
      "offset": [
        570,
        603
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x30C"
    },
    "461": {
      "fn": "AdvancedVault.depositETH",
      "jump": "i",
      "offset": [
        570,
        603
      ],
      "op": "JUMP",
      "path": "31"
    },
    "462": {
      "fn": "AdvancedVault.depositETH",
      "offset": [
        570,
        603
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "463": {
      "fn": "AdvancedVault.depositETH",
      "offset": [
        570,
        603
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "464": {
      "fn": "AdvancedVault.depositETH",
      "offset": [
        570,
        603
      ],
      "op": "SWAP2",
      "path": "31"
    },
    "465": {
      "fn": "AdvancedVault.depositETH",
      "offset": [
        570,
        603
      ],
      "op": "SSTORE",
      "path": "31"
    },
    "466": {
      "op": "POP"
    },
    "467": {
      "op": "POP"
    },
    "468": {
      "fn": "AdvancedVault.depositETH",
      "jump": "o",
      "offset": [
        521,
        610
      ],
      "op": "JUMP",
      "path": "31"
    },
    "469": {
      "fn": "Address.sendValue",
      "offset": [
        2412,
        2724
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "470": {
      "fn": "Address.sendValue",
      "offset": [
        2526,
        2532
      ],
      "op": "DUP1",
      "path": "12",
      "statement": 6
    },
    "471": {
      "fn": "Address.sendValue",
      "offset": [
        2501,
        2522
      ],
      "op": "SELFBALANCE",
      "path": "12"
    },
    "472": {
      "fn": "Address.sendValue",
      "offset": [
        2501,
        2532
      ],
      "op": "LT",
      "path": "12"
    },
    "473": {
      "branch": 10,
      "fn": "Address.sendValue",
      "offset": [
        2501,
        2532
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "474": {
      "fn": "Address.sendValue",
      "offset": [
        2493,
        2566
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x225"
    },
    "477": {
      "branch": 10,
      "fn": "Address.sendValue",
      "offset": [
        2493,
        2566
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "478": {
      "fn": "Address.sendValue",
      "offset": [
        2493,
        2566
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "480": {
      "fn": "Address.sendValue",
      "offset": [
        2493,
        2566
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "481": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "485": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "487": {
      "op": "SHL"
    },
    "488": {
      "fn": "Address.sendValue",
      "offset": [
        2493,
        2566
      ],
      "op": "DUP2",
      "path": "12"
    },
    "489": {
      "fn": "Address.sendValue",
      "offset": [
        2493,
        2566
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "490": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "492": {
      "fn": "Address.sendValue",
      "offset": [
        2493,
        2566
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "494": {
      "fn": "Address.sendValue",
      "offset": [
        2493,
        2566
      ],
      "op": "DUP3",
      "path": "12"
    },
    "495": {
      "fn": "Address.sendValue",
      "offset": [
        2493,
        2566
      ],
      "op": "ADD",
      "path": "12"
    },
    "496": {
      "op": "MSTORE"
    },
    "497": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "499": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "501": {
      "op": "DUP3"
    },
    "502": {
      "op": "ADD"
    },
    "503": {
      "op": "MSTORE"
    },
    "504": {
      "op": "PUSH32",
      "value": "0x416464726573733A20696E73756666696369656E742062616C616E6365000000"
    },
    "537": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "539": {
      "op": "DUP3"
    },
    "540": {
      "op": "ADD"
    },
    "541": {
      "op": "MSTORE"
    },
    "542": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "544": {
      "op": "ADD"
    },
    "545": {
      "fn": "Address.sendValue",
      "offset": [
        2493,
        2566
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xDC"
    },
    "548": {
      "op": "JUMP"
    },
    "549": {
      "fn": "Address.sendValue",
      "offset": [
        2493,
        2566
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "550": {
      "fn": "Address.sendValue",
      "offset": [
        2578,
        2590
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "552": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2605
      ],
      "op": "DUP3",
      "path": "12"
    },
    "553": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "555": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "557": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "559": {
      "op": "SHL"
    },
    "560": {
      "op": "SUB"
    },
    "561": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2610
      ],
      "op": "AND",
      "path": "12"
    },
    "562": {
      "fn": "Address.sendValue",
      "offset": [
        2618,
        2624
      ],
      "op": "DUP3",
      "path": "12"
    },
    "563": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "565": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "566": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "568": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "570": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "571": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "DUP1",
      "path": "12"
    },
    "572": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "DUP4",
      "path": "12"
    },
    "573": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "SUB",
      "path": "12"
    },
    "574": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "DUP2",
      "path": "12"
    },
    "575": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "DUP6",
      "path": "12"
    },
    "576": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "DUP8",
      "path": "12"
    },
    "577": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "GAS",
      "path": "12"
    },
    "578": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "CALL",
      "path": "12"
    },
    "579": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "580": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "POP",
      "path": "12"
    },
    "581": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "POP",
      "path": "12"
    },
    "582": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "POP",
      "path": "12"
    },
    "583": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "584": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "DUP1",
      "path": "12"
    },
    "585": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "587": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "DUP2",
      "path": "12"
    },
    "588": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "EQ",
      "path": "12"
    },
    "589": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x272"
    },
    "592": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "593": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "595": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "596": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "597": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "POP",
      "path": "12"
    },
    "598": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "600": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "NOT",
      "path": "12"
    },
    "601": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x3F"
    },
    "603": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "604": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "ADD",
      "path": "12"
    },
    "605": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "AND",
      "path": "12"
    },
    "606": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "DUP3",
      "path": "12"
    },
    "607": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "ADD",
      "path": "12"
    },
    "608": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "610": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "611": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "612": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "DUP3",
      "path": "12"
    },
    "613": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "614": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "615": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "617": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "619": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "DUP5",
      "path": "12"
    },
    "620": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "ADD",
      "path": "12"
    },
    "621": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "RETURNDATACOPY",
      "path": "12"
    },
    "622": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x277"
    },
    "625": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "JUMP",
      "path": "12"
    },
    "626": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "627": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x60"
    },
    "629": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "630": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "POP",
      "path": "12"
    },
    "631": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "632": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "POP",
      "path": "12"
    },
    "633": {
      "fn": "Address.sendValue",
      "offset": [
        2577,
        2629
      ],
      "op": "POP",
      "path": "12"
    },
    "634": {
      "fn": "Address.sendValue",
      "offset": [
        2577,
        2629
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "635": {
      "fn": "Address.sendValue",
      "offset": [
        2577,
        2629
      ],
      "op": "POP",
      "path": "12"
    },
    "636": {
      "branch": 11,
      "fn": "Address.sendValue",
      "offset": [
        2647,
        2654
      ],
      "op": "DUP1",
      "path": "12",
      "statement": 7
    },
    "637": {
      "fn": "Address.sendValue",
      "offset": [
        2639,
        2717
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2EE"
    },
    "640": {
      "branch": 11,
      "fn": "Address.sendValue",
      "offset": [
        2639,
        2717
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "641": {
      "fn": "Address.sendValue",
      "offset": [
        2639,
        2717
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "643": {
      "fn": "Address.sendValue",
      "offset": [
        2639,
        2717
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "644": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "648": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "650": {
      "op": "SHL"
    },
    "651": {
      "fn": "Address.sendValue",
      "offset": [
        2639,
        2717
      ],
      "op": "DUP2",
      "path": "12"
    },
    "652": {
      "fn": "Address.sendValue",
      "offset": [
        2639,
        2717
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "653": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "655": {
      "fn": "Address.sendValue",
      "offset": [
        2639,
        2717
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "657": {
      "fn": "Address.sendValue",
      "offset": [
        2639,
        2717
      ],
      "op": "DUP3",
      "path": "12"
    },
    "658": {
      "fn": "Address.sendValue",
      "offset": [
        2639,
        2717
      ],
      "op": "ADD",
      "path": "12"
    },
    "659": {
      "op": "MSTORE"
    },
    "660": {
      "op": "PUSH1",
      "value": "0x3A"
    },
    "662": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "664": {
      "op": "DUP3"
    },
    "665": {
      "op": "ADD"
    },
    "666": {
      "op": "MSTORE"
    },
    "667": {
      "op": "PUSH32",
      "value": "0x416464726573733A20756E61626C6520746F2073656E642076616C75652C2072"
    },
    "700": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "702": {
      "op": "DUP3"
    },
    "703": {
      "op": "ADD"
    },
    "704": {
      "op": "MSTORE"
    },
    "705": {
      "op": "PUSH32",
      "value": "0x6563697069656E74206D61792068617665207265766572746564000000000000"
    },
    "738": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "740": {
      "op": "DUP3"
    },
    "741": {
      "op": "ADD"
    },
    "742": {
      "op": "MSTORE"
    },
    "743": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "745": {
      "op": "ADD"
    },
    "746": {
      "fn": "Address.sendValue",
      "offset": [
        2639,
        2717
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xDC"
    },
    "749": {
      "op": "JUMP"
    },
    "750": {
      "fn": "Address.sendValue",
      "offset": [
        2639,
        2717
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "751": {
      "fn": "Address.sendValue",
      "offset": [
        2483,
        2724
      ],
      "op": "POP",
      "path": "12"
    },
    "752": {
      "fn": "Address.sendValue",
      "offset": [
        2412,
        2724
      ],
      "op": "POP",
      "path": "12"
    },
    "753": {
      "fn": "Address.sendValue",
      "offset": [
        2412,
        2724
      ],
      "op": "POP",
      "path": "12"
    },
    "754": {
      "fn": "Address.sendValue",
      "jump": "o",
      "offset": [
        2412,
        2724
      ],
      "op": "JUMP",
      "path": "12"
    },
    "755": {
      "op": "JUMPDEST"
    },
    "756": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "758": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "760": {
      "op": "DUP3"
    },
    "761": {
      "op": "DUP5"
    },
    "762": {
      "op": "SUB"
    },
    "763": {
      "op": "SLT"
    },
    "764": {
      "op": "ISZERO"
    },
    "765": {
      "op": "PUSH2",
      "value": "0x305"
    },
    "768": {
      "op": "JUMPI"
    },
    "769": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "771": {
      "op": "DUP1"
    },
    "772": {
      "op": "REVERT"
    },
    "773": {
      "op": "JUMPDEST"
    },
    "774": {
      "op": "POP"
    },
    "775": {
      "op": "CALLDATALOAD"
    },
    "776": {
      "op": "SWAP2"
    },
    "777": {
      "op": "SWAP1"
    },
    "778": {
      "op": "POP"
    },
    "779": {
      "jump": "o",
      "op": "JUMP"
    },
    "780": {
      "op": "JUMPDEST"
    },
    "781": {
      "op": "DUP1"
    },
    "782": {
      "op": "DUP3"
    },
    "783": {
      "op": "ADD"
    },
    "784": {
      "op": "DUP1"
    },
    "785": {
      "op": "DUP3"
    },
    "786": {
      "op": "GT"
    },
    "787": {
      "op": "ISZERO"
    },
    "788": {
      "op": "PUSH2",
      "value": "0x32D"
    },
    "791": {
      "op": "JUMPI"
    },
    "792": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "797": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "799": {
      "op": "SHL"
    },
    "800": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "802": {
      "op": "MSTORE"
    },
    "803": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "805": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "807": {
      "op": "MSTORE"
    },
    "808": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "810": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "812": {
      "op": "REVERT"
    },
    "813": {
      "op": "JUMPDEST"
    },
    "814": {
      "op": "SWAP3"
    },
    "815": {
      "op": "SWAP2"
    },
    "816": {
      "op": "POP"
    },
    "817": {
      "op": "POP"
    },
    "818": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "d10ebb016ac34b5d8d9a66dfe5ee781601b910ee",
  "source": "// SCH Course Copyright Policy (C): DO-NOT-SHARE-WITH-ANYONE\n// https://smartcontractshacking.com/#copyright-policy\npragma solidity ^0.8.13;\n\nimport \"@openzeppelin/contracts/utils/Address.sol\";\n\ninterface IFlashLoanEtherReceiver {\n    function callBack() external payable;\n}\n\n/**\n * @title AdvancedVault\n * @author JohnnyTime (https://smartcontractshacking.com)\n */\ncontract AdvancedVault {\n\n    using Address for address payable;\n    mapping (address => uint256) private balances;\n    \n    constructor() payable {}\n\n    function depositETH() external payable {\n        balances[msg.sender] += msg.value;\n    }\n\n    function withdrawETH() external {\n        uint256 amount = balances[msg.sender];\n        balances[msg.sender] = 0;\n        payable(msg.sender).sendValue(amount);\n    }\n\n    function flashLoanETH(uint256 amount) external {\n        uint256 balanceBefore = address(this).balance;\n        require(balanceBefore >= amount, \"Requested amount is greater than Vault balance\");\n        IFlashLoanEtherReceiver(msg.sender).callBack{value: amount}();\n        require(address(this).balance >= balanceBefore, \"Need to pay back the loan\");        \n    }\n\n}\n",
  "sourceMap": "366:792:31:-:0;;;;;;;;;",
  "sourcePath": "contracts/flash-loan-attacks-2/AdvancedVault.sol",
  "type": "contract"
}