{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "depositTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "borrowAmount",
          "type": "uint256"
        }
      ],
      "name": "flashLoan",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "poolBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "shibaToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "1": "/Users/m4ud/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/security/ReentrancyGuard.sol",
    "11": "contracts/dos-3/ShibaPool.sol",
    "3": "/Users/m4ud/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/token/ERC20/IERC20.sol"
  },
  "ast": {
    "absolutePath": "contracts/dos-3/ShibaPool.sol",
    "exportedSymbols": {
      "IERC20": [
        2118
      ],
      "IReceiver": [
        1028
      ],
      "ReentrancyGuard": [
        2502
      ],
      "ShibaPool": [
        1158
      ]
    },
    "id": 1159,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1018,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".13"
        ],
        "nodeType": "PragmaDirective",
        "src": "116:24:11"
      },
      {
        "absolutePath": "/Users/m4ud/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 1019,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1159,
        "sourceUnit": 2119,
        "src": "142:56:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/m4ud/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/security/ReentrancyGuard.sol",
        "file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "id": 1020,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1159,
        "sourceUnit": 2503,
        "src": "199:62:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IReceiver",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 1028,
        "linearizedBaseContracts": [
          1028
        ],
        "name": "IReceiver",
        "nameLocation": "273:9:11",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "functionSelector": "2c512d6e",
            "id": 1027,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getTokens",
            "nameLocation": "298:9:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1025,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1022,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "316:12:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1027,
                  "src": "308:20:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1021,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "308:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1024,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "338:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1027,
                  "src": "330:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1023,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "330:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "307:38:11"
            },
            "returnParameters": {
              "id": 1026,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "354:0:11"
            },
            "scope": 1028,
            "src": "289:66:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1159,
        "src": "263:94:11",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1030,
              "name": "ReentrancyGuard",
              "nameLocations": [
                "467:15:11"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2502,
              "src": "467:15:11"
            },
            "id": 1031,
            "nodeType": "InheritanceSpecifier",
            "src": "467:15:11"
          }
        ],
        "canonicalName": "ShibaPool",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 1029,
          "nodeType": "StructuredDocumentation",
          "src": "359:85:11",
          "text": " @title ShibaPool\n @author JohnnyTime (https://smartcontractshacking.com)"
        },
        "fullyImplemented": true,
        "id": 1158,
        "linearizedBaseContracts": [
          1158,
          2502
        ],
        "name": "ShibaPool",
        "nameLocation": "454:9:11",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "083c1838",
            "id": 1034,
            "mutability": "immutable",
            "name": "shibaToken",
            "nameLocation": "514:10:11",
            "nodeType": "VariableDeclaration",
            "scope": 1158,
            "src": "490:34:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$2118",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 1033,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1032,
                "name": "IERC20",
                "nameLocations": [
                  "490:6:11"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2118,
                "src": "490:6:11"
              },
              "referencedDeclaration": 2118,
              "src": "490:6:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$2118",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "96365d44",
            "id": 1036,
            "mutability": "mutable",
            "name": "poolBalance",
            "nameLocation": "545:11:11",
            "nodeType": "VariableDeclaration",
            "scope": 1158,
            "src": "530:26:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1035,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "530:7:11",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 1047,
              "nodeType": "Block",
              "src": "597:50:11",
              "statements": [
                {
                  "expression": {
                    "id": 1045,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1041,
                      "name": "shibaToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1034,
                      "src": "607:10:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$2118",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1043,
                          "name": "tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1038,
                          "src": "627:12:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1042,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2118,
                        "src": "620:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$2118_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 1044,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "620:20:11",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$2118",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "607:33:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$2118",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 1046,
                  "nodeType": "ExpressionStatement",
                  "src": "607:33:11"
                }
              ]
            },
            "id": 1048,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1039,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1038,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "583:12:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1048,
                  "src": "575:20:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1037,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "575:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "574:22:11"
            },
            "returnParameters": {
              "id": 1040,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "597:0:11"
            },
            "scope": 1158,
            "src": "563:84:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1080,
              "nodeType": "Block",
              "src": "714:218:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1058,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1056,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1050,
                          "src": "767:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1057,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "776:1:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "767:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "616d6f756e742073686f756c642062652067726561746572207468616e2030",
                        "id": 1059,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "779:33:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bf61a39e1630036b71f28ed5a2a9ccdf861012ed2f49b534cd9eea01d0258437",
                          "typeString": "literal_string \"amount should be greater than 0\""
                        },
                        "value": "amount should be greater than 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bf61a39e1630036b71f28ed5a2a9ccdf861012ed2f49b534cd9eea01d0258437",
                          "typeString": "literal_string \"amount should be greater than 0\""
                        }
                      ],
                      "id": 1055,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "759:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1060,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "759:54:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1061,
                  "nodeType": "ExpressionStatement",
                  "src": "759:54:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1065,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "847:3:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1066,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "851:6:11",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "847:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1069,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "867:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ShibaPool_$1158",
                              "typeString": "contract ShibaPool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ShibaPool_$1158",
                              "typeString": "contract ShibaPool"
                            }
                          ],
                          "id": 1068,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "859:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1067,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "859:7:11",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1070,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "859:13:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1071,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1050,
                        "src": "874:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1062,
                        "name": "shibaToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1034,
                        "src": "823:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2118",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1064,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "834:12:11",
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2117,
                      "src": "823:23:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1072,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "823:58:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1073,
                  "nodeType": "ExpressionStatement",
                  "src": "823:58:11"
                },
                {
                  "expression": {
                    "id": 1078,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1074,
                      "name": "poolBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1036,
                      "src": "891:11:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1077,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1075,
                        "name": "poolBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1036,
                        "src": "905:11:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 1076,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1050,
                        "src": "919:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "905:20:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "891:34:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1079,
                  "nodeType": "ExpressionStatement",
                  "src": "891:34:11"
                }
              ]
            },
            "functionSelector": "dd49756e",
            "id": 1081,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1053,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1052,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "701:12:11"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2478,
                  "src": "701:12:11"
                },
                "nodeType": "ModifierInvocation",
                "src": "701:12:11"
              }
            ],
            "name": "depositTokens",
            "nameLocation": "662:13:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1051,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1050,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "684:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1081,
                  "src": "676:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1049,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "676:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "675:16:11"
            },
            "returnParameters": {
              "id": 1054,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "714:0:11"
            },
            "scope": 1158,
            "src": "653:279:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1156,
              "nodeType": "Block",
              "src": "1001:665:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1091,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1089,
                          "name": "borrowAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1083,
                          "src": "1038:12:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1090,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1053:1:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1038:16:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "616d6f756e742073686f756c642062652067726561746572207468616e2030",
                        "id": 1092,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1056:33:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bf61a39e1630036b71f28ed5a2a9ccdf861012ed2f49b534cd9eea01d0258437",
                          "typeString": "literal_string \"amount should be greater than 0\""
                        },
                        "value": "amount should be greater than 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bf61a39e1630036b71f28ed5a2a9ccdf861012ed2f49b534cd9eea01d0258437",
                          "typeString": "literal_string \"amount should be greater than 0\""
                        }
                      ],
                      "id": 1088,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1030:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1093,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1030:60:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1094,
                  "nodeType": "ExpressionStatement",
                  "src": "1030:60:11"
                },
                {
                  "assignments": [
                    1096
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1096,
                      "mutability": "mutable",
                      "name": "balanceBefore",
                      "nameLocation": "1108:13:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 1156,
                      "src": "1100:21:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1095,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1100:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1104,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1101,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1153:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ShibaPool_$1158",
                              "typeString": "contract ShibaPool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ShibaPool_$1158",
                              "typeString": "contract ShibaPool"
                            }
                          ],
                          "id": 1100,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1145:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1099,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1145:7:11",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1102,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1145:13:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 1097,
                        "name": "shibaToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1034,
                        "src": "1124:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2118",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1098,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1135:9:11",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2075,
                      "src": "1124:20:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 1103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1124:35:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1100:59:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1108,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1106,
                          "name": "poolBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1036,
                          "src": "1177:11:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1107,
                          "name": "balanceBefore",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1096,
                          "src": "1192:13:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1177:28:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4163636f756e74696e67204973737565",
                        "id": 1109,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1207:18:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f1e6222f38448dd2913b9313924096f116820503ee6e7f00450813f7e248090d",
                          "typeString": "literal_string \"Accounting Issue\""
                        },
                        "value": "Accounting Issue"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f1e6222f38448dd2913b9313924096f116820503ee6e7f00450813f7e248090d",
                          "typeString": "literal_string \"Accounting Issue\""
                        }
                      ],
                      "id": 1105,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1169:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1169:57:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1111,
                  "nodeType": "ExpressionStatement",
                  "src": "1169:57:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1115,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1113,
                          "name": "balanceBefore",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1096,
                          "src": "1244:13:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1114,
                          "name": "borrowAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1083,
                          "src": "1261:12:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1244:29:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f75676820746f6b656e7320696e20706f6f6c",
                        "id": 1116,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1275:27:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b72faba0f3ce88ebe3c1e74158cb85235f15025c6f49bcf2ffc16e426ffab345",
                          "typeString": "literal_string \"Not enough tokens in pool\""
                        },
                        "value": "Not enough tokens in pool"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b72faba0f3ce88ebe3c1e74158cb85235f15025c6f49bcf2ffc16e426ffab345",
                          "typeString": "literal_string \"Not enough tokens in pool\""
                        }
                      ],
                      "id": 1112,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1236:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1236:67:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1118,
                  "nodeType": "ExpressionStatement",
                  "src": "1236:67:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1122,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1372:3:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1123,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1376:6:11",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1372:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1124,
                        "name": "borrowAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1083,
                        "src": "1384:12:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1119,
                        "name": "shibaToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1034,
                        "src": "1352:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2118",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1121,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1363:8:11",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2085,
                      "src": "1352:19:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1352:45:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1126,
                  "nodeType": "ExpressionStatement",
                  "src": "1352:45:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1134,
                            "name": "shibaToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1034,
                            "src": "1447:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$2118",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$2118",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 1133,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1439:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1132,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1439:7:11",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1135,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1439:19:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1136,
                        "name": "borrowAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1083,
                        "src": "1460:12:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 1128,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1417:3:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1129,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1421:6:11",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1417:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1127,
                          "name": "IReceiver",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1028,
                          "src": "1407:9:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IReceiver_$1028_$",
                            "typeString": "type(contract IReceiver)"
                          }
                        },
                        "id": 1130,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1407:21:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IReceiver_$1028",
                          "typeString": "contract IReceiver"
                        }
                      },
                      "id": 1131,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1429:9:11",
                      "memberName": "getTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1027,
                      "src": "1407:31:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 1137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1407:66:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1138,
                  "nodeType": "ExpressionStatement",
                  "src": "1407:66:11"
                },
                {
                  "assignments": [
                    1140
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1140,
                      "mutability": "mutable",
                      "name": "balanceAfter",
                      "nameLocation": "1525:12:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 1156,
                      "src": "1517:20:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1139,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1517:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1148,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1145,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1569:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ShibaPool_$1158",
                              "typeString": "contract ShibaPool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ShibaPool_$1158",
                              "typeString": "contract ShibaPool"
                            }
                          ],
                          "id": 1144,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1561:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1143,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1561:7:11",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1146,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1561:13:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 1141,
                        "name": "shibaToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1034,
                        "src": "1540:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2118",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1142,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1551:9:11",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2075,
                      "src": "1540:20:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 1147,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1540:35:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1517:58:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1152,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1150,
                          "name": "balanceAfter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1140,
                          "src": "1593:12:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1151,
                          "name": "balanceBefore",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1096,
                          "src": "1609:13:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1593:29:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "466c617368206c6f616e206861736e2774206265656e2070616964206261636b",
                        "id": 1153,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1624:34:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1dae86046d00ebb5aaf7f545a363e81af36c36f80fbd4f1805487455c218a2ab",
                          "typeString": "literal_string \"Flash loan hasn't been paid back\""
                        },
                        "value": "Flash loan hasn't been paid back"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1dae86046d00ebb5aaf7f545a363e81af36c36f80fbd4f1805487455c218a2ab",
                          "typeString": "literal_string \"Flash loan hasn't been paid back\""
                        }
                      ],
                      "id": 1149,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1585:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1154,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1585:74:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1155,
                  "nodeType": "ExpressionStatement",
                  "src": "1585:74:11"
                }
              ]
            },
            "functionSelector": "9ab603b9",
            "id": 1157,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1086,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1085,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "988:12:11"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2478,
                  "src": "988:12:11"
                },
                "nodeType": "ModifierInvocation",
                "src": "988:12:11"
              }
            ],
            "name": "flashLoan",
            "nameLocation": "947:9:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1084,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1083,
                  "mutability": "mutable",
                  "name": "borrowAmount",
                  "nameLocation": "965:12:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1157,
                  "src": "957:20:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1082,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "957:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "956:22:11"
            },
            "returnParameters": {
              "id": 1087,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1001:0:11"
            },
            "scope": 1158,
            "src": "938:728:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1159,
        "src": "445:1223:11",
        "usedErrors": []
      }
    ],
    "src": "116:1552:11"
  },
  "bytecode": "60a060405234801561001057600080fd5b5060405161071e38038061071e83398101604081905261002f91610045565b60016000556001600160a01b0316608052610075565b60006020828403121561005757600080fd5b81516001600160a01b038116811461006e57600080fd5b9392505050565b60805161066c6100b2600039600081816056015281816101490152818161026e015281816102fb0152818161037b01526104ca015261066c6000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063083c18381461005157806396365d44146100955780639ab603b9146100ac578063dd49756e146100c1575b600080fd5b6100787f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b61009e60015481565b60405190815260200161008c565b6100bf6100ba3660046105b4565b6100d4565b005b6100bf6100cf3660046105b4565b610450565b6100dc61055b565b600081116101315760405162461bcd60e51b815260206004820152601f60248201527f616d6f756e742073686f756c642062652067726561746572207468616e20300060448201526064015b60405180910390fd5b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610198573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101bc91906105cd565b905080600154146102025760405162461bcd60e51b815260206004820152601060248201526f4163636f756e74696e6720497373756560801b6044820152606401610128565b818110156102525760405162461bcd60e51b815260206004820152601960248201527f4e6f7420656e6f75676820746f6b656e7320696e20706f6f6c000000000000006044820152606401610128565b60405163a9059cbb60e01b8152336004820152602481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a9059cbb906044016020604051808303816000875af11580156102bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102e391906105e6565b5060405163162896b760e11b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166004820152602481018390523390632c512d6e90604401600060405180830381600087803b15801561034c57600080fd5b505af1158015610360573d6000803e3d6000fd5b50506040516370a0823160e01b8152306004820152600092507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031691506370a0823190602401602060405180830381865afa1580156103cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ef91906105cd565b9050818110156104415760405162461bcd60e51b815260206004820181905260248201527f466c617368206c6f616e206861736e2774206265656e2070616964206261636b6044820152606401610128565b505061044d6001600055565b50565b61045861055b565b600081116104a85760405162461bcd60e51b815260206004820152601f60248201527f616d6f756e742073686f756c642062652067726561746572207468616e2030006044820152606401610128565b6040516323b872dd60e01b8152336004820152306024820152604481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906323b872dd906064016020604051808303816000875af115801561051b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061053f91906105e6565b508060015461054e919061060f565b60015561044d6001600055565b6002600054036105ad5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610128565b6002600055565b6000602082840312156105c657600080fd5b5035919050565b6000602082840312156105df57600080fd5b5051919050565b6000602082840312156105f857600080fd5b8151801515811461060857600080fd5b9392505050565b8082018082111561063057634e487b7160e01b600052601160045260246000fd5b9291505056fea26469706673582212200d90c2c0f16333af5fdb4c4c6284f8f66e31d9bb09ebe05cbf0ef499612fdc8d64736f6c63430008130033",
  "bytecodeSha1": "53b918856f4a96d7ba54b807437b54dae84ebc3f",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.19+commit.7dd6d404"
  },
  "contractName": "ShibaPool",
  "coverageMap": {
    "branches": {
      "1": {
        "ReentrancyGuard._nonReentrantBefore": {
          "17": [
            2468,
            2487,
            true
          ]
        }
      },
      "11": {
        "ShibaPool.depositTokens": {
          "16": [
            767,
            777,
            true
          ]
        },
        "ShibaPool.flashLoan": {
          "12": [
            1038,
            1054,
            true
          ],
          "13": [
            1177,
            1205,
            true
          ],
          "14": [
            1244,
            1273,
            true
          ],
          "15": [
            1593,
            1622,
            true
          ]
        }
      },
      "3": {}
    },
    "statements": {
      "1": {
        "ReentrancyGuard._nonReentrantAfter": {
          "6": [
            2809,
            2831
          ]
        },
        "ReentrancyGuard._nonReentrantBefore": {
          "10": [
            2460,
            2523
          ],
          "11": [
            2598,
            2616
          ]
        }
      },
      "11": {
        "ShibaPool.depositTokens": {
          "7": [
            759,
            813
          ],
          "8": [
            823,
            881
          ],
          "9": [
            891,
            925
          ]
        },
        "ShibaPool.flashLoan": {
          "0": [
            1030,
            1090
          ],
          "1": [
            1169,
            1226
          ],
          "2": [
            1236,
            1303
          ],
          "3": [
            1352,
            1397
          ],
          "4": [
            1407,
            1473
          ],
          "5": [
            1585,
            1659
          ]
        }
      },
      "3": {}
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.8.0/IERC20",
    "IReceiver",
    "OpenZeppelin/openzeppelin-contracts@4.8.0/ReentrancyGuard"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b506004361061004c5760003560e01c8063083c18381461005157806396365d44146100955780639ab603b9146100ac578063dd49756e146100c1575b600080fd5b6100787f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b61009e60015481565b60405190815260200161008c565b6100bf6100ba3660046105b4565b6100d4565b005b6100bf6100cf3660046105b4565b610450565b6100dc61055b565b600081116101315760405162461bcd60e51b815260206004820152601f60248201527f616d6f756e742073686f756c642062652067726561746572207468616e20300060448201526064015b60405180910390fd5b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610198573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101bc91906105cd565b905080600154146102025760405162461bcd60e51b815260206004820152601060248201526f4163636f756e74696e6720497373756560801b6044820152606401610128565b818110156102525760405162461bcd60e51b815260206004820152601960248201527f4e6f7420656e6f75676820746f6b656e7320696e20706f6f6c000000000000006044820152606401610128565b60405163a9059cbb60e01b8152336004820152602481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a9059cbb906044016020604051808303816000875af11580156102bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102e391906105e6565b5060405163162896b760e11b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166004820152602481018390523390632c512d6e90604401600060405180830381600087803b15801561034c57600080fd5b505af1158015610360573d6000803e3d6000fd5b50506040516370a0823160e01b8152306004820152600092507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031691506370a0823190602401602060405180830381865afa1580156103cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ef91906105cd565b9050818110156104415760405162461bcd60e51b815260206004820181905260248201527f466c617368206c6f616e206861736e2774206265656e2070616964206261636b6044820152606401610128565b505061044d6001600055565b50565b61045861055b565b600081116104a85760405162461bcd60e51b815260206004820152601f60248201527f616d6f756e742073686f756c642062652067726561746572207468616e2030006044820152606401610128565b6040516323b872dd60e01b8152336004820152306024820152604481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906323b872dd906064016020604051808303816000875af115801561051b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061053f91906105e6565b508060015461054e919061060f565b60015561044d6001600055565b6002600054036105ad5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610128565b6002600055565b6000602082840312156105c657600080fd5b5035919050565b6000602082840312156105df57600080fd5b5051919050565b6000602082840312156105f857600080fd5b8151801515811461060857600080fd5b9392505050565b8082018082111561063057634e487b7160e01b600052601160045260246000fd5b9291505056fea26469706673582212200d90c2c0f16333af5fdb4c4c6284f8f66e31d9bb09ebe05cbf0ef499612fdc8d64736f6c63430008130033",
  "deployedSourceMap": "445:1223:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;490:34;;;;;;;;-1:-1:-1;;;;;193:32:20;;;175:51;;163:2;148:18;490:34:11;;;;;;;;530:26;;;;;;;;;383:25:20;;;371:2;356:18;530:26:11;237:177:20;938:728:11;;;;;;:::i;:::-;;:::i;:::-;;653:279;;;;;;:::i;:::-;;:::i;938:728::-;2261:21:1;:19;:21::i;:::-;1053:1:11::1;1038:12;:16;1030:60;;;::::0;-1:-1:-1;;;1030:60:11;;806:2:20;1030:60:11::1;::::0;::::1;788:21:20::0;845:2;825:18;;;818:30;884:33;864:18;;;857:61;935:18;;1030:60:11::1;;;;;;;;;1124:35;::::0;-1:-1:-1;;;1124:35:11;;1153:4:::1;1124:35;::::0;::::1;175:51:20::0;1100:21:11::1;::::0;1124:10:::1;-1:-1:-1::0;;;;;1124:20:11::1;::::0;::::1;::::0;148:18:20;;1124:35:11::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1100:59;;1192:13;1177:11;;:28;1169:57;;;::::0;-1:-1:-1;;;1169:57:11;;1563:2:20;1169:57:11::1;::::0;::::1;1545:21:20::0;1602:2;1582:18;;;1575:30;-1:-1:-1;;;1621:18:20;;;1614:46;1677:18;;1169:57:11::1;1361:340:20::0;1169:57:11::1;1261:12;1244:13;:29;;1236:67;;;::::0;-1:-1:-1;;;1236:67:11;;1908:2:20;1236:67:11::1;::::0;::::1;1890:21:20::0;1947:2;1927:18;;;1920:30;1986:27;1966:18;;;1959:55;2031:18;;1236:67:11::1;1706:349:20::0;1236:67:11::1;1352:45;::::0;-1:-1:-1;;;1352:45:11;;1372:10:::1;1352:45;::::0;::::1;2234:51:20::0;2301:18;;;2294:34;;;1352:10:11::1;-1:-1:-1::0;;;;;1352:19:11::1;::::0;::::1;::::0;2207:18:20;;1352:45:11::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;1407:66:11::1;::::0;-1:-1:-1;;;1407:66:11;;-1:-1:-1;;;;;1447:10:11::1;2252:32:20::0;1407:66:11::1;::::0;::::1;2234:51:20::0;2301:18;;;2294:34;;;1417:10:11::1;::::0;1407:31:::1;::::0;2207:18:20;;1407:66:11::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;1540:35:11::1;::::0;-1:-1:-1;;;1540:35:11;;1569:4:::1;1540:35;::::0;::::1;175:51:20::0;1517:20:11::1;::::0;-1:-1:-1;1540:10:11::1;-1:-1:-1::0;;;;;1540:20:11::1;::::0;-1:-1:-1;1540:20:11::1;::::0;148:18:20;;1540:35:11::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1517:58;;1609:13;1593:12;:29;;1585:74;;;::::0;-1:-1:-1;;;1585:74:11;;2823:2:20;1585:74:11::1;::::0;::::1;2805:21:20::0;;;2842:18;;;2835:30;2901:34;2881:18;;;2874:62;2953:18;;1585:74:11::1;2621:356:20::0;1585:74:11::1;1001:665;;2303:20:1::0;1716:1;2809:7;:22;2629:209;2303:20;938:728:11;:::o;653:279::-;2261:21:1;:19;:21::i;:::-;776:1:11::1;767:6;:10;759:54;;;::::0;-1:-1:-1;;;759:54:11;;806:2:20;759:54:11::1;::::0;::::1;788:21:20::0;845:2;825:18;;;818:30;884:33;864:18;;;857:61;935:18;;759:54:11::1;604:355:20::0;759:54:11::1;823:58;::::0;-1:-1:-1;;;823:58:11;;847:10:::1;823:58;::::0;::::1;3222:34:20::0;867:4:11::1;3272:18:20::0;;;3265:43;3324:18;;;3317:34;;;823:10:11::1;-1:-1:-1::0;;;;;823:23:11::1;::::0;::::1;::::0;3157:18:20;;823:58:11::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;919:6;905:11;;:20;;;;:::i;:::-;891:11;:34:::0;2303:20:1;1716:1;2809:7;:22;2629:209;2336:287;1759:1;2468:7;;:19;2460:63;;;;-1:-1:-1;;;2460:63:1;;3791:2:20;2460:63:1;;;3773:21:20;3830:2;3810:18;;;3803:30;3869:33;3849:18;;;3842:61;3920:18;;2460:63:1;3589:355:20;2460:63:1;1759:1;2598:7;:18;2336:287::o;419:180:20:-;478:6;531:2;519:9;510:7;506:23;502:32;499:52;;;547:1;544;537:12;499:52;-1:-1:-1;570:23:20;;419:180;-1:-1:-1;419:180:20:o;1172:184::-;1242:6;1295:2;1283:9;1274:7;1270:23;1266:32;1263:52;;;1311:1;1308;1301:12;1263:52;-1:-1:-1;1334:16:20;;1172:184;-1:-1:-1;1172:184:20:o;2339:277::-;2406:6;2459:2;2447:9;2438:7;2434:23;2430:32;2427:52;;;2475:1;2472;2465:12;2427:52;2507:9;2501:16;2560:5;2553:13;2546:21;2539:5;2536:32;2526:60;;2582:1;2579;2572:12;2526:60;2605:5;2339:277;-1:-1:-1;;;2339:277:20:o;3362:222::-;3427:9;;;3448:10;;;3445:133;;;3500:10;3495:3;3491:20;3488:1;3481:31;3535:4;3532:1;3525:15;3563:4;3560:1;3553:15;3445:133;3362:222;;;;:::o",
  "language": "Solidity",
  "natspec": {
    "author": "JohnnyTime (https://smartcontractshacking.com)",
    "kind": "dev",
    "methods": {},
    "title": "ShibaPool",
    "version": 1
  },
  "offset": [
    445,
    1668
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x83C1838 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x96365D44 EQ PUSH2 0x95 JUMPI DUP1 PUSH4 0x9AB603B9 EQ PUSH2 0xAC JUMPI DUP1 PUSH4 0xDD49756E EQ PUSH2 0xC1 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x78 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9E PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x8C JUMP JUMPDEST PUSH2 0xBF PUSH2 0xBA CALLDATASIZE PUSH1 0x4 PUSH2 0x5B4 JUMP JUMPDEST PUSH2 0xD4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xBF PUSH2 0xCF CALLDATASIZE PUSH1 0x4 PUSH2 0x5B4 JUMP JUMPDEST PUSH2 0x450 JUMP JUMPDEST PUSH2 0xDC PUSH2 0x55B JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x131 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x616D6F756E742073686F756C642062652067726561746572207468616E203000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x198 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1BC SWAP2 SWAP1 PUSH2 0x5CD JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 SLOAD EQ PUSH2 0x202 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x4163636F756E74696E67204973737565 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x128 JUMP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x252 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F75676820746F6B656E7320696E20706F6F6C00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x128 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2BF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2E3 SWAP2 SWAP1 PUSH2 0x5E6 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x162896B7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE CALLER SWAP1 PUSH4 0x2C512D6E SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x34C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x360 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP3 POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 POP PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3CB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3EF SWAP2 SWAP1 PUSH2 0x5CD JUMP JUMPDEST SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x441 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x466C617368206C6F616E206861736E2774206265656E2070616964206261636B PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x128 JUMP JUMPDEST POP POP PUSH2 0x44D PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x458 PUSH2 0x55B JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x4A8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x616D6F756E742073686F756C642062652067726561746572207468616E203000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x128 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x51B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x53F SWAP2 SWAP1 PUSH2 0x5E6 JUMP JUMPDEST POP DUP1 PUSH1 0x1 SLOAD PUSH2 0x54E SWAP2 SWAP1 PUSH2 0x60F JUMP JUMPDEST PUSH1 0x1 SSTORE PUSH2 0x44D PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD SUB PUSH2 0x5AD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x128 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x608 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x630 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD SWAP1 0xC2 0xC0 CALL PUSH4 0x33AF5FDB 0x4C 0x4C PUSH3 0x84F8F6 PUSH15 0x31D9BB09EBE05CBF0EF499612FDC8D PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        445,
        1668
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        445,
        1668
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        445,
        1668
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "5": {
      "fn": null,
      "offset": [
        445,
        1668
      ],
      "op": "CALLVALUE",
      "path": "11"
    },
    "6": {
      "fn": null,
      "offset": [
        445,
        1668
      ],
      "op": "DUP1",
      "path": "11"
    },
    "7": {
      "fn": null,
      "offset": [
        445,
        1668
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "8": {
      "fn": null,
      "offset": [
        445,
        1668
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        445,
        1668
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "12": {
      "fn": null,
      "offset": [
        445,
        1668
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        445,
        1668
      ],
      "op": "DUP1",
      "path": "11"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        445,
        1668
      ],
      "op": "REVERT",
      "path": "11"
    },
    "16": {
      "fn": null,
      "offset": [
        445,
        1668
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "17": {
      "fn": null,
      "offset": [
        445,
        1668
      ],
      "op": "POP",
      "path": "11"
    },
    "18": {
      "fn": null,
      "offset": [
        445,
        1668
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        445,
        1668
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "21": {
      "fn": null,
      "offset": [
        445,
        1668
      ],
      "op": "LT",
      "path": "11"
    },
    "22": {
      "fn": null,
      "offset": [
        445,
        1668
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x4C"
    },
    "25": {
      "fn": null,
      "offset": [
        445,
        1668
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "26": {
      "fn": null,
      "offset": [
        445,
        1668
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        445,
        1668
      ],
      "op": "CALLDATALOAD",
      "path": "11"
    },
    "29": {
      "fn": null,
      "offset": [
        445,
        1668
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        445,
        1668
      ],
      "op": "SHR",
      "path": "11"
    },
    "32": {
      "fn": null,
      "offset": [
        445,
        1668
      ],
      "op": "DUP1",
      "path": "11"
    },
    "33": {
      "fn": null,
      "offset": [
        445,
        1668
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x83C1838"
    },
    "38": {
      "fn": null,
      "offset": [
        445,
        1668
      ],
      "op": "EQ",
      "path": "11"
    },
    "39": {
      "fn": null,
      "offset": [
        445,
        1668
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x51"
    },
    "42": {
      "fn": null,
      "offset": [
        445,
        1668
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "43": {
      "fn": null,
      "offset": [
        445,
        1668
      ],
      "op": "DUP1",
      "path": "11"
    },
    "44": {
      "fn": null,
      "offset": [
        445,
        1668
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x96365D44"
    },
    "49": {
      "fn": null,
      "offset": [
        445,
        1668
      ],
      "op": "EQ",
      "path": "11"
    },
    "50": {
      "fn": null,
      "offset": [
        445,
        1668
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x95"
    },
    "53": {
      "fn": null,
      "offset": [
        445,
        1668
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "54": {
      "fn": null,
      "offset": [
        445,
        1668
      ],
      "op": "DUP1",
      "path": "11"
    },
    "55": {
      "fn": null,
      "offset": [
        445,
        1668
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x9AB603B9"
    },
    "60": {
      "fn": null,
      "offset": [
        445,
        1668
      ],
      "op": "EQ",
      "path": "11"
    },
    "61": {
      "fn": null,
      "offset": [
        445,
        1668
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xAC"
    },
    "64": {
      "fn": null,
      "offset": [
        445,
        1668
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "65": {
      "fn": null,
      "offset": [
        445,
        1668
      ],
      "op": "DUP1",
      "path": "11"
    },
    "66": {
      "fn": null,
      "offset": [
        445,
        1668
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xDD49756E"
    },
    "71": {
      "fn": null,
      "offset": [
        445,
        1668
      ],
      "op": "EQ",
      "path": "11"
    },
    "72": {
      "fn": null,
      "offset": [
        445,
        1668
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xC1"
    },
    "75": {
      "fn": null,
      "offset": [
        445,
        1668
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "76": {
      "fn": null,
      "offset": [
        445,
        1668
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "77": {
      "fn": null,
      "offset": [
        445,
        1668
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "79": {
      "fn": null,
      "offset": [
        445,
        1668
      ],
      "op": "DUP1",
      "path": "11"
    },
    "80": {
      "first_revert": true,
      "fn": null,
      "offset": [
        445,
        1668
      ],
      "op": "REVERT",
      "path": "11"
    },
    "81": {
      "offset": [
        490,
        524
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "82": {
      "fn": null,
      "offset": [
        490,
        524
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x78"
    },
    "85": {
      "fn": null,
      "offset": [
        490,
        524
      ],
      "op": "PUSH32",
      "path": "11",
      "value": "0x0"
    },
    "118": {
      "fn": null,
      "offset": [
        490,
        524
      ],
      "op": "DUP2",
      "path": "11"
    },
    "119": {
      "fn": null,
      "offset": [
        490,
        524
      ],
      "op": "JUMP",
      "path": "11"
    },
    "120": {
      "fn": null,
      "offset": [
        490,
        524
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "121": {
      "fn": null,
      "offset": [
        490,
        524
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "123": {
      "fn": null,
      "offset": [
        490,
        524
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "124": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "126": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "128": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "130": {
      "op": "SHL"
    },
    "131": {
      "op": "SUB"
    },
    "132": {
      "op": "SWAP1"
    },
    "133": {
      "op": "SWAP2"
    },
    "134": {
      "op": "AND"
    },
    "135": {
      "op": "DUP2"
    },
    "136": {
      "op": "MSTORE"
    },
    "137": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "139": {
      "op": "ADD"
    },
    "140": {
      "offset": [
        490,
        524
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "141": {
      "fn": null,
      "offset": [
        490,
        524
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "143": {
      "fn": null,
      "offset": [
        490,
        524
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "144": {
      "fn": null,
      "offset": [
        490,
        524
      ],
      "op": "DUP1",
      "path": "11"
    },
    "145": {
      "fn": null,
      "offset": [
        490,
        524
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "146": {
      "fn": null,
      "offset": [
        490,
        524
      ],
      "op": "SUB",
      "path": "11"
    },
    "147": {
      "fn": null,
      "offset": [
        490,
        524
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "148": {
      "fn": null,
      "offset": [
        490,
        524
      ],
      "op": "RETURN",
      "path": "11"
    },
    "149": {
      "offset": [
        530,
        556
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "150": {
      "fn": null,
      "offset": [
        530,
        556
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x9E"
    },
    "153": {
      "fn": null,
      "offset": [
        530,
        556
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "155": {
      "fn": null,
      "offset": [
        530,
        556
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "156": {
      "fn": null,
      "offset": [
        530,
        556
      ],
      "op": "DUP2",
      "path": "11"
    },
    "157": {
      "fn": null,
      "offset": [
        530,
        556
      ],
      "op": "JUMP",
      "path": "11"
    },
    "158": {
      "fn": null,
      "offset": [
        530,
        556
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "159": {
      "fn": null,
      "offset": [
        530,
        556
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "161": {
      "fn": null,
      "offset": [
        530,
        556
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "162": {
      "op": "SWAP1"
    },
    "163": {
      "op": "DUP2"
    },
    "164": {
      "op": "MSTORE"
    },
    "165": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "167": {
      "op": "ADD"
    },
    "168": {
      "offset": [
        530,
        556
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x8C"
    },
    "171": {
      "op": "JUMP"
    },
    "172": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        938,
        1666
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "173": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        938,
        1666
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xBF"
    },
    "176": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        938,
        1666
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xBA"
    },
    "179": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        938,
        1666
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "180": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        938,
        1666
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "182": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        938,
        1666
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x5B4"
    },
    "185": {
      "fn": "ShibaPool.flashLoan",
      "jump": "i",
      "offset": [
        938,
        1666
      ],
      "op": "JUMP",
      "path": "11"
    },
    "186": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        938,
        1666
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "187": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        938,
        1666
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xD4"
    },
    "190": {
      "fn": "ShibaPool.flashLoan",
      "jump": "i",
      "offset": [
        938,
        1666
      ],
      "op": "JUMP",
      "path": "11"
    },
    "191": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        938,
        1666
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "192": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        938,
        1666
      ],
      "op": "STOP",
      "path": "11"
    },
    "193": {
      "fn": "ShibaPool.depositTokens",
      "offset": [
        653,
        932
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "194": {
      "fn": "ShibaPool.depositTokens",
      "offset": [
        653,
        932
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xBF"
    },
    "197": {
      "fn": "ShibaPool.depositTokens",
      "offset": [
        653,
        932
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xCF"
    },
    "200": {
      "fn": "ShibaPool.depositTokens",
      "offset": [
        653,
        932
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "201": {
      "fn": "ShibaPool.depositTokens",
      "offset": [
        653,
        932
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "203": {
      "fn": "ShibaPool.depositTokens",
      "offset": [
        653,
        932
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x5B4"
    },
    "206": {
      "fn": "ShibaPool.depositTokens",
      "jump": "i",
      "offset": [
        653,
        932
      ],
      "op": "JUMP",
      "path": "11"
    },
    "207": {
      "fn": "ShibaPool.depositTokens",
      "offset": [
        653,
        932
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "208": {
      "fn": "ShibaPool.depositTokens",
      "offset": [
        653,
        932
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x450"
    },
    "211": {
      "fn": "ShibaPool.depositTokens",
      "jump": "i",
      "offset": [
        653,
        932
      ],
      "op": "JUMP",
      "path": "11"
    },
    "212": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        938,
        1666
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "213": {
      "offset": [
        2261,
        2282
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xDC"
    },
    "216": {
      "offset": [
        2261,
        2280
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x55B"
    },
    "219": {
      "jump": "i",
      "offset": [
        2261,
        2282
      ],
      "op": "JUMP",
      "path": "1"
    },
    "220": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        2261,
        2282
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "221": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1053,
        1054
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 0,
      "value": "0x0"
    },
    "223": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1038,
        1050
      ],
      "op": "DUP2",
      "path": "11"
    },
    "224": {
      "branch": 12,
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1038,
        1054
      ],
      "op": "GT",
      "path": "11"
    },
    "225": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1030,
        1090
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x131"
    },
    "228": {
      "branch": 12,
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1030,
        1090
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "229": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1030,
        1090
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "231": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1030,
        1090
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "232": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "236": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "238": {
      "op": "SHL"
    },
    "239": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1030,
        1090
      ],
      "op": "DUP2",
      "path": "11"
    },
    "240": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1030,
        1090
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "241": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "243": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1030,
        1090
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "245": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1030,
        1090
      ],
      "op": "DUP3",
      "path": "11"
    },
    "246": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1030,
        1090
      ],
      "op": "ADD",
      "path": "11"
    },
    "247": {
      "op": "MSTORE"
    },
    "248": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "250": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "252": {
      "op": "DUP3"
    },
    "253": {
      "op": "ADD"
    },
    "254": {
      "op": "MSTORE"
    },
    "255": {
      "op": "PUSH32",
      "value": "0x616D6F756E742073686F756C642062652067726561746572207468616E203000"
    },
    "288": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "290": {
      "op": "DUP3"
    },
    "291": {
      "op": "ADD"
    },
    "292": {
      "op": "MSTORE"
    },
    "293": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "295": {
      "op": "ADD"
    },
    "296": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1030,
        1090
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "297": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1030,
        1090
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "299": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1030,
        1090
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "300": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1030,
        1090
      ],
      "op": "DUP1",
      "path": "11"
    },
    "301": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1030,
        1090
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "302": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1030,
        1090
      ],
      "op": "SUB",
      "path": "11"
    },
    "303": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1030,
        1090
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "304": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1030,
        1090
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "11"
    },
    "305": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1030,
        1090
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "306": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1124,
        1159
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "308": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1124,
        1159
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "309": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "314": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "316": {
      "op": "SHL"
    },
    "317": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1124,
        1159
      ],
      "op": "DUP2",
      "path": "11"
    },
    "318": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1124,
        1159
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "319": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1153,
        1157
      ],
      "op": "ADDRESS",
      "path": "11"
    },
    "320": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1124,
        1159
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "322": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1124,
        1159
      ],
      "op": "DUP3",
      "path": "11"
    },
    "323": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1124,
        1159
      ],
      "op": "ADD",
      "path": "11"
    },
    "324": {
      "op": "MSTORE"
    },
    "325": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1100,
        1121
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "327": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1100,
        1121
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "328": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1124,
        1134
      ],
      "op": "PUSH32",
      "path": "11",
      "value": "0x0"
    },
    "361": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "363": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "365": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "367": {
      "op": "SHL"
    },
    "368": {
      "op": "SUB"
    },
    "369": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1124,
        1144
      ],
      "op": "AND",
      "path": "11"
    },
    "370": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1124,
        1144
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "371": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1124,
        1144
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x70A08231"
    },
    "376": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1124,
        1144
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "377": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "379": {
      "op": "ADD"
    },
    "380": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1124,
        1159
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "382": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1124,
        1159
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "384": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1124,
        1159
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "385": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1124,
        1159
      ],
      "op": "DUP1",
      "path": "11"
    },
    "386": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1124,
        1159
      ],
      "op": "DUP4",
      "path": "11"
    },
    "387": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1124,
        1159
      ],
      "op": "SUB",
      "path": "11"
    },
    "388": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1124,
        1159
      ],
      "op": "DUP2",
      "path": "11"
    },
    "389": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1124,
        1159
      ],
      "op": "DUP7",
      "path": "11"
    },
    "390": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1124,
        1159
      ],
      "op": "GAS",
      "path": "11"
    },
    "391": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1124,
        1159
      ],
      "op": "STATICCALL",
      "path": "11"
    },
    "392": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1124,
        1159
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "393": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1124,
        1159
      ],
      "op": "DUP1",
      "path": "11"
    },
    "394": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1124,
        1159
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "395": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1124,
        1159
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x198"
    },
    "398": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1124,
        1159
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "399": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1124,
        1159
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "400": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1124,
        1159
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "402": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1124,
        1159
      ],
      "op": "DUP1",
      "path": "11"
    },
    "403": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1124,
        1159
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "404": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1124,
        1159
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "405": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1124,
        1159
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "407": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1124,
        1159
      ],
      "op": "REVERT",
      "path": "11"
    },
    "408": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1124,
        1159
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "409": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1124,
        1159
      ],
      "op": "POP",
      "path": "11"
    },
    "410": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1124,
        1159
      ],
      "op": "POP",
      "path": "11"
    },
    "411": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1124,
        1159
      ],
      "op": "POP",
      "path": "11"
    },
    "412": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1124,
        1159
      ],
      "op": "POP",
      "path": "11"
    },
    "413": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1124,
        1159
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "415": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1124,
        1159
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "416": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1124,
        1159
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "417": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1124,
        1159
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "419": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1124,
        1159
      ],
      "op": "NOT",
      "path": "11"
    },
    "420": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1124,
        1159
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "422": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1124,
        1159
      ],
      "op": "DUP3",
      "path": "11"
    },
    "423": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1124,
        1159
      ],
      "op": "ADD",
      "path": "11"
    },
    "424": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1124,
        1159
      ],
      "op": "AND",
      "path": "11"
    },
    "425": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1124,
        1159
      ],
      "op": "DUP3",
      "path": "11"
    },
    "426": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1124,
        1159
      ],
      "op": "ADD",
      "path": "11"
    },
    "427": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1124,
        1159
      ],
      "op": "DUP1",
      "path": "11"
    },
    "428": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1124,
        1159
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "430": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1124,
        1159
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "431": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1124,
        1159
      ],
      "op": "POP",
      "path": "11"
    },
    "432": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1124,
        1159
      ],
      "op": "DUP2",
      "path": "11"
    },
    "433": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1124,
        1159
      ],
      "op": "ADD",
      "path": "11"
    },
    "434": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1124,
        1159
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "435": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1124,
        1159
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1BC"
    },
    "438": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1124,
        1159
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "439": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1124,
        1159
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "440": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1124,
        1159
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x5CD"
    },
    "443": {
      "fn": "ShibaPool.flashLoan",
      "jump": "i",
      "offset": [
        1124,
        1159
      ],
      "op": "JUMP",
      "path": "11"
    },
    "444": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1124,
        1159
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "445": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1100,
        1159
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "446": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1100,
        1159
      ],
      "op": "POP",
      "path": "11"
    },
    "447": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1192,
        1205
      ],
      "op": "DUP1",
      "path": "11",
      "statement": 1
    },
    "448": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1177,
        1188
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "450": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1177,
        1188
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "451": {
      "branch": 13,
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1177,
        1205
      ],
      "op": "EQ",
      "path": "11"
    },
    "452": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1169,
        1226
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x202"
    },
    "455": {
      "branch": 13,
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1169,
        1226
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "456": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1169,
        1226
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "458": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1169,
        1226
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "459": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "463": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "465": {
      "op": "SHL"
    },
    "466": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1169,
        1226
      ],
      "op": "DUP2",
      "path": "11"
    },
    "467": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1169,
        1226
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "468": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "470": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1169,
        1226
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "472": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1169,
        1226
      ],
      "op": "DUP3",
      "path": "11"
    },
    "473": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1169,
        1226
      ],
      "op": "ADD",
      "path": "11"
    },
    "474": {
      "op": "MSTORE"
    },
    "475": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "477": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "479": {
      "op": "DUP3"
    },
    "480": {
      "op": "ADD"
    },
    "481": {
      "op": "MSTORE"
    },
    "482": {
      "op": "PUSH16",
      "value": "0x4163636F756E74696E67204973737565"
    },
    "499": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "501": {
      "op": "SHL"
    },
    "502": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "504": {
      "op": "DUP3"
    },
    "505": {
      "op": "ADD"
    },
    "506": {
      "op": "MSTORE"
    },
    "507": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "509": {
      "op": "ADD"
    },
    "510": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1169,
        1226
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x128"
    },
    "513": {
      "op": "JUMP"
    },
    "514": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1169,
        1226
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "515": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1261,
        1273
      ],
      "op": "DUP2",
      "path": "11",
      "statement": 2
    },
    "516": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1244,
        1257
      ],
      "op": "DUP2",
      "path": "11"
    },
    "517": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1244,
        1273
      ],
      "op": "LT",
      "path": "11"
    },
    "518": {
      "branch": 14,
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1244,
        1273
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "519": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1236,
        1303
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x252"
    },
    "522": {
      "branch": 14,
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1236,
        1303
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "523": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1236,
        1303
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "525": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1236,
        1303
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "526": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "530": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "532": {
      "op": "SHL"
    },
    "533": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1236,
        1303
      ],
      "op": "DUP2",
      "path": "11"
    },
    "534": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1236,
        1303
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "535": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "537": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1236,
        1303
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "539": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1236,
        1303
      ],
      "op": "DUP3",
      "path": "11"
    },
    "540": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1236,
        1303
      ],
      "op": "ADD",
      "path": "11"
    },
    "541": {
      "op": "MSTORE"
    },
    "542": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "544": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "546": {
      "op": "DUP3"
    },
    "547": {
      "op": "ADD"
    },
    "548": {
      "op": "MSTORE"
    },
    "549": {
      "op": "PUSH32",
      "value": "0x4E6F7420656E6F75676820746F6B656E7320696E20706F6F6C00000000000000"
    },
    "582": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "584": {
      "op": "DUP3"
    },
    "585": {
      "op": "ADD"
    },
    "586": {
      "op": "MSTORE"
    },
    "587": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "589": {
      "op": "ADD"
    },
    "590": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1236,
        1303
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x128"
    },
    "593": {
      "op": "JUMP"
    },
    "594": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1236,
        1303
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "595": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1352,
        1397
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 3,
      "value": "0x40"
    },
    "597": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1352,
        1397
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "598": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "603": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "605": {
      "op": "SHL"
    },
    "606": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1352,
        1397
      ],
      "op": "DUP2",
      "path": "11"
    },
    "607": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1352,
        1397
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "608": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1372,
        1382
      ],
      "op": "CALLER",
      "path": "11"
    },
    "609": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1352,
        1397
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "611": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1352,
        1397
      ],
      "op": "DUP3",
      "path": "11"
    },
    "612": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1352,
        1397
      ],
      "op": "ADD",
      "path": "11"
    },
    "613": {
      "op": "MSTORE"
    },
    "614": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "616": {
      "op": "DUP2"
    },
    "617": {
      "op": "ADD"
    },
    "618": {
      "op": "DUP4"
    },
    "619": {
      "op": "SWAP1"
    },
    "620": {
      "op": "MSTORE"
    },
    "621": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1352,
        1362
      ],
      "op": "PUSH32",
      "path": "11",
      "value": "0x0"
    },
    "654": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "656": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "658": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "660": {
      "op": "SHL"
    },
    "661": {
      "op": "SUB"
    },
    "662": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1352,
        1371
      ],
      "op": "AND",
      "path": "11"
    },
    "663": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1352,
        1371
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "664": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1352,
        1371
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xA9059CBB"
    },
    "669": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1352,
        1371
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "670": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "672": {
      "op": "ADD"
    },
    "673": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1352,
        1397
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "675": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1352,
        1397
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "677": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1352,
        1397
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "678": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1352,
        1397
      ],
      "op": "DUP1",
      "path": "11"
    },
    "679": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1352,
        1397
      ],
      "op": "DUP4",
      "path": "11"
    },
    "680": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1352,
        1397
      ],
      "op": "SUB",
      "path": "11"
    },
    "681": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1352,
        1397
      ],
      "op": "DUP2",
      "path": "11"
    },
    "682": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1352,
        1397
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "684": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1352,
        1397
      ],
      "op": "DUP8",
      "path": "11"
    },
    "685": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1352,
        1397
      ],
      "op": "GAS",
      "path": "11"
    },
    "686": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1352,
        1397
      ],
      "op": "CALL",
      "path": "11"
    },
    "687": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1352,
        1397
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "688": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1352,
        1397
      ],
      "op": "DUP1",
      "path": "11"
    },
    "689": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1352,
        1397
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "690": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1352,
        1397
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2BF"
    },
    "693": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1352,
        1397
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "694": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1352,
        1397
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "695": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1352,
        1397
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "697": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1352,
        1397
      ],
      "op": "DUP1",
      "path": "11"
    },
    "698": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1352,
        1397
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "699": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1352,
        1397
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "700": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1352,
        1397
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "702": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1352,
        1397
      ],
      "op": "REVERT",
      "path": "11"
    },
    "703": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1352,
        1397
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "704": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1352,
        1397
      ],
      "op": "POP",
      "path": "11"
    },
    "705": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1352,
        1397
      ],
      "op": "POP",
      "path": "11"
    },
    "706": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1352,
        1397
      ],
      "op": "POP",
      "path": "11"
    },
    "707": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1352,
        1397
      ],
      "op": "POP",
      "path": "11"
    },
    "708": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1352,
        1397
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "710": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1352,
        1397
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "711": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1352,
        1397
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "712": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1352,
        1397
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "714": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1352,
        1397
      ],
      "op": "NOT",
      "path": "11"
    },
    "715": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1352,
        1397
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "717": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1352,
        1397
      ],
      "op": "DUP3",
      "path": "11"
    },
    "718": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1352,
        1397
      ],
      "op": "ADD",
      "path": "11"
    },
    "719": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1352,
        1397
      ],
      "op": "AND",
      "path": "11"
    },
    "720": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1352,
        1397
      ],
      "op": "DUP3",
      "path": "11"
    },
    "721": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1352,
        1397
      ],
      "op": "ADD",
      "path": "11"
    },
    "722": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1352,
        1397
      ],
      "op": "DUP1",
      "path": "11"
    },
    "723": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1352,
        1397
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "725": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1352,
        1397
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "726": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1352,
        1397
      ],
      "op": "POP",
      "path": "11"
    },
    "727": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1352,
        1397
      ],
      "op": "DUP2",
      "path": "11"
    },
    "728": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1352,
        1397
      ],
      "op": "ADD",
      "path": "11"
    },
    "729": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1352,
        1397
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "730": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1352,
        1397
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2E3"
    },
    "733": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1352,
        1397
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "734": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1352,
        1397
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "735": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1352,
        1397
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x5E6"
    },
    "738": {
      "fn": "ShibaPool.flashLoan",
      "jump": "i",
      "offset": [
        1352,
        1397
      ],
      "op": "JUMP",
      "path": "11"
    },
    "739": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1352,
        1397
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "740": {
      "op": "POP"
    },
    "741": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1407,
        1473
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 4,
      "value": "0x40"
    },
    "743": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1407,
        1473
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "744": {
      "op": "PUSH4",
      "value": "0x162896B7"
    },
    "749": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "751": {
      "op": "SHL"
    },
    "752": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1407,
        1473
      ],
      "op": "DUP2",
      "path": "11"
    },
    "753": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1407,
        1473
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "754": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "756": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "758": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "760": {
      "op": "SHL"
    },
    "761": {
      "op": "SUB"
    },
    "762": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1447,
        1457
      ],
      "op": "PUSH32",
      "path": "11",
      "value": "0x0"
    },
    "795": {
      "op": "AND"
    },
    "796": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1407,
        1473
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "798": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1407,
        1473
      ],
      "op": "DUP3",
      "path": "11"
    },
    "799": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1407,
        1473
      ],
      "op": "ADD",
      "path": "11"
    },
    "800": {
      "op": "MSTORE"
    },
    "801": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "803": {
      "op": "DUP2"
    },
    "804": {
      "op": "ADD"
    },
    "805": {
      "op": "DUP4"
    },
    "806": {
      "op": "SWAP1"
    },
    "807": {
      "op": "MSTORE"
    },
    "808": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1417,
        1427
      ],
      "op": "CALLER",
      "path": "11"
    },
    "809": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1417,
        1427
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "810": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1407,
        1438
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x2C512D6E"
    },
    "815": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1407,
        1438
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "816": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "818": {
      "op": "ADD"
    },
    "819": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1407,
        1473
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "821": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1407,
        1473
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "823": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1407,
        1473
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "824": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1407,
        1473
      ],
      "op": "DUP1",
      "path": "11"
    },
    "825": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1407,
        1473
      ],
      "op": "DUP4",
      "path": "11"
    },
    "826": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1407,
        1473
      ],
      "op": "SUB",
      "path": "11"
    },
    "827": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1407,
        1473
      ],
      "op": "DUP2",
      "path": "11"
    },
    "828": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1407,
        1473
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "830": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1407,
        1473
      ],
      "op": "DUP8",
      "path": "11"
    },
    "831": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1407,
        1473
      ],
      "op": "DUP1",
      "path": "11"
    },
    "832": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1407,
        1473
      ],
      "op": "EXTCODESIZE",
      "path": "11"
    },
    "833": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1407,
        1473
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "834": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1407,
        1473
      ],
      "op": "DUP1",
      "path": "11"
    },
    "835": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1407,
        1473
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "836": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1407,
        1473
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x34C"
    },
    "839": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1407,
        1473
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "840": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1407,
        1473
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "842": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1407,
        1473
      ],
      "op": "DUP1",
      "path": "11"
    },
    "843": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1407,
        1473
      ],
      "op": "REVERT",
      "path": "11"
    },
    "844": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1407,
        1473
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "845": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1407,
        1473
      ],
      "op": "POP",
      "path": "11"
    },
    "846": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1407,
        1473
      ],
      "op": "GAS",
      "path": "11"
    },
    "847": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1407,
        1473
      ],
      "op": "CALL",
      "path": "11"
    },
    "848": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1407,
        1473
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "849": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1407,
        1473
      ],
      "op": "DUP1",
      "path": "11"
    },
    "850": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1407,
        1473
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "851": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1407,
        1473
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x360"
    },
    "854": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1407,
        1473
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "855": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1407,
        1473
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "856": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1407,
        1473
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "858": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1407,
        1473
      ],
      "op": "DUP1",
      "path": "11"
    },
    "859": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1407,
        1473
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "860": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1407,
        1473
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "861": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1407,
        1473
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "863": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1407,
        1473
      ],
      "op": "REVERT",
      "path": "11"
    },
    "864": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1407,
        1473
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "865": {
      "op": "POP"
    },
    "866": {
      "op": "POP"
    },
    "867": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1540,
        1575
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "869": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1540,
        1575
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "870": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "875": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "877": {
      "op": "SHL"
    },
    "878": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1540,
        1575
      ],
      "op": "DUP2",
      "path": "11"
    },
    "879": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1540,
        1575
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "880": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1569,
        1573
      ],
      "op": "ADDRESS",
      "path": "11"
    },
    "881": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1540,
        1575
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "883": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1540,
        1575
      ],
      "op": "DUP3",
      "path": "11"
    },
    "884": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1540,
        1575
      ],
      "op": "ADD",
      "path": "11"
    },
    "885": {
      "op": "MSTORE"
    },
    "886": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1517,
        1537
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "888": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1517,
        1537
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "889": {
      "op": "POP"
    },
    "890": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1540,
        1550
      ],
      "op": "PUSH32",
      "path": "11",
      "value": "0x0"
    },
    "923": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "925": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "927": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "929": {
      "op": "SHL"
    },
    "930": {
      "op": "SUB"
    },
    "931": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1540,
        1560
      ],
      "op": "AND",
      "path": "11"
    },
    "932": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1540,
        1560
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "933": {
      "op": "POP"
    },
    "934": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1540,
        1560
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x70A08231"
    },
    "939": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1540,
        1560
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "940": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "942": {
      "op": "ADD"
    },
    "943": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1540,
        1575
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "945": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1540,
        1575
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "947": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1540,
        1575
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "948": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1540,
        1575
      ],
      "op": "DUP1",
      "path": "11"
    },
    "949": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1540,
        1575
      ],
      "op": "DUP4",
      "path": "11"
    },
    "950": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1540,
        1575
      ],
      "op": "SUB",
      "path": "11"
    },
    "951": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1540,
        1575
      ],
      "op": "DUP2",
      "path": "11"
    },
    "952": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1540,
        1575
      ],
      "op": "DUP7",
      "path": "11"
    },
    "953": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1540,
        1575
      ],
      "op": "GAS",
      "path": "11"
    },
    "954": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1540,
        1575
      ],
      "op": "STATICCALL",
      "path": "11"
    },
    "955": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1540,
        1575
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "956": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1540,
        1575
      ],
      "op": "DUP1",
      "path": "11"
    },
    "957": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1540,
        1575
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "958": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1540,
        1575
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3CB"
    },
    "961": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1540,
        1575
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "962": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1540,
        1575
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "963": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1540,
        1575
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "965": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1540,
        1575
      ],
      "op": "DUP1",
      "path": "11"
    },
    "966": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1540,
        1575
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "967": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1540,
        1575
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "968": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1540,
        1575
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "970": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1540,
        1575
      ],
      "op": "REVERT",
      "path": "11"
    },
    "971": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1540,
        1575
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "972": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1540,
        1575
      ],
      "op": "POP",
      "path": "11"
    },
    "973": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1540,
        1575
      ],
      "op": "POP",
      "path": "11"
    },
    "974": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1540,
        1575
      ],
      "op": "POP",
      "path": "11"
    },
    "975": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1540,
        1575
      ],
      "op": "POP",
      "path": "11"
    },
    "976": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1540,
        1575
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "978": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1540,
        1575
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "979": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1540,
        1575
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "980": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1540,
        1575
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "982": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1540,
        1575
      ],
      "op": "NOT",
      "path": "11"
    },
    "983": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1540,
        1575
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "985": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1540,
        1575
      ],
      "op": "DUP3",
      "path": "11"
    },
    "986": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1540,
        1575
      ],
      "op": "ADD",
      "path": "11"
    },
    "987": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1540,
        1575
      ],
      "op": "AND",
      "path": "11"
    },
    "988": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1540,
        1575
      ],
      "op": "DUP3",
      "path": "11"
    },
    "989": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1540,
        1575
      ],
      "op": "ADD",
      "path": "11"
    },
    "990": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1540,
        1575
      ],
      "op": "DUP1",
      "path": "11"
    },
    "991": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1540,
        1575
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "993": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1540,
        1575
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "994": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1540,
        1575
      ],
      "op": "POP",
      "path": "11"
    },
    "995": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1540,
        1575
      ],
      "op": "DUP2",
      "path": "11"
    },
    "996": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1540,
        1575
      ],
      "op": "ADD",
      "path": "11"
    },
    "997": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1540,
        1575
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "998": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1540,
        1575
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3EF"
    },
    "1001": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1540,
        1575
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1002": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1540,
        1575
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1003": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1540,
        1575
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x5CD"
    },
    "1006": {
      "fn": "ShibaPool.flashLoan",
      "jump": "i",
      "offset": [
        1540,
        1575
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1007": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1540,
        1575
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1008": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1517,
        1575
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1009": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1517,
        1575
      ],
      "op": "POP",
      "path": "11"
    },
    "1010": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1609,
        1622
      ],
      "op": "DUP2",
      "path": "11",
      "statement": 5
    },
    "1011": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1593,
        1605
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1012": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1593,
        1622
      ],
      "op": "LT",
      "path": "11"
    },
    "1013": {
      "branch": 15,
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1593,
        1622
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1014": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1585,
        1659
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x441"
    },
    "1017": {
      "branch": 15,
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1585,
        1659
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1018": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1585,
        1659
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1020": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1585,
        1659
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1021": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1025": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1027": {
      "op": "SHL"
    },
    "1028": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1585,
        1659
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1029": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1585,
        1659
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1030": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1032": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1585,
        1659
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "1034": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1585,
        1659
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1035": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1585,
        1659
      ],
      "op": "ADD",
      "path": "11"
    },
    "1036": {
      "op": "DUP2"
    },
    "1037": {
      "op": "SWAP1"
    },
    "1038": {
      "op": "MSTORE"
    },
    "1039": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1041": {
      "op": "DUP3"
    },
    "1042": {
      "op": "ADD"
    },
    "1043": {
      "op": "MSTORE"
    },
    "1044": {
      "op": "PUSH32",
      "value": "0x466C617368206C6F616E206861736E2774206265656E2070616964206261636B"
    },
    "1077": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1079": {
      "op": "DUP3"
    },
    "1080": {
      "op": "ADD"
    },
    "1081": {
      "op": "MSTORE"
    },
    "1082": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1084": {
      "op": "ADD"
    },
    "1085": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1585,
        1659
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x128"
    },
    "1088": {
      "op": "JUMP"
    },
    "1089": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1585,
        1659
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1090": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1001,
        1666
      ],
      "op": "POP",
      "path": "11"
    },
    "1091": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        1001,
        1666
      ],
      "op": "POP",
      "path": "11"
    },
    "1092": {
      "offset": [
        2303,
        2323
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x44D"
    },
    "1095": {
      "offset": [
        1716,
        1717
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1097": {
      "fn": "ReentrancyGuard._nonReentrantAfter",
      "offset": [
        2809,
        2816
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 6,
      "value": "0x0"
    },
    "1099": {
      "fn": "ReentrancyGuard._nonReentrantAfter",
      "offset": [
        2809,
        2831
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "1100": {
      "fn": "ReentrancyGuard._nonReentrantAfter",
      "offset": [
        2629,
        2838
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1101": {
      "offset": [
        2303,
        2323
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1102": {
      "fn": "ShibaPool.flashLoan",
      "offset": [
        938,
        1666
      ],
      "op": "POP",
      "path": "11"
    },
    "1103": {
      "fn": "ShibaPool.flashLoan",
      "jump": "o",
      "offset": [
        938,
        1666
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1104": {
      "fn": "ShibaPool.depositTokens",
      "offset": [
        653,
        932
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1105": {
      "offset": [
        2261,
        2282
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x458"
    },
    "1108": {
      "offset": [
        2261,
        2280
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x55B"
    },
    "1111": {
      "jump": "i",
      "offset": [
        2261,
        2282
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1112": {
      "fn": "ShibaPool.depositTokens",
      "offset": [
        2261,
        2282
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1113": {
      "fn": "ShibaPool.depositTokens",
      "offset": [
        776,
        777
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 7,
      "value": "0x0"
    },
    "1115": {
      "fn": "ShibaPool.depositTokens",
      "offset": [
        767,
        773
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1116": {
      "branch": 16,
      "fn": "ShibaPool.depositTokens",
      "offset": [
        767,
        777
      ],
      "op": "GT",
      "path": "11"
    },
    "1117": {
      "fn": "ShibaPool.depositTokens",
      "offset": [
        759,
        813
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x4A8"
    },
    "1120": {
      "branch": 16,
      "fn": "ShibaPool.depositTokens",
      "offset": [
        759,
        813
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1121": {
      "fn": "ShibaPool.depositTokens",
      "offset": [
        759,
        813
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1123": {
      "fn": "ShibaPool.depositTokens",
      "offset": [
        759,
        813
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1124": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1128": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1130": {
      "op": "SHL"
    },
    "1131": {
      "fn": "ShibaPool.depositTokens",
      "offset": [
        759,
        813
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1132": {
      "fn": "ShibaPool.depositTokens",
      "offset": [
        759,
        813
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1133": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1135": {
      "fn": "ShibaPool.depositTokens",
      "offset": [
        759,
        813
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "1137": {
      "fn": "ShibaPool.depositTokens",
      "offset": [
        759,
        813
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1138": {
      "fn": "ShibaPool.depositTokens",
      "offset": [
        759,
        813
      ],
      "op": "ADD",
      "path": "11"
    },
    "1139": {
      "op": "MSTORE"
    },
    "1140": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1142": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1144": {
      "op": "DUP3"
    },
    "1145": {
      "op": "ADD"
    },
    "1146": {
      "op": "MSTORE"
    },
    "1147": {
      "op": "PUSH32",
      "value": "0x616D6F756E742073686F756C642062652067726561746572207468616E203000"
    },
    "1180": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1182": {
      "op": "DUP3"
    },
    "1183": {
      "op": "ADD"
    },
    "1184": {
      "op": "MSTORE"
    },
    "1185": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1187": {
      "op": "ADD"
    },
    "1188": {
      "fn": "ShibaPool.depositTokens",
      "offset": [
        759,
        813
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x128"
    },
    "1191": {
      "op": "JUMP"
    },
    "1192": {
      "fn": "ShibaPool.depositTokens",
      "offset": [
        759,
        813
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1193": {
      "fn": "ShibaPool.depositTokens",
      "offset": [
        823,
        881
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 8,
      "value": "0x40"
    },
    "1195": {
      "fn": "ShibaPool.depositTokens",
      "offset": [
        823,
        881
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1196": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "1201": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1203": {
      "op": "SHL"
    },
    "1204": {
      "fn": "ShibaPool.depositTokens",
      "offset": [
        823,
        881
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1205": {
      "fn": "ShibaPool.depositTokens",
      "offset": [
        823,
        881
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1206": {
      "fn": "ShibaPool.depositTokens",
      "offset": [
        847,
        857
      ],
      "op": "CALLER",
      "path": "11"
    },
    "1207": {
      "fn": "ShibaPool.depositTokens",
      "offset": [
        823,
        881
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "1209": {
      "fn": "ShibaPool.depositTokens",
      "offset": [
        823,
        881
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1210": {
      "fn": "ShibaPool.depositTokens",
      "offset": [
        823,
        881
      ],
      "op": "ADD",
      "path": "11"
    },
    "1211": {
      "op": "MSTORE"
    },
    "1212": {
      "fn": "ShibaPool.depositTokens",
      "offset": [
        867,
        871
      ],
      "op": "ADDRESS",
      "path": "11"
    },
    "1213": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1215": {
      "op": "DUP3"
    },
    "1216": {
      "op": "ADD"
    },
    "1217": {
      "op": "MSTORE"
    },
    "1218": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1220": {
      "op": "DUP2"
    },
    "1221": {
      "op": "ADD"
    },
    "1222": {
      "op": "DUP3"
    },
    "1223": {
      "op": "SWAP1"
    },
    "1224": {
      "op": "MSTORE"
    },
    "1225": {
      "fn": "ShibaPool.depositTokens",
      "offset": [
        823,
        833
      ],
      "op": "PUSH32",
      "path": "11",
      "value": "0x0"
    },
    "1258": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1260": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1262": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1264": {
      "op": "SHL"
    },
    "1265": {
      "op": "SUB"
    },
    "1266": {
      "fn": "ShibaPool.depositTokens",
      "offset": [
        823,
        846
      ],
      "op": "AND",
      "path": "11"
    },
    "1267": {
      "fn": "ShibaPool.depositTokens",
      "offset": [
        823,
        846
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1268": {
      "fn": "ShibaPool.depositTokens",
      "offset": [
        823,
        846
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x23B872DD"
    },
    "1273": {
      "fn": "ShibaPool.depositTokens",
      "offset": [
        823,
        846
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1274": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1276": {
      "op": "ADD"
    },
    "1277": {
      "fn": "ShibaPool.depositTokens",
      "offset": [
        823,
        881
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1279": {
      "fn": "ShibaPool.depositTokens",
      "offset": [
        823,
        881
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1281": {
      "fn": "ShibaPool.depositTokens",
      "offset": [
        823,
        881
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1282": {
      "fn": "ShibaPool.depositTokens",
      "offset": [
        823,
        881
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1283": {
      "fn": "ShibaPool.depositTokens",
      "offset": [
        823,
        881
      ],
      "op": "DUP4",
      "path": "11"
    },
    "1284": {
      "fn": "ShibaPool.depositTokens",
      "offset": [
        823,
        881
      ],
      "op": "SUB",
      "path": "11"
    },
    "1285": {
      "fn": "ShibaPool.depositTokens",
      "offset": [
        823,
        881
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1286": {
      "fn": "ShibaPool.depositTokens",
      "offset": [
        823,
        881
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1288": {
      "fn": "ShibaPool.depositTokens",
      "offset": [
        823,
        881
      ],
      "op": "DUP8",
      "path": "11"
    },
    "1289": {
      "fn": "ShibaPool.depositTokens",
      "offset": [
        823,
        881
      ],
      "op": "GAS",
      "path": "11"
    },
    "1290": {
      "fn": "ShibaPool.depositTokens",
      "offset": [
        823,
        881
      ],
      "op": "CALL",
      "path": "11"
    },
    "1291": {
      "fn": "ShibaPool.depositTokens",
      "offset": [
        823,
        881
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1292": {
      "fn": "ShibaPool.depositTokens",
      "offset": [
        823,
        881
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1293": {
      "fn": "ShibaPool.depositTokens",
      "offset": [
        823,
        881
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1294": {
      "fn": "ShibaPool.depositTokens",
      "offset": [
        823,
        881
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x51B"
    },
    "1297": {
      "fn": "ShibaPool.depositTokens",
      "offset": [
        823,
        881
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1298": {
      "fn": "ShibaPool.depositTokens",
      "offset": [
        823,
        881
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "1299": {
      "fn": "ShibaPool.depositTokens",
      "offset": [
        823,
        881
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1301": {
      "fn": "ShibaPool.depositTokens",
      "offset": [
        823,
        881
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1302": {
      "fn": "ShibaPool.depositTokens",
      "offset": [
        823,
        881
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "1303": {
      "fn": "ShibaPool.depositTokens",
      "offset": [
        823,
        881
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "1304": {
      "fn": "ShibaPool.depositTokens",
      "offset": [
        823,
        881
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1306": {
      "fn": "ShibaPool.depositTokens",
      "offset": [
        823,
        881
      ],
      "op": "REVERT",
      "path": "11"
    },
    "1307": {
      "fn": "ShibaPool.depositTokens",
      "offset": [
        823,
        881
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1308": {
      "fn": "ShibaPool.depositTokens",
      "offset": [
        823,
        881
      ],
      "op": "POP",
      "path": "11"
    },
    "1309": {
      "fn": "ShibaPool.depositTokens",
      "offset": [
        823,
        881
      ],
      "op": "POP",
      "path": "11"
    },
    "1310": {
      "fn": "ShibaPool.depositTokens",
      "offset": [
        823,
        881
      ],
      "op": "POP",
      "path": "11"
    },
    "1311": {
      "fn": "ShibaPool.depositTokens",
      "offset": [
        823,
        881
      ],
      "op": "POP",
      "path": "11"
    },
    "1312": {
      "fn": "ShibaPool.depositTokens",
      "offset": [
        823,
        881
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1314": {
      "fn": "ShibaPool.depositTokens",
      "offset": [
        823,
        881
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1315": {
      "fn": "ShibaPool.depositTokens",
      "offset": [
        823,
        881
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "1316": {
      "fn": "ShibaPool.depositTokens",
      "offset": [
        823,
        881
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "1318": {
      "fn": "ShibaPool.depositTokens",
      "offset": [
        823,
        881
      ],
      "op": "NOT",
      "path": "11"
    },
    "1319": {
      "fn": "ShibaPool.depositTokens",
      "offset": [
        823,
        881
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "1321": {
      "fn": "ShibaPool.depositTokens",
      "offset": [
        823,
        881
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1322": {
      "fn": "ShibaPool.depositTokens",
      "offset": [
        823,
        881
      ],
      "op": "ADD",
      "path": "11"
    },
    "1323": {
      "fn": "ShibaPool.depositTokens",
      "offset": [
        823,
        881
      ],
      "op": "AND",
      "path": "11"
    },
    "1324": {
      "fn": "ShibaPool.depositTokens",
      "offset": [
        823,
        881
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1325": {
      "fn": "ShibaPool.depositTokens",
      "offset": [
        823,
        881
      ],
      "op": "ADD",
      "path": "11"
    },
    "1326": {
      "fn": "ShibaPool.depositTokens",
      "offset": [
        823,
        881
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1327": {
      "fn": "ShibaPool.depositTokens",
      "offset": [
        823,
        881
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1329": {
      "fn": "ShibaPool.depositTokens",
      "offset": [
        823,
        881
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1330": {
      "fn": "ShibaPool.depositTokens",
      "offset": [
        823,
        881
      ],
      "op": "POP",
      "path": "11"
    },
    "1331": {
      "fn": "ShibaPool.depositTokens",
      "offset": [
        823,
        881
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1332": {
      "fn": "ShibaPool.depositTokens",
      "offset": [
        823,
        881
      ],
      "op": "ADD",
      "path": "11"
    },
    "1333": {
      "fn": "ShibaPool.depositTokens",
      "offset": [
        823,
        881
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1334": {
      "fn": "ShibaPool.depositTokens",
      "offset": [
        823,
        881
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x53F"
    },
    "1337": {
      "fn": "ShibaPool.depositTokens",
      "offset": [
        823,
        881
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1338": {
      "fn": "ShibaPool.depositTokens",
      "offset": [
        823,
        881
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1339": {
      "fn": "ShibaPool.depositTokens",
      "offset": [
        823,
        881
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x5E6"
    },
    "1342": {
      "fn": "ShibaPool.depositTokens",
      "jump": "i",
      "offset": [
        823,
        881
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1343": {
      "fn": "ShibaPool.depositTokens",
      "offset": [
        823,
        881
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1344": {
      "fn": "ShibaPool.depositTokens",
      "offset": [
        823,
        881
      ],
      "op": "POP",
      "path": "11"
    },
    "1345": {
      "fn": "ShibaPool.depositTokens",
      "offset": [
        919,
        925
      ],
      "op": "DUP1",
      "path": "11",
      "statement": 9
    },
    "1346": {
      "fn": "ShibaPool.depositTokens",
      "offset": [
        905,
        916
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "1348": {
      "fn": "ShibaPool.depositTokens",
      "offset": [
        905,
        916
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1349": {
      "fn": "ShibaPool.depositTokens",
      "offset": [
        905,
        925
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x54E"
    },
    "1352": {
      "fn": "ShibaPool.depositTokens",
      "offset": [
        905,
        925
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1353": {
      "fn": "ShibaPool.depositTokens",
      "offset": [
        905,
        925
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1354": {
      "fn": "ShibaPool.depositTokens",
      "offset": [
        905,
        925
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x60F"
    },
    "1357": {
      "fn": "ShibaPool.depositTokens",
      "jump": "i",
      "offset": [
        905,
        925
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1358": {
      "fn": "ShibaPool.depositTokens",
      "offset": [
        905,
        925
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1359": {
      "fn": "ShibaPool.depositTokens",
      "offset": [
        891,
        902
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "1361": {
      "fn": "ShibaPool.depositTokens",
      "offset": [
        891,
        925
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "1362": {
      "offset": [
        2303,
        2323
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x44D"
    },
    "1365": {
      "offset": [
        1716,
        1717
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1367": {
      "fn": "ReentrancyGuard._nonReentrantAfter",
      "offset": [
        2809,
        2816
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1369": {
      "fn": "ReentrancyGuard._nonReentrantAfter",
      "offset": [
        2809,
        2831
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "1370": {
      "fn": "ReentrancyGuard._nonReentrantAfter",
      "offset": [
        2629,
        2838
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1371": {
      "fn": "ReentrancyGuard._nonReentrantBefore",
      "offset": [
        2336,
        2623
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1372": {
      "offset": [
        1759,
        1760
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "1374": {
      "fn": "ReentrancyGuard._nonReentrantBefore",
      "offset": [
        2468,
        2475
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 10,
      "value": "0x0"
    },
    "1376": {
      "fn": "ReentrancyGuard._nonReentrantBefore",
      "offset": [
        2468,
        2475
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1377": {
      "branch": 17,
      "fn": "ReentrancyGuard._nonReentrantBefore",
      "offset": [
        2468,
        2487
      ],
      "op": "SUB",
      "path": "1"
    },
    "1378": {
      "fn": "ReentrancyGuard._nonReentrantBefore",
      "offset": [
        2460,
        2523
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5AD"
    },
    "1381": {
      "branch": 17,
      "fn": "ReentrancyGuard._nonReentrantBefore",
      "offset": [
        2460,
        2523
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1382": {
      "fn": "ReentrancyGuard._nonReentrantBefore",
      "offset": [
        2460,
        2523
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1384": {
      "fn": "ReentrancyGuard._nonReentrantBefore",
      "offset": [
        2460,
        2523
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1385": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1389": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1391": {
      "op": "SHL"
    },
    "1392": {
      "fn": "ReentrancyGuard._nonReentrantBefore",
      "offset": [
        2460,
        2523
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1393": {
      "fn": "ReentrancyGuard._nonReentrantBefore",
      "offset": [
        2460,
        2523
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1394": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1396": {
      "fn": "ReentrancyGuard._nonReentrantBefore",
      "offset": [
        2460,
        2523
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1398": {
      "fn": "ReentrancyGuard._nonReentrantBefore",
      "offset": [
        2460,
        2523
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1399": {
      "fn": "ReentrancyGuard._nonReentrantBefore",
      "offset": [
        2460,
        2523
      ],
      "op": "ADD",
      "path": "1"
    },
    "1400": {
      "op": "MSTORE"
    },
    "1401": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1403": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1405": {
      "op": "DUP3"
    },
    "1406": {
      "op": "ADD"
    },
    "1407": {
      "op": "MSTORE"
    },
    "1408": {
      "op": "PUSH32",
      "value": "0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
    },
    "1441": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1443": {
      "op": "DUP3"
    },
    "1444": {
      "op": "ADD"
    },
    "1445": {
      "op": "MSTORE"
    },
    "1446": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1448": {
      "op": "ADD"
    },
    "1449": {
      "fn": "ReentrancyGuard._nonReentrantBefore",
      "offset": [
        2460,
        2523
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x128"
    },
    "1452": {
      "op": "JUMP"
    },
    "1453": {
      "fn": "ReentrancyGuard._nonReentrantBefore",
      "offset": [
        2460,
        2523
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1454": {
      "offset": [
        1759,
        1760
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "1456": {
      "fn": "ReentrancyGuard._nonReentrantBefore",
      "offset": [
        2598,
        2605
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 11,
      "value": "0x0"
    },
    "1458": {
      "fn": "ReentrancyGuard._nonReentrantBefore",
      "offset": [
        2598,
        2616
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "1459": {
      "fn": "ReentrancyGuard._nonReentrantBefore",
      "jump": "o",
      "offset": [
        2336,
        2623
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1460": {
      "op": "JUMPDEST"
    },
    "1461": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1463": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1465": {
      "op": "DUP3"
    },
    "1466": {
      "op": "DUP5"
    },
    "1467": {
      "op": "SUB"
    },
    "1468": {
      "op": "SLT"
    },
    "1469": {
      "op": "ISZERO"
    },
    "1470": {
      "op": "PUSH2",
      "value": "0x5C6"
    },
    "1473": {
      "op": "JUMPI"
    },
    "1474": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1476": {
      "op": "DUP1"
    },
    "1477": {
      "op": "REVERT"
    },
    "1478": {
      "op": "JUMPDEST"
    },
    "1479": {
      "op": "POP"
    },
    "1480": {
      "op": "CALLDATALOAD"
    },
    "1481": {
      "op": "SWAP2"
    },
    "1482": {
      "op": "SWAP1"
    },
    "1483": {
      "op": "POP"
    },
    "1484": {
      "jump": "o",
      "op": "JUMP"
    },
    "1485": {
      "op": "JUMPDEST"
    },
    "1486": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1488": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1490": {
      "op": "DUP3"
    },
    "1491": {
      "op": "DUP5"
    },
    "1492": {
      "op": "SUB"
    },
    "1493": {
      "op": "SLT"
    },
    "1494": {
      "op": "ISZERO"
    },
    "1495": {
      "op": "PUSH2",
      "value": "0x5DF"
    },
    "1498": {
      "op": "JUMPI"
    },
    "1499": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1501": {
      "op": "DUP1"
    },
    "1502": {
      "op": "REVERT"
    },
    "1503": {
      "op": "JUMPDEST"
    },
    "1504": {
      "op": "POP"
    },
    "1505": {
      "op": "MLOAD"
    },
    "1506": {
      "op": "SWAP2"
    },
    "1507": {
      "op": "SWAP1"
    },
    "1508": {
      "op": "POP"
    },
    "1509": {
      "jump": "o",
      "op": "JUMP"
    },
    "1510": {
      "op": "JUMPDEST"
    },
    "1511": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1513": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1515": {
      "op": "DUP3"
    },
    "1516": {
      "op": "DUP5"
    },
    "1517": {
      "op": "SUB"
    },
    "1518": {
      "op": "SLT"
    },
    "1519": {
      "op": "ISZERO"
    },
    "1520": {
      "op": "PUSH2",
      "value": "0x5F8"
    },
    "1523": {
      "op": "JUMPI"
    },
    "1524": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1526": {
      "op": "DUP1"
    },
    "1527": {
      "op": "REVERT"
    },
    "1528": {
      "op": "JUMPDEST"
    },
    "1529": {
      "op": "DUP2"
    },
    "1530": {
      "op": "MLOAD"
    },
    "1531": {
      "op": "DUP1"
    },
    "1532": {
      "op": "ISZERO"
    },
    "1533": {
      "op": "ISZERO"
    },
    "1534": {
      "op": "DUP2"
    },
    "1535": {
      "op": "EQ"
    },
    "1536": {
      "op": "PUSH2",
      "value": "0x608"
    },
    "1539": {
      "op": "JUMPI"
    },
    "1540": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1542": {
      "op": "DUP1"
    },
    "1543": {
      "op": "REVERT"
    },
    "1544": {
      "op": "JUMPDEST"
    },
    "1545": {
      "op": "SWAP4"
    },
    "1546": {
      "op": "SWAP3"
    },
    "1547": {
      "op": "POP"
    },
    "1548": {
      "op": "POP"
    },
    "1549": {
      "op": "POP"
    },
    "1550": {
      "jump": "o",
      "op": "JUMP"
    },
    "1551": {
      "op": "JUMPDEST"
    },
    "1552": {
      "op": "DUP1"
    },
    "1553": {
      "op": "DUP3"
    },
    "1554": {
      "op": "ADD"
    },
    "1555": {
      "op": "DUP1"
    },
    "1556": {
      "op": "DUP3"
    },
    "1557": {
      "op": "GT"
    },
    "1558": {
      "op": "ISZERO"
    },
    "1559": {
      "op": "PUSH2",
      "value": "0x630"
    },
    "1562": {
      "op": "JUMPI"
    },
    "1563": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1568": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1570": {
      "op": "SHL"
    },
    "1571": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1573": {
      "op": "MSTORE"
    },
    "1574": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "1576": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1578": {
      "op": "MSTORE"
    },
    "1579": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1581": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1583": {
      "op": "REVERT"
    },
    "1584": {
      "op": "JUMPDEST"
    },
    "1585": {
      "op": "SWAP3"
    },
    "1586": {
      "op": "SWAP2"
    },
    "1587": {
      "op": "POP"
    },
    "1588": {
      "op": "POP"
    },
    "1589": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "34ec748b8440475153951e91a19ad1377aa4e018",
  "source": "// SCH Course Copyright Policy (C): DO-NOT-SHARE-WITH-ANYONE\n// https://smartcontractshacking.com/#copyright-policy\npragma solidity ^0.8.13;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\n\ninterface IReceiver {\n    function getTokens(address tokenAddress, uint256 amount) external;\n}\n\n/**\n * @title ShibaPool\n * @author JohnnyTime (https://smartcontractshacking.com)\n */\ncontract ShibaPool is ReentrancyGuard {\n\n    IERC20 public immutable shibaToken;\n    uint256 public poolBalance;\n\n    constructor(address tokenAddress) {\n        shibaToken = IERC20(tokenAddress);\n    }\n\n    function depositTokens(uint256 amount) external nonReentrant {\n\n        // Deposit tokens to pool\n        require(amount > 0, \"amount should be greater than 0\");\n        shibaToken.transferFrom(msg.sender, address(this), amount);\n        poolBalance = poolBalance + amount;\n    }\n\n    function flashLoan(uint256 borrowAmount) external nonReentrant {\n\n        // Checks\n        require(borrowAmount > 0, \"amount should be greater than 0\");\n        uint256 balanceBefore = shibaToken.balanceOf(address(this));\n        require(poolBalance == balanceBefore, \"Accounting Issue\");\n        require(balanceBefore >= borrowAmount, \"Not enough tokens in pool\");\n\n        // Transfer tokens & callback\n        shibaToken.transfer(msg.sender, borrowAmount);\n        IReceiver(msg.sender).getTokens(address(shibaToken), borrowAmount);\n        \n        // Check balance\n        uint256 balanceAfter = shibaToken.balanceOf(address(this));\n        require(balanceAfter >= balanceBefore, \"Flash loan hasn't been paid back\");\n    }\n}",
  "sourceMap": "445:1223:11:-:0;;;563:84;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1716:1:1;1821:7;:22;-1:-1:-1;;;;;607:33:11;;;445:1223;;14:290:20;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:20;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:20:o;:::-;445:1223:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/dos-3/ShibaPool.sol",
  "type": "contract"
}