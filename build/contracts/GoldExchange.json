{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_oracle",
          "type": "address"
        }
      ],
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "TokenBought",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "TokenSold",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "buyTokens",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "oracle",
      "outputs": [
        {
          "internalType": "contract IOracle",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "sellTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract IGoldToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "allSourcePaths": {
    "1": "/Users/m4ud/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/security/ReentrancyGuard.sol",
    "19": "contracts/oracle-manipulation-1/GoldExchange.sol",
    "3": "/Users/m4ud/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/token/ERC20/IERC20.sol",
    "5": "/Users/m4ud/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/utils/Address.sol"
  },
  "ast": {
    "absolutePath": "contracts/oracle-manipulation-1/GoldExchange.sol",
    "exportedSymbols": {
      "Address": [
        2447
      ],
      "GoldExchange": [
        2117
      ],
      "IERC20": [
        3279
      ],
      "IGoldToken": [
        1928
      ],
      "IOracle": [
        1934
      ],
      "ReentrancyGuard": [
        2501
      ]
    },
    "id": 2118,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1908,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".13"
        ],
        "nodeType": "PragmaDirective",
        "src": "116:24:19"
      },
      {
        "absolutePath": "/Users/m4ud/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/utils/Address.sol",
        "file": "@openzeppelin/contracts/utils/Address.sol",
        "id": 1909,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2118,
        "sourceUnit": 2448,
        "src": "142:51:19",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/m4ud/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/security/ReentrancyGuard.sol",
        "file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "id": 1910,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2118,
        "sourceUnit": 2502,
        "src": "194:62:19",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/m4ud/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 1911,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2118,
        "sourceUnit": 3280,
        "src": "257:56:19",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1912,
              "name": "IERC20",
              "nameLocations": [
                "340:6:19"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3279,
              "src": "340:6:19"
            },
            "id": 1913,
            "nodeType": "InheritanceSpecifier",
            "src": "340:6:19"
          }
        ],
        "canonicalName": "IGoldToken",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 1928,
        "linearizedBaseContracts": [
          1928,
          3279
        ],
        "name": "IGoldToken",
        "nameLocation": "326:10:19",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "functionSelector": "40c10f19",
            "id": 1920,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "362:4:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1918,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1915,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "375:3:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 1920,
                  "src": "367:11:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1914,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "367:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1917,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "385:7:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 1920,
                  "src": "380:12:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1916,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "380:4:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "366:27:19"
            },
            "returnParameters": {
              "id": 1919,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "402:0:19"
            },
            "scope": 1928,
            "src": "353:50:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "9dc29fac",
            "id": 1927,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nameLocation": "417:4:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1925,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1922,
                  "mutability": "mutable",
                  "name": "_account",
                  "nameLocation": "430:8:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 1927,
                  "src": "422:16:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1921,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "422:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1924,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "445:7:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 1927,
                  "src": "440:12:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1923,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "440:4:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "421:32:19"
            },
            "returnParameters": {
              "id": 1926,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "462:0:19"
            },
            "scope": 1928,
            "src": "408:55:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2118,
        "src": "316:149:19",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IOracle",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 1934,
        "linearizedBaseContracts": [
          1934
        ],
        "name": "IOracle",
        "nameLocation": "477:7:19",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "functionSelector": "98d5fdca",
            "id": 1933,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getPrice",
            "nameLocation": "500:8:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1929,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "508:2:19"
            },
            "returnParameters": {
              "id": 1932,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1931,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1933,
                  "src": "534:7:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1930,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "534:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "533:9:19"
            },
            "scope": 1934,
            "src": "491:52:19",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2118,
        "src": "467:78:19",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1936,
              "name": "ReentrancyGuard",
              "nameLocations": [
                "661:15:19"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2501,
              "src": "661:15:19"
            },
            "id": 1937,
            "nodeType": "InheritanceSpecifier",
            "src": "661:15:19"
          }
        ],
        "canonicalName": "GoldExchange",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 1935,
          "nodeType": "StructuredDocumentation",
          "src": "547:88:19",
          "text": " @title GlodExchange\n @author JohnnyTime (https://smartcontractshacking.com)"
        },
        "fullyImplemented": true,
        "id": 2117,
        "linearizedBaseContracts": [
          2117,
          2501
        ],
        "name": "GoldExchange",
        "nameLocation": "645:12:19",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "global": false,
            "id": 1940,
            "libraryName": {
              "id": 1938,
              "name": "Address",
              "nameLocations": [
                "690:7:19"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2447,
              "src": "690:7:19"
            },
            "nodeType": "UsingForDirective",
            "src": "684:34:19",
            "typeName": {
              "id": 1939,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "702:15:19",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "fc0c546a",
            "id": 1943,
            "mutability": "immutable",
            "name": "token",
            "nameLocation": "752:5:19",
            "nodeType": "VariableDeclaration",
            "scope": 2117,
            "src": "724:33:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IGoldToken_$1928",
              "typeString": "contract IGoldToken"
            },
            "typeName": {
              "id": 1942,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1941,
                "name": "IGoldToken",
                "nameLocations": [
                  "724:10:19"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1928,
                "src": "724:10:19"
              },
              "referencedDeclaration": 1928,
              "src": "724:10:19",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IGoldToken_$1928",
                "typeString": "contract IGoldToken"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "7dc0d1d0",
            "id": 1946,
            "mutability": "immutable",
            "name": "oracle",
            "nameLocation": "788:6:19",
            "nodeType": "VariableDeclaration",
            "scope": 2117,
            "src": "763:31:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IOracle_$1934",
              "typeString": "contract IOracle"
            },
            "typeName": {
              "id": 1945,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1944,
                "name": "IOracle",
                "nameLocations": [
                  "763:7:19"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1934,
                "src": "763:7:19"
              },
              "referencedDeclaration": 1934,
              "src": "763:7:19",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IOracle_$1934",
                "typeString": "contract IOracle"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "eventSelector": "28cab0d660ed8aedd61a8c9db00b97f6a2d67e07d87795994f440b18bc5f1aa3",
            "id": 1954,
            "name": "TokenBought",
            "nameLocation": "807:11:19",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1953,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1948,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nameLocation": "835:5:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 1954,
                  "src": "819:21:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1947,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "819:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1950,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "850:6:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 1954,
                  "src": "842:14:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1949,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "842:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1952,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "price",
                  "nameLocation": "866:5:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 1954,
                  "src": "858:13:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1951,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "858:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "818:54:19"
            },
            "src": "801:72:19"
          },
          {
            "anonymous": false,
            "eventSelector": "35ea94addbc62df281ade49cc2ad9b3d9259166170cf702928b4ddc045f7256e",
            "id": 1962,
            "name": "TokenSold",
            "nameLocation": "884:9:19",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1961,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1956,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "seller",
                  "nameLocation": "910:6:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 1962,
                  "src": "894:22:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1955,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "894:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1958,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "926:6:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 1962,
                  "src": "918:14:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1957,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "918:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1960,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "price",
                  "nameLocation": "942:5:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 1962,
                  "src": "934:13:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1959,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "934:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "893:55:19"
            },
            "src": "878:71:19"
          },
          {
            "body": {
              "id": 1981,
              "nodeType": "Block",
              "src": "1008:78:19",
              "statements": [
                {
                  "expression": {
                    "id": 1973,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1969,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1943,
                      "src": "1018:5:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IGoldToken_$1928",
                        "typeString": "contract IGoldToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1971,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1964,
                          "src": "1037:6:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1970,
                        "name": "IGoldToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1928,
                        "src": "1026:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IGoldToken_$1928_$",
                          "typeString": "type(contract IGoldToken)"
                        }
                      },
                      "id": 1972,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1026:18:19",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IGoldToken_$1928",
                        "typeString": "contract IGoldToken"
                      }
                    },
                    "src": "1018:26:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IGoldToken_$1928",
                      "typeString": "contract IGoldToken"
                    }
                  },
                  "id": 1974,
                  "nodeType": "ExpressionStatement",
                  "src": "1018:26:19"
                },
                {
                  "expression": {
                    "id": 1979,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1975,
                      "name": "oracle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1946,
                      "src": "1054:6:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IOracle_$1934",
                        "typeString": "contract IOracle"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1977,
                          "name": "_oracle",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1966,
                          "src": "1071:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1976,
                        "name": "IOracle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1934,
                        "src": "1063:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IOracle_$1934_$",
                          "typeString": "type(contract IOracle)"
                        }
                      },
                      "id": 1978,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1063:16:19",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IOracle_$1934",
                        "typeString": "contract IOracle"
                      }
                    },
                    "src": "1054:25:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IOracle_$1934",
                      "typeString": "contract IOracle"
                    }
                  },
                  "id": 1980,
                  "nodeType": "ExpressionStatement",
                  "src": "1054:25:19"
                }
              ]
            },
            "id": 1982,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1967,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1964,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "975:6:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 1982,
                  "src": "967:14:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1963,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "967:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1966,
                  "mutability": "mutable",
                  "name": "_oracle",
                  "nameLocation": "991:7:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 1982,
                  "src": "983:15:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1965,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "983:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "966:33:19"
            },
            "returnParameters": {
              "id": 1968,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1008:0:19"
            },
            "scope": 2117,
            "src": "955:131:19",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2052,
              "nodeType": "Block",
              "src": "1154:549:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1993,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1990,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1173:3:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1991,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1177:5:19",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "1173:9:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1992,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1185:1:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1173:13:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416d6f756e742070616964206d7573742062652067726561746572207468616e207a65726f",
                        "id": 1994,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1188:39:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_10a3418443bd766e60248eba5a6ba3a68c3df3e4b55a91b248347e7279496f81",
                          "typeString": "literal_string \"Amount paid must be greater than zero\""
                        },
                        "value": "Amount paid must be greater than zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_10a3418443bd766e60248eba5a6ba3a68c3df3e4b55a91b248347e7279496f81",
                          "typeString": "literal_string \"Amount paid must be greater than zero\""
                        }
                      ],
                      "id": 1989,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1165:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1995,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1165:63:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1996,
                  "nodeType": "ExpressionStatement",
                  "src": "1165:63:19"
                },
                {
                  "assignments": [
                    1998
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1998,
                      "mutability": "mutable",
                      "name": "goldPrice",
                      "nameLocation": "1268:9:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 2052,
                      "src": "1263:14:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1997,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1263:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2002,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1999,
                        "name": "oracle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1946,
                        "src": "1280:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IOracle_$1934",
                          "typeString": "contract IOracle"
                        }
                      },
                      "id": 2000,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1287:8:19",
                      "memberName": "getPrice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1933,
                      "src": "1280:15:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 2001,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1280:17:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1263:34:19"
                },
                {
                  "assignments": [
                    2004
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2004,
                      "mutability": "mutable",
                      "name": "totalPrice",
                      "nameLocation": "1312:10:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 2052,
                      "src": "1307:15:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2003,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1307:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2008,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2007,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2005,
                      "name": "goldPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1998,
                      "src": "1325:9:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "id": 2006,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1984,
                      "src": "1337:6:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1325:18:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1307:36:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2013,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2010,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1361:3:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2011,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1365:5:19",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "1361:9:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 2012,
                          "name": "totalPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2004,
                          "src": "1374:10:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1361:23:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416d6f756e742070616964206973206e6f7420656e6f756768",
                        "id": 2014,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1386:27:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c06fac51cdfac785106fc7a1488f8fa26507090563b6e22cf7880c2f3df35538",
                          "typeString": "literal_string \"Amount paid is not enough\""
                        },
                        "value": "Amount paid is not enough"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c06fac51cdfac785106fc7a1488f8fa26507090563b6e22cf7880c2f3df35538",
                          "typeString": "literal_string \"Amount paid is not enough\""
                        }
                      ],
                      "id": 2009,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1353:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2015,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1353:61:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2016,
                  "nodeType": "ExpressionStatement",
                  "src": "1353:61:19"
                },
                {
                  "assignments": [
                    2018
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2018,
                      "mutability": "mutable",
                      "name": "change",
                      "nameLocation": "1459:6:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 2052,
                      "src": "1454:11:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2017,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1454:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2023,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2022,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 2019,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "1468:3:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 2020,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1472:5:19",
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "1468:9:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 2021,
                      "name": "totalPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2004,
                      "src": "1480:10:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1468:22:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1454:36:19"
                },
                {
                  "assignments": [
                    2025,
                    2027
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2025,
                      "mutability": "mutable",
                      "name": "_success",
                      "nameLocation": "1506:8:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 2052,
                      "src": "1501:13:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 2024,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1501:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2027,
                      "mutability": "mutable",
                      "name": "_data",
                      "nameLocation": "1529:5:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 2052,
                      "src": "1516:18:19",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 2026,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1516:5:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2038,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 2036,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1578:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 2030,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1546:3:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2031,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1550:6:19",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1546:10:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 2029,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1538:8:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 2028,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1538:8:19",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2032,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1538:19:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 2033,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1558:4:19",
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "1538:24:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 2035,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 2034,
                          "name": "change",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2018,
                          "src": "1570:6:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "1538:39:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 2037,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1538:43:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1500:81:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2040,
                        "name": "_success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2025,
                        "src": "1599:8:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616e27742070617920746865206368616e6765",
                        "id": 2041,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1609:22:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8a695731417f0f070189b2f6b7f93e8d29c38029b72249aa27c5df3346a0c3dd",
                          "typeString": "literal_string \"Can't pay the change\""
                        },
                        "value": "Can't pay the change"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8a695731417f0f070189b2f6b7f93e8d29c38029b72249aa27c5df3346a0c3dd",
                          "typeString": "literal_string \"Can't pay the change\""
                        }
                      ],
                      "id": 2039,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1591:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2042,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1591:41:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2043,
                  "nodeType": "ExpressionStatement",
                  "src": "1591:41:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2047,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1677:3:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2048,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1681:6:19",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1677:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2049,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1984,
                        "src": "1689:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2044,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1943,
                        "src": "1666:5:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IGoldToken_$1928",
                          "typeString": "contract IGoldToken"
                        }
                      },
                      "id": 2046,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1672:4:19",
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1920,
                      "src": "1666:10:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 2050,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1666:30:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2051,
                  "nodeType": "ExpressionStatement",
                  "src": "1666:30:19"
                }
              ]
            },
            "functionSelector": "3610724e",
            "id": 2053,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1987,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1986,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "1141:12:19"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2477,
                  "src": "1141:12:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "1141:12:19"
              }
            ],
            "name": "buyTokens",
            "nameLocation": "1101:9:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1985,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1984,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1116:6:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 2053,
                  "src": "1111:11:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1983,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1111:4:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1110:13:19"
            },
            "returnParameters": {
              "id": 1988,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1154:0:19"
            },
            "scope": 2117,
            "src": "1092:611:19",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2111,
              "nodeType": "Block",
              "src": "1764:449:19",
              "statements": [
                {
                  "assignments": [
                    2061
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2061,
                      "mutability": "mutable",
                      "name": "goldPrice",
                      "nameLocation": "1806:9:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 2111,
                      "src": "1801:14:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2060,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1801:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2065,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 2062,
                        "name": "oracle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1946,
                        "src": "1818:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IOracle_$1934",
                          "typeString": "contract IOracle"
                        }
                      },
                      "id": 2063,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1825:8:19",
                      "memberName": "getPrice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1933,
                      "src": "1818:15:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 2064,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1818:17:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1801:34:19"
                },
                {
                  "assignments": [
                    2067
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2067,
                      "mutability": "mutable",
                      "name": "totalPrice",
                      "nameLocation": "1850:10:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 2111,
                      "src": "1845:15:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2066,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1845:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2071,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2070,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2068,
                      "name": "goldPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2061,
                      "src": "1863:9:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "id": 2069,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2055,
                      "src": "1875:6:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1863:18:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1845:36:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2079,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 2075,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "1907:4:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_GoldExchange_$2117",
                                  "typeString": "contract GoldExchange"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_GoldExchange_$2117",
                                  "typeString": "contract GoldExchange"
                                }
                              ],
                              "id": 2074,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1899:7:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 2073,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1899:7:19",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2076,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1899:13:19",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 2077,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1913:7:19",
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "1899:21:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 2078,
                          "name": "totalPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2067,
                          "src": "1924:10:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1899:35:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f7567682045544820696e2062616c616e6365",
                        "id": 2080,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1936:27:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_793a63d93cf824c51405ac0649fe12f8786ac592bd3f7443b5d88dabc9b2a32c",
                          "typeString": "literal_string \"Not enough ETH in balance\""
                        },
                        "value": "Not enough ETH in balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_793a63d93cf824c51405ac0649fe12f8786ac592bd3f7443b5d88dabc9b2a32c",
                          "typeString": "literal_string \"Not enough ETH in balance\""
                        }
                      ],
                      "id": 2072,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1891:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2081,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1891:73:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2082,
                  "nodeType": "ExpressionStatement",
                  "src": "1891:73:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2086,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2013:3:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2087,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2017:6:19",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2013:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2088,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2055,
                        "src": "2025:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2083,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1943,
                        "src": "2002:5:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IGoldToken_$1928",
                          "typeString": "contract IGoldToken"
                        }
                      },
                      "id": 2085,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2008:4:19",
                      "memberName": "burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1927,
                      "src": "2002:10:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 2089,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2002:30:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2090,
                  "nodeType": "ExpressionStatement",
                  "src": "2002:30:19"
                },
                {
                  "assignments": [
                    2092,
                    2094
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2092,
                      "mutability": "mutable",
                      "name": "_success",
                      "nameLocation": "2072:8:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 2111,
                      "src": "2067:13:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 2091,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2067:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2094,
                      "mutability": "mutable",
                      "name": "_data",
                      "nameLocation": "2095:5:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 2111,
                      "src": "2082:18:19",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 2093,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "2082:5:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2105,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 2103,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2148:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 2097,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2112:3:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2098,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2116:6:19",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2112:10:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 2096,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2104:8:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 2095,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2104:8:19",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2099,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2104:19:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 2100,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2124:4:19",
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "2104:24:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 2102,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 2101,
                          "name": "totalPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2067,
                          "src": "2136:10:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "2104:43:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 2104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2104:47:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2066:85:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2107,
                        "name": "_success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2092,
                        "src": "2169:8:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616e27742070617920666f722074686520746f6b656e73",
                        "id": 2108,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2179:26:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0279418c545584a6d2cb592934fd4ee137a72eab4fa2cce61b15e3ee39a8228a",
                          "typeString": "literal_string \"Can't pay for the tokens\""
                        },
                        "value": "Can't pay for the tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0279418c545584a6d2cb592934fd4ee137a72eab4fa2cce61b15e3ee39a8228a",
                          "typeString": "literal_string \"Can't pay for the tokens\""
                        }
                      ],
                      "id": 2106,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2161:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2161:45:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2110,
                  "nodeType": "ExpressionStatement",
                  "src": "2161:45:19"
                }
              ]
            },
            "functionSelector": "6c11bcd3",
            "id": 2112,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2058,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2057,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "1751:12:19"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2477,
                  "src": "1751:12:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "1751:12:19"
              }
            ],
            "name": "sellTokens",
            "nameLocation": "1718:10:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2056,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2055,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1734:6:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 2112,
                  "src": "1729:11:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2054,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1729:4:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1728:13:19"
            },
            "returnParameters": {
              "id": 2059,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1764:0:19"
            },
            "scope": 2117,
            "src": "1709:504:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2115,
              "nodeType": "Block",
              "src": "2246:2:19",
              "statements": []
            },
            "id": 2116,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2113,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2226:2:19"
            },
            "returnParameters": {
              "id": 2114,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2246:0:19"
            },
            "scope": 2117,
            "src": "2219:29:19",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2118,
        "src": "636:1614:19",
        "usedErrors": []
      }
    ],
    "src": "116:2135:19"
  },
  "bytecode": "60c060405260405161077b38038061077b8339810160408190526100229161005a565b60016000556001600160a01b039182166080521660a05261008d565b80516001600160a01b038116811461005557600080fd5b919050565b6000806040838503121561006d57600080fd5b6100768361003e565b91506100846020840161003e565b90509250929050565b60805160a0516106af6100cc60003960008181609601528181610177015261039f01526000818160e60152818161031d015261049b01526106af6000f3fe6080604052600436106100435760003560e01c80633610724e1461004f5780636c11bcd3146100645780637dc0d1d014610084578063fc0c546a146100d457600080fd5b3661004a57005b600080fd5b61006261005d366004610601565b610108565b005b34801561007057600080fd5b5061006261007f366004610601565b610393565b34801561009057600080fd5b506100b87f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200160405180910390f35b3480156100e057600080fd5b506100b87f000000000000000000000000000000000000000000000000000000000000000081565b6101106105a8565b600034116101735760405162461bcd60e51b815260206004820152602560248201527f416d6f756e742070616964206d7573742062652067726561746572207468616e604482015264207a65726f60d81b60648201526084015b60405180910390fd5b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166398d5fdca6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101f7919061061a565b905060006102058383610649565b9050803410156102575760405162461bcd60e51b815260206004820152601960248201527f416d6f756e742070616964206973206e6f7420656e6f75676800000000000000604482015260640161016a565b60006102638234610666565b9050600080336001600160a01b03168360405160006040518083038185875af1925050503d80600081146102b3576040519150601f19603f3d011682016040523d82523d6000602084013e6102b8565b606091505b5091509150816103015760405162461bcd60e51b815260206004820152601460248201527343616e27742070617920746865206368616e676560601b604482015260640161016a565b6040516340c10f1960e01b8152336004820152602481018790527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906340c10f1990604401600060405180830381600087803b15801561036957600080fd5b505af115801561037d573d6000803e3d6000fd5b5050505050505050506103906001600055565b50565b61039b6105a8565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166398d5fdca6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156103fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061041f919061061a565b9050600061042d8383610649565b90508047101561047f5760405162461bcd60e51b815260206004820152601960248201527f4e6f7420656e6f7567682045544820696e2062616c616e636500000000000000604482015260640161016a565b604051632770a7eb60e21b8152336004820152602481018490527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690639dc29fac90604401600060405180830381600087803b1580156104e757600080fd5b505af11580156104fb573d6000803e3d6000fd5b505060405160009250829150339084908381818185875af1925050503d8060008114610543576040519150601f19603f3d011682016040523d82523d6000602084013e610548565b606091505b50915091508161059a5760405162461bcd60e51b815260206004820152601860248201527f43616e27742070617920666f722074686520746f6b656e730000000000000000604482015260640161016a565b505050506103906001600055565b6002600054036105fa5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161016a565b6002600055565b60006020828403121561061357600080fd5b5035919050565b60006020828403121561062c57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761066057610660610633565b92915050565b818103818111156106605761066061063356fea26469706673582212205dbc986a3d83f9f74f9aa6b85f87c690252194dbac21d40c6981be9a9337260564736f6c63430008130033",
  "bytecodeSha1": "ccb32727de85b86bb19e6bc366a03a9bae07ca30",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.19+commit.7dd6d404"
  },
  "contractName": "GoldExchange",
  "coverageMap": {
    "branches": {
      "1": {
        "ReentrancyGuard._nonReentrantBefore": {
          "15": [
            2468,
            2487,
            true
          ]
        }
      },
      "19": {
        "GoldExchange.buyTokens": {
          "10": [
            1173,
            1186,
            true
          ],
          "11": [
            1361,
            1384,
            true
          ],
          "12": [
            1599,
            1607,
            true
          ]
        },
        "GoldExchange.sellTokens": {
          "13": [
            1899,
            1934,
            true
          ],
          "14": [
            2169,
            2177,
            true
          ]
        }
      },
      "3": {},
      "5": {}
    },
    "statements": {
      "1": {
        "ReentrancyGuard._nonReentrantAfter": {
          "4": [
            2809,
            2831
          ]
        },
        "ReentrancyGuard._nonReentrantBefore": {
          "8": [
            2460,
            2523
          ],
          "9": [
            2598,
            2616
          ]
        }
      },
      "19": {
        "GoldExchange.buyTokens": {
          "0": [
            1165,
            1228
          ],
          "1": [
            1353,
            1414
          ],
          "2": [
            1591,
            1632
          ],
          "3": [
            1666,
            1696
          ]
        },
        "GoldExchange.sellTokens": {
          "5": [
            1891,
            1964
          ],
          "6": [
            2002,
            2032
          ],
          "7": [
            2161,
            2206
          ]
        }
      },
      "3": {},
      "5": {}
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.8.0/Address",
    "OpenZeppelin/openzeppelin-contracts@4.8.0/IERC20",
    "IGoldToken",
    "IOracle",
    "OpenZeppelin/openzeppelin-contracts@4.8.0/ReentrancyGuard"
  ],
  "deployedBytecode": "6080604052600436106100435760003560e01c80633610724e1461004f5780636c11bcd3146100645780637dc0d1d014610084578063fc0c546a146100d457600080fd5b3661004a57005b600080fd5b61006261005d366004610601565b610108565b005b34801561007057600080fd5b5061006261007f366004610601565b610393565b34801561009057600080fd5b506100b87f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200160405180910390f35b3480156100e057600080fd5b506100b87f000000000000000000000000000000000000000000000000000000000000000081565b6101106105a8565b600034116101735760405162461bcd60e51b815260206004820152602560248201527f416d6f756e742070616964206d7573742062652067726561746572207468616e604482015264207a65726f60d81b60648201526084015b60405180910390fd5b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166398d5fdca6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101f7919061061a565b905060006102058383610649565b9050803410156102575760405162461bcd60e51b815260206004820152601960248201527f416d6f756e742070616964206973206e6f7420656e6f75676800000000000000604482015260640161016a565b60006102638234610666565b9050600080336001600160a01b03168360405160006040518083038185875af1925050503d80600081146102b3576040519150601f19603f3d011682016040523d82523d6000602084013e6102b8565b606091505b5091509150816103015760405162461bcd60e51b815260206004820152601460248201527343616e27742070617920746865206368616e676560601b604482015260640161016a565b6040516340c10f1960e01b8152336004820152602481018790527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906340c10f1990604401600060405180830381600087803b15801561036957600080fd5b505af115801561037d573d6000803e3d6000fd5b5050505050505050506103906001600055565b50565b61039b6105a8565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166398d5fdca6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156103fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061041f919061061a565b9050600061042d8383610649565b90508047101561047f5760405162461bcd60e51b815260206004820152601960248201527f4e6f7420656e6f7567682045544820696e2062616c616e636500000000000000604482015260640161016a565b604051632770a7eb60e21b8152336004820152602481018490527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690639dc29fac90604401600060405180830381600087803b1580156104e757600080fd5b505af11580156104fb573d6000803e3d6000fd5b505060405160009250829150339084908381818185875af1925050503d8060008114610543576040519150601f19603f3d011682016040523d82523d6000602084013e610548565b606091505b50915091508161059a5760405162461bcd60e51b815260206004820152601860248201527f43616e27742070617920666f722074686520746f6b656e730000000000000000604482015260640161016a565b505050506103906001600055565b6002600054036105fa5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161016a565b6002600055565b60006020828403121561061357600080fd5b5035919050565b60006020828403121561062c57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761066057610660610633565b92915050565b818103818111156106605761066061063356fea26469706673582212205dbc986a3d83f9f74f9aa6b85f87c690252194dbac21d40c6981be9a9337260564736f6c63430008130033",
  "deployedSourceMap": "636:1614:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1092:611;;;;;;:::i;:::-;;:::i;:::-;;1709:504;;;;;;;;;;-1:-1:-1;1709:504:19;;;;;:::i;:::-;;:::i;763:31::-;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;379:32:20;;;361:51;;349:2;334:18;763:31:19;;;;;;;724:33;;;;;;;;;;;;;;;1092:611;2261:21:1;:19;:21::i;:::-;1185:1:19::1;1173:9;:13;1165:63;;;::::0;-1:-1:-1;;;1165:63:19;;852:2:20;1165:63:19::1;::::0;::::1;834:21:20::0;891:2;871:18;;;864:30;930:34;910:18;;;903:62;-1:-1:-1;;;981:18:20;;;974:35;1026:19;;1165:63:19::1;;;;;;;;;1263:14;1280:6;-1:-1:-1::0;;;;;1280:15:19::1;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1263:34:::0;-1:-1:-1;1307:15:19::1;1325:18;1337:6:::0;1263:34;1325:18:::1;:::i;:::-;1307:36;;1374:10;1361:9;:23;;1353:61;;;::::0;-1:-1:-1;;;1353:61:19;;1752:2:20;1353:61:19::1;::::0;::::1;1734:21:20::0;1791:2;1771:18;;;1764:30;1830:27;1810:18;;;1803:55;1875:18;;1353:61:19::1;1550:349:20::0;1353:61:19::1;1454:11;1468:22;1480:10:::0;1468:9:::1;:22;:::i;:::-;1454:36;;1501:13;1516:18:::0;1546:10:::1;-1:-1:-1::0;;;;;1538:24:19::1;1570:6;1538:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1500:81;;;;1599:8;1591:41;;;::::0;-1:-1:-1;;;1591:41:19;;2449:2:20;1591:41:19::1;::::0;::::1;2431:21:20::0;2488:2;2468:18;;;2461:30;-1:-1:-1;;;2507:18:20;;;2500:50;2567:18;;1591:41:19::1;2247:344:20::0;1591:41:19::1;1666:30;::::0;-1:-1:-1;;;1666:30:19;;1677:10:::1;1666:30;::::0;::::1;2770:51:20::0;2837:18;;;2830:34;;;1666:5:19::1;-1:-1:-1::0;;;;;1666:10:19::1;::::0;::::1;::::0;2743:18:20;;1666:30:19::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1154:549;;;;;2303:20:1::0;1716:1;2809:7;:22;2629:209;2303:20;1092:611:19;:::o;1709:504::-;2261:21:1;:19;:21::i;:::-;1801:14:19::1;1818:6;-1:-1:-1::0;;;;;1818:15:19::1;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1801:34:::0;-1:-1:-1;1845:15:19::1;1863:18;1875:6:::0;1801:34;1863:18:::1;:::i;:::-;1845:36;;1924:10;1899:21;:35;;1891:73;;;::::0;-1:-1:-1;;;1891:73:19;;3077:2:20;1891:73:19::1;::::0;::::1;3059:21:20::0;3116:2;3096:18;;;3089:30;3155:27;3135:18;;;3128:55;3200:18;;1891:73:19::1;2875:349:20::0;1891:73:19::1;2002:30;::::0;-1:-1:-1;;;2002:30:19;;2013:10:::1;2002:30;::::0;::::1;2770:51:20::0;2837:18;;;2830:34;;;2002:5:19::1;-1:-1:-1::0;;;;;2002:10:19::1;::::0;::::1;::::0;2743:18:20;;2002:30:19::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;2104:47:19::1;::::0;2067:13:::1;::::0;-1:-1:-1;2067:13:19;;-1:-1:-1;2112:10:19::1;::::0;2136;;2067:13;2104:47;2067:13;2104:47;2136:10;2112;2104:47:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2066:85;;;;2169:8;2161:45;;;::::0;-1:-1:-1;;;2161:45:19;;3431:2:20;2161:45:19::1;::::0;::::1;3413:21:20::0;3470:2;3450:18;;;3443:30;3509:26;3489:18;;;3482:54;3553:18;;2161:45:19::1;3229:348:20::0;2161:45:19::1;1764:449;;;;2303:20:1::0;1716:1;2809:7;:22;2629:209;2336:287;1759:1;2468:7;;:19;2460:63;;;;-1:-1:-1;;;2460:63:1;;3784:2:20;2460:63:1;;;3766:21:20;3823:2;3803:18;;;3796:30;3862:33;3842:18;;;3835:61;3913:18;;2460:63:1;3582:355:20;2460:63:1;1759:1;2598:7;:18;2336:287::o;14:180:20:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:20;;14:180;-1:-1:-1;14:180:20:o;1056:184::-;1126:6;1179:2;1167:9;1158:7;1154:23;1150:32;1147:52;;;1195:1;1192;1185:12;1147:52;-1:-1:-1;1218:16:20;;1056:184;-1:-1:-1;1056:184:20:o;1245:127::-;1306:10;1301:3;1297:20;1294:1;1287:31;1337:4;1334:1;1327:15;1361:4;1358:1;1351:15;1377:168;1450:9;;;1481;;1498:15;;;1492:22;;1478:37;1468:71;;1519:18;;:::i;:::-;1377:168;;;;:::o;1904:128::-;1971:9;;;1992:11;;;1989:37;;;2006:18;;:::i",
  "language": "Solidity",
  "natspec": {
    "author": "JohnnyTime (https://smartcontractshacking.com)",
    "kind": "dev",
    "methods": {},
    "title": "GlodExchange",
    "version": 1
  },
  "offset": [
    636,
    2250
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x43 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3610724E EQ PUSH2 0x4F JUMPI DUP1 PUSH4 0x6C11BCD3 EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0x7DC0D1D0 EQ PUSH2 0x84 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0xD4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x4A JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x62 PUSH2 0x5D CALLDATASIZE PUSH1 0x4 PUSH2 0x601 JUMP JUMPDEST PUSH2 0x108 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x62 PUSH2 0x7F CALLDATASIZE PUSH1 0x4 PUSH2 0x601 JUMP JUMPDEST PUSH2 0x393 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB8 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB8 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x110 PUSH2 0x5A8 JUMP JUMPDEST PUSH1 0x0 CALLVALUE GT PUSH2 0x173 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E742070616964206D7573742062652067726561746572207468616E PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x98D5FDCA PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1D3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1F7 SWAP2 SWAP1 PUSH2 0x61A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x205 DUP4 DUP4 PUSH2 0x649 JUMP JUMPDEST SWAP1 POP DUP1 CALLVALUE LT ISZERO PUSH2 0x257 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E742070616964206973206E6F7420656E6F75676800000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x16A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x263 DUP3 CALLVALUE PUSH2 0x666 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2B3 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2B8 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x301 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x43616E27742070617920746865206368616E6765 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x16A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x40C10F19 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP8 SWAP1 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x40C10F19 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x369 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x37D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP PUSH2 0x390 PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x39B PUSH2 0x5A8 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x98D5FDCA PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3FB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x41F SWAP2 SWAP1 PUSH2 0x61A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x42D DUP4 DUP4 PUSH2 0x649 JUMP JUMPDEST SWAP1 POP DUP1 SELFBALANCE LT ISZERO PUSH2 0x47F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F7567682045544820696E2062616C616E636500000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x16A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2770A7EB PUSH1 0xE2 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x9DC29FAC SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4FB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x0 SWAP3 POP DUP3 SWAP2 POP CALLER SWAP1 DUP5 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x543 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x548 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x59A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E27742070617920666F722074686520746F6B656E730000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x16A JUMP JUMPDEST POP POP POP POP PUSH2 0x390 PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD SUB PUSH2 0x5FA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x16A JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x613 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x62C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x660 JUMPI PUSH2 0x660 PUSH2 0x633 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x660 JUMPI PUSH2 0x660 PUSH2 0x633 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5D 0xBC SWAP9 PUSH11 0x3D83F9F74F9AA6B85F87C6 SWAP1 0x25 0x21 SWAP5 0xDB 0xAC 0x21 0xD4 0xC PUSH10 0x81BE9A9337260564736F PUSH13 0x63430008130033000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        636,
        2250
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        636,
        2250
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        636,
        2250
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5": {
      "fn": null,
      "offset": [
        636,
        2250
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        636,
        2250
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "8": {
      "fn": null,
      "offset": [
        636,
        2250
      ],
      "op": "LT",
      "path": "19"
    },
    "9": {
      "fn": null,
      "offset": [
        636,
        2250
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x43"
    },
    "12": {
      "fn": null,
      "offset": [
        636,
        2250
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "13": {
      "fn": null,
      "offset": [
        636,
        2250
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        636,
        2250
      ],
      "op": "CALLDATALOAD",
      "path": "19"
    },
    "16": {
      "fn": null,
      "offset": [
        636,
        2250
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        636,
        2250
      ],
      "op": "SHR",
      "path": "19"
    },
    "19": {
      "fn": null,
      "offset": [
        636,
        2250
      ],
      "op": "DUP1",
      "path": "19"
    },
    "20": {
      "fn": null,
      "offset": [
        636,
        2250
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x3610724E"
    },
    "25": {
      "fn": null,
      "offset": [
        636,
        2250
      ],
      "op": "EQ",
      "path": "19"
    },
    "26": {
      "fn": null,
      "offset": [
        636,
        2250
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x4F"
    },
    "29": {
      "fn": null,
      "offset": [
        636,
        2250
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "30": {
      "fn": null,
      "offset": [
        636,
        2250
      ],
      "op": "DUP1",
      "path": "19"
    },
    "31": {
      "fn": null,
      "offset": [
        636,
        2250
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x6C11BCD3"
    },
    "36": {
      "fn": null,
      "offset": [
        636,
        2250
      ],
      "op": "EQ",
      "path": "19"
    },
    "37": {
      "fn": null,
      "offset": [
        636,
        2250
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x64"
    },
    "40": {
      "fn": null,
      "offset": [
        636,
        2250
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "41": {
      "fn": null,
      "offset": [
        636,
        2250
      ],
      "op": "DUP1",
      "path": "19"
    },
    "42": {
      "fn": null,
      "offset": [
        636,
        2250
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x7DC0D1D0"
    },
    "47": {
      "fn": null,
      "offset": [
        636,
        2250
      ],
      "op": "EQ",
      "path": "19"
    },
    "48": {
      "fn": null,
      "offset": [
        636,
        2250
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x84"
    },
    "51": {
      "fn": null,
      "offset": [
        636,
        2250
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "52": {
      "fn": null,
      "offset": [
        636,
        2250
      ],
      "op": "DUP1",
      "path": "19"
    },
    "53": {
      "fn": null,
      "offset": [
        636,
        2250
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xFC0C546A"
    },
    "58": {
      "fn": null,
      "offset": [
        636,
        2250
      ],
      "op": "EQ",
      "path": "19"
    },
    "59": {
      "fn": null,
      "offset": [
        636,
        2250
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xD4"
    },
    "62": {
      "fn": null,
      "offset": [
        636,
        2250
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "63": {
      "fn": null,
      "offset": [
        636,
        2250
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "65": {
      "fn": null,
      "offset": [
        636,
        2250
      ],
      "op": "DUP1",
      "path": "19"
    },
    "66": {
      "fn": null,
      "offset": [
        636,
        2250
      ],
      "op": "REVERT",
      "path": "19"
    },
    "67": {
      "fn": null,
      "offset": [
        636,
        2250
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "68": {
      "fn": null,
      "offset": [
        636,
        2250
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "69": {
      "fn": null,
      "offset": [
        636,
        2250
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x4A"
    },
    "72": {
      "fn": null,
      "offset": [
        636,
        2250
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "73": {
      "fn": null,
      "offset": [
        636,
        2250
      ],
      "op": "STOP",
      "path": "19"
    },
    "74": {
      "fn": null,
      "offset": [
        636,
        2250
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "75": {
      "fn": null,
      "offset": [
        636,
        2250
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "77": {
      "fn": null,
      "offset": [
        636,
        2250
      ],
      "op": "DUP1",
      "path": "19"
    },
    "78": {
      "first_revert": true,
      "fn": null,
      "offset": [
        636,
        2250
      ],
      "op": "REVERT",
      "path": "19"
    },
    "79": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1092,
        1703
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "80": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1092,
        1703
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x62"
    },
    "83": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1092,
        1703
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x5D"
    },
    "86": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1092,
        1703
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "87": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1092,
        1703
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "89": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1092,
        1703
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x601"
    },
    "92": {
      "fn": "GoldExchange.buyTokens",
      "jump": "i",
      "offset": [
        1092,
        1703
      ],
      "op": "JUMP",
      "path": "19"
    },
    "93": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1092,
        1703
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "94": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1092,
        1703
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x108"
    },
    "97": {
      "fn": "GoldExchange.buyTokens",
      "jump": "i",
      "offset": [
        1092,
        1703
      ],
      "op": "JUMP",
      "path": "19"
    },
    "98": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1092,
        1703
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "99": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1092,
        1703
      ],
      "op": "STOP",
      "path": "19"
    },
    "100": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        1709,
        2213
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "101": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        1709,
        2213
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "102": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        1709,
        2213
      ],
      "op": "DUP1",
      "path": "19"
    },
    "103": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        1709,
        2213
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "104": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        1709,
        2213
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x70"
    },
    "107": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        1709,
        2213
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "108": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        1709,
        2213
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "110": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        1709,
        2213
      ],
      "op": "DUP1",
      "path": "19"
    },
    "111": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        1709,
        2213
      ],
      "op": "REVERT",
      "path": "19"
    },
    "112": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        1709,
        2213
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "113": {
      "op": "POP"
    },
    "114": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        1709,
        2213
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x62"
    },
    "117": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        1709,
        2213
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x7F"
    },
    "120": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        1709,
        2213
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "121": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        1709,
        2213
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "123": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        1709,
        2213
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x601"
    },
    "126": {
      "fn": "GoldExchange.sellTokens",
      "jump": "i",
      "offset": [
        1709,
        2213
      ],
      "op": "JUMP",
      "path": "19"
    },
    "127": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        1709,
        2213
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "128": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        1709,
        2213
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x393"
    },
    "131": {
      "fn": "GoldExchange.sellTokens",
      "jump": "i",
      "offset": [
        1709,
        2213
      ],
      "op": "JUMP",
      "path": "19"
    },
    "132": {
      "offset": [
        763,
        794
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "133": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        763,
        794
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "134": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        763,
        794
      ],
      "op": "DUP1",
      "path": "19"
    },
    "135": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        763,
        794
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "136": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        763,
        794
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x90"
    },
    "139": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        763,
        794
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "140": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        763,
        794
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "142": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        763,
        794
      ],
      "op": "DUP1",
      "path": "19"
    },
    "143": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        763,
        794
      ],
      "op": "REVERT",
      "path": "19"
    },
    "144": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        763,
        794
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "145": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        763,
        794
      ],
      "op": "POP",
      "path": "19"
    },
    "146": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        763,
        794
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xB8"
    },
    "149": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        763,
        794
      ],
      "op": "PUSH32",
      "path": "19",
      "value": "0x0"
    },
    "182": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        763,
        794
      ],
      "op": "DUP2",
      "path": "19"
    },
    "183": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        763,
        794
      ],
      "op": "JUMP",
      "path": "19"
    },
    "184": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        763,
        794
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "185": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        763,
        794
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "187": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        763,
        794
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "188": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "190": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "192": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "194": {
      "op": "SHL"
    },
    "195": {
      "op": "SUB"
    },
    "196": {
      "op": "SWAP1"
    },
    "197": {
      "op": "SWAP2"
    },
    "198": {
      "op": "AND"
    },
    "199": {
      "op": "DUP2"
    },
    "200": {
      "op": "MSTORE"
    },
    "201": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "203": {
      "op": "ADD"
    },
    "204": {
      "offset": [
        763,
        794
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "206": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        763,
        794
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "207": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        763,
        794
      ],
      "op": "DUP1",
      "path": "19"
    },
    "208": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        763,
        794
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "209": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        763,
        794
      ],
      "op": "SUB",
      "path": "19"
    },
    "210": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        763,
        794
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "211": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        763,
        794
      ],
      "op": "RETURN",
      "path": "19"
    },
    "212": {
      "offset": [
        724,
        757
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "213": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        724,
        757
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "214": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        724,
        757
      ],
      "op": "DUP1",
      "path": "19"
    },
    "215": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        724,
        757
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "216": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        724,
        757
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xE0"
    },
    "219": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        724,
        757
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "220": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        724,
        757
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "222": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        724,
        757
      ],
      "op": "DUP1",
      "path": "19"
    },
    "223": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        724,
        757
      ],
      "op": "REVERT",
      "path": "19"
    },
    "224": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        724,
        757
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "225": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        724,
        757
      ],
      "op": "POP",
      "path": "19"
    },
    "226": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        724,
        757
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xB8"
    },
    "229": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        724,
        757
      ],
      "op": "PUSH32",
      "path": "19",
      "value": "0x0"
    },
    "262": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        724,
        757
      ],
      "op": "DUP2",
      "path": "19"
    },
    "263": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        724,
        757
      ],
      "op": "JUMP",
      "path": "19"
    },
    "264": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1092,
        1703
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "265": {
      "offset": [
        2261,
        2282
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x110"
    },
    "268": {
      "offset": [
        2261,
        2280
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5A8"
    },
    "271": {
      "jump": "i",
      "offset": [
        2261,
        2282
      ],
      "op": "JUMP",
      "path": "1"
    },
    "272": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        2261,
        2282
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "273": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1185,
        1186
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 0,
      "value": "0x0"
    },
    "275": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1173,
        1182
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "276": {
      "branch": 10,
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1173,
        1186
      ],
      "op": "GT",
      "path": "19"
    },
    "277": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1165,
        1228
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x173"
    },
    "280": {
      "branch": 10,
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1165,
        1228
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "281": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1165,
        1228
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "283": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1165,
        1228
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "284": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "288": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "290": {
      "op": "SHL"
    },
    "291": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1165,
        1228
      ],
      "op": "DUP2",
      "path": "19"
    },
    "292": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1165,
        1228
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "293": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "295": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1165,
        1228
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "297": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1165,
        1228
      ],
      "op": "DUP3",
      "path": "19"
    },
    "298": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1165,
        1228
      ],
      "op": "ADD",
      "path": "19"
    },
    "299": {
      "op": "MSTORE"
    },
    "300": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "302": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "304": {
      "op": "DUP3"
    },
    "305": {
      "op": "ADD"
    },
    "306": {
      "op": "MSTORE"
    },
    "307": {
      "op": "PUSH32",
      "value": "0x416D6F756E742070616964206D7573742062652067726561746572207468616E"
    },
    "340": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "342": {
      "op": "DUP3"
    },
    "343": {
      "op": "ADD"
    },
    "344": {
      "op": "MSTORE"
    },
    "345": {
      "op": "PUSH5",
      "value": "0x207A65726F"
    },
    "351": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "353": {
      "op": "SHL"
    },
    "354": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "356": {
      "op": "DUP3"
    },
    "357": {
      "op": "ADD"
    },
    "358": {
      "op": "MSTORE"
    },
    "359": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "361": {
      "op": "ADD"
    },
    "362": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1165,
        1228
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "363": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1165,
        1228
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "365": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1165,
        1228
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "366": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1165,
        1228
      ],
      "op": "DUP1",
      "path": "19"
    },
    "367": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1165,
        1228
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "368": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1165,
        1228
      ],
      "op": "SUB",
      "path": "19"
    },
    "369": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1165,
        1228
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "370": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1165,
        1228
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "19"
    },
    "371": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1165,
        1228
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "372": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1263,
        1277
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "374": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1280,
        1286
      ],
      "op": "PUSH32",
      "path": "19",
      "value": "0x0"
    },
    "407": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "409": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "411": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "413": {
      "op": "SHL"
    },
    "414": {
      "op": "SUB"
    },
    "415": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1280,
        1295
      ],
      "op": "AND",
      "path": "19"
    },
    "416": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1280,
        1295
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x98D5FDCA"
    },
    "421": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1280,
        1297
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "423": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1280,
        1297
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "424": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1280,
        1297
      ],
      "op": "DUP2",
      "path": "19"
    },
    "425": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1280,
        1297
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xFFFFFFFF"
    },
    "430": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1280,
        1297
      ],
      "op": "AND",
      "path": "19"
    },
    "431": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1280,
        1297
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xE0"
    },
    "433": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1280,
        1297
      ],
      "op": "SHL",
      "path": "19"
    },
    "434": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1280,
        1297
      ],
      "op": "DUP2",
      "path": "19"
    },
    "435": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1280,
        1297
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "436": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1280,
        1297
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "438": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1280,
        1297
      ],
      "op": "ADD",
      "path": "19"
    },
    "439": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1280,
        1297
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "441": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1280,
        1297
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "443": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1280,
        1297
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "444": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1280,
        1297
      ],
      "op": "DUP1",
      "path": "19"
    },
    "445": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1280,
        1297
      ],
      "op": "DUP4",
      "path": "19"
    },
    "446": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1280,
        1297
      ],
      "op": "SUB",
      "path": "19"
    },
    "447": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1280,
        1297
      ],
      "op": "DUP2",
      "path": "19"
    },
    "448": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1280,
        1297
      ],
      "op": "DUP7",
      "path": "19"
    },
    "449": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1280,
        1297
      ],
      "op": "GAS",
      "path": "19"
    },
    "450": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1280,
        1297
      ],
      "op": "STATICCALL",
      "path": "19"
    },
    "451": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1280,
        1297
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "452": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1280,
        1297
      ],
      "op": "DUP1",
      "path": "19"
    },
    "453": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1280,
        1297
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "454": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1280,
        1297
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1D3"
    },
    "457": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1280,
        1297
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "458": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1280,
        1297
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "459": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1280,
        1297
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "461": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1280,
        1297
      ],
      "op": "DUP1",
      "path": "19"
    },
    "462": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1280,
        1297
      ],
      "op": "RETURNDATACOPY",
      "path": "19"
    },
    "463": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1280,
        1297
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "464": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1280,
        1297
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "466": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1280,
        1297
      ],
      "op": "REVERT",
      "path": "19"
    },
    "467": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1280,
        1297
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "468": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1280,
        1297
      ],
      "op": "POP",
      "path": "19"
    },
    "469": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1280,
        1297
      ],
      "op": "POP",
      "path": "19"
    },
    "470": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1280,
        1297
      ],
      "op": "POP",
      "path": "19"
    },
    "471": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1280,
        1297
      ],
      "op": "POP",
      "path": "19"
    },
    "472": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1280,
        1297
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "474": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1280,
        1297
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "475": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1280,
        1297
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "476": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1280,
        1297
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1F"
    },
    "478": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1280,
        1297
      ],
      "op": "NOT",
      "path": "19"
    },
    "479": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1280,
        1297
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1F"
    },
    "481": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1280,
        1297
      ],
      "op": "DUP3",
      "path": "19"
    },
    "482": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1280,
        1297
      ],
      "op": "ADD",
      "path": "19"
    },
    "483": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1280,
        1297
      ],
      "op": "AND",
      "path": "19"
    },
    "484": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1280,
        1297
      ],
      "op": "DUP3",
      "path": "19"
    },
    "485": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1280,
        1297
      ],
      "op": "ADD",
      "path": "19"
    },
    "486": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1280,
        1297
      ],
      "op": "DUP1",
      "path": "19"
    },
    "487": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1280,
        1297
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "489": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1280,
        1297
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "490": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1280,
        1297
      ],
      "op": "POP",
      "path": "19"
    },
    "491": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1280,
        1297
      ],
      "op": "DUP2",
      "path": "19"
    },
    "492": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1280,
        1297
      ],
      "op": "ADD",
      "path": "19"
    },
    "493": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1280,
        1297
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "494": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1280,
        1297
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1F7"
    },
    "497": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1280,
        1297
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "498": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1280,
        1297
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "499": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1280,
        1297
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x61A"
    },
    "502": {
      "fn": "GoldExchange.buyTokens",
      "jump": "i",
      "offset": [
        1280,
        1297
      ],
      "op": "JUMP",
      "path": "19"
    },
    "503": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1280,
        1297
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "504": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1263,
        1297
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "505": {
      "op": "POP"
    },
    "506": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1307,
        1322
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "508": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1325,
        1343
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x205"
    },
    "511": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1337,
        1343
      ],
      "op": "DUP4",
      "path": "19"
    },
    "512": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1263,
        1297
      ],
      "op": "DUP4",
      "path": "19"
    },
    "513": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1325,
        1343
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x649"
    },
    "516": {
      "fn": "GoldExchange.buyTokens",
      "jump": "i",
      "offset": [
        1325,
        1343
      ],
      "op": "JUMP",
      "path": "19"
    },
    "517": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1325,
        1343
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "518": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1307,
        1343
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "519": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1307,
        1343
      ],
      "op": "POP",
      "path": "19"
    },
    "520": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1374,
        1384
      ],
      "op": "DUP1",
      "path": "19",
      "statement": 1
    },
    "521": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1361,
        1370
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "522": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1361,
        1384
      ],
      "op": "LT",
      "path": "19"
    },
    "523": {
      "branch": 11,
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1361,
        1384
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "524": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1353,
        1414
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x257"
    },
    "527": {
      "branch": 11,
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1353,
        1414
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "528": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1353,
        1414
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "530": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1353,
        1414
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "531": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "535": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "537": {
      "op": "SHL"
    },
    "538": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1353,
        1414
      ],
      "op": "DUP2",
      "path": "19"
    },
    "539": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1353,
        1414
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "540": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "542": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1353,
        1414
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "544": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1353,
        1414
      ],
      "op": "DUP3",
      "path": "19"
    },
    "545": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1353,
        1414
      ],
      "op": "ADD",
      "path": "19"
    },
    "546": {
      "op": "MSTORE"
    },
    "547": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "549": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "551": {
      "op": "DUP3"
    },
    "552": {
      "op": "ADD"
    },
    "553": {
      "op": "MSTORE"
    },
    "554": {
      "op": "PUSH32",
      "value": "0x416D6F756E742070616964206973206E6F7420656E6F75676800000000000000"
    },
    "587": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "589": {
      "op": "DUP3"
    },
    "590": {
      "op": "ADD"
    },
    "591": {
      "op": "MSTORE"
    },
    "592": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "594": {
      "op": "ADD"
    },
    "595": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1353,
        1414
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x16A"
    },
    "598": {
      "op": "JUMP"
    },
    "599": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1353,
        1414
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "600": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1454,
        1465
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "602": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1468,
        1490
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x263"
    },
    "605": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1480,
        1490
      ],
      "op": "DUP3",
      "path": "19"
    },
    "606": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1468,
        1477
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "607": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1468,
        1490
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x666"
    },
    "610": {
      "fn": "GoldExchange.buyTokens",
      "jump": "i",
      "offset": [
        1468,
        1490
      ],
      "op": "JUMP",
      "path": "19"
    },
    "611": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1468,
        1490
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "612": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1454,
        1490
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "613": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1454,
        1490
      ],
      "op": "POP",
      "path": "19"
    },
    "614": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1501,
        1514
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "616": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1516,
        1534
      ],
      "op": "DUP1",
      "path": "19"
    },
    "617": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1546,
        1556
      ],
      "op": "CALLER",
      "path": "19"
    },
    "618": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "620": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "622": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "624": {
      "op": "SHL"
    },
    "625": {
      "op": "SUB"
    },
    "626": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1538,
        1562
      ],
      "op": "AND",
      "path": "19"
    },
    "627": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1570,
        1576
      ],
      "op": "DUP4",
      "path": "19"
    },
    "628": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1538,
        1581
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "630": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1538,
        1581
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "631": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1538,
        1581
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "633": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1538,
        1581
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "635": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1538,
        1581
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "636": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1538,
        1581
      ],
      "op": "DUP1",
      "path": "19"
    },
    "637": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1538,
        1581
      ],
      "op": "DUP4",
      "path": "19"
    },
    "638": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1538,
        1581
      ],
      "op": "SUB",
      "path": "19"
    },
    "639": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1538,
        1581
      ],
      "op": "DUP2",
      "path": "19"
    },
    "640": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1538,
        1581
      ],
      "op": "DUP6",
      "path": "19"
    },
    "641": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1538,
        1581
      ],
      "op": "DUP8",
      "path": "19"
    },
    "642": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1538,
        1581
      ],
      "op": "GAS",
      "path": "19"
    },
    "643": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1538,
        1581
      ],
      "op": "CALL",
      "path": "19"
    },
    "644": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1538,
        1581
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "645": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1538,
        1581
      ],
      "op": "POP",
      "path": "19"
    },
    "646": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1538,
        1581
      ],
      "op": "POP",
      "path": "19"
    },
    "647": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1538,
        1581
      ],
      "op": "POP",
      "path": "19"
    },
    "648": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1538,
        1581
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "649": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1538,
        1581
      ],
      "op": "DUP1",
      "path": "19"
    },
    "650": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1538,
        1581
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "652": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1538,
        1581
      ],
      "op": "DUP2",
      "path": "19"
    },
    "653": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1538,
        1581
      ],
      "op": "EQ",
      "path": "19"
    },
    "654": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1538,
        1581
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2B3"
    },
    "657": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1538,
        1581
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "658": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1538,
        1581
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "660": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1538,
        1581
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "661": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1538,
        1581
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "662": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1538,
        1581
      ],
      "op": "POP",
      "path": "19"
    },
    "663": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1538,
        1581
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1F"
    },
    "665": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1538,
        1581
      ],
      "op": "NOT",
      "path": "19"
    },
    "666": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1538,
        1581
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x3F"
    },
    "668": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1538,
        1581
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "669": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1538,
        1581
      ],
      "op": "ADD",
      "path": "19"
    },
    "670": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1538,
        1581
      ],
      "op": "AND",
      "path": "19"
    },
    "671": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1538,
        1581
      ],
      "op": "DUP3",
      "path": "19"
    },
    "672": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1538,
        1581
      ],
      "op": "ADD",
      "path": "19"
    },
    "673": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1538,
        1581
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "675": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1538,
        1581
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "676": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1538,
        1581
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "677": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1538,
        1581
      ],
      "op": "DUP3",
      "path": "19"
    },
    "678": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1538,
        1581
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "679": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1538,
        1581
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "680": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1538,
        1581
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "682": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1538,
        1581
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "684": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1538,
        1581
      ],
      "op": "DUP5",
      "path": "19"
    },
    "685": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1538,
        1581
      ],
      "op": "ADD",
      "path": "19"
    },
    "686": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1538,
        1581
      ],
      "op": "RETURNDATACOPY",
      "path": "19"
    },
    "687": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1538,
        1581
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2B8"
    },
    "690": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1538,
        1581
      ],
      "op": "JUMP",
      "path": "19"
    },
    "691": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1538,
        1581
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "692": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1538,
        1581
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x60"
    },
    "694": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1538,
        1581
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "695": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1538,
        1581
      ],
      "op": "POP",
      "path": "19"
    },
    "696": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1538,
        1581
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "697": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1538,
        1581
      ],
      "op": "POP",
      "path": "19"
    },
    "698": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1500,
        1581
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "699": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1500,
        1581
      ],
      "op": "POP",
      "path": "19"
    },
    "700": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1500,
        1581
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "701": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1500,
        1581
      ],
      "op": "POP",
      "path": "19"
    },
    "702": {
      "branch": 12,
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1599,
        1607
      ],
      "op": "DUP2",
      "path": "19",
      "statement": 2
    },
    "703": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1591,
        1632
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x301"
    },
    "706": {
      "branch": 12,
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1591,
        1632
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "707": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1591,
        1632
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "709": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1591,
        1632
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "710": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "714": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "716": {
      "op": "SHL"
    },
    "717": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1591,
        1632
      ],
      "op": "DUP2",
      "path": "19"
    },
    "718": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1591,
        1632
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "719": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "721": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1591,
        1632
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "723": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1591,
        1632
      ],
      "op": "DUP3",
      "path": "19"
    },
    "724": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1591,
        1632
      ],
      "op": "ADD",
      "path": "19"
    },
    "725": {
      "op": "MSTORE"
    },
    "726": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "728": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "730": {
      "op": "DUP3"
    },
    "731": {
      "op": "ADD"
    },
    "732": {
      "op": "MSTORE"
    },
    "733": {
      "op": "PUSH20",
      "value": "0x43616E27742070617920746865206368616E6765"
    },
    "754": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "756": {
      "op": "SHL"
    },
    "757": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "759": {
      "op": "DUP3"
    },
    "760": {
      "op": "ADD"
    },
    "761": {
      "op": "MSTORE"
    },
    "762": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "764": {
      "op": "ADD"
    },
    "765": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1591,
        1632
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x16A"
    },
    "768": {
      "op": "JUMP"
    },
    "769": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1591,
        1632
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "770": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1666,
        1696
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 3,
      "value": "0x40"
    },
    "772": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1666,
        1696
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "773": {
      "op": "PUSH4",
      "value": "0x40C10F19"
    },
    "778": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "780": {
      "op": "SHL"
    },
    "781": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1666,
        1696
      ],
      "op": "DUP2",
      "path": "19"
    },
    "782": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1666,
        1696
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "783": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1677,
        1687
      ],
      "op": "CALLER",
      "path": "19"
    },
    "784": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1666,
        1696
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "786": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1666,
        1696
      ],
      "op": "DUP3",
      "path": "19"
    },
    "787": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1666,
        1696
      ],
      "op": "ADD",
      "path": "19"
    },
    "788": {
      "op": "MSTORE"
    },
    "789": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "791": {
      "op": "DUP2"
    },
    "792": {
      "op": "ADD"
    },
    "793": {
      "op": "DUP8"
    },
    "794": {
      "op": "SWAP1"
    },
    "795": {
      "op": "MSTORE"
    },
    "796": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1666,
        1671
      ],
      "op": "PUSH32",
      "path": "19",
      "value": "0x0"
    },
    "829": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "831": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "833": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "835": {
      "op": "SHL"
    },
    "836": {
      "op": "SUB"
    },
    "837": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1666,
        1676
      ],
      "op": "AND",
      "path": "19"
    },
    "838": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1666,
        1676
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "839": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1666,
        1676
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x40C10F19"
    },
    "844": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1666,
        1676
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "845": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "847": {
      "op": "ADD"
    },
    "848": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1666,
        1696
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "850": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1666,
        1696
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "852": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1666,
        1696
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "853": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1666,
        1696
      ],
      "op": "DUP1",
      "path": "19"
    },
    "854": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1666,
        1696
      ],
      "op": "DUP4",
      "path": "19"
    },
    "855": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1666,
        1696
      ],
      "op": "SUB",
      "path": "19"
    },
    "856": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1666,
        1696
      ],
      "op": "DUP2",
      "path": "19"
    },
    "857": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1666,
        1696
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "859": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1666,
        1696
      ],
      "op": "DUP8",
      "path": "19"
    },
    "860": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1666,
        1696
      ],
      "op": "DUP1",
      "path": "19"
    },
    "861": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1666,
        1696
      ],
      "op": "EXTCODESIZE",
      "path": "19"
    },
    "862": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1666,
        1696
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "863": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1666,
        1696
      ],
      "op": "DUP1",
      "path": "19"
    },
    "864": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1666,
        1696
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "865": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1666,
        1696
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x369"
    },
    "868": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1666,
        1696
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "869": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1666,
        1696
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "871": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1666,
        1696
      ],
      "op": "DUP1",
      "path": "19"
    },
    "872": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1666,
        1696
      ],
      "op": "REVERT",
      "path": "19"
    },
    "873": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1666,
        1696
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "874": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1666,
        1696
      ],
      "op": "POP",
      "path": "19"
    },
    "875": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1666,
        1696
      ],
      "op": "GAS",
      "path": "19"
    },
    "876": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1666,
        1696
      ],
      "op": "CALL",
      "path": "19"
    },
    "877": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1666,
        1696
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "878": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1666,
        1696
      ],
      "op": "DUP1",
      "path": "19"
    },
    "879": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1666,
        1696
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "880": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1666,
        1696
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x37D"
    },
    "883": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1666,
        1696
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "884": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1666,
        1696
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "885": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1666,
        1696
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "887": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1666,
        1696
      ],
      "op": "DUP1",
      "path": "19"
    },
    "888": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1666,
        1696
      ],
      "op": "RETURNDATACOPY",
      "path": "19"
    },
    "889": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1666,
        1696
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "890": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1666,
        1696
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "892": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1666,
        1696
      ],
      "op": "REVERT",
      "path": "19"
    },
    "893": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1666,
        1696
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "894": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1666,
        1696
      ],
      "op": "POP",
      "path": "19"
    },
    "895": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1666,
        1696
      ],
      "op": "POP",
      "path": "19"
    },
    "896": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1666,
        1696
      ],
      "op": "POP",
      "path": "19"
    },
    "897": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1666,
        1696
      ],
      "op": "POP",
      "path": "19"
    },
    "898": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1154,
        1703
      ],
      "op": "POP",
      "path": "19"
    },
    "899": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1154,
        1703
      ],
      "op": "POP",
      "path": "19"
    },
    "900": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1154,
        1703
      ],
      "op": "POP",
      "path": "19"
    },
    "901": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1154,
        1703
      ],
      "op": "POP",
      "path": "19"
    },
    "902": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1154,
        1703
      ],
      "op": "POP",
      "path": "19"
    },
    "903": {
      "offset": [
        2303,
        2323
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x390"
    },
    "906": {
      "offset": [
        1716,
        1717
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "908": {
      "fn": "ReentrancyGuard._nonReentrantAfter",
      "offset": [
        2809,
        2816
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 4,
      "value": "0x0"
    },
    "910": {
      "fn": "ReentrancyGuard._nonReentrantAfter",
      "offset": [
        2809,
        2831
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "911": {
      "fn": "ReentrancyGuard._nonReentrantAfter",
      "offset": [
        2629,
        2838
      ],
      "op": "JUMP",
      "path": "1"
    },
    "912": {
      "offset": [
        2303,
        2323
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "913": {
      "fn": "GoldExchange.buyTokens",
      "offset": [
        1092,
        1703
      ],
      "op": "POP",
      "path": "19"
    },
    "914": {
      "fn": "GoldExchange.buyTokens",
      "jump": "o",
      "offset": [
        1092,
        1703
      ],
      "op": "JUMP",
      "path": "19"
    },
    "915": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        1709,
        2213
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "916": {
      "offset": [
        2261,
        2282
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x39B"
    },
    "919": {
      "offset": [
        2261,
        2280
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5A8"
    },
    "922": {
      "jump": "i",
      "offset": [
        2261,
        2282
      ],
      "op": "JUMP",
      "path": "1"
    },
    "923": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2261,
        2282
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "924": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        1801,
        1815
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "926": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        1818,
        1824
      ],
      "op": "PUSH32",
      "path": "19",
      "value": "0x0"
    },
    "959": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "961": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "963": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "965": {
      "op": "SHL"
    },
    "966": {
      "op": "SUB"
    },
    "967": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        1818,
        1833
      ],
      "op": "AND",
      "path": "19"
    },
    "968": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        1818,
        1833
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x98D5FDCA"
    },
    "973": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        1818,
        1835
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "975": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        1818,
        1835
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "976": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        1818,
        1835
      ],
      "op": "DUP2",
      "path": "19"
    },
    "977": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        1818,
        1835
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xFFFFFFFF"
    },
    "982": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        1818,
        1835
      ],
      "op": "AND",
      "path": "19"
    },
    "983": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        1818,
        1835
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xE0"
    },
    "985": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        1818,
        1835
      ],
      "op": "SHL",
      "path": "19"
    },
    "986": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        1818,
        1835
      ],
      "op": "DUP2",
      "path": "19"
    },
    "987": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        1818,
        1835
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "988": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        1818,
        1835
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "990": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        1818,
        1835
      ],
      "op": "ADD",
      "path": "19"
    },
    "991": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        1818,
        1835
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "993": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        1818,
        1835
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "995": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        1818,
        1835
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "996": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        1818,
        1835
      ],
      "op": "DUP1",
      "path": "19"
    },
    "997": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        1818,
        1835
      ],
      "op": "DUP4",
      "path": "19"
    },
    "998": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        1818,
        1835
      ],
      "op": "SUB",
      "path": "19"
    },
    "999": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        1818,
        1835
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1000": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        1818,
        1835
      ],
      "op": "DUP7",
      "path": "19"
    },
    "1001": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        1818,
        1835
      ],
      "op": "GAS",
      "path": "19"
    },
    "1002": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        1818,
        1835
      ],
      "op": "STATICCALL",
      "path": "19"
    },
    "1003": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        1818,
        1835
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1004": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        1818,
        1835
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1005": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        1818,
        1835
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1006": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        1818,
        1835
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3FB"
    },
    "1009": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        1818,
        1835
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1010": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        1818,
        1835
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "1011": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        1818,
        1835
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1013": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        1818,
        1835
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1014": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        1818,
        1835
      ],
      "op": "RETURNDATACOPY",
      "path": "19"
    },
    "1015": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        1818,
        1835
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "1016": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        1818,
        1835
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1018": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        1818,
        1835
      ],
      "op": "REVERT",
      "path": "19"
    },
    "1019": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        1818,
        1835
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1020": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        1818,
        1835
      ],
      "op": "POP",
      "path": "19"
    },
    "1021": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        1818,
        1835
      ],
      "op": "POP",
      "path": "19"
    },
    "1022": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        1818,
        1835
      ],
      "op": "POP",
      "path": "19"
    },
    "1023": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        1818,
        1835
      ],
      "op": "POP",
      "path": "19"
    },
    "1024": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        1818,
        1835
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "1026": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        1818,
        1835
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "1027": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        1818,
        1835
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "1028": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        1818,
        1835
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1F"
    },
    "1030": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        1818,
        1835
      ],
      "op": "NOT",
      "path": "19"
    },
    "1031": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        1818,
        1835
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1F"
    },
    "1033": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        1818,
        1835
      ],
      "op": "DUP3",
      "path": "19"
    },
    "1034": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        1818,
        1835
      ],
      "op": "ADD",
      "path": "19"
    },
    "1035": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        1818,
        1835
      ],
      "op": "AND",
      "path": "19"
    },
    "1036": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        1818,
        1835
      ],
      "op": "DUP3",
      "path": "19"
    },
    "1037": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        1818,
        1835
      ],
      "op": "ADD",
      "path": "19"
    },
    "1038": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        1818,
        1835
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1039": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        1818,
        1835
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "1041": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        1818,
        1835
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1042": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        1818,
        1835
      ],
      "op": "POP",
      "path": "19"
    },
    "1043": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        1818,
        1835
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1044": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        1818,
        1835
      ],
      "op": "ADD",
      "path": "19"
    },
    "1045": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        1818,
        1835
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1046": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        1818,
        1835
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x41F"
    },
    "1049": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        1818,
        1835
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "1050": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        1818,
        1835
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1051": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        1818,
        1835
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x61A"
    },
    "1054": {
      "fn": "GoldExchange.sellTokens",
      "jump": "i",
      "offset": [
        1818,
        1835
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1055": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        1818,
        1835
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1056": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        1801,
        1835
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1057": {
      "op": "POP"
    },
    "1058": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        1845,
        1860
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1060": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        1863,
        1881
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x42D"
    },
    "1063": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        1875,
        1881
      ],
      "op": "DUP4",
      "path": "19"
    },
    "1064": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        1801,
        1835
      ],
      "op": "DUP4",
      "path": "19"
    },
    "1065": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        1863,
        1881
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x649"
    },
    "1068": {
      "fn": "GoldExchange.sellTokens",
      "jump": "i",
      "offset": [
        1863,
        1881
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1069": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        1863,
        1881
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1070": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        1845,
        1881
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1071": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        1845,
        1881
      ],
      "op": "POP",
      "path": "19"
    },
    "1072": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        1924,
        1934
      ],
      "op": "DUP1",
      "path": "19",
      "statement": 5
    },
    "1073": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        1899,
        1920
      ],
      "op": "SELFBALANCE",
      "path": "19"
    },
    "1074": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        1899,
        1934
      ],
      "op": "LT",
      "path": "19"
    },
    "1075": {
      "branch": 13,
      "fn": "GoldExchange.sellTokens",
      "offset": [
        1899,
        1934
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1076": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        1891,
        1964
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x47F"
    },
    "1079": {
      "branch": 13,
      "fn": "GoldExchange.sellTokens",
      "offset": [
        1891,
        1964
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1080": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        1891,
        1964
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "1082": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        1891,
        1964
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "1083": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1087": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1089": {
      "op": "SHL"
    },
    "1090": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        1891,
        1964
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1091": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        1891,
        1964
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1092": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1094": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        1891,
        1964
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1096": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        1891,
        1964
      ],
      "op": "DUP3",
      "path": "19"
    },
    "1097": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        1891,
        1964
      ],
      "op": "ADD",
      "path": "19"
    },
    "1098": {
      "op": "MSTORE"
    },
    "1099": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "1101": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1103": {
      "op": "DUP3"
    },
    "1104": {
      "op": "ADD"
    },
    "1105": {
      "op": "MSTORE"
    },
    "1106": {
      "op": "PUSH32",
      "value": "0x4E6F7420656E6F7567682045544820696E2062616C616E636500000000000000"
    },
    "1139": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1141": {
      "op": "DUP3"
    },
    "1142": {
      "op": "ADD"
    },
    "1143": {
      "op": "MSTORE"
    },
    "1144": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1146": {
      "op": "ADD"
    },
    "1147": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        1891,
        1964
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x16A"
    },
    "1150": {
      "op": "JUMP"
    },
    "1151": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        1891,
        1964
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1152": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2002,
        2032
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 6,
      "value": "0x40"
    },
    "1154": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2002,
        2032
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "1155": {
      "op": "PUSH4",
      "value": "0x2770A7EB"
    },
    "1160": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "1162": {
      "op": "SHL"
    },
    "1163": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2002,
        2032
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1164": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2002,
        2032
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1165": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2013,
        2023
      ],
      "op": "CALLER",
      "path": "19"
    },
    "1166": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2002,
        2032
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1168": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2002,
        2032
      ],
      "op": "DUP3",
      "path": "19"
    },
    "1169": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2002,
        2032
      ],
      "op": "ADD",
      "path": "19"
    },
    "1170": {
      "op": "MSTORE"
    },
    "1171": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1173": {
      "op": "DUP2"
    },
    "1174": {
      "op": "ADD"
    },
    "1175": {
      "op": "DUP5"
    },
    "1176": {
      "op": "SWAP1"
    },
    "1177": {
      "op": "MSTORE"
    },
    "1178": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2002,
        2007
      ],
      "op": "PUSH32",
      "path": "19",
      "value": "0x0"
    },
    "1211": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1213": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1215": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1217": {
      "op": "SHL"
    },
    "1218": {
      "op": "SUB"
    },
    "1219": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2002,
        2012
      ],
      "op": "AND",
      "path": "19"
    },
    "1220": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2002,
        2012
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1221": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2002,
        2012
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x9DC29FAC"
    },
    "1226": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2002,
        2012
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1227": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1229": {
      "op": "ADD"
    },
    "1230": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2002,
        2032
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1232": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2002,
        2032
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "1234": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2002,
        2032
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "1235": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2002,
        2032
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1236": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2002,
        2032
      ],
      "op": "DUP4",
      "path": "19"
    },
    "1237": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2002,
        2032
      ],
      "op": "SUB",
      "path": "19"
    },
    "1238": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2002,
        2032
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1239": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2002,
        2032
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1241": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2002,
        2032
      ],
      "op": "DUP8",
      "path": "19"
    },
    "1242": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2002,
        2032
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1243": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2002,
        2032
      ],
      "op": "EXTCODESIZE",
      "path": "19"
    },
    "1244": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2002,
        2032
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1245": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2002,
        2032
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1246": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2002,
        2032
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1247": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2002,
        2032
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x4E7"
    },
    "1250": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2002,
        2032
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1251": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2002,
        2032
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1253": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2002,
        2032
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1254": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2002,
        2032
      ],
      "op": "REVERT",
      "path": "19"
    },
    "1255": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2002,
        2032
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1256": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2002,
        2032
      ],
      "op": "POP",
      "path": "19"
    },
    "1257": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2002,
        2032
      ],
      "op": "GAS",
      "path": "19"
    },
    "1258": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2002,
        2032
      ],
      "op": "CALL",
      "path": "19"
    },
    "1259": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2002,
        2032
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1260": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2002,
        2032
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1261": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2002,
        2032
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1262": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2002,
        2032
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x4FB"
    },
    "1265": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2002,
        2032
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1266": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2002,
        2032
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "1267": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2002,
        2032
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1269": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2002,
        2032
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1270": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2002,
        2032
      ],
      "op": "RETURNDATACOPY",
      "path": "19"
    },
    "1271": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2002,
        2032
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "1272": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2002,
        2032
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1274": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2002,
        2032
      ],
      "op": "REVERT",
      "path": "19"
    },
    "1275": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2002,
        2032
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1276": {
      "op": "POP"
    },
    "1277": {
      "op": "POP"
    },
    "1278": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2104,
        2151
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "1280": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2104,
        2151
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "1281": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2067,
        2080
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1283": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2067,
        2080
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "1284": {
      "op": "POP"
    },
    "1285": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2067,
        2080
      ],
      "op": "DUP3",
      "path": "19"
    },
    "1286": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2067,
        2080
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "1287": {
      "op": "POP"
    },
    "1288": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2112,
        2122
      ],
      "op": "CALLER",
      "path": "19"
    },
    "1289": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2112,
        2122
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1290": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2136,
        2146
      ],
      "op": "DUP5",
      "path": "19"
    },
    "1291": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2136,
        2146
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1292": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2067,
        2080
      ],
      "op": "DUP4",
      "path": "19"
    },
    "1293": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2104,
        2151
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1294": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2067,
        2080
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1295": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2104,
        2151
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1296": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2136,
        2146
      ],
      "op": "DUP6",
      "path": "19"
    },
    "1297": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2112,
        2122
      ],
      "op": "DUP8",
      "path": "19"
    },
    "1298": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2104,
        2151
      ],
      "op": "GAS",
      "path": "19"
    },
    "1299": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2104,
        2151
      ],
      "op": "CALL",
      "path": "19"
    },
    "1300": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2104,
        2151
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "1301": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2104,
        2151
      ],
      "op": "POP",
      "path": "19"
    },
    "1302": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2104,
        2151
      ],
      "op": "POP",
      "path": "19"
    },
    "1303": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2104,
        2151
      ],
      "op": "POP",
      "path": "19"
    },
    "1304": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2104,
        2151
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "1305": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2104,
        2151
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1306": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2104,
        2151
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1308": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2104,
        2151
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1309": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2104,
        2151
      ],
      "op": "EQ",
      "path": "19"
    },
    "1310": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2104,
        2151
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x543"
    },
    "1313": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2104,
        2151
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1314": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2104,
        2151
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "1316": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2104,
        2151
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "1317": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2104,
        2151
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "1318": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2104,
        2151
      ],
      "op": "POP",
      "path": "19"
    },
    "1319": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2104,
        2151
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1F"
    },
    "1321": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2104,
        2151
      ],
      "op": "NOT",
      "path": "19"
    },
    "1322": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2104,
        2151
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x3F"
    },
    "1324": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2104,
        2151
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "1325": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2104,
        2151
      ],
      "op": "ADD",
      "path": "19"
    },
    "1326": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2104,
        2151
      ],
      "op": "AND",
      "path": "19"
    },
    "1327": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2104,
        2151
      ],
      "op": "DUP3",
      "path": "19"
    },
    "1328": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2104,
        2151
      ],
      "op": "ADD",
      "path": "19"
    },
    "1329": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2104,
        2151
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "1331": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2104,
        2151
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1332": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2104,
        2151
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "1333": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2104,
        2151
      ],
      "op": "DUP3",
      "path": "19"
    },
    "1334": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2104,
        2151
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1335": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2104,
        2151
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "1336": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2104,
        2151
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1338": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2104,
        2151
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "1340": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2104,
        2151
      ],
      "op": "DUP5",
      "path": "19"
    },
    "1341": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2104,
        2151
      ],
      "op": "ADD",
      "path": "19"
    },
    "1342": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2104,
        2151
      ],
      "op": "RETURNDATACOPY",
      "path": "19"
    },
    "1343": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2104,
        2151
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x548"
    },
    "1346": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2104,
        2151
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1347": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2104,
        2151
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1348": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2104,
        2151
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x60"
    },
    "1350": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2104,
        2151
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "1351": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2104,
        2151
      ],
      "op": "POP",
      "path": "19"
    },
    "1352": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2104,
        2151
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1353": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2104,
        2151
      ],
      "op": "POP",
      "path": "19"
    },
    "1354": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2066,
        2151
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "1355": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2066,
        2151
      ],
      "op": "POP",
      "path": "19"
    },
    "1356": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2066,
        2151
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "1357": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2066,
        2151
      ],
      "op": "POP",
      "path": "19"
    },
    "1358": {
      "branch": 14,
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2169,
        2177
      ],
      "op": "DUP2",
      "path": "19",
      "statement": 7
    },
    "1359": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2161,
        2206
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x59A"
    },
    "1362": {
      "branch": 14,
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2161,
        2206
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1363": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2161,
        2206
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "1365": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2161,
        2206
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "1366": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1370": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1372": {
      "op": "SHL"
    },
    "1373": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2161,
        2206
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1374": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2161,
        2206
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1375": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1377": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2161,
        2206
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1379": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2161,
        2206
      ],
      "op": "DUP3",
      "path": "19"
    },
    "1380": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2161,
        2206
      ],
      "op": "ADD",
      "path": "19"
    },
    "1381": {
      "op": "MSTORE"
    },
    "1382": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "1384": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1386": {
      "op": "DUP3"
    },
    "1387": {
      "op": "ADD"
    },
    "1388": {
      "op": "MSTORE"
    },
    "1389": {
      "op": "PUSH32",
      "value": "0x43616E27742070617920666F722074686520746F6B656E730000000000000000"
    },
    "1422": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1424": {
      "op": "DUP3"
    },
    "1425": {
      "op": "ADD"
    },
    "1426": {
      "op": "MSTORE"
    },
    "1427": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1429": {
      "op": "ADD"
    },
    "1430": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2161,
        2206
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x16A"
    },
    "1433": {
      "op": "JUMP"
    },
    "1434": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        2161,
        2206
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1435": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        1764,
        2213
      ],
      "op": "POP",
      "path": "19"
    },
    "1436": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        1764,
        2213
      ],
      "op": "POP",
      "path": "19"
    },
    "1437": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        1764,
        2213
      ],
      "op": "POP",
      "path": "19"
    },
    "1438": {
      "fn": "GoldExchange.sellTokens",
      "offset": [
        1764,
        2213
      ],
      "op": "POP",
      "path": "19"
    },
    "1439": {
      "offset": [
        2303,
        2323
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x390"
    },
    "1442": {
      "offset": [
        1716,
        1717
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1444": {
      "fn": "ReentrancyGuard._nonReentrantAfter",
      "offset": [
        2809,
        2816
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1446": {
      "fn": "ReentrancyGuard._nonReentrantAfter",
      "offset": [
        2809,
        2831
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "1447": {
      "fn": "ReentrancyGuard._nonReentrantAfter",
      "offset": [
        2629,
        2838
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1448": {
      "fn": "ReentrancyGuard._nonReentrantBefore",
      "offset": [
        2336,
        2623
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1449": {
      "offset": [
        1759,
        1760
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "1451": {
      "fn": "ReentrancyGuard._nonReentrantBefore",
      "offset": [
        2468,
        2475
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 8,
      "value": "0x0"
    },
    "1453": {
      "fn": "ReentrancyGuard._nonReentrantBefore",
      "offset": [
        2468,
        2475
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1454": {
      "branch": 15,
      "fn": "ReentrancyGuard._nonReentrantBefore",
      "offset": [
        2468,
        2487
      ],
      "op": "SUB",
      "path": "1"
    },
    "1455": {
      "fn": "ReentrancyGuard._nonReentrantBefore",
      "offset": [
        2460,
        2523
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5FA"
    },
    "1458": {
      "branch": 15,
      "fn": "ReentrancyGuard._nonReentrantBefore",
      "offset": [
        2460,
        2523
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1459": {
      "fn": "ReentrancyGuard._nonReentrantBefore",
      "offset": [
        2460,
        2523
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1461": {
      "fn": "ReentrancyGuard._nonReentrantBefore",
      "offset": [
        2460,
        2523
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1462": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1466": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1468": {
      "op": "SHL"
    },
    "1469": {
      "fn": "ReentrancyGuard._nonReentrantBefore",
      "offset": [
        2460,
        2523
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1470": {
      "fn": "ReentrancyGuard._nonReentrantBefore",
      "offset": [
        2460,
        2523
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1471": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1473": {
      "fn": "ReentrancyGuard._nonReentrantBefore",
      "offset": [
        2460,
        2523
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1475": {
      "fn": "ReentrancyGuard._nonReentrantBefore",
      "offset": [
        2460,
        2523
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1476": {
      "fn": "ReentrancyGuard._nonReentrantBefore",
      "offset": [
        2460,
        2523
      ],
      "op": "ADD",
      "path": "1"
    },
    "1477": {
      "op": "MSTORE"
    },
    "1478": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1480": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1482": {
      "op": "DUP3"
    },
    "1483": {
      "op": "ADD"
    },
    "1484": {
      "op": "MSTORE"
    },
    "1485": {
      "op": "PUSH32",
      "value": "0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
    },
    "1518": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1520": {
      "op": "DUP3"
    },
    "1521": {
      "op": "ADD"
    },
    "1522": {
      "op": "MSTORE"
    },
    "1523": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1525": {
      "op": "ADD"
    },
    "1526": {
      "fn": "ReentrancyGuard._nonReentrantBefore",
      "offset": [
        2460,
        2523
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x16A"
    },
    "1529": {
      "op": "JUMP"
    },
    "1530": {
      "fn": "ReentrancyGuard._nonReentrantBefore",
      "offset": [
        2460,
        2523
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1531": {
      "offset": [
        1759,
        1760
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "1533": {
      "fn": "ReentrancyGuard._nonReentrantBefore",
      "offset": [
        2598,
        2605
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 9,
      "value": "0x0"
    },
    "1535": {
      "fn": "ReentrancyGuard._nonReentrantBefore",
      "offset": [
        2598,
        2616
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "1536": {
      "fn": "ReentrancyGuard._nonReentrantBefore",
      "jump": "o",
      "offset": [
        2336,
        2623
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1537": {
      "op": "JUMPDEST"
    },
    "1538": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1540": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1542": {
      "op": "DUP3"
    },
    "1543": {
      "op": "DUP5"
    },
    "1544": {
      "op": "SUB"
    },
    "1545": {
      "op": "SLT"
    },
    "1546": {
      "op": "ISZERO"
    },
    "1547": {
      "op": "PUSH2",
      "value": "0x613"
    },
    "1550": {
      "op": "JUMPI"
    },
    "1551": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1553": {
      "op": "DUP1"
    },
    "1554": {
      "op": "REVERT"
    },
    "1555": {
      "op": "JUMPDEST"
    },
    "1556": {
      "op": "POP"
    },
    "1557": {
      "op": "CALLDATALOAD"
    },
    "1558": {
      "op": "SWAP2"
    },
    "1559": {
      "op": "SWAP1"
    },
    "1560": {
      "op": "POP"
    },
    "1561": {
      "jump": "o",
      "op": "JUMP"
    },
    "1562": {
      "op": "JUMPDEST"
    },
    "1563": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1565": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1567": {
      "op": "DUP3"
    },
    "1568": {
      "op": "DUP5"
    },
    "1569": {
      "op": "SUB"
    },
    "1570": {
      "op": "SLT"
    },
    "1571": {
      "op": "ISZERO"
    },
    "1572": {
      "op": "PUSH2",
      "value": "0x62C"
    },
    "1575": {
      "op": "JUMPI"
    },
    "1576": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1578": {
      "op": "DUP1"
    },
    "1579": {
      "op": "REVERT"
    },
    "1580": {
      "op": "JUMPDEST"
    },
    "1581": {
      "op": "POP"
    },
    "1582": {
      "op": "MLOAD"
    },
    "1583": {
      "op": "SWAP2"
    },
    "1584": {
      "op": "SWAP1"
    },
    "1585": {
      "op": "POP"
    },
    "1586": {
      "jump": "o",
      "op": "JUMP"
    },
    "1587": {
      "op": "JUMPDEST"
    },
    "1588": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1593": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1595": {
      "op": "SHL"
    },
    "1596": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1598": {
      "op": "MSTORE"
    },
    "1599": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "1601": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1603": {
      "op": "MSTORE"
    },
    "1604": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1606": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1608": {
      "op": "REVERT"
    },
    "1609": {
      "op": "JUMPDEST"
    },
    "1610": {
      "op": "DUP1"
    },
    "1611": {
      "op": "DUP3"
    },
    "1612": {
      "op": "MUL"
    },
    "1613": {
      "op": "DUP2"
    },
    "1614": {
      "op": "ISZERO"
    },
    "1615": {
      "op": "DUP3"
    },
    "1616": {
      "op": "DUP3"
    },
    "1617": {
      "op": "DIV"
    },
    "1618": {
      "op": "DUP5"
    },
    "1619": {
      "op": "EQ"
    },
    "1620": {
      "op": "OR"
    },
    "1621": {
      "op": "PUSH2",
      "value": "0x660"
    },
    "1624": {
      "op": "JUMPI"
    },
    "1625": {
      "op": "PUSH2",
      "value": "0x660"
    },
    "1628": {
      "op": "PUSH2",
      "value": "0x633"
    },
    "1631": {
      "jump": "i",
      "op": "JUMP"
    },
    "1632": {
      "op": "JUMPDEST"
    },
    "1633": {
      "op": "SWAP3"
    },
    "1634": {
      "op": "SWAP2"
    },
    "1635": {
      "op": "POP"
    },
    "1636": {
      "op": "POP"
    },
    "1637": {
      "jump": "o",
      "op": "JUMP"
    },
    "1638": {
      "op": "JUMPDEST"
    },
    "1639": {
      "op": "DUP2"
    },
    "1640": {
      "op": "DUP2"
    },
    "1641": {
      "op": "SUB"
    },
    "1642": {
      "op": "DUP2"
    },
    "1643": {
      "op": "DUP2"
    },
    "1644": {
      "op": "GT"
    },
    "1645": {
      "op": "ISZERO"
    },
    "1646": {
      "op": "PUSH2",
      "value": "0x660"
    },
    "1649": {
      "op": "JUMPI"
    },
    "1650": {
      "op": "PUSH2",
      "value": "0x660"
    },
    "1653": {
      "op": "PUSH2",
      "value": "0x633"
    },
    "1656": {
      "jump": "i",
      "op": "JUMP"
    }
  },
  "sha1": "a3dea020bab9b9a2c5aca9e12a698e83130b2518",
  "source": "// SCH Course Copyright Policy (C): DO-NOT-SHARE-WITH-ANYONE\n// https://smartcontractshacking.com/#copyright-policy\npragma solidity ^0.8.13;\n\nimport \"@openzeppelin/contracts/utils/Address.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\n\ninterface IGoldToken is IERC20 {\n    function mint(address _to, uint _amount) external;\n    function burn(address _account, uint _amount) external;\n}\n\ninterface IOracle {\n    function getPrice() external view returns (uint256);\n}\n\n/**\n * @title GlodExchange\n * @author JohnnyTime (https://smartcontractshacking.com)\n */\ncontract GoldExchange is ReentrancyGuard {\n\n    using Address for address payable;\n\n    IGoldToken public immutable token;\n    IOracle public immutable oracle;\n\n    event TokenBought(address indexed buyer, uint256 amount, uint256 price);\n    event TokenSold(address indexed seller, uint256 amount, uint256 price);\n\n    constructor(address _token, address _oracle) payable {\n        token = IGoldToken(_token);\n        oracle = IOracle(_oracle);\n    }\n\n    function buyTokens(uint amount) external payable nonReentrant {\n\n        require(msg.value > 0, \"Amount paid must be greater than zero\");\n\n        // Check price \n        uint goldPrice = oracle.getPrice();\n        uint totalPrice = goldPrice * amount;\n        require(msg.value >= totalPrice, \"Amount paid is not enough\");\n\n        // Return the change\n        uint change = msg.value - totalPrice;\n        (bool _success, bytes memory _data) = payable(msg.sender).call{value: change}(\"\");\n        require(_success, \"Can't pay the change\");\n\n        // Mint tokens\n        token.mint(msg.sender, amount);\n    }\n\n    function sellTokens(uint amount) external nonReentrant {\n\n        // Get gold price\n        uint goldPrice = oracle.getPrice();\n        uint totalPrice = goldPrice * amount;\n        require(address(this).balance >= totalPrice, \"Not enough ETH in balance\");\n\n        // Burn the tokens\n        token.burn(msg.sender, amount);\n        \n        // Pay\n        (bool _success, bytes memory _data) = payable(msg.sender).call{value: totalPrice}(\"\");\n        require(_success, \"Can't pay for the tokens\");\n    }\n\n    receive() external payable {}\n}\n",
  "sourceMap": "636:1614:19:-:0;;;955:131;;;;;;;;;;;;;;;;;;:::i;:::-;1716:1:1;1821:7;:22;-1:-1:-1;;;;;1018:26:19;;;;;1054:25;;;636:1614;;14:177:20;93:13;;-1:-1:-1;;;;;135:31:20;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;196:293;;;;;:::o;:::-;636:1614:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/oracle-manipulation-1/GoldExchange.sol",
  "type": "contract"
}