{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_templateAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_cryptoKeeperAddress",
          "type": "address"
        }
      ],
      "name": "CryptoKeeperCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_previousAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_newAddress",
          "type": "address"
        }
      ],
      "name": "TemplateChanged",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_salt",
          "type": "bytes32"
        },
        {
          "internalType": "address[]",
          "name": "_operators",
          "type": "address[]"
        }
      ],
      "name": "createCryptoKeeper",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_salt",
          "type": "bytes32"
        }
      ],
      "name": "predictCryptoKeeperAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_templateAddress",
          "type": "address"
        }
      ],
      "name": "setTemplateAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "templateAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/Users/m4ud/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/access/Ownable.sol",
    "1": "/Users/m4ud/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/proxy/Clones.sol",
    "12": "/Users/m4ud/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/utils/Context.sol",
    "14": "/Users/m4ud/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/utils/introspection/ERC165Checker.sol",
    "16": "contracts/call-attacks-3/CryptoFactory.sol",
    "18": "contracts/call-attacks-3/ICryptoKeeper.sol"
  },
  "ast": {
    "absolutePath": "contracts/call-attacks-3/CryptoFactory.sol",
    "exportedSymbols": {
      "Clones": [
        2612
      ],
      "Context": [
        4722
      ],
      "CryptoKeeperFactory": [
        129
      ],
      "ERC165Checker": [
        2806
      ],
      "ICryptoKeeper": [
        512
      ],
      "IERC165": [
        4734
      ],
      "Ownable": [
        2532
      ]
    },
    "id": 130,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".13"
        ],
        "nodeType": "PragmaDirective",
        "src": "116:24:16"
      },
      {
        "absolutePath": "/Users/m4ud/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/proxy/Clones.sol",
        "file": "@openzeppelin/contracts/proxy/Clones.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 130,
        "sourceUnit": 2613,
        "src": "142:50:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/m4ud/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/utils/introspection/ERC165Checker.sol",
        "file": "@openzeppelin/contracts/utils/introspection/ERC165Checker.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 130,
        "sourceUnit": 2807,
        "src": "193:71:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/m4ud/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 130,
        "sourceUnit": 2533,
        "src": "265:52:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/call-attacks-3/ICryptoKeeper.sol",
        "file": "./ICryptoKeeper.sol",
        "id": 5,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 130,
        "sourceUnit": 513,
        "src": "318:29:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 6,
              "name": "Ownable",
              "nameLocations": [
                "381:7:16"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2532,
              "src": "381:7:16"
            },
            "id": 7,
            "nodeType": "InheritanceSpecifier",
            "src": "381:7:16"
          }
        ],
        "canonicalName": "CryptoKeeperFactory",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 129,
        "linearizedBaseContracts": [
          129,
          2532,
          4722
        ],
        "name": "CryptoKeeperFactory",
        "nameLocation": "358:19:16",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "global": false,
            "id": 10,
            "libraryName": {
              "id": 8,
              "name": "Clones",
              "nameLocations": [
                "401:6:16"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2612,
              "src": "401:6:16"
            },
            "nodeType": "UsingForDirective",
            "src": "395:25:16",
            "typeName": {
              "id": 9,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "412:7:16",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "anonymous": false,
            "eventSelector": "86f093fa2994a72c3664d9e9fee967bbe589ca12915066510919a9e039515961",
            "id": 14,
            "name": "CryptoKeeperCreated",
            "nameLocation": "432:19:16",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 13,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_cryptoKeeperAddress",
                  "nameLocation": "460:20:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 14,
                  "src": "452:28:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "452:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "451:30:16"
            },
            "src": "426:56:16"
          },
          {
            "anonymous": false,
            "eventSelector": "2b12be9fa6bedeff30cb15ba65624af638a4ba58bf9445d9e29fa9abeb10c4da",
            "id": 20,
            "name": "TemplateChanged",
            "nameLocation": "493:15:16",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 19,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_previousAddress",
                  "nameLocation": "517:16:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 20,
                  "src": "509:24:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "509:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_newAddress",
                  "nameLocation": "543:11:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 20,
                  "src": "535:19:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "535:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "508:47:16"
            },
            "src": "487:69:16"
          },
          {
            "constant": false,
            "functionSelector": "0c5a6f2f",
            "id": 22,
            "mutability": "mutable",
            "name": "templateAddress",
            "nameLocation": "577:15:16",
            "nodeType": "VariableDeclaration",
            "scope": 129,
            "src": "562:30:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 21,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "562:7:16",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 46,
              "nodeType": "Block",
              "src": "653:138:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 35,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 30,
                          "name": "_templateAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26,
                          "src": "671:16:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 33,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "699:1:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 32,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "691:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 31,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "691:7:16",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 34,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "691:10:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "671:30:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 29,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "663:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 36,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "663:39:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37,
                  "nodeType": "ExpressionStatement",
                  "src": "663:39:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 39,
                        "name": "_templateAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26,
                        "src": "731:16:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 38,
                      "name": "setTemplateAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80,
                      "src": "712:18:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 40,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "712:36:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41,
                  "nodeType": "ExpressionStatement",
                  "src": "712:36:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 43,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24,
                        "src": "777:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 42,
                      "name": "_transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2531,
                      "src": "758:18:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 44,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "758:26:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45,
                  "nodeType": "ExpressionStatement",
                  "src": "758:26:16"
                }
              ]
            },
            "id": 47,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 27,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "619:6:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 47,
                  "src": "611:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "611:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26,
                  "mutability": "mutable",
                  "name": "_templateAddress",
                  "nameLocation": "635:16:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 47,
                  "src": "627:24:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "627:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "610:42:16"
            },
            "returnParameters": {
              "id": 28,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "653:0:16"
            },
            "scope": 129,
            "src": "599:192:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 79,
              "nodeType": "Block",
              "src": "868:375:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 57,
                            "name": "_templateAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49,
                            "src": "948:16:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 59,
                                  "name": "ICryptoKeeper",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 512,
                                  "src": "987:13:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_ICryptoKeeper_$512_$",
                                    "typeString": "type(contract ICryptoKeeper)"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_type$_t_contract$_ICryptoKeeper_$512_$",
                                    "typeString": "type(contract ICryptoKeeper)"
                                  }
                                ],
                                "id": 58,
                                "name": "type",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -27,
                                "src": "982:4:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 60,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "982:19:16",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_meta_type_t_contract$_ICryptoKeeper_$512",
                                "typeString": "type(contract ICryptoKeeper)"
                              }
                            },
                            "id": 61,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "1002:11:16",
                            "memberName": "interfaceId",
                            "nodeType": "MemberAccess",
                            "src": "982:31:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          ],
                          "expression": {
                            "id": 55,
                            "name": "ERC165Checker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2806,
                            "src": "899:13:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ERC165Checker_$2806_$",
                              "typeString": "type(library ERC165Checker)"
                            }
                          },
                          "id": 56,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "913:17:16",
                          "memberName": "supportsInterface",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2662,
                          "src": "899:31:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$",
                            "typeString": "function (address,bytes4) view returns (bool)"
                          }
                        },
                        "id": 62,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "899:128:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e74657266616365206e6f7420737570706f72746564",
                        "id": 63,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1041:25:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e18577652c320a43896603f21ecacd8bf8330f14c1f44e5ebc554418be8931dd",
                          "typeString": "literal_string \"Interface not supported\""
                        },
                        "value": "Interface not supported"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e18577652c320a43896603f21ecacd8bf8330f14c1f44e5ebc554418be8931dd",
                          "typeString": "literal_string \"Interface not supported\""
                        }
                      ],
                      "id": 54,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "878:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 64,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "878:198:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 65,
                  "nodeType": "ExpressionStatement",
                  "src": "878:198:16"
                },
                {
                  "assignments": [
                    67
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 67,
                      "mutability": "mutable",
                      "name": "previousAddress",
                      "nameLocation": "1094:15:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 79,
                      "src": "1086:23:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 66,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1086:7:16",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 69,
                  "initialValue": {
                    "id": 68,
                    "name": "templateAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 22,
                    "src": "1112:15:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1086:41:16"
                },
                {
                  "expression": {
                    "id": 72,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 70,
                      "name": "templateAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22,
                      "src": "1137:15:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 71,
                      "name": "_templateAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49,
                      "src": "1155:16:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1137:34:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 73,
                  "nodeType": "ExpressionStatement",
                  "src": "1137:34:16"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 75,
                        "name": "previousAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67,
                        "src": "1202:15:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 76,
                        "name": "_templateAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49,
                        "src": "1219:16:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 74,
                      "name": "TemplateChanged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20,
                      "src": "1186:15:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 77,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1186:50:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78,
                  "nodeType": "EmitStatement",
                  "src": "1181:55:16"
                }
              ]
            },
            "functionSelector": "b9628541",
            "id": 80,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 52,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 51,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "858:9:16"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2451,
                  "src": "858:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "858:9:16"
              }
            ],
            "name": "setTemplateAddress",
            "nameLocation": "806:18:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 50,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49,
                  "mutability": "mutable",
                  "name": "_templateAddress",
                  "nameLocation": "833:16:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 80,
                  "src": "825:24:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 48,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "825:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "824:26:16"
            },
            "returnParameters": {
              "id": 53,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "868:0:16"
            },
            "scope": 129,
            "src": "797:446:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 110,
              "nodeType": "Block",
              "src": "1392:248:16",
              "statements": [
                {
                  "assignments": [
                    91
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 91,
                      "mutability": "mutable",
                      "name": "cryptoKeeperAddress",
                      "nameLocation": "1410:19:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 110,
                      "src": "1402:27:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 90,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1402:7:16",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 96,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 94,
                        "name": "_salt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82,
                        "src": "1467:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 92,
                        "name": "templateAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22,
                        "src": "1432:15:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 93,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1448:18:16",
                      "memberName": "cloneDeterministic",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2577,
                      "src": "1432:34:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes32_$returns$_t_address_$attached_to$_t_address_$",
                        "typeString": "function (address,bytes32) returns (address)"
                      }
                    },
                    "id": 95,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1432:41:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1402:71:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 101,
                        "name": "_operators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85,
                        "src": "1530:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 98,
                            "name": "cryptoKeeperAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 91,
                            "src": "1498:19:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 97,
                          "name": "ICryptoKeeper",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 512,
                          "src": "1484:13:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ICryptoKeeper_$512_$",
                            "typeString": "type(contract ICryptoKeeper)"
                          }
                        },
                        "id": 99,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1484:34:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICryptoKeeper_$512",
                          "typeString": "contract ICryptoKeeper"
                        }
                      },
                      "id": 100,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1519:10:16",
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 479,
                      "src": "1484:45:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address[] memory) external"
                      }
                    },
                    "id": 102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1484:57:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 103,
                  "nodeType": "ExpressionStatement",
                  "src": "1484:57:16"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 105,
                        "name": "cryptoKeeperAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91,
                        "src": "1577:19:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 104,
                      "name": "CryptoKeeperCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14,
                      "src": "1557:19:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1557:40:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 107,
                  "nodeType": "EmitStatement",
                  "src": "1552:45:16"
                },
                {
                  "expression": {
                    "id": 108,
                    "name": "cryptoKeeperAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 91,
                    "src": "1614:19:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 89,
                  "id": 109,
                  "nodeType": "Return",
                  "src": "1607:26:16"
                }
              ]
            },
            "functionSelector": "6f929d00",
            "id": 111,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createCryptoKeeper",
            "nameLocation": "1258:18:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 86,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 82,
                  "mutability": "mutable",
                  "name": "_salt",
                  "nameLocation": "1294:5:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 111,
                  "src": "1286:13:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 81,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1286:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 85,
                  "mutability": "mutable",
                  "name": "_operators",
                  "nameLocation": "1328:10:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 111,
                  "src": "1309:29:16",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 83,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1309:7:16",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 84,
                    "nodeType": "ArrayTypeName",
                    "src": "1309:9:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1276:68:16"
            },
            "returnParameters": {
              "id": 89,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 88,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 111,
                  "src": "1379:7:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 87,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1379:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1378:9:16"
            },
            "scope": 129,
            "src": "1249:391:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 127,
              "nodeType": "Block",
              "src": "1755:101:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 120,
                        "name": "_salt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 113,
                        "src": "1828:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 123,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1843:4:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CryptoKeeperFactory_$129",
                              "typeString": "contract CryptoKeeperFactory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CryptoKeeperFactory_$129",
                              "typeString": "contract CryptoKeeperFactory"
                            }
                          ],
                          "id": 122,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1835:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 121,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1835:7:16",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 124,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1835:13:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 118,
                        "name": "templateAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22,
                        "src": "1784:15:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 119,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1800:27:16",
                      "memberName": "predictDeterministicAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2591,
                      "src": "1784:43:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$_t_bytes32_$_t_address_$returns$_t_address_$attached_to$_t_address_$",
                        "typeString": "function (address,bytes32,address) pure returns (address)"
                      }
                    },
                    "id": 125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1784:65:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 117,
                  "id": 126,
                  "nodeType": "Return",
                  "src": "1765:84:16"
                }
              ]
            },
            "functionSelector": "74356d7f",
            "id": 128,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "predictCryptoKeeperAddress",
            "nameLocation": "1655:26:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 114,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 113,
                  "mutability": "mutable",
                  "name": "_salt",
                  "nameLocation": "1690:5:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 128,
                  "src": "1682:13:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 112,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1682:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1681:15:16"
            },
            "returnParameters": {
              "id": 117,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 116,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 128,
                  "src": "1742:7:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 115,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1742:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1741:9:16"
            },
            "scope": 129,
            "src": "1646:210:16",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 130,
        "src": "349:1509:16",
        "usedErrors": []
      }
    ],
    "src": "116:1742:16"
  },
  "bytecode": "608060405234801561001057600080fd5b5060405162000a3438038062000a34833981016040819052610031916102d9565b61003a33610066565b6001600160a01b03811661004d57600080fd5b610056816100b6565b61005f82610066565b505061030c565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6100be610181565b6100cf8163cebe984560e01b6101dd565b6101205760405162461bcd60e51b815260206004820152601760248201527f496e74657266616365206e6f7420737570706f7274656400000000000000000060448201526064015b60405180910390fd5b600180546001600160a01b038381166001600160a01b031983168117909355604080519190921680825260208201939093527f2b12be9fa6bedeff30cb15ba65624af638a4ba58bf9445d9e29fa9abeb10c4da910160405180910390a15050565b6000546001600160a01b031633146101db5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610117565b565b60006101e883610200565b80156101f957506101f98383610234565b9392505050565b6000610213826301ffc9a760e01b610234565b801561022e575061022c826001600160e01b0319610234565b155b92915050565b604080516001600160e01b03198316602480830191909152825180830390910181526044909101909152602080820180516001600160e01b03166301ffc9a760e01b178152825160009392849283928392918391908a617530fa92503d915060005190508280156102a6575060208210155b80156102b25750600081115b979650505050505050565b80516001600160a01b03811681146102d457600080fd5b919050565b600080604083850312156102ec57600080fd5b6102f5836102bd565b9150610303602084016102bd565b90509250929050565b610718806200031c6000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c806374356d7f1161005b57806374356d7f146100ce5780638da5cb5b146100e1578063b9628541146100f2578063f2fde38b1461010557600080fd5b80630c5a6f2f146100825780636f929d00146100b1578063715018a6146100c4575b600080fd5b600154610095906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b6100956100bf3660046105c7565b610118565b6100cc6101db565b005b6100956100dc366004610646565b6101ef565b6000546001600160a01b0316610095565b6100cc61010036600461067b565b61025d565b6100cc61011336600461067b565b610328565b6001546000908190610133906001600160a01b0316866103a1565b60405163a224cee760e01b81529091506001600160a01b0382169063a224cee7906101649087908790600401610696565b600060405180830381600087803b15801561017e57600080fd5b505af1158015610192573d6000803e3d6000fd5b50506040516001600160a01b03841681527f86f093fa2994a72c3664d9e9fee967bbe589ca12915066510919a9e0395159619250602001905060405180910390a1949350505050565b6101e361043e565b6101ed6000610498565b565b6001546040513060388201526f5af43d82803e903d91602b57fd5bf3ff60248201526001600160a01b039091166014820152733d602d80600a3d3981f3363d3d373d3d3d363d738152605881018290526037600c820120607882015260556043909101206000905b92915050565b61026561043e565b6102768163cebe984560e01b6104e8565b6102c75760405162461bcd60e51b815260206004820152601760248201527f496e74657266616365206e6f7420737570706f7274656400000000000000000060448201526064015b60405180910390fd5b600180546001600160a01b038381166001600160a01b031983168117909355604080519190921680825260208201939093527f2b12be9fa6bedeff30cb15ba65624af638a4ba58bf9445d9e29fa9abeb10c4da910160405180910390a15050565b61033061043e565b6001600160a01b0381166103955760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102be565b61039e81610498565b50565b6000763d602d80600a3d3981f3363d3d373d3d3d363d730000008360601b60e81c176000526e5af43d82803e903d91602b57fd5bf38360781b1760205281603760096000f590506001600160a01b0381166102575760405162461bcd60e51b815260206004820152601760248201527f455243313136373a2063726561746532206661696c656400000000000000000060448201526064016102be565b6000546001600160a01b031633146101ed5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102be565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006104f38361050b565b80156105045750610504838361053e565b9392505050565b600061051e826301ffc9a760e01b61053e565b80156102575750610537826001600160e01b031961053e565b1592915050565b604080516001600160e01b03198316602480830191909152825180830390910181526044909101909152602080820180516001600160e01b03166301ffc9a760e01b178152825160009392849283928392918391908a617530fa92503d915060005190508280156105b0575060208210155b80156105bc5750600081115b979650505050505050565b6000806000604084860312156105dc57600080fd5b83359250602084013567ffffffffffffffff808211156105fb57600080fd5b818601915086601f83011261060f57600080fd5b81358181111561061e57600080fd5b8760208260051b850101111561063357600080fd5b6020830194508093505050509250925092565b60006020828403121561065857600080fd5b5035919050565b80356001600160a01b038116811461067657600080fd5b919050565b60006020828403121561068d57600080fd5b6105048261065f565b60208082528181018390526000908460408401835b868110156106d7576001600160a01b036106c48461065f565b16825291830191908301906001016106ab565b50969550505050505056fea26469706673582212209d3de44163a85ce5e4f9f160314e228debd1c48bcc79c7dd0373f83308f9d8b464736f6c63430008130033",
  "bytecodeSha1": "2d6a353d081a23491b26c0dfd4cd44e4d4555fbb",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.19+commit.7dd6d404"
  },
  "contractName": "CryptoKeeperFactory",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable._checkOwner": {
          "22": [
            1422,
            1445,
            true
          ]
        },
        "Ownable.transferOwnership": {
          "21": [
            2169,
            2191,
            true
          ]
        }
      },
      "1": {
        "Clones.cloneDeterministic": {
          "20": [
            2844,
            2866,
            true
          ]
        }
      },
      "12": {},
      "14": {},
      "16": {
        "CryptoKeeperFactory.setTemplateAddress": {
          "19": [
            899,
            1027,
            true
          ]
        }
      },
      "18": {}
    },
    "statements": {
      "0": {
        "Ownable._checkOwner": {
          "13": [
            1414,
            1482
          ]
        },
        "Ownable._transferOwnership": {
          "14": [
            2541,
            2558
          ],
          "15": [
            2568,
            2613
          ]
        },
        "Ownable.owner": {
          "0": [
            1266,
            1279
          ]
        },
        "Ownable.renounceOwnership": {
          "4": [
            1895,
            1925
          ]
        },
        "Ownable.transferOwnership": {
          "9": [
            2161,
            2234
          ],
          "10": [
            2244,
            2272
          ]
        }
      },
      "1": {
        "Clones.cloneDeterministic": {
          "11": [
            2836,
            2894
          ]
        }
      },
      "12": {
        "Context._msgSender": {
          "12": [
            712,
            729
          ]
        }
      },
      "14": {
        "ERC165Checker.supportsERC165": {
          "17": [
            956,
            1124
          ]
        },
        "ERC165Checker.supportsERC165InterfaceUnchecked": {
          "18": [
            4847,
            4902
          ]
        },
        "ERC165Checker.supportsInterface": {
          "16": [
            1536,
            1624
          ]
        }
      },
      "16": {
        "CryptoKeeperFactory.createCryptoKeeper": {
          "1": [
            1484,
            1541
          ],
          "2": [
            1552,
            1597
          ],
          "3": [
            1607,
            1633
          ]
        },
        "CryptoKeeperFactory.predictCryptoKeeperAddress": {
          "5": [
            1765,
            1849
          ]
        },
        "CryptoKeeperFactory.setTemplateAddress": {
          "6": [
            878,
            1076
          ],
          "7": [
            1137,
            1171
          ],
          "8": [
            1181,
            1236
          ]
        }
      },
      "18": {}
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.8.0/Clones",
    "OpenZeppelin/openzeppelin-contracts@4.8.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.8.0/ERC165Checker",
    "ICryptoKeeper",
    "OpenZeppelin/openzeppelin-contracts@4.8.0/Ownable"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b506004361061007d5760003560e01c806374356d7f1161005b57806374356d7f146100ce5780638da5cb5b146100e1578063b9628541146100f2578063f2fde38b1461010557600080fd5b80630c5a6f2f146100825780636f929d00146100b1578063715018a6146100c4575b600080fd5b600154610095906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b6100956100bf3660046105c7565b610118565b6100cc6101db565b005b6100956100dc366004610646565b6101ef565b6000546001600160a01b0316610095565b6100cc61010036600461067b565b61025d565b6100cc61011336600461067b565b610328565b6001546000908190610133906001600160a01b0316866103a1565b60405163a224cee760e01b81529091506001600160a01b0382169063a224cee7906101649087908790600401610696565b600060405180830381600087803b15801561017e57600080fd5b505af1158015610192573d6000803e3d6000fd5b50506040516001600160a01b03841681527f86f093fa2994a72c3664d9e9fee967bbe589ca12915066510919a9e0395159619250602001905060405180910390a1949350505050565b6101e361043e565b6101ed6000610498565b565b6001546040513060388201526f5af43d82803e903d91602b57fd5bf3ff60248201526001600160a01b039091166014820152733d602d80600a3d3981f3363d3d373d3d3d363d738152605881018290526037600c820120607882015260556043909101206000905b92915050565b61026561043e565b6102768163cebe984560e01b6104e8565b6102c75760405162461bcd60e51b815260206004820152601760248201527f496e74657266616365206e6f7420737570706f7274656400000000000000000060448201526064015b60405180910390fd5b600180546001600160a01b038381166001600160a01b031983168117909355604080519190921680825260208201939093527f2b12be9fa6bedeff30cb15ba65624af638a4ba58bf9445d9e29fa9abeb10c4da910160405180910390a15050565b61033061043e565b6001600160a01b0381166103955760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102be565b61039e81610498565b50565b6000763d602d80600a3d3981f3363d3d373d3d3d363d730000008360601b60e81c176000526e5af43d82803e903d91602b57fd5bf38360781b1760205281603760096000f590506001600160a01b0381166102575760405162461bcd60e51b815260206004820152601760248201527f455243313136373a2063726561746532206661696c656400000000000000000060448201526064016102be565b6000546001600160a01b031633146101ed5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102be565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006104f38361050b565b80156105045750610504838361053e565b9392505050565b600061051e826301ffc9a760e01b61053e565b80156102575750610537826001600160e01b031961053e565b1592915050565b604080516001600160e01b03198316602480830191909152825180830390910181526044909101909152602080820180516001600160e01b03166301ffc9a760e01b178152825160009392849283928392918391908a617530fa92503d915060005190508280156105b0575060208210155b80156105bc5750600081115b979650505050505050565b6000806000604084860312156105dc57600080fd5b83359250602084013567ffffffffffffffff808211156105fb57600080fd5b818601915086601f83011261060f57600080fd5b81358181111561061e57600080fd5b8760208260051b850101111561063357600080fd5b6020830194508093505050509250925092565b60006020828403121561065857600080fd5b5035919050565b80356001600160a01b038116811461067657600080fd5b919050565b60006020828403121561068d57600080fd5b6105048261065f565b60208082528181018390526000908460408401835b868110156106d7576001600160a01b036106c48461065f565b16825291830191908301906001016106ab565b50969550505050505056fea26469706673582212209d3de44163a85ce5e4f9f160314e228debd1c48bcc79c7dd0373f83308f9d8b464736f6c63430008130033",
  "deployedSourceMap": "349:1509:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;562:30;;;;;-1:-1:-1;;;;;562:30:16;;;;;;-1:-1:-1;;;;;178:32:31;;;160:51;;148:2;133:18;562:30:16;;;;;;;1249:391;;;;;;:::i;:::-;;:::i;1831:101:0:-;;;:::i;:::-;;1646:210:16;;;;;;:::i;:::-;;:::i;1201:85:0:-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;1201:85;;797:446:16;;;;;;:::i;:::-;;:::i;2081:198:0:-;;;;;;:::i;:::-;;:::i;1249:391:16:-;1432:15;;1379:7;;;;1432:41;;-1:-1:-1;;;;;1432:15:16;1467:5;1432:34;:41::i;:::-;1484:57;;-1:-1:-1;;;1484:57:16;;1402:71;;-1:-1:-1;;;;;;1484:45:16;;;;;:57;;1530:10;;;;1484:57;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1557:40:16;;-1:-1:-1;;;;;178:32:31;;160:51;;1557:40:16;;-1:-1:-1;148:2:31;133:18;;-1:-1:-1;1557:40:16;;;;;;;1614:19;1249:391;-1:-1:-1;;;;1249:391:16:o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;1646:210:16:-;1784:15;;3269:4:1;3263:11;1843:4:16;3303::1;3294:14;;3287:32;3355:34;3348:4;3339:14;;3332:58;-1:-1:-1;;;;;1784:15:16;;;-1:-1:-1;3410:14:1;;3403:38;3466:42;3454:55;;3538:4;3529:14;;3522:28;;;3612:4;3605;3596:14;;3586:31;3579:4;3570:14;;3563:55;3670:4;3663;3654:14;;;3644:31;1742:7:16;;1784:65;1765:84;1646:210;-1:-1:-1;;1646:210:16:o;797:446::-;1094:13:0;:11;:13::i;:::-;899:128:16::1;948:16;-1:-1:-1::0;;;899:31:16::1;:128::i;:::-;878:198;;;::::0;-1:-1:-1;;;878:198:16;;2307:2:31;878:198:16::1;::::0;::::1;2289:21:31::0;2346:2;2326:18;;;2319:30;2385:25;2365:18;;;2358:53;2428:18;;878:198:16::1;;;;;;;;;1112:15;::::0;;-1:-1:-1;;;;;1137:34:16;;::::1;-1:-1:-1::0;;;;;;1137:34:16;::::1;::::0;::::1;::::0;;;1186:50:::1;::::0;;1112:15;;;::::1;2669:34:31::0;;;2734:2;2719:18;;2712:43;;;;1186:50:16::1;::::0;2604:18:31;1186:50:16::1;;;;;;;868:375;797:446:::0;:::o;2081:198:0:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:0;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:0;;2968:2:31;2161:73:0::1;::::0;::::1;2950:21:31::0;3007:2;2987:18;;;2980:30;3046:34;3026:18;;;3019:62;-1:-1:-1;;;3097:18:31;;;3090:36;3143:19;;2161:73:0::1;2766:402:31::0;2161:73:0::1;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;2107:794:1:-;2191:16;2523:48;2505:14;2499:4;2495:25;2489:4;2485:36;2482:90;2476:4;2469:104;2730:32;2713:14;2707:4;2703:25;2700:63;2694:4;2687:77;2812:4;2806;2800;2797:1;2789:28;2777:40;-1:-1:-1;;;;;;2844:22:1;;2836:58;;;;-1:-1:-1;;;2836:58:1;;3375:2:31;2836:58:1;;;3357:21:31;3414:2;3394:18;;;3387:30;3453:25;3433:18;;;3426:53;3496:18;;2836:58:1;3173:347:31;1359:130:0;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;719:10:12;1422:23:0;1414:68;;;;-1:-1:-1;;;1414:68:0;;3727:2:31;1414:68:0;;;3709:21:31;;;3746:18;;;3739:30;3805:34;3785:18;;;3778:62;3857:18;;1414:68:0;3525:356:31;2433:187:0;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;1349:282:14:-;1436:4;1543:23;1558:7;1543:14;:23::i;:::-;:81;;;;;1570:54;1603:7;1612:11;1570:32;:54::i;:::-;1536:88;1349:282;-1:-1:-1;;;1349:282:14:o;704:427::-;768:4;975:68;1008:7;-1:-1:-1;;;975:32:14;:68::i;:::-;:149;;;;-1:-1:-1;1060:64:14;1093:7;-1:-1:-1;;;;;;1060:32:14;:64::i;:::-;1059:65;956:168;704:427;-1:-1:-1;;704:427:14:o;4262:647::-;4433:71;;;-1:-1:-1;;;;;;4048:33:31;;4433:71:14;;;;4030:52:31;;;;4433:71:14;;;;;;;;;;4003:18:31;;;;4433:71:14;;;;;;;;;-1:-1:-1;;;;;4433:71:14;-1:-1:-1;;;4433:71:14;;;4712:20;;4364:4;;4433:71;4364:4;;;;;;4433:71;4364:4;;4712:20;4677:7;4670:5;4659:86;4648:97;;4772:16;4758:30;;4822:4;4816:11;4801:26;;4854:7;:29;;;;;4879:4;4865:10;:18;;4854:29;:48;;;;;4901:1;4887:11;:15;4854:48;4847:55;4262:647;-1:-1:-1;;;;;;;4262:647:14:o;222:683:31:-;317:6;325;333;386:2;374:9;365:7;361:23;357:32;354:52;;;402:1;399;392:12;354:52;438:9;425:23;415:33;;499:2;488:9;484:18;471:32;522:18;563:2;555:6;552:14;549:34;;;579:1;576;569:12;549:34;617:6;606:9;602:22;592:32;;662:7;655:4;651:2;647:13;643:27;633:55;;684:1;681;674:12;633:55;724:2;711:16;750:2;742:6;739:14;736:34;;;766:1;763;756:12;736:34;819:7;814:2;804:6;801:1;797:14;793:2;789:23;785:32;782:45;779:65;;;840:1;837;830:12;779:65;871:2;867;863:11;853:21;;893:6;883:16;;;;;222:683;;;;;:::o;910:180::-;969:6;1022:2;1010:9;1001:7;997:23;993:32;990:52;;;1038:1;1035;1028:12;990:52;-1:-1:-1;1061:23:31;;910:180;-1:-1:-1;910:180:31:o;1095:173::-;1163:20;;-1:-1:-1;;;;;1212:31:31;;1202:42;;1192:70;;1258:1;1255;1248:12;1192:70;1095:173;;;:::o;1273:186::-;1332:6;1385:2;1373:9;1364:7;1360:23;1356:32;1353:52;;;1401:1;1398;1391:12;1353:52;1424:29;1443:9;1424:29;:::i;1464:636::-;1645:2;1697:21;;;1670:18;;;1753:22;;;1616:4;;1832:6;1806:2;1791:18;;1616:4;1866:208;1880:6;1877:1;1874:13;1866:208;;;-1:-1:-1;;;;;1945:26:31;1964:6;1945:26;:::i;:::-;1941:52;1929:65;;2049:15;;;;2014:12;;;;1902:1;1895:9;1866:208;;;-1:-1:-1;2091:3:31;1464:636;-1:-1:-1;;;;;;1464:636:31:o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "offset": [
    349,
    1858
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x74356D7F GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x74356D7F EQ PUSH2 0xCE JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xE1 JUMPI DUP1 PUSH4 0xB9628541 EQ PUSH2 0xF2 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x105 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC5A6F2F EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x6F929D00 EQ PUSH2 0xB1 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xC4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x95 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x95 PUSH2 0xBF CALLDATASIZE PUSH1 0x4 PUSH2 0x5C7 JUMP JUMPDEST PUSH2 0x118 JUMP JUMPDEST PUSH2 0xCC PUSH2 0x1DB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x95 PUSH2 0xDC CALLDATASIZE PUSH1 0x4 PUSH2 0x646 JUMP JUMPDEST PUSH2 0x1EF JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x95 JUMP JUMPDEST PUSH2 0xCC PUSH2 0x100 CALLDATASIZE PUSH1 0x4 PUSH2 0x67B JUMP JUMPDEST PUSH2 0x25D JUMP JUMPDEST PUSH2 0xCC PUSH2 0x113 CALLDATASIZE PUSH1 0x4 PUSH2 0x67B JUMP JUMPDEST PUSH2 0x328 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH2 0x133 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH2 0x3A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA224CEE7 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0xA224CEE7 SWAP1 PUSH2 0x164 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x696 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x17E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x192 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH32 0x86F093FA2994A72C3664D9E9FEE967BBE589CA12915066510919A9E039515961 SWAP3 POP PUSH1 0x20 ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x1E3 PUSH2 0x43E JUMP JUMPDEST PUSH2 0x1ED PUSH1 0x0 PUSH2 0x498 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD ADDRESS PUSH1 0x38 DUP3 ADD MSTORE PUSH16 0x5AF43D82803E903D91602B57FD5BF3FF PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x14 DUP3 ADD MSTORE PUSH20 0x3D602D80600A3D3981F3363D3D373D3D3D363D73 DUP2 MSTORE PUSH1 0x58 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x37 PUSH1 0xC DUP3 ADD KECCAK256 PUSH1 0x78 DUP3 ADD MSTORE PUSH1 0x55 PUSH1 0x43 SWAP1 SWAP2 ADD KECCAK256 PUSH1 0x0 SWAP1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x265 PUSH2 0x43E JUMP JUMPDEST PUSH2 0x276 DUP2 PUSH4 0xCEBE9845 PUSH1 0xE0 SHL PUSH2 0x4E8 JUMP JUMPDEST PUSH2 0x2C7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E74657266616365206E6F7420737570706F72746564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 SWAP1 SWAP3 AND DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH32 0x2B12BE9FA6BEDEFF30CB15BA65624AF638A4BA58BF9445D9E29FA9ABEB10C4DA SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x330 PUSH2 0x43E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x395 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2BE JUMP JUMPDEST PUSH2 0x39E DUP2 PUSH2 0x498 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH23 0x3D602D80600A3D3981F3363D3D373D3D3D363D73000000 DUP4 PUSH1 0x60 SHL PUSH1 0xE8 SHR OR PUSH1 0x0 MSTORE PUSH15 0x5AF43D82803E903D91602B57FD5BF3 DUP4 PUSH1 0x78 SHL OR PUSH1 0x20 MSTORE DUP2 PUSH1 0x37 PUSH1 0x9 PUSH1 0x0 CREATE2 SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x257 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313136373A2063726561746532206661696C6564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2BE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1ED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2BE JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F3 DUP4 PUSH2 0x50B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x504 JUMPI POP PUSH2 0x504 DUP4 DUP4 PUSH2 0x53E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x51E DUP3 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH2 0x53E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x257 JUMPI POP PUSH2 0x537 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH2 0x53E JUMP JUMPDEST ISZERO SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND PUSH1 0x24 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x44 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL OR DUP2 MSTORE DUP3 MLOAD PUSH1 0x0 SWAP4 SWAP3 DUP5 SWAP3 DUP4 SWAP3 DUP4 SWAP3 SWAP2 DUP4 SWAP2 SWAP1 DUP11 PUSH2 0x7530 STATICCALL SWAP3 POP RETURNDATASIZE SWAP2 POP PUSH1 0x0 MLOAD SWAP1 POP DUP3 DUP1 ISZERO PUSH2 0x5B0 JUMPI POP PUSH1 0x20 DUP3 LT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x5BC JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x5DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x5FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x60F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x61E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x633 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP5 POP DUP1 SWAP4 POP POP POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x658 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x676 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x68D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x504 DUP3 PUSH2 0x65F JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 SWAP1 DUP5 PUSH1 0x40 DUP5 ADD DUP4 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x6D7 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x6C4 DUP5 PUSH2 0x65F JUMP JUMPDEST AND DUP3 MSTORE SWAP2 DUP4 ADD SWAP2 SWAP1 DUP4 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x6AB JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP14 RETURNDATASIZE 0xE4 COINBASE PUSH4 0xA85CE5E4 0xF9 CALL PUSH1 0x31 0x4E 0x22 DUP14 0xEB 0xD1 0xC4 DUP12 0xCC PUSH26 0xC7DD0373F83308F9D8B464736F6C634300081300330000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        349,
        1858
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        349,
        1858
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        349,
        1858
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5": {
      "fn": null,
      "offset": [
        349,
        1858
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "6": {
      "fn": null,
      "offset": [
        349,
        1858
      ],
      "op": "DUP1",
      "path": "16"
    },
    "7": {
      "fn": null,
      "offset": [
        349,
        1858
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "8": {
      "fn": null,
      "offset": [
        349,
        1858
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        349,
        1858
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "12": {
      "fn": null,
      "offset": [
        349,
        1858
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        349,
        1858
      ],
      "op": "DUP1",
      "path": "16"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        349,
        1858
      ],
      "op": "REVERT",
      "path": "16"
    },
    "16": {
      "fn": null,
      "offset": [
        349,
        1858
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "17": {
      "fn": null,
      "offset": [
        349,
        1858
      ],
      "op": "POP",
      "path": "16"
    },
    "18": {
      "fn": null,
      "offset": [
        349,
        1858
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        349,
        1858
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "21": {
      "fn": null,
      "offset": [
        349,
        1858
      ],
      "op": "LT",
      "path": "16"
    },
    "22": {
      "fn": null,
      "offset": [
        349,
        1858
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x7D"
    },
    "25": {
      "fn": null,
      "offset": [
        349,
        1858
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "26": {
      "fn": null,
      "offset": [
        349,
        1858
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        349,
        1858
      ],
      "op": "CALLDATALOAD",
      "path": "16"
    },
    "29": {
      "fn": null,
      "offset": [
        349,
        1858
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        349,
        1858
      ],
      "op": "SHR",
      "path": "16"
    },
    "32": {
      "fn": null,
      "offset": [
        349,
        1858
      ],
      "op": "DUP1",
      "path": "16"
    },
    "33": {
      "fn": null,
      "offset": [
        349,
        1858
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x74356D7F"
    },
    "38": {
      "fn": null,
      "offset": [
        349,
        1858
      ],
      "op": "GT",
      "path": "16"
    },
    "39": {
      "fn": null,
      "offset": [
        349,
        1858
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x5B"
    },
    "42": {
      "fn": null,
      "offset": [
        349,
        1858
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "43": {
      "fn": null,
      "offset": [
        349,
        1858
      ],
      "op": "DUP1",
      "path": "16"
    },
    "44": {
      "fn": null,
      "offset": [
        349,
        1858
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x74356D7F"
    },
    "49": {
      "fn": null,
      "offset": [
        349,
        1858
      ],
      "op": "EQ",
      "path": "16"
    },
    "50": {
      "fn": null,
      "offset": [
        349,
        1858
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xCE"
    },
    "53": {
      "fn": null,
      "offset": [
        349,
        1858
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "54": {
      "fn": null,
      "offset": [
        349,
        1858
      ],
      "op": "DUP1",
      "path": "16"
    },
    "55": {
      "fn": null,
      "offset": [
        349,
        1858
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x8DA5CB5B"
    },
    "60": {
      "fn": null,
      "offset": [
        349,
        1858
      ],
      "op": "EQ",
      "path": "16"
    },
    "61": {
      "fn": null,
      "offset": [
        349,
        1858
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xE1"
    },
    "64": {
      "fn": null,
      "offset": [
        349,
        1858
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "65": {
      "fn": null,
      "offset": [
        349,
        1858
      ],
      "op": "DUP1",
      "path": "16"
    },
    "66": {
      "fn": null,
      "offset": [
        349,
        1858
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xB9628541"
    },
    "71": {
      "fn": null,
      "offset": [
        349,
        1858
      ],
      "op": "EQ",
      "path": "16"
    },
    "72": {
      "fn": null,
      "offset": [
        349,
        1858
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xF2"
    },
    "75": {
      "fn": null,
      "offset": [
        349,
        1858
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "76": {
      "fn": null,
      "offset": [
        349,
        1858
      ],
      "op": "DUP1",
      "path": "16"
    },
    "77": {
      "fn": null,
      "offset": [
        349,
        1858
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xF2FDE38B"
    },
    "82": {
      "fn": null,
      "offset": [
        349,
        1858
      ],
      "op": "EQ",
      "path": "16"
    },
    "83": {
      "fn": null,
      "offset": [
        349,
        1858
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x105"
    },
    "86": {
      "fn": null,
      "offset": [
        349,
        1858
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "87": {
      "fn": null,
      "offset": [
        349,
        1858
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "89": {
      "fn": null,
      "offset": [
        349,
        1858
      ],
      "op": "DUP1",
      "path": "16"
    },
    "90": {
      "fn": null,
      "offset": [
        349,
        1858
      ],
      "op": "REVERT",
      "path": "16"
    },
    "91": {
      "fn": null,
      "offset": [
        349,
        1858
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "92": {
      "fn": null,
      "offset": [
        349,
        1858
      ],
      "op": "DUP1",
      "path": "16"
    },
    "93": {
      "fn": null,
      "offset": [
        349,
        1858
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xC5A6F2F"
    },
    "98": {
      "fn": null,
      "offset": [
        349,
        1858
      ],
      "op": "EQ",
      "path": "16"
    },
    "99": {
      "fn": null,
      "offset": [
        349,
        1858
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x82"
    },
    "102": {
      "fn": null,
      "offset": [
        349,
        1858
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "103": {
      "fn": null,
      "offset": [
        349,
        1858
      ],
      "op": "DUP1",
      "path": "16"
    },
    "104": {
      "fn": null,
      "offset": [
        349,
        1858
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x6F929D00"
    },
    "109": {
      "fn": null,
      "offset": [
        349,
        1858
      ],
      "op": "EQ",
      "path": "16"
    },
    "110": {
      "fn": null,
      "offset": [
        349,
        1858
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB1"
    },
    "113": {
      "fn": null,
      "offset": [
        349,
        1858
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "114": {
      "fn": null,
      "offset": [
        349,
        1858
      ],
      "op": "DUP1",
      "path": "16"
    },
    "115": {
      "fn": null,
      "offset": [
        349,
        1858
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x715018A6"
    },
    "120": {
      "fn": null,
      "offset": [
        349,
        1858
      ],
      "op": "EQ",
      "path": "16"
    },
    "121": {
      "fn": null,
      "offset": [
        349,
        1858
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xC4"
    },
    "124": {
      "fn": null,
      "offset": [
        349,
        1858
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "125": {
      "fn": null,
      "offset": [
        349,
        1858
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "126": {
      "fn": null,
      "offset": [
        349,
        1858
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "128": {
      "fn": null,
      "offset": [
        349,
        1858
      ],
      "op": "DUP1",
      "path": "16"
    },
    "129": {
      "first_revert": true,
      "fn": null,
      "offset": [
        349,
        1858
      ],
      "op": "REVERT",
      "path": "16"
    },
    "130": {
      "offset": [
        562,
        592
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "131": {
      "fn": null,
      "offset": [
        562,
        592
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "133": {
      "fn": null,
      "offset": [
        562,
        592
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "134": {
      "fn": null,
      "offset": [
        562,
        592
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x95"
    },
    "137": {
      "fn": null,
      "offset": [
        562,
        592
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "138": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "140": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "142": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "144": {
      "op": "SHL"
    },
    "145": {
      "op": "SUB"
    },
    "146": {
      "offset": [
        562,
        592
      ],
      "op": "AND",
      "path": "16"
    },
    "147": {
      "fn": null,
      "offset": [
        562,
        592
      ],
      "op": "DUP2",
      "path": "16"
    },
    "148": {
      "fn": null,
      "offset": [
        562,
        592
      ],
      "op": "JUMP",
      "path": "16"
    },
    "149": {
      "fn": null,
      "offset": [
        562,
        592
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "150": {
      "fn": null,
      "offset": [
        562,
        592
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "152": {
      "fn": null,
      "offset": [
        562,
        592
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "153": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "155": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "157": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "159": {
      "op": "SHL"
    },
    "160": {
      "op": "SUB"
    },
    "161": {
      "op": "SWAP1"
    },
    "162": {
      "op": "SWAP2"
    },
    "163": {
      "op": "AND"
    },
    "164": {
      "op": "DUP2"
    },
    "165": {
      "op": "MSTORE"
    },
    "166": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "168": {
      "op": "ADD"
    },
    "169": {
      "offset": [
        562,
        592
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "171": {
      "fn": null,
      "offset": [
        562,
        592
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "172": {
      "fn": null,
      "offset": [
        562,
        592
      ],
      "op": "DUP1",
      "path": "16"
    },
    "173": {
      "fn": null,
      "offset": [
        562,
        592
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "174": {
      "fn": null,
      "offset": [
        562,
        592
      ],
      "op": "SUB",
      "path": "16"
    },
    "175": {
      "fn": null,
      "offset": [
        562,
        592
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "176": {
      "fn": null,
      "offset": [
        562,
        592
      ],
      "op": "RETURN",
      "path": "16"
    },
    "177": {
      "fn": "CryptoKeeperFactory.createCryptoKeeper",
      "offset": [
        1249,
        1640
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "178": {
      "fn": "CryptoKeeperFactory.createCryptoKeeper",
      "offset": [
        1249,
        1640
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x95"
    },
    "181": {
      "fn": "CryptoKeeperFactory.createCryptoKeeper",
      "offset": [
        1249,
        1640
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xBF"
    },
    "184": {
      "fn": "CryptoKeeperFactory.createCryptoKeeper",
      "offset": [
        1249,
        1640
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "185": {
      "fn": "CryptoKeeperFactory.createCryptoKeeper",
      "offset": [
        1249,
        1640
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "187": {
      "fn": "CryptoKeeperFactory.createCryptoKeeper",
      "offset": [
        1249,
        1640
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x5C7"
    },
    "190": {
      "fn": "CryptoKeeperFactory.createCryptoKeeper",
      "jump": "i",
      "offset": [
        1249,
        1640
      ],
      "op": "JUMP",
      "path": "16"
    },
    "191": {
      "fn": "CryptoKeeperFactory.createCryptoKeeper",
      "offset": [
        1249,
        1640
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "192": {
      "fn": "CryptoKeeperFactory.createCryptoKeeper",
      "offset": [
        1249,
        1640
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x118"
    },
    "195": {
      "fn": "CryptoKeeperFactory.createCryptoKeeper",
      "jump": "i",
      "offset": [
        1249,
        1640
      ],
      "op": "JUMP",
      "path": "16"
    },
    "196": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "197": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCC"
    },
    "200": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DB"
    },
    "203": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1831,
        1932
      ],
      "op": "JUMP",
      "path": "0"
    },
    "204": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "205": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "STOP",
      "path": "0"
    },
    "206": {
      "fn": "CryptoKeeperFactory.predictCryptoKeeperAddress",
      "offset": [
        1646,
        1856
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "207": {
      "fn": "CryptoKeeperFactory.predictCryptoKeeperAddress",
      "offset": [
        1646,
        1856
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x95"
    },
    "210": {
      "fn": "CryptoKeeperFactory.predictCryptoKeeperAddress",
      "offset": [
        1646,
        1856
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xDC"
    },
    "213": {
      "fn": "CryptoKeeperFactory.predictCryptoKeeperAddress",
      "offset": [
        1646,
        1856
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "214": {
      "fn": "CryptoKeeperFactory.predictCryptoKeeperAddress",
      "offset": [
        1646,
        1856
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "216": {
      "fn": "CryptoKeeperFactory.predictCryptoKeeperAddress",
      "offset": [
        1646,
        1856
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x646"
    },
    "219": {
      "fn": "CryptoKeeperFactory.predictCryptoKeeperAddress",
      "jump": "i",
      "offset": [
        1646,
        1856
      ],
      "op": "JUMP",
      "path": "16"
    },
    "220": {
      "fn": "CryptoKeeperFactory.predictCryptoKeeperAddress",
      "offset": [
        1646,
        1856
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "221": {
      "fn": "CryptoKeeperFactory.predictCryptoKeeperAddress",
      "offset": [
        1646,
        1856
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1EF"
    },
    "224": {
      "fn": "CryptoKeeperFactory.predictCryptoKeeperAddress",
      "jump": "i",
      "offset": [
        1646,
        1856
      ],
      "op": "JUMP",
      "path": "16"
    },
    "225": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "226": {
      "fn": "Ownable.owner",
      "offset": [
        1247,
        1254
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "228": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "SLOAD",
      "path": "0",
      "statement": 0
    },
    "229": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "231": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "233": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "235": {
      "op": "SHL"
    },
    "236": {
      "op": "SUB"
    },
    "237": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "AND",
      "path": "0"
    },
    "238": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x95"
    },
    "241": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "JUMP",
      "path": "0"
    },
    "242": {
      "fn": "CryptoKeeperFactory.setTemplateAddress",
      "offset": [
        797,
        1243
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "243": {
      "fn": "CryptoKeeperFactory.setTemplateAddress",
      "offset": [
        797,
        1243
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xCC"
    },
    "246": {
      "fn": "CryptoKeeperFactory.setTemplateAddress",
      "offset": [
        797,
        1243
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x100"
    },
    "249": {
      "fn": "CryptoKeeperFactory.setTemplateAddress",
      "offset": [
        797,
        1243
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "250": {
      "fn": "CryptoKeeperFactory.setTemplateAddress",
      "offset": [
        797,
        1243
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "252": {
      "fn": "CryptoKeeperFactory.setTemplateAddress",
      "offset": [
        797,
        1243
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x67B"
    },
    "255": {
      "fn": "CryptoKeeperFactory.setTemplateAddress",
      "jump": "i",
      "offset": [
        797,
        1243
      ],
      "op": "JUMP",
      "path": "16"
    },
    "256": {
      "fn": "CryptoKeeperFactory.setTemplateAddress",
      "offset": [
        797,
        1243
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "257": {
      "fn": "CryptoKeeperFactory.setTemplateAddress",
      "offset": [
        797,
        1243
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x25D"
    },
    "260": {
      "fn": "CryptoKeeperFactory.setTemplateAddress",
      "jump": "i",
      "offset": [
        797,
        1243
      ],
      "op": "JUMP",
      "path": "16"
    },
    "261": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "262": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCC"
    },
    "265": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x113"
    },
    "268": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "269": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "271": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x67B"
    },
    "274": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMP",
      "path": "0"
    },
    "275": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "276": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x328"
    },
    "279": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMP",
      "path": "0"
    },
    "280": {
      "fn": "CryptoKeeperFactory.createCryptoKeeper",
      "offset": [
        1249,
        1640
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "281": {
      "fn": "CryptoKeeperFactory.createCryptoKeeper",
      "offset": [
        1432,
        1447
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "283": {
      "fn": "CryptoKeeperFactory.createCryptoKeeper",
      "offset": [
        1432,
        1447
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "284": {
      "fn": "CryptoKeeperFactory.createCryptoKeeper",
      "offset": [
        1379,
        1386
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "286": {
      "fn": "CryptoKeeperFactory.createCryptoKeeper",
      "offset": [
        1379,
        1386
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "287": {
      "fn": "CryptoKeeperFactory.createCryptoKeeper",
      "offset": [
        1379,
        1386
      ],
      "op": "DUP2",
      "path": "16"
    },
    "288": {
      "fn": "CryptoKeeperFactory.createCryptoKeeper",
      "offset": [
        1379,
        1386
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "289": {
      "fn": "CryptoKeeperFactory.createCryptoKeeper",
      "offset": [
        1432,
        1473
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x133"
    },
    "292": {
      "fn": "CryptoKeeperFactory.createCryptoKeeper",
      "offset": [
        1432,
        1473
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "293": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "295": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "297": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "299": {
      "op": "SHL"
    },
    "300": {
      "op": "SUB"
    },
    "301": {
      "fn": "CryptoKeeperFactory.createCryptoKeeper",
      "offset": [
        1432,
        1447
      ],
      "op": "AND",
      "path": "16"
    },
    "302": {
      "fn": "CryptoKeeperFactory.createCryptoKeeper",
      "offset": [
        1467,
        1472
      ],
      "op": "DUP7",
      "path": "16"
    },
    "303": {
      "fn": "CryptoKeeperFactory.createCryptoKeeper",
      "offset": [
        1432,
        1466
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3A1"
    },
    "306": {
      "fn": "CryptoKeeperFactory.createCryptoKeeper",
      "jump": "i",
      "offset": [
        1432,
        1473
      ],
      "op": "JUMP",
      "path": "16"
    },
    "307": {
      "fn": "CryptoKeeperFactory.createCryptoKeeper",
      "offset": [
        1432,
        1473
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "308": {
      "fn": "CryptoKeeperFactory.createCryptoKeeper",
      "offset": [
        1484,
        1541
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 1,
      "value": "0x40"
    },
    "310": {
      "fn": "CryptoKeeperFactory.createCryptoKeeper",
      "offset": [
        1484,
        1541
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "311": {
      "op": "PUSH4",
      "value": "0xA224CEE7"
    },
    "316": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "318": {
      "op": "SHL"
    },
    "319": {
      "fn": "CryptoKeeperFactory.createCryptoKeeper",
      "offset": [
        1484,
        1541
      ],
      "op": "DUP2",
      "path": "16"
    },
    "320": {
      "fn": "CryptoKeeperFactory.createCryptoKeeper",
      "offset": [
        1484,
        1541
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "321": {
      "fn": "CryptoKeeperFactory.createCryptoKeeper",
      "offset": [
        1402,
        1473
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "322": {
      "fn": "CryptoKeeperFactory.createCryptoKeeper",
      "offset": [
        1402,
        1473
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "323": {
      "op": "POP"
    },
    "324": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "326": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "328": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "330": {
      "op": "SHL"
    },
    "331": {
      "op": "SUB"
    },
    "332": {
      "fn": "CryptoKeeperFactory.createCryptoKeeper",
      "offset": [
        1484,
        1529
      ],
      "op": "DUP3",
      "path": "16"
    },
    "333": {
      "fn": "CryptoKeeperFactory.createCryptoKeeper",
      "offset": [
        1484,
        1529
      ],
      "op": "AND",
      "path": "16"
    },
    "334": {
      "fn": "CryptoKeeperFactory.createCryptoKeeper",
      "offset": [
        1484,
        1529
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "335": {
      "fn": "CryptoKeeperFactory.createCryptoKeeper",
      "offset": [
        1484,
        1529
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xA224CEE7"
    },
    "340": {
      "fn": "CryptoKeeperFactory.createCryptoKeeper",
      "offset": [
        1484,
        1529
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "341": {
      "fn": "CryptoKeeperFactory.createCryptoKeeper",
      "offset": [
        1484,
        1541
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x164"
    },
    "344": {
      "fn": "CryptoKeeperFactory.createCryptoKeeper",
      "offset": [
        1484,
        1541
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "345": {
      "fn": "CryptoKeeperFactory.createCryptoKeeper",
      "offset": [
        1530,
        1540
      ],
      "op": "DUP8",
      "path": "16"
    },
    "346": {
      "fn": "CryptoKeeperFactory.createCryptoKeeper",
      "offset": [
        1530,
        1540
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "347": {
      "fn": "CryptoKeeperFactory.createCryptoKeeper",
      "offset": [
        1530,
        1540
      ],
      "op": "DUP8",
      "path": "16"
    },
    "348": {
      "fn": "CryptoKeeperFactory.createCryptoKeeper",
      "offset": [
        1530,
        1540
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "349": {
      "fn": "CryptoKeeperFactory.createCryptoKeeper",
      "offset": [
        1484,
        1541
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "351": {
      "fn": "CryptoKeeperFactory.createCryptoKeeper",
      "offset": [
        1484,
        1541
      ],
      "op": "ADD",
      "path": "16"
    },
    "352": {
      "fn": "CryptoKeeperFactory.createCryptoKeeper",
      "offset": [
        1484,
        1541
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x696"
    },
    "355": {
      "fn": "CryptoKeeperFactory.createCryptoKeeper",
      "jump": "i",
      "offset": [
        1484,
        1541
      ],
      "op": "JUMP",
      "path": "16"
    },
    "356": {
      "fn": "CryptoKeeperFactory.createCryptoKeeper",
      "offset": [
        1484,
        1541
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "357": {
      "fn": "CryptoKeeperFactory.createCryptoKeeper",
      "offset": [
        1484,
        1541
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "359": {
      "fn": "CryptoKeeperFactory.createCryptoKeeper",
      "offset": [
        1484,
        1541
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "361": {
      "fn": "CryptoKeeperFactory.createCryptoKeeper",
      "offset": [
        1484,
        1541
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "362": {
      "fn": "CryptoKeeperFactory.createCryptoKeeper",
      "offset": [
        1484,
        1541
      ],
      "op": "DUP1",
      "path": "16"
    },
    "363": {
      "fn": "CryptoKeeperFactory.createCryptoKeeper",
      "offset": [
        1484,
        1541
      ],
      "op": "DUP4",
      "path": "16"
    },
    "364": {
      "fn": "CryptoKeeperFactory.createCryptoKeeper",
      "offset": [
        1484,
        1541
      ],
      "op": "SUB",
      "path": "16"
    },
    "365": {
      "fn": "CryptoKeeperFactory.createCryptoKeeper",
      "offset": [
        1484,
        1541
      ],
      "op": "DUP2",
      "path": "16"
    },
    "366": {
      "fn": "CryptoKeeperFactory.createCryptoKeeper",
      "offset": [
        1484,
        1541
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "368": {
      "fn": "CryptoKeeperFactory.createCryptoKeeper",
      "offset": [
        1484,
        1541
      ],
      "op": "DUP8",
      "path": "16"
    },
    "369": {
      "fn": "CryptoKeeperFactory.createCryptoKeeper",
      "offset": [
        1484,
        1541
      ],
      "op": "DUP1",
      "path": "16"
    },
    "370": {
      "fn": "CryptoKeeperFactory.createCryptoKeeper",
      "offset": [
        1484,
        1541
      ],
      "op": "EXTCODESIZE",
      "path": "16"
    },
    "371": {
      "fn": "CryptoKeeperFactory.createCryptoKeeper",
      "offset": [
        1484,
        1541
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "372": {
      "fn": "CryptoKeeperFactory.createCryptoKeeper",
      "offset": [
        1484,
        1541
      ],
      "op": "DUP1",
      "path": "16"
    },
    "373": {
      "fn": "CryptoKeeperFactory.createCryptoKeeper",
      "offset": [
        1484,
        1541
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "374": {
      "fn": "CryptoKeeperFactory.createCryptoKeeper",
      "offset": [
        1484,
        1541
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x17E"
    },
    "377": {
      "fn": "CryptoKeeperFactory.createCryptoKeeper",
      "offset": [
        1484,
        1541
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "378": {
      "fn": "CryptoKeeperFactory.createCryptoKeeper",
      "offset": [
        1484,
        1541
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "380": {
      "fn": "CryptoKeeperFactory.createCryptoKeeper",
      "offset": [
        1484,
        1541
      ],
      "op": "DUP1",
      "path": "16"
    },
    "381": {
      "fn": "CryptoKeeperFactory.createCryptoKeeper",
      "offset": [
        1484,
        1541
      ],
      "op": "REVERT",
      "path": "16"
    },
    "382": {
      "fn": "CryptoKeeperFactory.createCryptoKeeper",
      "offset": [
        1484,
        1541
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "383": {
      "fn": "CryptoKeeperFactory.createCryptoKeeper",
      "offset": [
        1484,
        1541
      ],
      "op": "POP",
      "path": "16"
    },
    "384": {
      "fn": "CryptoKeeperFactory.createCryptoKeeper",
      "offset": [
        1484,
        1541
      ],
      "op": "GAS",
      "path": "16"
    },
    "385": {
      "fn": "CryptoKeeperFactory.createCryptoKeeper",
      "offset": [
        1484,
        1541
      ],
      "op": "CALL",
      "path": "16"
    },
    "386": {
      "fn": "CryptoKeeperFactory.createCryptoKeeper",
      "offset": [
        1484,
        1541
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "387": {
      "fn": "CryptoKeeperFactory.createCryptoKeeper",
      "offset": [
        1484,
        1541
      ],
      "op": "DUP1",
      "path": "16"
    },
    "388": {
      "fn": "CryptoKeeperFactory.createCryptoKeeper",
      "offset": [
        1484,
        1541
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "389": {
      "fn": "CryptoKeeperFactory.createCryptoKeeper",
      "offset": [
        1484,
        1541
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x192"
    },
    "392": {
      "fn": "CryptoKeeperFactory.createCryptoKeeper",
      "offset": [
        1484,
        1541
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "393": {
      "fn": "CryptoKeeperFactory.createCryptoKeeper",
      "offset": [
        1484,
        1541
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "394": {
      "fn": "CryptoKeeperFactory.createCryptoKeeper",
      "offset": [
        1484,
        1541
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "396": {
      "fn": "CryptoKeeperFactory.createCryptoKeeper",
      "offset": [
        1484,
        1541
      ],
      "op": "DUP1",
      "path": "16"
    },
    "397": {
      "fn": "CryptoKeeperFactory.createCryptoKeeper",
      "offset": [
        1484,
        1541
      ],
      "op": "RETURNDATACOPY",
      "path": "16"
    },
    "398": {
      "fn": "CryptoKeeperFactory.createCryptoKeeper",
      "offset": [
        1484,
        1541
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "399": {
      "fn": "CryptoKeeperFactory.createCryptoKeeper",
      "offset": [
        1484,
        1541
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "401": {
      "fn": "CryptoKeeperFactory.createCryptoKeeper",
      "offset": [
        1484,
        1541
      ],
      "op": "REVERT",
      "path": "16"
    },
    "402": {
      "fn": "CryptoKeeperFactory.createCryptoKeeper",
      "offset": [
        1484,
        1541
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "403": {
      "op": "POP"
    },
    "404": {
      "op": "POP"
    },
    "405": {
      "fn": "CryptoKeeperFactory.createCryptoKeeper",
      "offset": [
        1557,
        1597
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 2,
      "value": "0x40"
    },
    "407": {
      "fn": "CryptoKeeperFactory.createCryptoKeeper",
      "offset": [
        1557,
        1597
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "408": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "410": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "412": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "414": {
      "op": "SHL"
    },
    "415": {
      "op": "SUB"
    },
    "416": {
      "op": "DUP5"
    },
    "417": {
      "op": "AND"
    },
    "418": {
      "op": "DUP2"
    },
    "419": {
      "op": "MSTORE"
    },
    "420": {
      "fn": "CryptoKeeperFactory.createCryptoKeeper",
      "offset": [
        1557,
        1597
      ],
      "op": "PUSH32",
      "path": "16",
      "value": "0x86F093FA2994A72C3664D9E9FEE967BBE589CA12915066510919A9E039515961"
    },
    "453": {
      "fn": "CryptoKeeperFactory.createCryptoKeeper",
      "offset": [
        1557,
        1597
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "454": {
      "op": "POP"
    },
    "455": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "457": {
      "op": "ADD"
    },
    "458": {
      "op": "SWAP1"
    },
    "459": {
      "op": "POP"
    },
    "460": {
      "fn": "CryptoKeeperFactory.createCryptoKeeper",
      "offset": [
        1557,
        1597
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "462": {
      "fn": "CryptoKeeperFactory.createCryptoKeeper",
      "offset": [
        1557,
        1597
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "463": {
      "fn": "CryptoKeeperFactory.createCryptoKeeper",
      "offset": [
        1557,
        1597
      ],
      "op": "DUP1",
      "path": "16"
    },
    "464": {
      "fn": "CryptoKeeperFactory.createCryptoKeeper",
      "offset": [
        1557,
        1597
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "465": {
      "fn": "CryptoKeeperFactory.createCryptoKeeper",
      "offset": [
        1557,
        1597
      ],
      "op": "SUB",
      "path": "16"
    },
    "466": {
      "fn": "CryptoKeeperFactory.createCryptoKeeper",
      "offset": [
        1557,
        1597
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "467": {
      "fn": "CryptoKeeperFactory.createCryptoKeeper",
      "offset": [
        1557,
        1597
      ],
      "op": "LOG1",
      "path": "16"
    },
    "468": {
      "fn": "CryptoKeeperFactory.createCryptoKeeper",
      "offset": [
        1614,
        1633
      ],
      "op": "SWAP5",
      "path": "16",
      "statement": 3
    },
    "469": {
      "fn": "CryptoKeeperFactory.createCryptoKeeper",
      "offset": [
        1249,
        1640
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "470": {
      "op": "POP"
    },
    "471": {
      "op": "POP"
    },
    "472": {
      "op": "POP"
    },
    "473": {
      "op": "POP"
    },
    "474": {
      "fn": "CryptoKeeperFactory.createCryptoKeeper",
      "jump": "o",
      "offset": [
        1249,
        1640
      ],
      "op": "JUMP",
      "path": "16"
    },
    "475": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "476": {
      "offset": [
        1094,
        1107
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E3"
    },
    "479": {
      "offset": [
        1094,
        1105
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x43E"
    },
    "482": {
      "jump": "i",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMP",
      "path": "0"
    },
    "483": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "484": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1895,
        1925
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 4,
      "value": "0x1ED"
    },
    "487": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1922,
        1923
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "489": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1895,
        1913
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x498"
    },
    "492": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1895,
        1925
      ],
      "op": "JUMP",
      "path": "0"
    },
    "493": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1895,
        1925
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "494": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1831,
        1932
      ],
      "op": "JUMP",
      "path": "0"
    },
    "495": {
      "fn": "CryptoKeeperFactory.predictCryptoKeeperAddress",
      "offset": [
        1646,
        1856
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "496": {
      "fn": "CryptoKeeperFactory.predictCryptoKeeperAddress",
      "offset": [
        1784,
        1799
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 5,
      "value": "0x1"
    },
    "498": {
      "fn": "CryptoKeeperFactory.predictCryptoKeeperAddress",
      "offset": [
        1784,
        1799
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "499": {
      "fn": "Clones.predictDeterministicAddress",
      "offset": [
        3269,
        3273
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "501": {
      "fn": "Clones.predictDeterministicAddress",
      "offset": [
        3263,
        3274
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "502": {
      "fn": "CryptoKeeperFactory.predictCryptoKeeperAddress",
      "offset": [
        1843,
        1847
      ],
      "op": "ADDRESS",
      "path": "16"
    },
    "503": {
      "fn": "Clones.predictDeterministicAddress",
      "offset": [
        3303,
        3307
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x38"
    },
    "505": {
      "fn": "Clones.predictDeterministicAddress",
      "offset": [
        3294,
        3308
      ],
      "op": "DUP3",
      "path": "1"
    },
    "506": {
      "fn": "Clones.predictDeterministicAddress",
      "offset": [
        3294,
        3308
      ],
      "op": "ADD",
      "path": "1"
    },
    "507": {
      "fn": "Clones.predictDeterministicAddress",
      "offset": [
        3287,
        3319
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "508": {
      "fn": "Clones.predictDeterministicAddress",
      "offset": [
        3355,
        3389
      ],
      "op": "PUSH16",
      "path": "1",
      "value": "0x5AF43D82803E903D91602B57FD5BF3FF"
    },
    "525": {
      "fn": "Clones.predictDeterministicAddress",
      "offset": [
        3348,
        3352
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "527": {
      "fn": "Clones.predictDeterministicAddress",
      "offset": [
        3339,
        3353
      ],
      "op": "DUP3",
      "path": "1"
    },
    "528": {
      "fn": "Clones.predictDeterministicAddress",
      "offset": [
        3339,
        3353
      ],
      "op": "ADD",
      "path": "1"
    },
    "529": {
      "fn": "Clones.predictDeterministicAddress",
      "offset": [
        3332,
        3390
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "530": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "532": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "534": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "536": {
      "op": "SHL"
    },
    "537": {
      "op": "SUB"
    },
    "538": {
      "fn": "CryptoKeeperFactory.predictCryptoKeeperAddress",
      "offset": [
        1784,
        1799
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "539": {
      "fn": "CryptoKeeperFactory.predictCryptoKeeperAddress",
      "offset": [
        1784,
        1799
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "540": {
      "fn": "CryptoKeeperFactory.predictCryptoKeeperAddress",
      "offset": [
        1784,
        1799
      ],
      "op": "AND",
      "path": "16"
    },
    "541": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "543": {
      "fn": "Clones.predictDeterministicAddress",
      "offset": [
        3410,
        3424
      ],
      "op": "DUP3",
      "path": "1"
    },
    "544": {
      "fn": "Clones.predictDeterministicAddress",
      "offset": [
        3410,
        3424
      ],
      "op": "ADD",
      "path": "1"
    },
    "545": {
      "fn": "Clones.predictDeterministicAddress",
      "offset": [
        3403,
        3441
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "546": {
      "fn": "Clones.predictDeterministicAddress",
      "offset": [
        3466,
        3508
      ],
      "op": "PUSH20",
      "path": "1",
      "value": "0x3D602D80600A3D3981F3363D3D373D3D3D363D73"
    },
    "567": {
      "fn": "Clones.predictDeterministicAddress",
      "offset": [
        3454,
        3509
      ],
      "op": "DUP2",
      "path": "1"
    },
    "568": {
      "fn": "Clones.predictDeterministicAddress",
      "offset": [
        3454,
        3509
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "569": {
      "fn": "Clones.predictDeterministicAddress",
      "offset": [
        3538,
        3542
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x58"
    },
    "571": {
      "fn": "Clones.predictDeterministicAddress",
      "offset": [
        3529,
        3543
      ],
      "op": "DUP2",
      "path": "1"
    },
    "572": {
      "fn": "Clones.predictDeterministicAddress",
      "offset": [
        3529,
        3543
      ],
      "op": "ADD",
      "path": "1"
    },
    "573": {
      "fn": "Clones.predictDeterministicAddress",
      "offset": [
        3522,
        3550
      ],
      "op": "DUP3",
      "path": "1"
    },
    "574": {
      "fn": "Clones.predictDeterministicAddress",
      "offset": [
        3522,
        3550
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "575": {
      "fn": "Clones.predictDeterministicAddress",
      "offset": [
        3522,
        3550
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "576": {
      "fn": "Clones.predictDeterministicAddress",
      "offset": [
        3612,
        3616
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x37"
    },
    "578": {
      "fn": "Clones.predictDeterministicAddress",
      "offset": [
        3605,
        3609
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xC"
    },
    "580": {
      "fn": "Clones.predictDeterministicAddress",
      "offset": [
        3596,
        3610
      ],
      "op": "DUP3",
      "path": "1"
    },
    "581": {
      "fn": "Clones.predictDeterministicAddress",
      "offset": [
        3596,
        3610
      ],
      "op": "ADD",
      "path": "1"
    },
    "582": {
      "fn": "Clones.predictDeterministicAddress",
      "offset": [
        3586,
        3617
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "583": {
      "fn": "Clones.predictDeterministicAddress",
      "offset": [
        3579,
        3583
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x78"
    },
    "585": {
      "fn": "Clones.predictDeterministicAddress",
      "offset": [
        3570,
        3584
      ],
      "op": "DUP3",
      "path": "1"
    },
    "586": {
      "fn": "Clones.predictDeterministicAddress",
      "offset": [
        3570,
        3584
      ],
      "op": "ADD",
      "path": "1"
    },
    "587": {
      "fn": "Clones.predictDeterministicAddress",
      "offset": [
        3563,
        3618
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "588": {
      "fn": "Clones.predictDeterministicAddress",
      "offset": [
        3670,
        3674
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x55"
    },
    "590": {
      "fn": "Clones.predictDeterministicAddress",
      "offset": [
        3663,
        3667
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x43"
    },
    "592": {
      "fn": "Clones.predictDeterministicAddress",
      "offset": [
        3654,
        3668
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "593": {
      "fn": "Clones.predictDeterministicAddress",
      "offset": [
        3654,
        3668
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "594": {
      "fn": "Clones.predictDeterministicAddress",
      "offset": [
        3654,
        3668
      ],
      "op": "ADD",
      "path": "1"
    },
    "595": {
      "fn": "Clones.predictDeterministicAddress",
      "offset": [
        3644,
        3675
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "596": {
      "fn": "CryptoKeeperFactory.predictCryptoKeeperAddress",
      "offset": [
        1742,
        1749
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "598": {
      "fn": "CryptoKeeperFactory.predictCryptoKeeperAddress",
      "offset": [
        1742,
        1749
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "599": {
      "fn": "CryptoKeeperFactory.predictCryptoKeeperAddress",
      "offset": [
        1784,
        1849
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "600": {
      "fn": "CryptoKeeperFactory.predictCryptoKeeperAddress",
      "offset": [
        1765,
        1849
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "601": {
      "fn": "CryptoKeeperFactory.predictCryptoKeeperAddress",
      "offset": [
        1646,
        1856
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "602": {
      "op": "POP"
    },
    "603": {
      "op": "POP"
    },
    "604": {
      "fn": "CryptoKeeperFactory.predictCryptoKeeperAddress",
      "jump": "o",
      "offset": [
        1646,
        1856
      ],
      "op": "JUMP",
      "path": "16"
    },
    "605": {
      "fn": "CryptoKeeperFactory.setTemplateAddress",
      "offset": [
        797,
        1243
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "606": {
      "offset": [
        1094,
        1107
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x265"
    },
    "609": {
      "offset": [
        1094,
        1105
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x43E"
    },
    "612": {
      "jump": "i",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMP",
      "path": "0"
    },
    "613": {
      "fn": "CryptoKeeperFactory.setTemplateAddress",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "614": {
      "fn": "CryptoKeeperFactory.setTemplateAddress",
      "offset": [
        899,
        1027
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 6,
      "value": "0x276"
    },
    "617": {
      "fn": "CryptoKeeperFactory.setTemplateAddress",
      "offset": [
        948,
        964
      ],
      "op": "DUP2",
      "path": "16"
    },
    "618": {
      "op": "PUSH4",
      "value": "0xCEBE9845"
    },
    "623": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "625": {
      "op": "SHL"
    },
    "626": {
      "fn": "CryptoKeeperFactory.setTemplateAddress",
      "offset": [
        899,
        930
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x4E8"
    },
    "629": {
      "fn": "CryptoKeeperFactory.setTemplateAddress",
      "jump": "i",
      "offset": [
        899,
        1027
      ],
      "op": "JUMP",
      "path": "16"
    },
    "630": {
      "branch": 19,
      "fn": "CryptoKeeperFactory.setTemplateAddress",
      "offset": [
        899,
        1027
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "631": {
      "fn": "CryptoKeeperFactory.setTemplateAddress",
      "offset": [
        878,
        1076
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2C7"
    },
    "634": {
      "branch": 19,
      "fn": "CryptoKeeperFactory.setTemplateAddress",
      "offset": [
        878,
        1076
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "635": {
      "fn": "CryptoKeeperFactory.setTemplateAddress",
      "offset": [
        878,
        1076
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "637": {
      "fn": "CryptoKeeperFactory.setTemplateAddress",
      "offset": [
        878,
        1076
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "638": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "642": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "644": {
      "op": "SHL"
    },
    "645": {
      "fn": "CryptoKeeperFactory.setTemplateAddress",
      "offset": [
        878,
        1076
      ],
      "op": "DUP2",
      "path": "16"
    },
    "646": {
      "fn": "CryptoKeeperFactory.setTemplateAddress",
      "offset": [
        878,
        1076
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "647": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "649": {
      "fn": "CryptoKeeperFactory.setTemplateAddress",
      "offset": [
        878,
        1076
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "651": {
      "fn": "CryptoKeeperFactory.setTemplateAddress",
      "offset": [
        878,
        1076
      ],
      "op": "DUP3",
      "path": "16"
    },
    "652": {
      "fn": "CryptoKeeperFactory.setTemplateAddress",
      "offset": [
        878,
        1076
      ],
      "op": "ADD",
      "path": "16"
    },
    "653": {
      "op": "MSTORE"
    },
    "654": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "656": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "658": {
      "op": "DUP3"
    },
    "659": {
      "op": "ADD"
    },
    "660": {
      "op": "MSTORE"
    },
    "661": {
      "op": "PUSH32",
      "value": "0x496E74657266616365206E6F7420737570706F72746564000000000000000000"
    },
    "694": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "696": {
      "op": "DUP3"
    },
    "697": {
      "op": "ADD"
    },
    "698": {
      "op": "MSTORE"
    },
    "699": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "701": {
      "op": "ADD"
    },
    "702": {
      "fn": "CryptoKeeperFactory.setTemplateAddress",
      "offset": [
        878,
        1076
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "703": {
      "fn": "CryptoKeeperFactory.setTemplateAddress",
      "offset": [
        878,
        1076
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "705": {
      "fn": "CryptoKeeperFactory.setTemplateAddress",
      "offset": [
        878,
        1076
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "706": {
      "fn": "CryptoKeeperFactory.setTemplateAddress",
      "offset": [
        878,
        1076
      ],
      "op": "DUP1",
      "path": "16"
    },
    "707": {
      "fn": "CryptoKeeperFactory.setTemplateAddress",
      "offset": [
        878,
        1076
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "708": {
      "fn": "CryptoKeeperFactory.setTemplateAddress",
      "offset": [
        878,
        1076
      ],
      "op": "SUB",
      "path": "16"
    },
    "709": {
      "fn": "CryptoKeeperFactory.setTemplateAddress",
      "offset": [
        878,
        1076
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "710": {
      "fn": "CryptoKeeperFactory.setTemplateAddress",
      "offset": [
        878,
        1076
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "16"
    },
    "711": {
      "fn": "CryptoKeeperFactory.setTemplateAddress",
      "offset": [
        878,
        1076
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "712": {
      "fn": "CryptoKeeperFactory.setTemplateAddress",
      "offset": [
        1112,
        1127
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "714": {
      "fn": "CryptoKeeperFactory.setTemplateAddress",
      "offset": [
        1112,
        1127
      ],
      "op": "DUP1",
      "path": "16"
    },
    "715": {
      "fn": "CryptoKeeperFactory.setTemplateAddress",
      "offset": [
        1112,
        1127
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "716": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "718": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "720": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "722": {
      "op": "SHL"
    },
    "723": {
      "op": "SUB"
    },
    "724": {
      "fn": "CryptoKeeperFactory.setTemplateAddress",
      "offset": [
        1137,
        1171
      ],
      "op": "DUP4",
      "path": "16",
      "statement": 7
    },
    "725": {
      "fn": "CryptoKeeperFactory.setTemplateAddress",
      "offset": [
        1137,
        1171
      ],
      "op": "DUP2",
      "path": "16"
    },
    "726": {
      "fn": "CryptoKeeperFactory.setTemplateAddress",
      "offset": [
        1137,
        1171
      ],
      "op": "AND",
      "path": "16"
    },
    "727": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "729": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "731": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "733": {
      "op": "SHL"
    },
    "734": {
      "op": "SUB"
    },
    "735": {
      "op": "NOT"
    },
    "736": {
      "fn": "CryptoKeeperFactory.setTemplateAddress",
      "offset": [
        1137,
        1171
      ],
      "op": "DUP4",
      "path": "16"
    },
    "737": {
      "fn": "CryptoKeeperFactory.setTemplateAddress",
      "offset": [
        1137,
        1171
      ],
      "op": "AND",
      "path": "16"
    },
    "738": {
      "fn": "CryptoKeeperFactory.setTemplateAddress",
      "offset": [
        1137,
        1171
      ],
      "op": "DUP2",
      "path": "16"
    },
    "739": {
      "fn": "CryptoKeeperFactory.setTemplateAddress",
      "offset": [
        1137,
        1171
      ],
      "op": "OR",
      "path": "16"
    },
    "740": {
      "fn": "CryptoKeeperFactory.setTemplateAddress",
      "offset": [
        1137,
        1171
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "741": {
      "fn": "CryptoKeeperFactory.setTemplateAddress",
      "offset": [
        1137,
        1171
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "742": {
      "fn": "CryptoKeeperFactory.setTemplateAddress",
      "offset": [
        1137,
        1171
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "743": {
      "fn": "CryptoKeeperFactory.setTemplateAddress",
      "offset": [
        1186,
        1236
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 8,
      "value": "0x40"
    },
    "745": {
      "fn": "CryptoKeeperFactory.setTemplateAddress",
      "offset": [
        1186,
        1236
      ],
      "op": "DUP1",
      "path": "16"
    },
    "746": {
      "fn": "CryptoKeeperFactory.setTemplateAddress",
      "offset": [
        1186,
        1236
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "747": {
      "fn": "CryptoKeeperFactory.setTemplateAddress",
      "offset": [
        1112,
        1127
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "748": {
      "fn": "CryptoKeeperFactory.setTemplateAddress",
      "offset": [
        1112,
        1127
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "749": {
      "fn": "CryptoKeeperFactory.setTemplateAddress",
      "offset": [
        1112,
        1127
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "750": {
      "fn": "CryptoKeeperFactory.setTemplateAddress",
      "offset": [
        1112,
        1127
      ],
      "op": "AND",
      "path": "16"
    },
    "751": {
      "op": "DUP1"
    },
    "752": {
      "op": "DUP3"
    },
    "753": {
      "op": "MSTORE"
    },
    "754": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "756": {
      "op": "DUP3"
    },
    "757": {
      "op": "ADD"
    },
    "758": {
      "op": "SWAP4"
    },
    "759": {
      "op": "SWAP1"
    },
    "760": {
      "op": "SWAP4"
    },
    "761": {
      "op": "MSTORE"
    },
    "762": {
      "fn": "CryptoKeeperFactory.setTemplateAddress",
      "offset": [
        1186,
        1236
      ],
      "op": "PUSH32",
      "path": "16",
      "value": "0x2B12BE9FA6BEDEFF30CB15BA65624AF638A4BA58BF9445D9E29FA9ABEB10C4DA"
    },
    "795": {
      "fn": "CryptoKeeperFactory.setTemplateAddress",
      "offset": [
        1186,
        1236
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "796": {
      "op": "ADD"
    },
    "797": {
      "fn": "CryptoKeeperFactory.setTemplateAddress",
      "offset": [
        1186,
        1236
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "799": {
      "fn": "CryptoKeeperFactory.setTemplateAddress",
      "offset": [
        1186,
        1236
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "800": {
      "fn": "CryptoKeeperFactory.setTemplateAddress",
      "offset": [
        1186,
        1236
      ],
      "op": "DUP1",
      "path": "16"
    },
    "801": {
      "fn": "CryptoKeeperFactory.setTemplateAddress",
      "offset": [
        1186,
        1236
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "802": {
      "fn": "CryptoKeeperFactory.setTemplateAddress",
      "offset": [
        1186,
        1236
      ],
      "op": "SUB",
      "path": "16"
    },
    "803": {
      "fn": "CryptoKeeperFactory.setTemplateAddress",
      "offset": [
        1186,
        1236
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "804": {
      "fn": "CryptoKeeperFactory.setTemplateAddress",
      "offset": [
        1186,
        1236
      ],
      "op": "LOG1",
      "path": "16"
    },
    "805": {
      "fn": "CryptoKeeperFactory.setTemplateAddress",
      "offset": [
        868,
        1243
      ],
      "op": "POP",
      "path": "16"
    },
    "806": {
      "fn": "CryptoKeeperFactory.setTemplateAddress",
      "offset": [
        797,
        1243
      ],
      "op": "POP",
      "path": "16"
    },
    "807": {
      "fn": "CryptoKeeperFactory.setTemplateAddress",
      "jump": "o",
      "offset": [
        797,
        1243
      ],
      "op": "JUMP",
      "path": "16"
    },
    "808": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "809": {
      "offset": [
        1094,
        1107
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x330"
    },
    "812": {
      "offset": [
        1094,
        1105
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x43E"
    },
    "815": {
      "jump": "i",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMP",
      "path": "0"
    },
    "816": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "817": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "819": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "821": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "823": {
      "op": "SHL"
    },
    "824": {
      "op": "SUB"
    },
    "825": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2169,
        2191
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 9
    },
    "826": {
      "branch": 21,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2169,
        2191
      ],
      "op": "AND",
      "path": "0"
    },
    "827": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x395"
    },
    "830": {
      "branch": 21,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "831": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "833": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "834": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "838": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "840": {
      "op": "SHL"
    },
    "841": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "DUP2",
      "path": "0"
    },
    "842": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "843": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "845": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "847": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "DUP3",
      "path": "0"
    },
    "848": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "ADD",
      "path": "0"
    },
    "849": {
      "op": "MSTORE"
    },
    "850": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "852": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "854": {
      "op": "DUP3"
    },
    "855": {
      "op": "ADD"
    },
    "856": {
      "op": "MSTORE"
    },
    "857": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "890": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "892": {
      "op": "DUP3"
    },
    "893": {
      "op": "ADD"
    },
    "894": {
      "op": "MSTORE"
    },
    "895": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "902": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "904": {
      "op": "SHL"
    },
    "905": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "907": {
      "op": "DUP3"
    },
    "908": {
      "op": "ADD"
    },
    "909": {
      "op": "MSTORE"
    },
    "910": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "912": {
      "op": "ADD"
    },
    "913": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2BE"
    },
    "916": {
      "op": "JUMP"
    },
    "917": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "918": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2244,
        2272
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 10,
      "value": "0x39E"
    },
    "921": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2263,
        2271
      ],
      "op": "DUP2",
      "path": "0"
    },
    "922": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2244,
        2262
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x498"
    },
    "925": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2244,
        2272
      ],
      "op": "JUMP",
      "path": "0"
    },
    "926": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2244,
        2272
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "927": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "POP",
      "path": "0"
    },
    "928": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMP",
      "path": "0"
    },
    "929": {
      "fn": "Clones.cloneDeterministic",
      "offset": [
        2107,
        2901
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "930": {
      "fn": "Clones.cloneDeterministic",
      "offset": [
        2191,
        2207
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "932": {
      "fn": "Clones.cloneDeterministic",
      "offset": [
        2523,
        2571
      ],
      "op": "PUSH23",
      "path": "1",
      "value": "0x3D602D80600A3D3981F3363D3D373D3D3D363D73000000"
    },
    "956": {
      "fn": "Clones.cloneDeterministic",
      "offset": [
        2505,
        2519
      ],
      "op": "DUP4",
      "path": "1"
    },
    "957": {
      "fn": "Clones.cloneDeterministic",
      "offset": [
        2499,
        2503
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "959": {
      "fn": "Clones.cloneDeterministic",
      "offset": [
        2495,
        2520
      ],
      "op": "SHL",
      "path": "1"
    },
    "960": {
      "fn": "Clones.cloneDeterministic",
      "offset": [
        2489,
        2493
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE8"
    },
    "962": {
      "fn": "Clones.cloneDeterministic",
      "offset": [
        2485,
        2521
      ],
      "op": "SHR",
      "path": "1"
    },
    "963": {
      "fn": "Clones.cloneDeterministic",
      "offset": [
        2482,
        2572
      ],
      "op": "OR",
      "path": "1"
    },
    "964": {
      "fn": "Clones.cloneDeterministic",
      "offset": [
        2476,
        2480
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "966": {
      "fn": "Clones.cloneDeterministic",
      "offset": [
        2469,
        2573
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "967": {
      "fn": "Clones.cloneDeterministic",
      "offset": [
        2730,
        2762
      ],
      "op": "PUSH15",
      "path": "1",
      "value": "0x5AF43D82803E903D91602B57FD5BF3"
    },
    "983": {
      "fn": "Clones.cloneDeterministic",
      "offset": [
        2713,
        2727
      ],
      "op": "DUP4",
      "path": "1"
    },
    "984": {
      "fn": "Clones.cloneDeterministic",
      "offset": [
        2707,
        2711
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x78"
    },
    "986": {
      "fn": "Clones.cloneDeterministic",
      "offset": [
        2703,
        2728
      ],
      "op": "SHL",
      "path": "1"
    },
    "987": {
      "fn": "Clones.cloneDeterministic",
      "offset": [
        2700,
        2763
      ],
      "op": "OR",
      "path": "1"
    },
    "988": {
      "fn": "Clones.cloneDeterministic",
      "offset": [
        2694,
        2698
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "990": {
      "fn": "Clones.cloneDeterministic",
      "offset": [
        2687,
        2764
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "991": {
      "fn": "Clones.cloneDeterministic",
      "offset": [
        2812,
        2816
      ],
      "op": "DUP2",
      "path": "1"
    },
    "992": {
      "fn": "Clones.cloneDeterministic",
      "offset": [
        2806,
        2810
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x37"
    },
    "994": {
      "fn": "Clones.cloneDeterministic",
      "offset": [
        2800,
        2804
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x9"
    },
    "996": {
      "fn": "Clones.cloneDeterministic",
      "offset": [
        2797,
        2798
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "998": {
      "fn": "Clones.cloneDeterministic",
      "offset": [
        2789,
        2817
      ],
      "op": "CREATE2",
      "path": "1"
    },
    "999": {
      "fn": "Clones.cloneDeterministic",
      "offset": [
        2777,
        2817
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1000": {
      "op": "POP"
    },
    "1001": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1003": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1005": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1007": {
      "op": "SHL"
    },
    "1008": {
      "op": "SUB"
    },
    "1009": {
      "fn": "Clones.cloneDeterministic",
      "offset": [
        2844,
        2866
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 11
    },
    "1010": {
      "branch": 20,
      "fn": "Clones.cloneDeterministic",
      "offset": [
        2844,
        2866
      ],
      "op": "AND",
      "path": "1"
    },
    "1011": {
      "fn": "Clones.cloneDeterministic",
      "offset": [
        2836,
        2894
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x257"
    },
    "1014": {
      "branch": 20,
      "fn": "Clones.cloneDeterministic",
      "offset": [
        2836,
        2894
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1015": {
      "fn": "Clones.cloneDeterministic",
      "offset": [
        2836,
        2894
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1017": {
      "fn": "Clones.cloneDeterministic",
      "offset": [
        2836,
        2894
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1018": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1022": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1024": {
      "op": "SHL"
    },
    "1025": {
      "fn": "Clones.cloneDeterministic",
      "offset": [
        2836,
        2894
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1026": {
      "fn": "Clones.cloneDeterministic",
      "offset": [
        2836,
        2894
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1027": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1029": {
      "fn": "Clones.cloneDeterministic",
      "offset": [
        2836,
        2894
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1031": {
      "fn": "Clones.cloneDeterministic",
      "offset": [
        2836,
        2894
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1032": {
      "fn": "Clones.cloneDeterministic",
      "offset": [
        2836,
        2894
      ],
      "op": "ADD",
      "path": "1"
    },
    "1033": {
      "op": "MSTORE"
    },
    "1034": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "1036": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1038": {
      "op": "DUP3"
    },
    "1039": {
      "op": "ADD"
    },
    "1040": {
      "op": "MSTORE"
    },
    "1041": {
      "op": "PUSH32",
      "value": "0x455243313136373A2063726561746532206661696C6564000000000000000000"
    },
    "1074": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1076": {
      "op": "DUP3"
    },
    "1077": {
      "op": "ADD"
    },
    "1078": {
      "op": "MSTORE"
    },
    "1079": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1081": {
      "op": "ADD"
    },
    "1082": {
      "fn": "Clones.cloneDeterministic",
      "offset": [
        2836,
        2894
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2BE"
    },
    "1085": {
      "op": "JUMP"
    },
    "1086": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1359,
        1489
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1087": {
      "fn": "Ownable.owner",
      "offset": [
        1247,
        1254
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1089": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1090": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1092": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1094": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1096": {
      "op": "SHL"
    },
    "1097": {
      "op": "SUB"
    },
    "1098": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "AND",
      "path": "0"
    },
    "1099": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "12",
      "statement": 12
    },
    "1100": {
      "branch": 22,
      "fn": "Ownable._checkOwner",
      "offset": [
        1422,
        1445
      ],
      "op": "EQ",
      "path": "0",
      "statement": 13
    },
    "1101": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1ED"
    },
    "1104": {
      "branch": 22,
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1105": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1107": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1108": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1112": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1114": {
      "op": "SHL"
    },
    "1115": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1116": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1117": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1119": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1121": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1122": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "ADD",
      "path": "0"
    },
    "1123": {
      "op": "DUP2"
    },
    "1124": {
      "op": "SWAP1"
    },
    "1125": {
      "op": "MSTORE"
    },
    "1126": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1128": {
      "op": "DUP3"
    },
    "1129": {
      "op": "ADD"
    },
    "1130": {
      "op": "MSTORE"
    },
    "1131": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "1164": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1166": {
      "op": "DUP3"
    },
    "1167": {
      "op": "ADD"
    },
    "1168": {
      "op": "MSTORE"
    },
    "1169": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1171": {
      "op": "ADD"
    },
    "1172": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2BE"
    },
    "1175": {
      "op": "JUMP"
    },
    "1176": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2433,
        2620
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1177": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2506,
        2522
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1179": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1180": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1181": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1183": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1185": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1187": {
      "op": "SHL"
    },
    "1188": {
      "op": "SUB"
    },
    "1189": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 14
    },
    "1190": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1191": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "AND",
      "path": "0"
    },
    "1192": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1194": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1196": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1198": {
      "op": "SHL"
    },
    "1199": {
      "op": "SUB"
    },
    "1200": {
      "op": "NOT"
    },
    "1201": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1202": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "AND",
      "path": "0"
    },
    "1203": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1204": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "OR",
      "path": "0"
    },
    "1205": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1206": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1207": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2573,
        2613
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 15,
      "value": "0x40"
    },
    "1209": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2573,
        2613
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1210": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1211": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1212": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1213": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "AND",
      "path": "0"
    },
    "1214": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1215": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1216": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1217": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2573,
        2613
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "1250": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2573,
        2613
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1251": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2506,
        2522
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1252": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2573,
        2613
      ],
      "op": "LOG3",
      "path": "0"
    },
    "1253": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2496,
        2620
      ],
      "op": "POP",
      "path": "0"
    },
    "1254": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2433,
        2620
      ],
      "op": "POP",
      "path": "0"
    },
    "1255": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        2433,
        2620
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1256": {
      "fn": "ERC165Checker.supportsInterface",
      "offset": [
        1349,
        1631
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1257": {
      "fn": "ERC165Checker.supportsInterface",
      "offset": [
        1436,
        1440
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1259": {
      "fn": "ERC165Checker.supportsInterface",
      "offset": [
        1543,
        1566
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 16,
      "value": "0x4F3"
    },
    "1262": {
      "fn": "ERC165Checker.supportsInterface",
      "offset": [
        1558,
        1565
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1263": {
      "fn": "ERC165Checker.supportsInterface",
      "offset": [
        1543,
        1557
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x50B"
    },
    "1266": {
      "fn": "ERC165Checker.supportsInterface",
      "jump": "i",
      "offset": [
        1543,
        1566
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1267": {
      "fn": "ERC165Checker.supportsInterface",
      "offset": [
        1543,
        1566
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1268": {
      "fn": "ERC165Checker.supportsInterface",
      "offset": [
        1543,
        1624
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1269": {
      "fn": "ERC165Checker.supportsInterface",
      "offset": [
        1543,
        1624
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1270": {
      "fn": "ERC165Checker.supportsInterface",
      "offset": [
        1543,
        1624
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x504"
    },
    "1273": {
      "fn": "ERC165Checker.supportsInterface",
      "offset": [
        1543,
        1624
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1274": {
      "fn": "ERC165Checker.supportsInterface",
      "offset": [
        1543,
        1624
      ],
      "op": "POP",
      "path": "14"
    },
    "1275": {
      "fn": "ERC165Checker.supportsInterface",
      "offset": [
        1570,
        1624
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x504"
    },
    "1278": {
      "fn": "ERC165Checker.supportsInterface",
      "offset": [
        1603,
        1610
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1279": {
      "fn": "ERC165Checker.supportsInterface",
      "offset": [
        1612,
        1623
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1280": {
      "fn": "ERC165Checker.supportsInterface",
      "offset": [
        1570,
        1602
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x53E"
    },
    "1283": {
      "fn": "ERC165Checker.supportsInterface",
      "jump": "i",
      "offset": [
        1570,
        1624
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1284": {
      "fn": "ERC165Checker.supportsInterface",
      "offset": [
        1570,
        1624
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1285": {
      "fn": "ERC165Checker.supportsInterface",
      "offset": [
        1536,
        1624
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "1286": {
      "fn": "ERC165Checker.supportsInterface",
      "offset": [
        1349,
        1631
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "1287": {
      "op": "POP"
    },
    "1288": {
      "op": "POP"
    },
    "1289": {
      "op": "POP"
    },
    "1290": {
      "fn": "ERC165Checker.supportsInterface",
      "jump": "o",
      "offset": [
        1349,
        1631
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1291": {
      "fn": "ERC165Checker.supportsERC165",
      "offset": [
        704,
        1131
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1292": {
      "fn": "ERC165Checker.supportsERC165",
      "offset": [
        768,
        772
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1294": {
      "fn": "ERC165Checker.supportsERC165",
      "offset": [
        975,
        1043
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 17,
      "value": "0x51E"
    },
    "1297": {
      "fn": "ERC165Checker.supportsERC165",
      "offset": [
        1008,
        1015
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1298": {
      "op": "PUSH4",
      "value": "0x1FFC9A7"
    },
    "1303": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1305": {
      "op": "SHL"
    },
    "1306": {
      "fn": "ERC165Checker.supportsERC165",
      "offset": [
        975,
        1007
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x53E"
    },
    "1309": {
      "fn": "ERC165Checker.supportsERC165",
      "jump": "i",
      "offset": [
        975,
        1043
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1310": {
      "fn": "ERC165Checker.supportsERC165",
      "offset": [
        975,
        1043
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1311": {
      "fn": "ERC165Checker.supportsERC165",
      "offset": [
        975,
        1124
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1312": {
      "fn": "ERC165Checker.supportsERC165",
      "offset": [
        975,
        1124
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1313": {
      "fn": "ERC165Checker.supportsERC165",
      "offset": [
        975,
        1124
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x257"
    },
    "1316": {
      "fn": "ERC165Checker.supportsERC165",
      "offset": [
        975,
        1124
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1317": {
      "op": "POP"
    },
    "1318": {
      "fn": "ERC165Checker.supportsERC165",
      "offset": [
        1060,
        1124
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x537"
    },
    "1321": {
      "fn": "ERC165Checker.supportsERC165",
      "offset": [
        1093,
        1100
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1322": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1324": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1326": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1328": {
      "op": "SHL"
    },
    "1329": {
      "op": "SUB"
    },
    "1330": {
      "op": "NOT"
    },
    "1331": {
      "fn": "ERC165Checker.supportsERC165",
      "offset": [
        1060,
        1092
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x53E"
    },
    "1334": {
      "fn": "ERC165Checker.supportsERC165",
      "jump": "i",
      "offset": [
        1060,
        1124
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1335": {
      "fn": "ERC165Checker.supportsERC165",
      "offset": [
        1060,
        1124
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1336": {
      "fn": "ERC165Checker.supportsERC165",
      "offset": [
        1059,
        1124
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1337": {
      "fn": "ERC165Checker.supportsERC165",
      "offset": [
        956,
        1124
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "1338": {
      "fn": "ERC165Checker.supportsERC165",
      "offset": [
        704,
        1131
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1339": {
      "op": "POP"
    },
    "1340": {
      "op": "POP"
    },
    "1341": {
      "fn": "ERC165Checker.supportsERC165",
      "jump": "o",
      "offset": [
        704,
        1131
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1342": {
      "fn": "ERC165Checker.supportsERC165InterfaceUnchecked",
      "offset": [
        4262,
        4909
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1343": {
      "fn": "ERC165Checker.supportsERC165InterfaceUnchecked",
      "offset": [
        4433,
        4504
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1345": {
      "fn": "ERC165Checker.supportsERC165InterfaceUnchecked",
      "offset": [
        4433,
        4504
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1346": {
      "fn": "ERC165Checker.supportsERC165InterfaceUnchecked",
      "offset": [
        4433,
        4504
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1347": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1349": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1351": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1353": {
      "op": "SHL"
    },
    "1354": {
      "op": "SUB"
    },
    "1355": {
      "op": "NOT"
    },
    "1356": {
      "op": "DUP4"
    },
    "1357": {
      "op": "AND"
    },
    "1358": {
      "fn": "ERC165Checker.supportsERC165InterfaceUnchecked",
      "offset": [
        4433,
        4504
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "1360": {
      "fn": "ERC165Checker.supportsERC165InterfaceUnchecked",
      "offset": [
        4433,
        4504
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1361": {
      "fn": "ERC165Checker.supportsERC165InterfaceUnchecked",
      "offset": [
        4433,
        4504
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1362": {
      "fn": "ERC165Checker.supportsERC165InterfaceUnchecked",
      "offset": [
        4433,
        4504
      ],
      "op": "ADD",
      "path": "14"
    },
    "1363": {
      "op": "SWAP2"
    },
    "1364": {
      "op": "SWAP1"
    },
    "1365": {
      "op": "SWAP2"
    },
    "1366": {
      "op": "MSTORE"
    },
    "1367": {
      "fn": "ERC165Checker.supportsERC165InterfaceUnchecked",
      "offset": [
        4433,
        4504
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1368": {
      "fn": "ERC165Checker.supportsERC165InterfaceUnchecked",
      "offset": [
        4433,
        4504
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1369": {
      "fn": "ERC165Checker.supportsERC165InterfaceUnchecked",
      "offset": [
        4433,
        4504
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1370": {
      "fn": "ERC165Checker.supportsERC165InterfaceUnchecked",
      "offset": [
        4433,
        4504
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1371": {
      "fn": "ERC165Checker.supportsERC165InterfaceUnchecked",
      "offset": [
        4433,
        4504
      ],
      "op": "SUB",
      "path": "14"
    },
    "1372": {
      "fn": "ERC165Checker.supportsERC165InterfaceUnchecked",
      "offset": [
        4433,
        4504
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1373": {
      "fn": "ERC165Checker.supportsERC165InterfaceUnchecked",
      "offset": [
        4433,
        4504
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1374": {
      "fn": "ERC165Checker.supportsERC165InterfaceUnchecked",
      "offset": [
        4433,
        4504
      ],
      "op": "ADD",
      "path": "14"
    },
    "1375": {
      "fn": "ERC165Checker.supportsERC165InterfaceUnchecked",
      "offset": [
        4433,
        4504
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1376": {
      "fn": "ERC165Checker.supportsERC165InterfaceUnchecked",
      "offset": [
        4433,
        4504
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1377": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1379": {
      "op": "SWAP1"
    },
    "1380": {
      "op": "SWAP2"
    },
    "1381": {
      "op": "ADD"
    },
    "1382": {
      "fn": "ERC165Checker.supportsERC165InterfaceUnchecked",
      "offset": [
        4433,
        4504
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1383": {
      "fn": "ERC165Checker.supportsERC165InterfaceUnchecked",
      "offset": [
        4433,
        4504
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1384": {
      "fn": "ERC165Checker.supportsERC165InterfaceUnchecked",
      "offset": [
        4433,
        4504
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1385": {
      "fn": "ERC165Checker.supportsERC165InterfaceUnchecked",
      "offset": [
        4433,
        4504
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1387": {
      "fn": "ERC165Checker.supportsERC165InterfaceUnchecked",
      "offset": [
        4433,
        4504
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1388": {
      "fn": "ERC165Checker.supportsERC165InterfaceUnchecked",
      "offset": [
        4433,
        4504
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1389": {
      "fn": "ERC165Checker.supportsERC165InterfaceUnchecked",
      "offset": [
        4433,
        4504
      ],
      "op": "ADD",
      "path": "14"
    },
    "1390": {
      "fn": "ERC165Checker.supportsERC165InterfaceUnchecked",
      "offset": [
        4433,
        4504
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1391": {
      "fn": "ERC165Checker.supportsERC165InterfaceUnchecked",
      "offset": [
        4433,
        4504
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1392": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1394": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1396": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1398": {
      "op": "SHL"
    },
    "1399": {
      "op": "SUB"
    },
    "1400": {
      "fn": "ERC165Checker.supportsERC165InterfaceUnchecked",
      "offset": [
        4433,
        4504
      ],
      "op": "AND",
      "path": "14"
    },
    "1401": {
      "op": "PUSH4",
      "value": "0x1FFC9A7"
    },
    "1406": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1408": {
      "op": "SHL"
    },
    "1409": {
      "fn": "ERC165Checker.supportsERC165InterfaceUnchecked",
      "offset": [
        4433,
        4504
      ],
      "op": "OR",
      "path": "14"
    },
    "1410": {
      "fn": "ERC165Checker.supportsERC165InterfaceUnchecked",
      "offset": [
        4433,
        4504
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1411": {
      "fn": "ERC165Checker.supportsERC165InterfaceUnchecked",
      "offset": [
        4433,
        4504
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1412": {
      "fn": "ERC165Checker.supportsERC165InterfaceUnchecked",
      "offset": [
        4712,
        4732
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1413": {
      "fn": "ERC165Checker.supportsERC165InterfaceUnchecked",
      "offset": [
        4712,
        4732
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1414": {
      "fn": "ERC165Checker.supportsERC165InterfaceUnchecked",
      "offset": [
        4364,
        4368
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1416": {
      "fn": "ERC165Checker.supportsERC165InterfaceUnchecked",
      "offset": [
        4364,
        4368
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "1417": {
      "fn": "ERC165Checker.supportsERC165InterfaceUnchecked",
      "offset": [
        4433,
        4504
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "1418": {
      "fn": "ERC165Checker.supportsERC165InterfaceUnchecked",
      "offset": [
        4364,
        4368
      ],
      "op": "DUP5",
      "path": "14"
    },
    "1419": {
      "fn": "ERC165Checker.supportsERC165InterfaceUnchecked",
      "offset": [
        4364,
        4368
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "1420": {
      "fn": "ERC165Checker.supportsERC165InterfaceUnchecked",
      "offset": [
        4364,
        4368
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1421": {
      "fn": "ERC165Checker.supportsERC165InterfaceUnchecked",
      "offset": [
        4364,
        4368
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "1422": {
      "fn": "ERC165Checker.supportsERC165InterfaceUnchecked",
      "offset": [
        4364,
        4368
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1423": {
      "fn": "ERC165Checker.supportsERC165InterfaceUnchecked",
      "offset": [
        4364,
        4368
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "1424": {
      "fn": "ERC165Checker.supportsERC165InterfaceUnchecked",
      "offset": [
        4433,
        4504
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1425": {
      "fn": "ERC165Checker.supportsERC165InterfaceUnchecked",
      "offset": [
        4364,
        4368
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1426": {
      "fn": "ERC165Checker.supportsERC165InterfaceUnchecked",
      "offset": [
        4364,
        4368
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1427": {
      "fn": "ERC165Checker.supportsERC165InterfaceUnchecked",
      "offset": [
        4712,
        4732
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1428": {
      "fn": "ERC165Checker.supportsERC165InterfaceUnchecked",
      "offset": [
        4677,
        4684
      ],
      "op": "DUP11",
      "path": "14"
    },
    "1429": {
      "fn": "ERC165Checker.supportsERC165InterfaceUnchecked",
      "offset": [
        4670,
        4675
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x7530"
    },
    "1432": {
      "fn": "ERC165Checker.supportsERC165InterfaceUnchecked",
      "offset": [
        4659,
        4745
      ],
      "op": "STATICCALL",
      "path": "14"
    },
    "1433": {
      "fn": "ERC165Checker.supportsERC165InterfaceUnchecked",
      "offset": [
        4648,
        4745
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "1434": {
      "fn": "ERC165Checker.supportsERC165InterfaceUnchecked",
      "offset": [
        4648,
        4745
      ],
      "op": "POP",
      "path": "14"
    },
    "1435": {
      "fn": "ERC165Checker.supportsERC165InterfaceUnchecked",
      "offset": [
        4772,
        4788
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "1436": {
      "fn": "ERC165Checker.supportsERC165InterfaceUnchecked",
      "offset": [
        4758,
        4788
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1437": {
      "fn": "ERC165Checker.supportsERC165InterfaceUnchecked",
      "offset": [
        4758,
        4788
      ],
      "op": "POP",
      "path": "14"
    },
    "1438": {
      "fn": "ERC165Checker.supportsERC165InterfaceUnchecked",
      "offset": [
        4822,
        4826
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1440": {
      "fn": "ERC165Checker.supportsERC165InterfaceUnchecked",
      "offset": [
        4816,
        4827
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1441": {
      "fn": "ERC165Checker.supportsERC165InterfaceUnchecked",
      "offset": [
        4801,
        4827
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1442": {
      "fn": "ERC165Checker.supportsERC165InterfaceUnchecked",
      "offset": [
        4801,
        4827
      ],
      "op": "POP",
      "path": "14"
    },
    "1443": {
      "fn": "ERC165Checker.supportsERC165InterfaceUnchecked",
      "offset": [
        4854,
        4861
      ],
      "op": "DUP3",
      "path": "14",
      "statement": 18
    },
    "1444": {
      "fn": "ERC165Checker.supportsERC165InterfaceUnchecked",
      "offset": [
        4854,
        4883
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1445": {
      "fn": "ERC165Checker.supportsERC165InterfaceUnchecked",
      "offset": [
        4854,
        4883
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1446": {
      "fn": "ERC165Checker.supportsERC165InterfaceUnchecked",
      "offset": [
        4854,
        4883
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x5B0"
    },
    "1449": {
      "fn": "ERC165Checker.supportsERC165InterfaceUnchecked",
      "offset": [
        4854,
        4883
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1450": {
      "fn": "ERC165Checker.supportsERC165InterfaceUnchecked",
      "offset": [
        4854,
        4883
      ],
      "op": "POP",
      "path": "14"
    },
    "1451": {
      "fn": "ERC165Checker.supportsERC165InterfaceUnchecked",
      "offset": [
        4879,
        4883
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1453": {
      "fn": "ERC165Checker.supportsERC165InterfaceUnchecked",
      "offset": [
        4865,
        4875
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1454": {
      "fn": "ERC165Checker.supportsERC165InterfaceUnchecked",
      "offset": [
        4865,
        4883
      ],
      "op": "LT",
      "path": "14"
    },
    "1455": {
      "fn": "ERC165Checker.supportsERC165InterfaceUnchecked",
      "offset": [
        4865,
        4883
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1456": {
      "fn": "ERC165Checker.supportsERC165InterfaceUnchecked",
      "offset": [
        4854,
        4883
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1457": {
      "fn": "ERC165Checker.supportsERC165InterfaceUnchecked",
      "offset": [
        4854,
        4902
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1458": {
      "fn": "ERC165Checker.supportsERC165InterfaceUnchecked",
      "offset": [
        4854,
        4902
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1459": {
      "fn": "ERC165Checker.supportsERC165InterfaceUnchecked",
      "offset": [
        4854,
        4902
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x5BC"
    },
    "1462": {
      "fn": "ERC165Checker.supportsERC165InterfaceUnchecked",
      "offset": [
        4854,
        4902
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1463": {
      "fn": "ERC165Checker.supportsERC165InterfaceUnchecked",
      "offset": [
        4854,
        4902
      ],
      "op": "POP",
      "path": "14"
    },
    "1464": {
      "fn": "ERC165Checker.supportsERC165InterfaceUnchecked",
      "offset": [
        4901,
        4902
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1466": {
      "fn": "ERC165Checker.supportsERC165InterfaceUnchecked",
      "offset": [
        4887,
        4898
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1467": {
      "fn": "ERC165Checker.supportsERC165InterfaceUnchecked",
      "offset": [
        4887,
        4902
      ],
      "op": "GT",
      "path": "14"
    },
    "1468": {
      "fn": "ERC165Checker.supportsERC165InterfaceUnchecked",
      "offset": [
        4854,
        4902
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1469": {
      "fn": "ERC165Checker.supportsERC165InterfaceUnchecked",
      "offset": [
        4847,
        4902
      ],
      "op": "SWAP8",
      "path": "14"
    },
    "1470": {
      "fn": "ERC165Checker.supportsERC165InterfaceUnchecked",
      "offset": [
        4262,
        4909
      ],
      "op": "SWAP7",
      "path": "14"
    },
    "1471": {
      "op": "POP"
    },
    "1472": {
      "op": "POP"
    },
    "1473": {
      "op": "POP"
    },
    "1474": {
      "op": "POP"
    },
    "1475": {
      "op": "POP"
    },
    "1476": {
      "op": "POP"
    },
    "1477": {
      "op": "POP"
    },
    "1478": {
      "fn": "ERC165Checker.supportsERC165InterfaceUnchecked",
      "jump": "o",
      "offset": [
        4262,
        4909
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1479": {
      "op": "JUMPDEST"
    },
    "1480": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1482": {
      "op": "DUP1"
    },
    "1483": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1485": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1487": {
      "op": "DUP5"
    },
    "1488": {
      "op": "DUP7"
    },
    "1489": {
      "op": "SUB"
    },
    "1490": {
      "op": "SLT"
    },
    "1491": {
      "op": "ISZERO"
    },
    "1492": {
      "op": "PUSH2",
      "value": "0x5DC"
    },
    "1495": {
      "op": "JUMPI"
    },
    "1496": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1498": {
      "op": "DUP1"
    },
    "1499": {
      "op": "REVERT"
    },
    "1500": {
      "op": "JUMPDEST"
    },
    "1501": {
      "op": "DUP4"
    },
    "1502": {
      "op": "CALLDATALOAD"
    },
    "1503": {
      "op": "SWAP3"
    },
    "1504": {
      "op": "POP"
    },
    "1505": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1507": {
      "op": "DUP5"
    },
    "1508": {
      "op": "ADD"
    },
    "1509": {
      "op": "CALLDATALOAD"
    },
    "1510": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1519": {
      "op": "DUP1"
    },
    "1520": {
      "op": "DUP3"
    },
    "1521": {
      "op": "GT"
    },
    "1522": {
      "op": "ISZERO"
    },
    "1523": {
      "op": "PUSH2",
      "value": "0x5FB"
    },
    "1526": {
      "op": "JUMPI"
    },
    "1527": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1529": {
      "op": "DUP1"
    },
    "1530": {
      "op": "REVERT"
    },
    "1531": {
      "op": "JUMPDEST"
    },
    "1532": {
      "op": "DUP2"
    },
    "1533": {
      "op": "DUP7"
    },
    "1534": {
      "op": "ADD"
    },
    "1535": {
      "op": "SWAP2"
    },
    "1536": {
      "op": "POP"
    },
    "1537": {
      "op": "DUP7"
    },
    "1538": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1540": {
      "op": "DUP4"
    },
    "1541": {
      "op": "ADD"
    },
    "1542": {
      "op": "SLT"
    },
    "1543": {
      "op": "PUSH2",
      "value": "0x60F"
    },
    "1546": {
      "op": "JUMPI"
    },
    "1547": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1549": {
      "op": "DUP1"
    },
    "1550": {
      "op": "REVERT"
    },
    "1551": {
      "op": "JUMPDEST"
    },
    "1552": {
      "op": "DUP2"
    },
    "1553": {
      "op": "CALLDATALOAD"
    },
    "1554": {
      "op": "DUP2"
    },
    "1555": {
      "op": "DUP2"
    },
    "1556": {
      "op": "GT"
    },
    "1557": {
      "op": "ISZERO"
    },
    "1558": {
      "op": "PUSH2",
      "value": "0x61E"
    },
    "1561": {
      "op": "JUMPI"
    },
    "1562": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1564": {
      "op": "DUP1"
    },
    "1565": {
      "op": "REVERT"
    },
    "1566": {
      "op": "JUMPDEST"
    },
    "1567": {
      "op": "DUP8"
    },
    "1568": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1570": {
      "op": "DUP3"
    },
    "1571": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "1573": {
      "op": "SHL"
    },
    "1574": {
      "op": "DUP6"
    },
    "1575": {
      "op": "ADD"
    },
    "1576": {
      "op": "ADD"
    },
    "1577": {
      "op": "GT"
    },
    "1578": {
      "op": "ISZERO"
    },
    "1579": {
      "op": "PUSH2",
      "value": "0x633"
    },
    "1582": {
      "op": "JUMPI"
    },
    "1583": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1585": {
      "op": "DUP1"
    },
    "1586": {
      "op": "REVERT"
    },
    "1587": {
      "op": "JUMPDEST"
    },
    "1588": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1590": {
      "op": "DUP4"
    },
    "1591": {
      "op": "ADD"
    },
    "1592": {
      "op": "SWAP5"
    },
    "1593": {
      "op": "POP"
    },
    "1594": {
      "op": "DUP1"
    },
    "1595": {
      "op": "SWAP4"
    },
    "1596": {
      "op": "POP"
    },
    "1597": {
      "op": "POP"
    },
    "1598": {
      "op": "POP"
    },
    "1599": {
      "op": "POP"
    },
    "1600": {
      "op": "SWAP3"
    },
    "1601": {
      "op": "POP"
    },
    "1602": {
      "op": "SWAP3"
    },
    "1603": {
      "op": "POP"
    },
    "1604": {
      "op": "SWAP3"
    },
    "1605": {
      "jump": "o",
      "op": "JUMP"
    },
    "1606": {
      "op": "JUMPDEST"
    },
    "1607": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1609": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1611": {
      "op": "DUP3"
    },
    "1612": {
      "op": "DUP5"
    },
    "1613": {
      "op": "SUB"
    },
    "1614": {
      "op": "SLT"
    },
    "1615": {
      "op": "ISZERO"
    },
    "1616": {
      "op": "PUSH2",
      "value": "0x658"
    },
    "1619": {
      "op": "JUMPI"
    },
    "1620": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1622": {
      "op": "DUP1"
    },
    "1623": {
      "op": "REVERT"
    },
    "1624": {
      "op": "JUMPDEST"
    },
    "1625": {
      "op": "POP"
    },
    "1626": {
      "op": "CALLDATALOAD"
    },
    "1627": {
      "op": "SWAP2"
    },
    "1628": {
      "op": "SWAP1"
    },
    "1629": {
      "op": "POP"
    },
    "1630": {
      "jump": "o",
      "op": "JUMP"
    },
    "1631": {
      "op": "JUMPDEST"
    },
    "1632": {
      "op": "DUP1"
    },
    "1633": {
      "op": "CALLDATALOAD"
    },
    "1634": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1636": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1638": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1640": {
      "op": "SHL"
    },
    "1641": {
      "op": "SUB"
    },
    "1642": {
      "op": "DUP2"
    },
    "1643": {
      "op": "AND"
    },
    "1644": {
      "op": "DUP2"
    },
    "1645": {
      "op": "EQ"
    },
    "1646": {
      "op": "PUSH2",
      "value": "0x676"
    },
    "1649": {
      "op": "JUMPI"
    },
    "1650": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1652": {
      "op": "DUP1"
    },
    "1653": {
      "op": "REVERT"
    },
    "1654": {
      "op": "JUMPDEST"
    },
    "1655": {
      "op": "SWAP2"
    },
    "1656": {
      "op": "SWAP1"
    },
    "1657": {
      "op": "POP"
    },
    "1658": {
      "jump": "o",
      "op": "JUMP"
    },
    "1659": {
      "op": "JUMPDEST"
    },
    "1660": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1662": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1664": {
      "op": "DUP3"
    },
    "1665": {
      "op": "DUP5"
    },
    "1666": {
      "op": "SUB"
    },
    "1667": {
      "op": "SLT"
    },
    "1668": {
      "op": "ISZERO"
    },
    "1669": {
      "op": "PUSH2",
      "value": "0x68D"
    },
    "1672": {
      "op": "JUMPI"
    },
    "1673": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1675": {
      "op": "DUP1"
    },
    "1676": {
      "op": "REVERT"
    },
    "1677": {
      "op": "JUMPDEST"
    },
    "1678": {
      "op": "PUSH2",
      "value": "0x504"
    },
    "1681": {
      "op": "DUP3"
    },
    "1682": {
      "op": "PUSH2",
      "value": "0x65F"
    },
    "1685": {
      "jump": "i",
      "op": "JUMP"
    },
    "1686": {
      "op": "JUMPDEST"
    },
    "1687": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1689": {
      "op": "DUP1"
    },
    "1690": {
      "op": "DUP3"
    },
    "1691": {
      "op": "MSTORE"
    },
    "1692": {
      "op": "DUP2"
    },
    "1693": {
      "op": "DUP2"
    },
    "1694": {
      "op": "ADD"
    },
    "1695": {
      "op": "DUP4"
    },
    "1696": {
      "op": "SWAP1"
    },
    "1697": {
      "op": "MSTORE"
    },
    "1698": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1700": {
      "op": "SWAP1"
    },
    "1701": {
      "op": "DUP5"
    },
    "1702": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1704": {
      "op": "DUP5"
    },
    "1705": {
      "op": "ADD"
    },
    "1706": {
      "op": "DUP4"
    },
    "1707": {
      "op": "JUMPDEST"
    },
    "1708": {
      "op": "DUP7"
    },
    "1709": {
      "op": "DUP2"
    },
    "1710": {
      "op": "LT"
    },
    "1711": {
      "op": "ISZERO"
    },
    "1712": {
      "op": "PUSH2",
      "value": "0x6D7"
    },
    "1715": {
      "op": "JUMPI"
    },
    "1716": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1718": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1720": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1722": {
      "op": "SHL"
    },
    "1723": {
      "op": "SUB"
    },
    "1724": {
      "op": "PUSH2",
      "value": "0x6C4"
    },
    "1727": {
      "op": "DUP5"
    },
    "1728": {
      "op": "PUSH2",
      "value": "0x65F"
    },
    "1731": {
      "jump": "i",
      "op": "JUMP"
    },
    "1732": {
      "op": "JUMPDEST"
    },
    "1733": {
      "op": "AND"
    },
    "1734": {
      "op": "DUP3"
    },
    "1735": {
      "op": "MSTORE"
    },
    "1736": {
      "op": "SWAP2"
    },
    "1737": {
      "op": "DUP4"
    },
    "1738": {
      "op": "ADD"
    },
    "1739": {
      "op": "SWAP2"
    },
    "1740": {
      "op": "SWAP1"
    },
    "1741": {
      "op": "DUP4"
    },
    "1742": {
      "op": "ADD"
    },
    "1743": {
      "op": "SWAP1"
    },
    "1744": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1746": {
      "op": "ADD"
    },
    "1747": {
      "op": "PUSH2",
      "value": "0x6AB"
    },
    "1750": {
      "op": "JUMP"
    },
    "1751": {
      "op": "JUMPDEST"
    },
    "1752": {
      "op": "POP"
    },
    "1753": {
      "op": "SWAP7"
    },
    "1754": {
      "op": "SWAP6"
    },
    "1755": {
      "op": "POP"
    },
    "1756": {
      "op": "POP"
    },
    "1757": {
      "op": "POP"
    },
    "1758": {
      "op": "POP"
    },
    "1759": {
      "op": "POP"
    },
    "1760": {
      "op": "POP"
    },
    "1761": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "bfd1e76560b4d5b0d34ed722e4d8b1fecf7bdfce",
  "source": "// SCH Course Copyright Policy (C): DO-NOT-SHARE-WITH-ANYONE\n// https://smartcontractshacking.com/#copyright-policy\npragma solidity ^0.8.13;\n\nimport \"@openzeppelin/contracts/proxy/Clones.sol\";\nimport \"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"./ICryptoKeeper.sol\";\n\ncontract CryptoKeeperFactory is Ownable\n{\n    using Clones for address;\n\n    event CryptoKeeperCreated(address _cryptoKeeperAddress);\n    event TemplateChanged(address _previousAddress, address _newAddress);\n\n    address public templateAddress;\n\n    constructor(address _owner, address _templateAddress) {\n        require(_templateAddress != address(0));\n        setTemplateAddress(_templateAddress);\n        _transferOwnership(_owner);\n    }\n\n    function setTemplateAddress(address _templateAddress) public onlyOwner {\n        require(\n            ERC165Checker.supportsInterface(\n                _templateAddress,\n                type(ICryptoKeeper).interfaceId\n            ),\n            \"Interface not supported\"\n        );\n        address previousAddress = templateAddress;\n        templateAddress = _templateAddress;\n        emit TemplateChanged(previousAddress, _templateAddress);\n    }\n\n    function createCryptoKeeper(\n        bytes32 _salt,\n        address[] calldata _operators\n    )\n        external\n        returns (address)\n    {\n        address cryptoKeeperAddress = templateAddress.cloneDeterministic(_salt);\n\n        ICryptoKeeper(cryptoKeeperAddress).initialize(_operators);\n\n        emit CryptoKeeperCreated(cryptoKeeperAddress);\n        return cryptoKeeperAddress;\n    }\n\n    function predictCryptoKeeperAddress(bytes32 _salt)\n        public\n        view\n        returns (address)\n    {\n        return\n            templateAddress.predictDeterministicAddress(_salt, address(this));\n    }\n}",
  "sourceMap": "349:1509:16:-:0;;;599:192;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:0;719:10:12;936:18:0;:32::i;:::-;-1:-1:-1;;;;;671:30:16;;663:39;;;;;;712:36;731:16;712:18;:36::i;:::-;758:26;777:6;758:18;:26::i;:::-;599:192;;349:1509;;2433:187:0;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;797:446:16:-;1094:13:0;:11;:13::i;:::-;899:128:16::1;948:16:::0;-1:-1:-1;;;899:31:16::1;:128::i;:::-;878:198;;;::::0;-1:-1:-1;;;878:198:16;;696:2:31;878:198:16::1;::::0;::::1;678:21:31::0;735:2;715:18;;;708:30;774:25;754:18;;;747:53;817:18;;878:198:16::1;;;;;;;;;1112:15;::::0;;-1:-1:-1;;;;;1137:34:16;;::::1;-1:-1:-1::0;;;;;;1137:34:16;::::1;::::0;::::1;::::0;;;1186:50:::1;::::0;;1112:15;;;::::1;1058:34:31::0;;;1123:2;1108:18;;1101:43;;;;1186:50:16::1;::::0;993:18:31;1186:50:16::1;;;;;;;868:375;797:446:::0;:::o;1359:130:0:-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;719:10:12;1422:23:0;1414:68;;;;-1:-1:-1;;;1414:68:0;;1357:2:31;1414:68:0;;;1339:21:31;;;1376:18;;;1369:30;1435:34;1415:18;;;1408:62;1487:18;;1414:68:0;1155:356:31;1414:68:0;1359:130::o;1349:282:14:-;1436:4;1543:23;1558:7;1543:14;:23::i;:::-;:81;;;;-1:-1:-1;1570:54:14;1603:7;1612:11;1570:32;:54::i;:::-;1536:88;1349:282;-1:-1:-1;;;1349:282:14:o;704:427::-;768:4;975:68;1008:7;-1:-1:-1;;;975:32:14;:68::i;:::-;:149;;;;-1:-1:-1;1060:64:14;1093:7;-1:-1:-1;;;;;;1060:32:14;:64::i;:::-;1059:65;975:149;956:168;704:427;-1:-1:-1;;704:427:14:o;4262:647::-;4433:71;;;-1:-1:-1;;;;;;1678:33:31;;4433:71:14;;;;1660:52:31;;;;4433:71:14;;;;;;;;;;1633:18:31;;;;4433:71:14;;;;;;;;;-1:-1:-1;;;;;4433:71:14;-1:-1:-1;;;4433:71:14;;;4712:20;;4364:4;;4433:71;4364:4;;;;;;4433:71;4364:4;;4712:20;4677:7;4670:5;4659:86;4648:97;;4772:16;4758:30;;4822:4;4816:11;4801:26;;4854:7;:29;;;;;4879:4;4865:10;:18;;4854:29;:48;;;;;4901:1;4887:11;:15;4854:48;4847:55;4262:647;-1:-1:-1;;;;;;;4262:647:14:o;14:177:31:-;93:13;;-1:-1:-1;;;;;135:31:31;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;196:293;;;;;:::o;1516:202::-;349:1509:16;;;;;;",
  "sourcePath": "contracts/call-attacks-3/CryptoFactory.sol",
  "type": "contract"
}