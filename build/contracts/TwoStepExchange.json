{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "EmptyOrder",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidBlockNumber",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OnlyKeeper",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "revertMessage",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "revertData",
          "type": "bytes"
        }
      ],
      "name": "CallbackFailed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "message",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "ParsedMessage",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "RevertMessageUnparsable",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "SwapOrderExecuted",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_route",
          "type": "address[]"
        },
        {
          "internalType": "uint256",
          "name": "_amountIn",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_callbackContract",
          "type": "address"
        }
      ],
      "name": "createSwapOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "blockNumber",
              "type": "uint256"
            }
          ],
          "internalType": "struct TwoStepExchange.PriceParams",
          "name": "params",
          "type": "tuple"
        }
      ],
      "name": "executeSwapOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "25": "interfaces/ICallbackContract.sol",
    "8": "contracts/TwoStepExchange.sol"
  },
  "ast": {
    "absolutePath": "contracts/TwoStepExchange.sol",
    "exportedSymbols": {
      "ICallbackContract": [
        2356
      ],
      "TwoStepExchange": [
        235
      ]
    },
    "id": 236,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 9,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".13"
        ],
        "nodeType": "PragmaDirective",
        "src": "116:24:8"
      },
      {
        "absolutePath": "interfaces/ICallbackContract.sol",
        "file": "../interfaces/ICallbackContract.sol",
        "id": 10,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 236,
        "sourceUnit": 2357,
        "src": "142:45:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "TwoStepExchange",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 235,
        "linearizedBaseContracts": [
          235
        ],
        "name": "TwoStepExchange",
        "nameLocation": "198:15:8",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "errorSelector": "c60eb335",
            "id": 12,
            "name": "OnlyKeeper",
            "nameLocation": "226:10:8",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 11,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "236:2:8"
            },
            "src": "220:19:8"
          },
          {
            "errorSelector": "4e47846c",
            "id": 14,
            "name": "InvalidBlockNumber",
            "nameLocation": "250:18:8",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 13,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "268:2:8"
            },
            "src": "244:27:8"
          },
          {
            "errorSelector": "16307797",
            "id": 16,
            "name": "EmptyOrder",
            "nameLocation": "282:10:8",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 15,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "292:2:8"
            },
            "src": "276:19:8"
          },
          {
            "canonicalName": "TwoStepExchange.SwapOrder",
            "id": 28,
            "members": [
              {
                "constant": false,
                "id": 18,
                "mutability": "mutable",
                "name": "account",
                "nameLocation": "336:7:8",
                "nodeType": "VariableDeclaration",
                "scope": 28,
                "src": "328:15:8",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 17,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "328:7:8",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 21,
                "mutability": "mutable",
                "name": "route",
                "nameLocation": "363:5:8",
                "nodeType": "VariableDeclaration",
                "scope": 28,
                "src": "353:15:8",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                  "typeString": "address[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 19,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "353:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 20,
                  "nodeType": "ArrayTypeName",
                  "src": "353:9:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                    "typeString": "address[]"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 23,
                "mutability": "mutable",
                "name": "amountIn",
                "nameLocation": "386:8:8",
                "nodeType": "VariableDeclaration",
                "scope": 28,
                "src": "378:16:8",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 22,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "378:7:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 25,
                "mutability": "mutable",
                "name": "callbackContract",
                "nameLocation": "412:16:8",
                "nodeType": "VariableDeclaration",
                "scope": 28,
                "src": "404:24:8",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 24,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "404:7:8",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 27,
                "mutability": "mutable",
                "name": "blockNumber",
                "nameLocation": "446:11:8",
                "nodeType": "VariableDeclaration",
                "scope": 28,
                "src": "438:19:8",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 26,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "438:7:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "SwapOrder",
            "nameLocation": "308:9:8",
            "nodeType": "StructDefinition",
            "scope": 235,
            "src": "301:163:8",
            "visibility": "public"
          },
          {
            "canonicalName": "TwoStepExchange.PriceParams",
            "id": 33,
            "members": [
              {
                "constant": false,
                "id": 30,
                "mutability": "mutable",
                "name": "price",
                "nameLocation": "507:5:8",
                "nodeType": "VariableDeclaration",
                "scope": 33,
                "src": "499:13:8",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 29,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "499:7:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 32,
                "mutability": "mutable",
                "name": "blockNumber",
                "nameLocation": "530:11:8",
                "nodeType": "VariableDeclaration",
                "scope": 33,
                "src": "522:19:8",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 31,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "522:7:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "PriceParams",
            "nameLocation": "477:11:8",
            "nodeType": "StructDefinition",
            "scope": 235,
            "src": "470:78:8",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 38,
            "mutability": "mutable",
            "name": "orders",
            "nameLocation": "584:6:8",
            "nodeType": "VariableDeclaration",
            "scope": 235,
            "src": "554:36:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_SwapOrder_$28_storage_$",
              "typeString": "mapping(uint256 => struct TwoStepExchange.SwapOrder)"
            },
            "typeName": {
              "id": 37,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 34,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "562:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "554:29:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_SwapOrder_$28_storage_$",
                "typeString": "mapping(uint256 => struct TwoStepExchange.SwapOrder)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 36,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 35,
                  "name": "SwapOrder",
                  "nameLocations": [
                    "573:9:8"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 28,
                  "src": "573:9:8"
                },
                "referencedDeclaration": 28,
                "src": "573:9:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_SwapOrder_$28_storage_ptr",
                  "typeString": "struct TwoStepExchange.SwapOrder"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 40,
            "mutability": "mutable",
            "name": "nonce",
            "nameLocation": "604:5:8",
            "nodeType": "VariableDeclaration",
            "scope": 235,
            "src": "596:13:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 39,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "596:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 42,
            "mutability": "mutable",
            "name": "keeper",
            "nameLocation": "623:6:8",
            "nodeType": "VariableDeclaration",
            "scope": 235,
            "src": "615:14:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 41,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "615:7:8",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 45,
            "mutability": "constant",
            "name": "CALLBACK_GAS_LIMIT",
            "nameLocation": "652:18:8",
            "nodeType": "VariableDeclaration",
            "scope": 235,
            "src": "635:47:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 43,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "635:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "325f3030305f303030",
              "id": 44,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "673:9:8",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2000000_by_1",
                "typeString": "int_const 2000000"
              },
              "value": "2_000_000"
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "eventSelector": "bf632020a1c07f4b367ca6ae407917ce61e6b899501cd7dd12053431c249f4b9",
            "id": 53,
            "name": "CallbackFailed",
            "nameLocation": "695:14:8",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 52,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "718:2:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 53,
                  "src": "710:10:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 46,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "710:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "revertMessage",
                  "nameLocation": "729:13:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 53,
                  "src": "722:20:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 48,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "722:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "revertData",
                  "nameLocation": "750:10:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 53,
                  "src": "744:16:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 50,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "744:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "709:52:8"
            },
            "src": "689:73:8"
          },
          {
            "anonymous": false,
            "eventSelector": "8497a12481e78c68d92b598ec252fed7981f6f4db17519f38b30085d27b0693a",
            "id": 59,
            "name": "SwapOrderExecuted",
            "nameLocation": "773:17:8",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 58,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "799:2:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 59,
                  "src": "791:10:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 54,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "791:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 57,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "price",
                  "nameLocation": "811:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 59,
                  "src": "803:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 56,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "803:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "790:27:8"
            },
            "src": "767:51:8"
          },
          {
            "anonymous": false,
            "eventSelector": "ab15871cb2fa4db3b815cf4c915f3ea1bbcfabe6094e9b8b2b1a0e973fad673e",
            "id": 63,
            "name": "RevertMessageUnparsable",
            "nameLocation": "829:23:8",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 62,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "859:4:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 63,
                  "src": "853:10:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 60,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "853:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "852:12:8"
            },
            "src": "823:42:8"
          },
          {
            "anonymous": false,
            "eventSelector": "834f1ff8b471941193150a9823e4caec4e20847eee18456b3782315a53e619e5",
            "id": 69,
            "name": "ParsedMessage",
            "nameLocation": "876:13:8",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 68,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 65,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "message",
                  "nameLocation": "897:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 69,
                  "src": "890:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 64,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "890:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "912:4:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 69,
                  "src": "906:10:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 66,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "906:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "889:28:8"
            },
            "src": "870:48:8"
          },
          {
            "body": {
              "id": 77,
              "nodeType": "Block",
              "src": "938:36:8",
              "statements": [
                {
                  "expression": {
                    "id": 75,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 72,
                      "name": "keeper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42,
                      "src": "948:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 73,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "957:3:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 74,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "961:6:8",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "957:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "948:19:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 76,
                  "nodeType": "ExpressionStatement",
                  "src": "948:19:8"
                }
              ]
            },
            "id": 78,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 70,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "935:2:8"
            },
            "returnParameters": {
              "id": 71,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "938:0:8"
            },
            "scope": 235,
            "src": "924:50:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 103,
              "nodeType": "Block",
              "src": "1117:237:8",
              "statements": [
                {
                  "expression": {
                    "id": 101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 88,
                        "name": "orders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38,
                        "src": "1127:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_SwapOrder_$28_storage_$",
                          "typeString": "mapping(uint256 => struct TwoStepExchange.SwapOrder storage ref)"
                        }
                      },
                      "id": 91,
                      "indexExpression": {
                        "id": 90,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "++",
                        "prefix": true,
                        "src": "1134:7:8",
                        "subExpression": {
                          "id": 89,
                          "name": "nonce",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40,
                          "src": "1136:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1127:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SwapOrder_$28_storage",
                        "typeString": "struct TwoStepExchange.SwapOrder storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 93,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1178:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 94,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1182:6:8",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1178:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 95,
                          "name": "_route",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 81,
                          "src": "1209:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                            "typeString": "address[] calldata"
                          }
                        },
                        {
                          "id": 96,
                          "name": "_amountIn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 83,
                          "src": "1239:9:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 97,
                          "name": "_callbackContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 85,
                          "src": "1280:17:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "expression": {
                            "id": 98,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "1324:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 99,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1330:6:8",
                          "memberName": "number",
                          "nodeType": "MemberAccess",
                          "src": "1324:12:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                            "typeString": "address[] calldata"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 92,
                        "name": "SwapOrder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28,
                        "src": "1145:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_SwapOrder_$28_storage_ptr_$",
                          "typeString": "type(struct TwoStepExchange.SwapOrder storage pointer)"
                        }
                      },
                      "id": 100,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [
                        "1169:7:8",
                        "1202:5:8",
                        "1229:8:8",
                        "1262:16:8",
                        "1311:11:8"
                      ],
                      "names": [
                        "account",
                        "route",
                        "amountIn",
                        "callbackContract",
                        "blockNumber"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "1145:202:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SwapOrder_$28_memory_ptr",
                        "typeString": "struct TwoStepExchange.SwapOrder memory"
                      }
                    },
                    "src": "1127:220:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SwapOrder_$28_storage",
                      "typeString": "struct TwoStepExchange.SwapOrder storage ref"
                    }
                  },
                  "id": 102,
                  "nodeType": "ExpressionStatement",
                  "src": "1127:220:8"
                }
              ]
            },
            "functionSelector": "d26d7e61",
            "id": 104,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createSwapOrder",
            "nameLocation": "989:15:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 86,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 81,
                  "mutability": "mutable",
                  "name": "_route",
                  "nameLocation": "1033:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 104,
                  "src": "1014:25:8",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 79,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1014:7:8",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 80,
                    "nodeType": "ArrayTypeName",
                    "src": "1014:9:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 83,
                  "mutability": "mutable",
                  "name": "_amountIn",
                  "nameLocation": "1057:9:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 104,
                  "src": "1049:17:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 82,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1049:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 85,
                  "mutability": "mutable",
                  "name": "_callbackContract",
                  "nameLocation": "1084:17:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 104,
                  "src": "1076:25:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 84,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1076:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1004:103:8"
            },
            "returnParameters": {
              "id": 87,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1117:0:8"
            },
            "scope": 235,
            "src": "980:374:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 186,
              "nodeType": "Block",
              "src": "1459:763:8",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 112,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "1473:3:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 113,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1477:6:8",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1473:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 114,
                      "name": "keeper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42,
                      "src": "1487:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1473:20:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 119,
                  "nodeType": "IfStatement",
                  "src": "1469:45:8",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 116,
                        "name": "OnlyKeeper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "1502:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 117,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1502:12:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 118,
                    "nodeType": "RevertStatement",
                    "src": "1495:19:8"
                  }
                },
                {
                  "assignments": [
                    122
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 122,
                      "mutability": "mutable",
                      "name": "order",
                      "nameLocation": "1541:5:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 186,
                      "src": "1524:22:8",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SwapOrder_$28_memory_ptr",
                        "typeString": "struct TwoStepExchange.SwapOrder"
                      },
                      "typeName": {
                        "id": 121,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 120,
                          "name": "SwapOrder",
                          "nameLocations": [
                            "1524:9:8"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 28,
                          "src": "1524:9:8"
                        },
                        "referencedDeclaration": 28,
                        "src": "1524:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SwapOrder_$28_storage_ptr",
                          "typeString": "struct TwoStepExchange.SwapOrder"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 126,
                  "initialValue": {
                    "baseExpression": {
                      "id": 123,
                      "name": "orders",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38,
                      "src": "1549:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_SwapOrder_$28_storage_$",
                        "typeString": "mapping(uint256 => struct TwoStepExchange.SwapOrder storage ref)"
                      }
                    },
                    "id": 125,
                    "indexExpression": {
                      "id": 124,
                      "name": "_id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 106,
                      "src": "1556:3:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1549:11:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SwapOrder_$28_storage",
                      "typeString": "struct TwoStepExchange.SwapOrder storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1524:36:8"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 127,
                        "name": "order",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 122,
                        "src": "1575:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SwapOrder_$28_memory_ptr",
                          "typeString": "struct TwoStepExchange.SwapOrder memory"
                        }
                      },
                      "id": 128,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1581:7:8",
                      "memberName": "account",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18,
                      "src": "1575:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 131,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1600:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 130,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1592:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 129,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1592:7:8",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 132,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1592:10:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1575:27:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 137,
                  "nodeType": "IfStatement",
                  "src": "1571:52:8",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 134,
                        "name": "EmptyOrder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "1611:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 135,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1611:12:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 136,
                    "nodeType": "RevertStatement",
                    "src": "1604:19:8"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 138,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 109,
                        "src": "1637:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PriceParams_$33_calldata_ptr",
                          "typeString": "struct TwoStepExchange.PriceParams calldata"
                        }
                      },
                      "id": 139,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1644:11:8",
                      "memberName": "blockNumber",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32,
                      "src": "1637:18:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "expression": {
                        "id": 140,
                        "name": "order",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 122,
                        "src": "1659:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SwapOrder_$28_memory_ptr",
                          "typeString": "struct TwoStepExchange.SwapOrder memory"
                        }
                      },
                      "id": 141,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1665:11:8",
                      "memberName": "blockNumber",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27,
                      "src": "1659:17:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1637:39:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 146,
                  "nodeType": "IfStatement",
                  "src": "1633:84:8",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 143,
                        "name": "InvalidBlockNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14,
                        "src": "1697:18:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 144,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1697:20:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 145,
                    "nodeType": "RevertStatement",
                    "src": "1690:27:8"
                  }
                },
                {
                  "clauses": [
                    {
                      "block": {
                        "id": 155,
                        "nodeType": "Block",
                        "src": "1867:2:8",
                        "statements": []
                      },
                      "errorName": "",
                      "id": 156,
                      "nodeType": "TryCatchClause",
                      "src": "1867:2:8"
                    },
                    {
                      "block": {
                        "id": 172,
                        "nodeType": "Block",
                        "src": "1903:150:8",
                        "statements": [
                          {
                            "assignments": [
                              161
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 161,
                                "mutability": "mutable",
                                "name": "revertMessage",
                                "nameLocation": "1931:13:8",
                                "nodeType": "VariableDeclaration",
                                "scope": 172,
                                "src": "1917:27:8",
                                "stateVariable": false,
                                "storageLocation": "memory",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string"
                                },
                                "typeName": {
                                  "id": 160,
                                  "name": "string",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1917:6:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_storage_ptr",
                                    "typeString": "string"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 165,
                            "initialValue": {
                              "arguments": [
                                {
                                  "id": 163,
                                  "name": "_revertData",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 158,
                                  "src": "1964:11:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 162,
                                "name": "getRevertMessage",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 234,
                                "src": "1947:16:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$returns$_t_string_memory_ptr_$",
                                  "typeString": "function (bytes memory) returns (string memory)"
                                }
                              },
                              "id": 164,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1947:29:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "1917:59:8"
                          },
                          {
                            "eventCall": {
                              "arguments": [
                                {
                                  "id": 167,
                                  "name": "_id",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 106,
                                  "src": "2010:3:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 168,
                                  "name": "revertMessage",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 161,
                                  "src": "2015:13:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                {
                                  "id": 169,
                                  "name": "_revertData",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 158,
                                  "src": "2030:11:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 166,
                                "name": "CallbackFailed",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 53,
                                "src": "1995:14:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                                  "typeString": "function (uint256,string memory,bytes memory)"
                                }
                              },
                              "id": 170,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1995:47:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 171,
                            "nodeType": "EmitStatement",
                            "src": "1990:52:8"
                          }
                        ]
                      },
                      "errorName": "",
                      "id": 173,
                      "nodeType": "TryCatchClause",
                      "parameters": {
                        "id": 159,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 158,
                            "mutability": "mutable",
                            "name": "_revertData",
                            "nameLocation": "1890:11:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 173,
                            "src": "1877:24:8",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 157,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "1877:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "1876:26:8"
                      },
                      "src": "1870:183:8"
                    }
                  ],
                  "externalCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 148,
                                "name": "order",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 122,
                                "src": "1762:5:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_SwapOrder_$28_memory_ptr",
                                  "typeString": "struct TwoStepExchange.SwapOrder memory"
                                }
                              },
                              "id": 149,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1768:16:8",
                              "memberName": "callbackContract",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 25,
                              "src": "1762:22:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 147,
                            "name": "ICallbackContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2356,
                            "src": "1744:17:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ICallbackContract_$2356_$",
                              "typeString": "type(contract ICallbackContract)"
                            }
                          },
                          "id": 150,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1744:41:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ICallbackContract_$2356",
                            "typeString": "contract ICallbackContract"
                          }
                        },
                        "id": 151,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1786:15:8",
                        "memberName": "beforeExecution",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2355,
                        "src": "1744:57:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                          "typeString": "function () external"
                        }
                      },
                      "id": 153,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "gas"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 152,
                          "name": "CALLBACK_GAS_LIMIT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45,
                          "src": "1824:18:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "1744:112:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$gas",
                        "typeString": "function () external"
                      }
                    },
                    "id": 154,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1744:114:8",
                    "tryCall": true,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 174,
                  "nodeType": "TryStatement",
                  "src": "1728:325:8"
                },
                {
                  "documentation": "... *",
                  "expression": {
                    "id": 178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "2145:18:8",
                    "subExpression": {
                      "baseExpression": {
                        "id": 175,
                        "name": "orders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38,
                        "src": "2152:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_SwapOrder_$28_storage_$",
                          "typeString": "mapping(uint256 => struct TwoStepExchange.SwapOrder storage ref)"
                        }
                      },
                      "id": 177,
                      "indexExpression": {
                        "id": 176,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 106,
                        "src": "2159:3:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2152:11:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SwapOrder_$28_storage",
                        "typeString": "struct TwoStepExchange.SwapOrder storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 179,
                  "nodeType": "ExpressionStatement",
                  "src": "2145:18:8"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 181,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 106,
                        "src": "2197:3:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 182,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 109,
                          "src": "2202:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PriceParams_$33_calldata_ptr",
                            "typeString": "struct TwoStepExchange.PriceParams calldata"
                          }
                        },
                        "id": 183,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2209:5:8",
                        "memberName": "price",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 30,
                        "src": "2202:12:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 180,
                      "name": "SwapOrderExecuted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59,
                      "src": "2179:17:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 184,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2179:36:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 185,
                  "nodeType": "EmitStatement",
                  "src": "2174:41:8"
                }
              ]
            },
            "functionSelector": "2467c47c",
            "id": 187,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "executeSwapOrder",
            "nameLocation": "1369:16:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 110,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 106,
                  "mutability": "mutable",
                  "name": "_id",
                  "nameLocation": "1403:3:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 187,
                  "src": "1395:11:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 105,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1395:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 109,
                  "mutability": "mutable",
                  "name": "params",
                  "nameLocation": "1437:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 187,
                  "src": "1416:27:8",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_PriceParams_$33_calldata_ptr",
                    "typeString": "struct TwoStepExchange.PriceParams"
                  },
                  "typeName": {
                    "id": 108,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 107,
                      "name": "PriceParams",
                      "nameLocations": [
                        "1416:11:8"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 33,
                      "src": "1416:11:8"
                    },
                    "referencedDeclaration": 33,
                    "src": "1416:11:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PriceParams_$33_storage_ptr",
                      "typeString": "struct TwoStepExchange.PriceParams"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1385:64:8"
            },
            "returnParameters": {
              "id": 111,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1459:0:8"
            },
            "scope": 235,
            "src": "1360:862:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 233,
              "nodeType": "Block",
              "src": "2322:511:8",
              "statements": [
                {
                  "assignments": [
                    195
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 195,
                      "mutability": "mutable",
                      "name": "parsed",
                      "nameLocation": "2346:6:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 233,
                      "src": "2332:20:8",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 194,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "2332:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 197,
                  "initialValue": {
                    "hexValue": "",
                    "id": 196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2355:2:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                      "typeString": "literal_string \"\""
                    },
                    "value": ""
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2332:25:8"
                },
                {
                  "assignments": [
                    199
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 199,
                      "mutability": "mutable",
                      "name": "errorSelector",
                      "nameLocation": "2375:13:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 233,
                      "src": "2367:21:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 198,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2367:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 200,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2367:21:8"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "2408:65:8",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2422:41:8",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "result",
                                  "nodeType": "YulIdentifier",
                                  "src": "2449:6:8"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2457:4:8",
                                  "type": "",
                                  "value": "0x20"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2445:3:8"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2445:17:8"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "2439:5:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2439:24:8"
                        },
                        "variableNames": [
                          {
                            "name": "errorSelector",
                            "nodeType": "YulIdentifier",
                            "src": "2422:13:8"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 199,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2422:13:8",
                      "valueSize": 1
                    },
                    {
                      "declaration": 189,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2449:6:8",
                      "valueSize": 1
                    }
                  ],
                  "id": 201,
                  "nodeType": "InlineAssembly",
                  "src": "2399:74:8"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 207,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 202,
                      "name": "errorSelector",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 199,
                      "src": "2487:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30783038633337396130",
                          "id": 205,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2511:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_147028384_by_1",
                            "typeString": "int_const 147028384"
                          },
                          "value": "0x08c379a0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_147028384_by_1",
                            "typeString": "int_const 147028384"
                          }
                        ],
                        "id": 204,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2504:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes4_$",
                          "typeString": "type(bytes4)"
                        },
                        "typeName": {
                          "id": 203,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "2504:6:8",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 206,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2504:18:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "src": "2487:35:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "eventCall": {
                      "arguments": [
                        {
                          "id": 227,
                          "name": "result",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 189,
                          "src": "2795:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 226,
                        "name": "RevertMessageUnparsable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63,
                        "src": "2771:23:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_event_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                          "typeString": "function (bytes memory)"
                        }
                      },
                      "id": 228,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2771:31:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 229,
                    "nodeType": "EmitStatement",
                    "src": "2766:36:8"
                  },
                  "id": 230,
                  "nodeType": "IfStatement",
                  "src": "2483:319:8",
                  "trueBody": {
                    "id": 225,
                    "nodeType": "Block",
                    "src": "2524:236:8",
                    "statements": [
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "2589:59:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2607:27:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "result",
                                    "nodeType": "YulIdentifier",
                                    "src": "2621:6:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2629:4:8",
                                    "type": "",
                                    "value": "0x04"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2617:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2617:17:8"
                              },
                              "variableNames": [
                                {
                                  "name": "result",
                                  "nodeType": "YulIdentifier",
                                  "src": "2607:6:8"
                                }
                              ]
                            }
                          ]
                        },
                        "evmVersion": "istanbul",
                        "externalReferences": [
                          {
                            "declaration": 189,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2607:6:8",
                            "valueSize": 1
                          },
                          {
                            "declaration": 189,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2621:6:8",
                            "valueSize": 1
                          }
                        ],
                        "id": 208,
                        "nodeType": "InlineAssembly",
                        "src": "2580:68:8"
                      },
                      {
                        "expression": {
                          "id": 218,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 209,
                            "name": "parsed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 195,
                            "src": "2662:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "components": [
                              {
                                "arguments": [
                                  {
                                    "id": 212,
                                    "name": "result",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 189,
                                    "src": "2683:6:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  },
                                  {
                                    "components": [
                                      {
                                        "id": 214,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "2692:6:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                          "typeString": "type(string storage pointer)"
                                        },
                                        "typeName": {
                                          "id": 213,
                                          "name": "string",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "2692:6:8",
                                          "typeDescriptions": {}
                                        }
                                      }
                                    ],
                                    "id": 215,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "2691:8:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                      "typeString": "type(string storage pointer)"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    },
                                    {
                                      "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                      "typeString": "type(string storage pointer)"
                                    }
                                  ],
                                  "expression": {
                                    "id": 210,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "2672:3:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 211,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "2676:6:8",
                                  "memberName": "decode",
                                  "nodeType": "MemberAccess",
                                  "src": "2672:10:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 216,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2672:28:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "id": 217,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "2671:30:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "2662:39:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "id": 219,
                        "nodeType": "ExpressionStatement",
                        "src": "2662:39:8"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 221,
                              "name": "parsed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 195,
                              "src": "2734:6:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "id": 222,
                              "name": "result",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 189,
                              "src": "2742:6:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 220,
                            "name": "ParsedMessage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69,
                            "src": "2720:13:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (string memory,bytes memory)"
                            }
                          },
                          "id": 223,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2720:29:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 224,
                        "nodeType": "EmitStatement",
                        "src": "2715:34:8"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 231,
                    "name": "parsed",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 195,
                    "src": "2820:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 193,
                  "id": 232,
                  "nodeType": "Return",
                  "src": "2813:13:8"
                }
              ]
            },
            "id": 234,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRevertMessage",
            "nameLocation": "2237:16:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 190,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 189,
                  "mutability": "mutable",
                  "name": "result",
                  "nameLocation": "2276:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 234,
                  "src": "2263:19:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 188,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2263:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2253:35:8"
            },
            "returnParameters": {
              "id": 193,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 192,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 234,
                  "src": "2307:13:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 191,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2307:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2306:15:8"
            },
            "scope": 235,
            "src": "2228:605:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 236,
        "src": "189:2646:8",
        "usedErrors": [
          12,
          14,
          16
        ]
      }
    ],
    "src": "116:2720:8"
  },
  "bytecode": "608060405234801561001057600080fd5b50600280546001600160a01b03191633179055610810806100326000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80632467c47c1461003b578063d26d7e6114610050575b600080fd5b61004e610049366004610551565b610063565b005b61004e61005e366004610589565b6102e7565b6002546001600160a01b0316331461008e5760405163c60eb33560e01b815260040160405180910390fd5b600082815260208181526040808320815160a08101835281546001600160a01b03168152600182018054845181870281018701909552808552919492938584019390929083018282801561010b57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116100ed575b50505091835250506002820154602082015260038201546001600160a01b03908116604083015260049092015460609091015281519192501661016157604051631630779760e01b815260040160405180910390fd5b806080015182602001351461018957604051631391e11b60e21b815260040160405180910390fd5b80606001516001600160a01b0316636e785635621e84806040518263ffffffff1660e01b8152600401600060405180830381600088803b1580156101cc57600080fd5b5087f1935050505080156101de575060015b61025d573d80801561020c576040519150601f19603f3d011682016040523d82523d6000602084013e610211565b606091505b50600061021d826103f7565b90507fbf632020a1c07f4b367ca6ae407917ce61e6b899501cd7dd12053431c249f4b985828460405161025293929190610673565b60405180910390a150505b600083815260208190526040812080546001600160a01b03191681559061028760018301826104b6565b506000600282018190556003820180546001600160a01b031916905560049091015560408051848152833560208201527f8497a12481e78c68d92b598ec252fed7981f6f4db17519f38b30085d27b0693a910160405180910390a1505050565b6040518060a00160405280336001600160a01b031681526020018585808060200260200160405190810160405280939291908181526020018383602002808284376000920182905250938552505050602082018590526001600160a01b038416604083015243606090920191909152600180548291908290610368906106a8565b91829055508152602080820192909252604001600020825181546001600160a01b0319166001600160a01b0390911617815582820151805191926103b4926001850192909101906104d7565b506040820151600282015560608201516003820180546001600160a01b0319166001600160a01b0390921691909117905560809091015160049091015550505050565b6040805160208082019092526000815290820151606091906307b9e43360e51b8101610477576004840193508380602001905181019061043791906106e5565b91507f834f1ff8b471941193150a9823e4caec4e20847eee18456b3782315a53e619e5828560405161046a929190610792565b60405180910390a16104af565b7fab15871cb2fa4db3b815cf4c915f3ea1bbcfabe6094e9b8b2b1a0e973fad673e846040516104a691906107c0565b60405180910390a15b5092915050565b50805460008255906000526020600020908101906104d4919061053c565b50565b82805482825590600052602060002090810192821561052c579160200282015b8281111561052c57825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906104f7565b5061053892915061053c565b5090565b5b80821115610538576000815560010161053d565b600080828403606081121561056557600080fd5b833592506040601f198201121561057b57600080fd5b506020830190509250929050565b6000806000806060858703121561059f57600080fd5b843567ffffffffffffffff808211156105b757600080fd5b818701915087601f8301126105cb57600080fd5b8135818111156105da57600080fd5b8860208260051b85010111156105ef57600080fd5b60209283019650945050850135915060408501356001600160a01b038116811461061857600080fd5b939692955090935050565b60005b8381101561063e578181015183820152602001610626565b50506000910152565b6000815180845261065f816020860160208601610623565b601f01601f19169290920160200192915050565b83815260606020820152600061068c6060830185610647565b828103604084015261069e8185610647565b9695505050505050565b6000600182016106c857634e487b7160e01b600052601160045260246000fd5b5060010190565b634e487b7160e01b600052604160045260246000fd5b6000602082840312156106f757600080fd5b815167ffffffffffffffff8082111561070f57600080fd5b818401915084601f83011261072357600080fd5b815181811115610735576107356106cf565b604051601f8201601f19908116603f0116810190838211818310171561075d5761075d6106cf565b8160405282815287602084870101111561077657600080fd5b610787836020830160208801610623565b979650505050505050565b6040815260006107a56040830185610647565b82810360208401526107b78185610647565b95945050505050565b6020815260006107d36020830184610647565b939250505056fea26469706673582212204ab97e7c153311d799efb86cbc6bc492e66fce7bb40f29597ee1d0d0a8273bf864736f6c63430008130033",
  "bytecodeSha1": "ed5bd3e706ff5c4bd8dee5af40a5acc28bf4b5ec",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.19+commit.7dd6d404"
  },
  "contractName": "TwoStepExchange",
  "coverageMap": {
    "branches": {
      "25": {},
      "8": {
        "TwoStepExchange.executeSwapOrder": {
          "11": [
            1473,
            1493,
            false
          ],
          "12": [
            1575,
            1602,
            false
          ],
          "13": [
            1637,
            1676,
            false
          ]
        },
        "TwoStepExchange.getRevertMessage": {
          "14": [
            2487,
            2522,
            false
          ]
        }
      }
    },
    "statements": {
      "25": {},
      "8": {
        "TwoStepExchange.createSwapOrder": {
          "6": [
            1127,
            1347
          ]
        },
        "TwoStepExchange.executeSwapOrder": {
          "0": [
            1469,
            1514
          ],
          "1": [
            1571,
            1623
          ],
          "2": [
            1633,
            1717
          ],
          "3": [
            1990,
            2042
          ],
          "4": [
            2145,
            2163
          ],
          "5": [
            2174,
            2215
          ]
        },
        "TwoStepExchange.getRevertMessage": {
          "7": [
            2662,
            2701
          ],
          "8": [
            2715,
            2749
          ],
          "9": [
            2766,
            2802
          ],
          "10": [
            2813,
            2826
          ]
        }
      }
    }
  },
  "dependencies": [
    "ICallbackContract"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100365760003560e01c80632467c47c1461003b578063d26d7e6114610050575b600080fd5b61004e610049366004610551565b610063565b005b61004e61005e366004610589565b6102e7565b6002546001600160a01b0316331461008e5760405163c60eb33560e01b815260040160405180910390fd5b600082815260208181526040808320815160a08101835281546001600160a01b03168152600182018054845181870281018701909552808552919492938584019390929083018282801561010b57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116100ed575b50505091835250506002820154602082015260038201546001600160a01b03908116604083015260049092015460609091015281519192501661016157604051631630779760e01b815260040160405180910390fd5b806080015182602001351461018957604051631391e11b60e21b815260040160405180910390fd5b80606001516001600160a01b0316636e785635621e84806040518263ffffffff1660e01b8152600401600060405180830381600088803b1580156101cc57600080fd5b5087f1935050505080156101de575060015b61025d573d80801561020c576040519150601f19603f3d011682016040523d82523d6000602084013e610211565b606091505b50600061021d826103f7565b90507fbf632020a1c07f4b367ca6ae407917ce61e6b899501cd7dd12053431c249f4b985828460405161025293929190610673565b60405180910390a150505b600083815260208190526040812080546001600160a01b03191681559061028760018301826104b6565b506000600282018190556003820180546001600160a01b031916905560049091015560408051848152833560208201527f8497a12481e78c68d92b598ec252fed7981f6f4db17519f38b30085d27b0693a910160405180910390a1505050565b6040518060a00160405280336001600160a01b031681526020018585808060200260200160405190810160405280939291908181526020018383602002808284376000920182905250938552505050602082018590526001600160a01b038416604083015243606090920191909152600180548291908290610368906106a8565b91829055508152602080820192909252604001600020825181546001600160a01b0319166001600160a01b0390911617815582820151805191926103b4926001850192909101906104d7565b506040820151600282015560608201516003820180546001600160a01b0319166001600160a01b0390921691909117905560809091015160049091015550505050565b6040805160208082019092526000815290820151606091906307b9e43360e51b8101610477576004840193508380602001905181019061043791906106e5565b91507f834f1ff8b471941193150a9823e4caec4e20847eee18456b3782315a53e619e5828560405161046a929190610792565b60405180910390a16104af565b7fab15871cb2fa4db3b815cf4c915f3ea1bbcfabe6094e9b8b2b1a0e973fad673e846040516104a691906107c0565b60405180910390a15b5092915050565b50805460008255906000526020600020908101906104d4919061053c565b50565b82805482825590600052602060002090810192821561052c579160200282015b8281111561052c57825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906104f7565b5061053892915061053c565b5090565b5b80821115610538576000815560010161053d565b600080828403606081121561056557600080fd5b833592506040601f198201121561057b57600080fd5b506020830190509250929050565b6000806000806060858703121561059f57600080fd5b843567ffffffffffffffff808211156105b757600080fd5b818701915087601f8301126105cb57600080fd5b8135818111156105da57600080fd5b8860208260051b85010111156105ef57600080fd5b60209283019650945050850135915060408501356001600160a01b038116811461061857600080fd5b939692955090935050565b60005b8381101561063e578181015183820152602001610626565b50506000910152565b6000815180845261065f816020860160208601610623565b601f01601f19169290920160200192915050565b83815260606020820152600061068c6060830185610647565b828103604084015261069e8185610647565b9695505050505050565b6000600182016106c857634e487b7160e01b600052601160045260246000fd5b5060010190565b634e487b7160e01b600052604160045260246000fd5b6000602082840312156106f757600080fd5b815167ffffffffffffffff8082111561070f57600080fd5b818401915084601f83011261072357600080fd5b815181811115610735576107356106cf565b604051601f8201601f19908116603f0116810190838211818310171561075d5761075d6106cf565b8160405282815287602084870101111561077657600080fd5b610787836020830160208801610623565b979650505050505050565b6040815260006107a56040830185610647565b82810360208401526107b78185610647565b95945050505050565b6020815260006107d36020830184610647565b939250505056fea26469706673582212204ab97e7c153311d799efb86cbc6bc492e66fce7bb40f29597ee1d0d0a8273bf864736f6c63430008130033",
  "deployedSourceMap": "189:2646:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1360:862;;;;;;:::i;:::-;;:::i;:::-;;980:374;;;;;;:::i;:::-;;:::i;1360:862::-;1487:6;;-1:-1:-1;;;;;1487:6:8;1473:10;:20;1469:45;;1502:12;;-1:-1:-1;;;1502:12:8;;;;;;;;;;;1469:45;1524:22;1549:11;;;;;;;;;;;1524:36;;;;;;;;;-1:-1:-1;;;;;1524:36:8;;;;;;;;;;;;;;;;;;;;;;;;;1549:11;;1524:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1524:36:8;;;;;;;;;;;;;;;;-1:-1:-1;;;1524:36:8;;;-1:-1:-1;;1524:36:8;;;;;;;;;;;;-1:-1:-1;;;;;1524:36:8;;;;;;;;;;;;;;;;;1575:13;;1524:36;;-1:-1:-1;1575:27:8;1571:52;;1611:12;;-1:-1:-1;;;1611:12:8;;;;;;;;;;;1571:52;1659:5;:17;;;1637:6;:18;;;:39;1633:84;;1697:20;;-1:-1:-1;;;1697:20:8;;;;;;;;;;;1633:84;1762:5;:22;;;-1:-1:-1;;;;;1744:57:8;;673:9;1744:114;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1728:325;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1917:27;1947:29;1964:11;1947:16;:29::i;:::-;1917:59;;1995:47;2010:3;2015:13;2030:11;1995:47;;;;;;;;:::i;:::-;;;;;;;;1903:150;1870:183;1728:325;2152:6;:11;;;;;;;;;;2145:18;;-1:-1:-1;;;;;;2145:18:8;;;2152:11;2145:18;;;;2152:6;2145:18;:::i;:::-;-1:-1:-1;2145:18:8;;;;;;;;;;;;-1:-1:-1;;;;;;2145:18:8;;;;;;;;2179:36;;;2387:25:26;;;2202:12:8;;2443:2:26;2428:18;;2421:34;2179:36:8;;2360:18:26;2179:36:8;;;;;;;1459:763;1360:862;;:::o;980:374::-;1145:202;;;;;;;;1178:10;-1:-1:-1;;;;;1145:202:8;;;;;1209:6;;1145:202;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1145:202:8;;;-1:-1:-1;;;1145:202:8;;;;;;-1:-1:-1;;;;;1145:202:8;;;;;;1324:12;1145:202;;;;;;;;1136:5;1134:7;;1145:202;;1136:5;1145:202;;1134:7;;;:::i;:::-;;;;;-1:-1:-1;1127:15:8;;;;;;;;;;;;-1:-1:-1;1127:15:8;:220;;;;-1:-1:-1;;;;;;1127:220:8;-1:-1:-1;;;;;1127:220:8;;;;;;;;;;;;:15;;:220;;-1:-1:-1;1127:220:8;;;;;;;;:::i;:::-;-1:-1:-1;1127:220:8;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1127:220:8;-1:-1:-1;;;;;1127:220:8;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;980:374:8:o;2228:605::-;2332:25;;;;;;;;;;:20;:25;;2445:17;;;2439:24;2307:13;;2332:25;-1:-1:-1;;;2487:35:8;;2483:319;;2629:4;2621:6;2617:17;2607:27;;2683:6;2672:28;;;;;;;;;;;;:::i;:::-;2662:39;;2720:29;2734:6;2742;2720:29;;;;;;;:::i;:::-;;;;;;;;2483:319;;;2771:31;2795:6;2771:31;;;;;;:::i;:::-;;;;;;;;2483:319;-1:-1:-1;2820:6:8;2228:605;-1:-1:-1;;2228:605:8:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:338:26;111:6;119;163:9;154:7;150:23;193:2;189;185:11;182:31;;;209:1;206;199:12;182:31;232:23;;;-1:-1:-1;289:2:26;-1:-1:-1;;271:16:26;;267:25;264:45;;;305:1;302;295:12;264:45;;343:2;332:9;328:18;318:28;;14:338;;;;;:::o;357:863::-;461:6;469;477;485;538:2;526:9;517:7;513:23;509:32;506:52;;;554:1;551;544:12;506:52;594:9;581:23;623:18;664:2;656:6;653:14;650:34;;;680:1;677;670:12;650:34;718:6;707:9;703:22;693:32;;763:7;756:4;752:2;748:13;744:27;734:55;;785:1;782;775:12;734:55;825:2;812:16;851:2;843:6;840:14;837:34;;;867:1;864;857:12;837:34;922:7;915:4;905:6;902:1;898:14;894:2;890:23;886:34;883:47;880:67;;;943:1;940;933:12;880:67;974:4;966:13;;;;-1:-1:-1;998:6:26;-1:-1:-1;;1036:20:26;;1023:34;;-1:-1:-1;1107:2:26;1092:18;;1079:32;-1:-1:-1;;;;;1140:31:26;;1130:42;;1120:70;;1186:1;1183;1176:12;1120:70;357:863;;;;-1:-1:-1;357:863:26;;-1:-1:-1;;357:863:26:o;1225:250::-;1310:1;1320:113;1334:6;1331:1;1328:13;1320:113;;;1410:11;;;1404:18;1391:11;;;1384:39;1356:2;1349:10;1320:113;;;-1:-1:-1;;1467:1:26;1449:16;;1442:27;1225:250::o;1480:271::-;1522:3;1560:5;1554:12;1587:6;1582:3;1575:19;1603:76;1672:6;1665:4;1660:3;1656:14;1649:4;1642:5;1638:16;1603:76;:::i;:::-;1733:2;1712:15;-1:-1:-1;;1708:29:26;1699:39;;;;1740:4;1695:50;;1480:271;-1:-1:-1;;1480:271:26:o;1756:452::-;1979:6;1968:9;1961:25;2022:2;2017;2006:9;2002:18;1995:30;1942:4;2048:45;2089:2;2078:9;2074:18;2066:6;2048:45;:::i;:::-;2141:9;2133:6;2129:22;2124:2;2113:9;2109:18;2102:50;2169:33;2195:6;2187;2169:33;:::i;:::-;2161:41;1756:452;-1:-1:-1;;;;;;1756:452:26:o;2466:232::-;2505:3;2526:17;;;2523:140;;2585:10;2580:3;2576:20;2573:1;2566:31;2620:4;2617:1;2610:15;2648:4;2645:1;2638:15;2523:140;-1:-1:-1;2690:1:26;2679:13;;2466:232::o;2703:127::-;2764:10;2759:3;2755:20;2752:1;2745:31;2795:4;2792:1;2785:15;2819:4;2816:1;2809:15;2835:897;2915:6;2968:2;2956:9;2947:7;2943:23;2939:32;2936:52;;;2984:1;2981;2974:12;2936:52;3017:9;3011:16;3046:18;3087:2;3079:6;3076:14;3073:34;;;3103:1;3100;3093:12;3073:34;3141:6;3130:9;3126:22;3116:32;;3186:7;3179:4;3175:2;3171:13;3167:27;3157:55;;3208:1;3205;3198:12;3157:55;3237:2;3231:9;3259:2;3255;3252:10;3249:36;;;3265:18;;:::i;:::-;3340:2;3334:9;3308:2;3394:13;;-1:-1:-1;;3390:22:26;;;3414:2;3386:31;3382:40;3370:53;;;3438:18;;;3458:22;;;3435:46;3432:72;;;3484:18;;:::i;:::-;3524:10;3520:2;3513:22;3559:2;3551:6;3544:18;3599:7;3594:2;3589;3585;3581:11;3577:20;3574:33;3571:53;;;3620:1;3617;3610:12;3571:53;3633:68;3698:2;3693;3685:6;3681:15;3676:2;3672;3668:11;3633:68;:::i;:::-;3720:6;2835:897;-1:-1:-1;;;;;;;2835:897:26:o;3737:381::-;3932:2;3921:9;3914:21;3895:4;3958:45;3999:2;3988:9;3984:18;3976:6;3958:45;:::i;:::-;4051:9;4043:6;4039:22;4034:2;4023:9;4019:18;4012:50;4079:33;4105:6;4097;4079:33;:::i;:::-;4071:41;3737:381;-1:-1:-1;;;;;3737:381:26:o;4123:218::-;4270:2;4259:9;4252:21;4233:4;4290:45;4331:2;4320:9;4316:18;4308:6;4290:45;:::i;:::-;4282:53;4123:218;-1:-1:-1;;;4123:218:26:o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    189,
    2835
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2467C47C EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xD26D7E61 EQ PUSH2 0x50 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x49 CALLDATASIZE PUSH1 0x4 PUSH2 0x551 JUMP JUMPDEST PUSH2 0x63 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4E PUSH2 0x5E CALLDATASIZE PUSH1 0x4 PUSH2 0x589 JUMP JUMPDEST PUSH2 0x2E7 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x8E JUMPI PUSH1 0x40 MLOAD PUSH4 0xC60EB335 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD PUSH1 0xA0 DUP2 ADD DUP4 MSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 DUP3 ADD DUP1 SLOAD DUP5 MLOAD DUP2 DUP8 MUL DUP2 ADD DUP8 ADD SWAP1 SWAP6 MSTORE DUP1 DUP6 MSTORE SWAP2 SWAP5 SWAP3 SWAP4 DUP6 DUP5 ADD SWAP4 SWAP1 SWAP3 SWAP1 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x10B JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xED JUMPI JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x4 SWAP1 SWAP3 ADD SLOAD PUSH1 0x60 SWAP1 SWAP2 ADD MSTORE DUP2 MLOAD SWAP2 SWAP3 POP AND PUSH2 0x161 JUMPI PUSH1 0x40 MLOAD PUSH4 0x16307797 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x80 ADD MLOAD DUP3 PUSH1 0x20 ADD CALLDATALOAD EQ PUSH2 0x189 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1391E11B PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x60 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x6E785635 PUSH3 0x1E8480 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP8 CALL SWAP4 POP POP POP POP DUP1 ISZERO PUSH2 0x1DE JUMPI POP PUSH1 0x1 JUMPDEST PUSH2 0x25D JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x20C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x211 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 PUSH2 0x21D DUP3 PUSH2 0x3F7 JUMP JUMPDEST SWAP1 POP PUSH32 0xBF632020A1C07F4B367CA6AE407917CE61E6B899501CD7DD12053431C249F4B9 DUP6 DUP3 DUP5 PUSH1 0x40 MLOAD PUSH2 0x252 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x673 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP2 SSTORE SWAP1 PUSH2 0x287 PUSH1 0x1 DUP4 ADD DUP3 PUSH2 0x4B6 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x2 DUP3 ADD DUP2 SWAP1 SSTORE PUSH1 0x3 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE PUSH1 0x4 SWAP1 SWAP2 ADD SSTORE PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE DUP4 CALLDATALOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x8497A12481E78C68D92B598EC252FED7981F6F4DB17519F38B30085D27B0693A SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP6 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD DUP3 SWAP1 MSTORE POP SWAP4 DUP6 MSTORE POP POP POP PUSH1 0x20 DUP3 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x40 DUP4 ADD MSTORE NUMBER PUSH1 0x60 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP1 SLOAD DUP3 SWAP2 SWAP1 DUP3 SWAP1 PUSH2 0x368 SWAP1 PUSH2 0x6A8 JUMP JUMPDEST SWAP2 DUP3 SWAP1 SSTORE POP DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP3 MLOAD DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP2 SSTORE DUP3 DUP3 ADD MLOAD DUP1 MLOAD SWAP2 SWAP3 PUSH2 0x3B4 SWAP3 PUSH1 0x1 DUP6 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x4D7 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x2 DUP3 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x3 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x80 SWAP1 SWAP2 ADD MLOAD PUSH1 0x4 SWAP1 SWAP2 ADD SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 DUP3 ADD MLOAD PUSH1 0x60 SWAP2 SWAP1 PUSH4 0x7B9E433 PUSH1 0xE5 SHL DUP2 ADD PUSH2 0x477 JUMPI PUSH1 0x4 DUP5 ADD SWAP4 POP DUP4 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x437 SWAP2 SWAP1 PUSH2 0x6E5 JUMP JUMPDEST SWAP2 POP PUSH32 0x834F1FF8B471941193150A9823E4CAEC4E20847EEE18456B3782315A53E619E5 DUP3 DUP6 PUSH1 0x40 MLOAD PUSH2 0x46A SWAP3 SWAP2 SWAP1 PUSH2 0x792 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x4AF JUMP JUMPDEST PUSH32 0xAB15871CB2FA4DB3B815CF4C915F3EA1BBCFABE6094E9B8B2B1A0E973FAD673E DUP5 PUSH1 0x40 MLOAD PUSH2 0x4A6 SWAP2 SWAP1 PUSH2 0x7C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x0 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x4D4 SWAP2 SWAP1 PUSH2 0x53C JUMP JUMPDEST POP JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x52C JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x52C JUMPI DUP3 MLOAD DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP3 SSTORE PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x4F7 JUMP JUMPDEST POP PUSH2 0x538 SWAP3 SWAP2 POP PUSH2 0x53C JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x538 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x53D JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 SUB PUSH1 0x60 DUP2 SLT ISZERO PUSH2 0x565 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x40 PUSH1 0x1F NOT DUP3 ADD SLT ISZERO PUSH2 0x57B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x59F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x5B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x5CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x5DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP9 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x5EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 DUP4 ADD SWAP7 POP SWAP5 POP POP DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x618 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x63E JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x626 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x65F DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x623 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x68C PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x647 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x69E DUP2 DUP6 PUSH2 0x647 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x6C8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x70F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP5 ADD SWAP2 POP DUP5 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x723 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x735 JUMPI PUSH2 0x735 PUSH2 0x6CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x75D JUMPI PUSH2 0x75D PUSH2 0x6CF JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP8 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x776 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x787 DUP4 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x623 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x7A5 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x647 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x7B7 DUP2 DUP6 PUSH2 0x647 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x7D3 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x647 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4A 0xB9 PUSH31 0x7C153311D799EFB86CBC6BC492E66FCE7BB40F29597EE1D0D0A8273BF86473 PUSH16 0x6C634300081300330000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        189,
        2835
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        189,
        2835
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        189,
        2835
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5": {
      "fn": null,
      "offset": [
        189,
        2835
      ],
      "op": "CALLVALUE",
      "path": "8"
    },
    "6": {
      "fn": null,
      "offset": [
        189,
        2835
      ],
      "op": "DUP1",
      "path": "8"
    },
    "7": {
      "fn": null,
      "offset": [
        189,
        2835
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "8": {
      "fn": null,
      "offset": [
        189,
        2835
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        189,
        2835
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "12": {
      "fn": null,
      "offset": [
        189,
        2835
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        189,
        2835
      ],
      "op": "DUP1",
      "path": "8"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        189,
        2835
      ],
      "op": "REVERT",
      "path": "8"
    },
    "16": {
      "fn": null,
      "offset": [
        189,
        2835
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "17": {
      "fn": null,
      "offset": [
        189,
        2835
      ],
      "op": "POP",
      "path": "8"
    },
    "18": {
      "fn": null,
      "offset": [
        189,
        2835
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        189,
        2835
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "21": {
      "fn": null,
      "offset": [
        189,
        2835
      ],
      "op": "LT",
      "path": "8"
    },
    "22": {
      "fn": null,
      "offset": [
        189,
        2835
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x36"
    },
    "25": {
      "fn": null,
      "offset": [
        189,
        2835
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "26": {
      "fn": null,
      "offset": [
        189,
        2835
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        189,
        2835
      ],
      "op": "CALLDATALOAD",
      "path": "8"
    },
    "29": {
      "fn": null,
      "offset": [
        189,
        2835
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        189,
        2835
      ],
      "op": "SHR",
      "path": "8"
    },
    "32": {
      "fn": null,
      "offset": [
        189,
        2835
      ],
      "op": "DUP1",
      "path": "8"
    },
    "33": {
      "fn": null,
      "offset": [
        189,
        2835
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x2467C47C"
    },
    "38": {
      "fn": null,
      "offset": [
        189,
        2835
      ],
      "op": "EQ",
      "path": "8"
    },
    "39": {
      "fn": null,
      "offset": [
        189,
        2835
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3B"
    },
    "42": {
      "fn": null,
      "offset": [
        189,
        2835
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "43": {
      "fn": null,
      "offset": [
        189,
        2835
      ],
      "op": "DUP1",
      "path": "8"
    },
    "44": {
      "fn": null,
      "offset": [
        189,
        2835
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xD26D7E61"
    },
    "49": {
      "fn": null,
      "offset": [
        189,
        2835
      ],
      "op": "EQ",
      "path": "8"
    },
    "50": {
      "fn": null,
      "offset": [
        189,
        2835
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x50"
    },
    "53": {
      "fn": null,
      "offset": [
        189,
        2835
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "54": {
      "fn": null,
      "offset": [
        189,
        2835
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "55": {
      "fn": null,
      "offset": [
        189,
        2835
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "57": {
      "fn": null,
      "offset": [
        189,
        2835
      ],
      "op": "DUP1",
      "path": "8"
    },
    "58": {
      "first_revert": true,
      "fn": null,
      "offset": [
        189,
        2835
      ],
      "op": "REVERT",
      "path": "8"
    },
    "59": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1360,
        2222
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "60": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1360,
        2222
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x4E"
    },
    "63": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1360,
        2222
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x49"
    },
    "66": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1360,
        2222
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "67": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1360,
        2222
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "69": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1360,
        2222
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x551"
    },
    "72": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "jump": "i",
      "offset": [
        1360,
        2222
      ],
      "op": "JUMP",
      "path": "8"
    },
    "73": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1360,
        2222
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "74": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1360,
        2222
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x63"
    },
    "77": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "jump": "i",
      "offset": [
        1360,
        2222
      ],
      "op": "JUMP",
      "path": "8"
    },
    "78": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1360,
        2222
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "79": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1360,
        2222
      ],
      "op": "STOP",
      "path": "8"
    },
    "80": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        980,
        1354
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "81": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        980,
        1354
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x4E"
    },
    "84": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        980,
        1354
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x5E"
    },
    "87": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        980,
        1354
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "88": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        980,
        1354
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "90": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        980,
        1354
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x589"
    },
    "93": {
      "fn": "TwoStepExchange.createSwapOrder",
      "jump": "i",
      "offset": [
        980,
        1354
      ],
      "op": "JUMP",
      "path": "8"
    },
    "94": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        980,
        1354
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "95": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        980,
        1354
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2E7"
    },
    "98": {
      "fn": "TwoStepExchange.createSwapOrder",
      "jump": "i",
      "offset": [
        980,
        1354
      ],
      "op": "JUMP",
      "path": "8"
    },
    "99": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1360,
        2222
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "100": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1487,
        1493
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 0,
      "value": "0x2"
    },
    "102": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1487,
        1493
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "103": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "105": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "107": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "109": {
      "op": "SHL"
    },
    "110": {
      "op": "SUB"
    },
    "111": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1487,
        1493
      ],
      "op": "AND",
      "path": "8"
    },
    "112": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1473,
        1483
      ],
      "op": "CALLER",
      "path": "8"
    },
    "113": {
      "branch": 11,
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1473,
        1493
      ],
      "op": "EQ",
      "path": "8"
    },
    "114": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1469,
        1514
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x8E"
    },
    "117": {
      "branch": 11,
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1469,
        1514
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "118": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1502,
        1514
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "120": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1502,
        1514
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "121": {
      "op": "PUSH4",
      "value": "0xC60EB335"
    },
    "126": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "128": {
      "op": "SHL"
    },
    "129": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1502,
        1514
      ],
      "op": "DUP2",
      "path": "8"
    },
    "130": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1502,
        1514
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "131": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1502,
        1514
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "133": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1502,
        1514
      ],
      "op": "ADD",
      "path": "8"
    },
    "134": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1502,
        1514
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "136": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1502,
        1514
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "137": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1502,
        1514
      ],
      "op": "DUP1",
      "path": "8"
    },
    "138": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1502,
        1514
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "139": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1502,
        1514
      ],
      "op": "SUB",
      "path": "8"
    },
    "140": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1502,
        1514
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "141": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1502,
        1514
      ],
      "op": "REVERT",
      "path": "8"
    },
    "142": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1469,
        1514
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "143": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1524,
        1546
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "145": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1549,
        1560
      ],
      "op": "DUP3",
      "path": "8"
    },
    "146": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1549,
        1560
      ],
      "op": "DUP2",
      "path": "8"
    },
    "147": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1549,
        1560
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "148": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1549,
        1560
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "150": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1549,
        1560
      ],
      "op": "DUP2",
      "path": "8"
    },
    "151": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1549,
        1560
      ],
      "op": "DUP2",
      "path": "8"
    },
    "152": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1549,
        1560
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "153": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1549,
        1560
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "155": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1549,
        1560
      ],
      "op": "DUP1",
      "path": "8"
    },
    "156": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1549,
        1560
      ],
      "op": "DUP4",
      "path": "8"
    },
    "157": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1549,
        1560
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "158": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1524,
        1560
      ],
      "op": "DUP2",
      "path": "8"
    },
    "159": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1524,
        1560
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "160": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1524,
        1560
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xA0"
    },
    "162": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1524,
        1560
      ],
      "op": "DUP2",
      "path": "8"
    },
    "163": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1524,
        1560
      ],
      "op": "ADD",
      "path": "8"
    },
    "164": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1524,
        1560
      ],
      "op": "DUP4",
      "path": "8"
    },
    "165": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1524,
        1560
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "166": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1524,
        1560
      ],
      "op": "DUP2",
      "path": "8"
    },
    "167": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1524,
        1560
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "168": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "170": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "172": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "174": {
      "op": "SHL"
    },
    "175": {
      "op": "SUB"
    },
    "176": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1524,
        1560
      ],
      "op": "AND",
      "path": "8"
    },
    "177": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1524,
        1560
      ],
      "op": "DUP2",
      "path": "8"
    },
    "178": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1524,
        1560
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "179": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1524,
        1560
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "181": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1524,
        1560
      ],
      "op": "DUP3",
      "path": "8"
    },
    "182": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1524,
        1560
      ],
      "op": "ADD",
      "path": "8"
    },
    "183": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1524,
        1560
      ],
      "op": "DUP1",
      "path": "8"
    },
    "184": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1524,
        1560
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "185": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1524,
        1560
      ],
      "op": "DUP5",
      "path": "8"
    },
    "186": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1524,
        1560
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "187": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1524,
        1560
      ],
      "op": "DUP2",
      "path": "8"
    },
    "188": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1524,
        1560
      ],
      "op": "DUP8",
      "path": "8"
    },
    "189": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1524,
        1560
      ],
      "op": "MUL",
      "path": "8"
    },
    "190": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1524,
        1560
      ],
      "op": "DUP2",
      "path": "8"
    },
    "191": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1524,
        1560
      ],
      "op": "ADD",
      "path": "8"
    },
    "192": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1524,
        1560
      ],
      "op": "DUP8",
      "path": "8"
    },
    "193": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1524,
        1560
      ],
      "op": "ADD",
      "path": "8"
    },
    "194": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1524,
        1560
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "195": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1524,
        1560
      ],
      "op": "SWAP6",
      "path": "8"
    },
    "196": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1524,
        1560
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "197": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1524,
        1560
      ],
      "op": "DUP1",
      "path": "8"
    },
    "198": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1524,
        1560
      ],
      "op": "DUP6",
      "path": "8"
    },
    "199": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1524,
        1560
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "200": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1524,
        1560
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "201": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1524,
        1560
      ],
      "op": "SWAP5",
      "path": "8"
    },
    "202": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1549,
        1560
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "203": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1549,
        1560
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "204": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1524,
        1560
      ],
      "op": "DUP6",
      "path": "8"
    },
    "205": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1524,
        1560
      ],
      "op": "DUP5",
      "path": "8"
    },
    "206": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1524,
        1560
      ],
      "op": "ADD",
      "path": "8"
    },
    "207": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1524,
        1560
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "208": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1524,
        1560
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "209": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1524,
        1560
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "210": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1524,
        1560
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "211": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1524,
        1560
      ],
      "op": "DUP4",
      "path": "8"
    },
    "212": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1524,
        1560
      ],
      "op": "ADD",
      "path": "8"
    },
    "213": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1524,
        1560
      ],
      "op": "DUP3",
      "path": "8"
    },
    "214": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1524,
        1560
      ],
      "op": "DUP3",
      "path": "8"
    },
    "215": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1524,
        1560
      ],
      "op": "DUP1",
      "path": "8"
    },
    "216": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1524,
        1560
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "217": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1524,
        1560
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x10B"
    },
    "220": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1524,
        1560
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "221": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1524,
        1560
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "223": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1524,
        1560
      ],
      "op": "MUL",
      "path": "8"
    },
    "224": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1524,
        1560
      ],
      "op": "DUP3",
      "path": "8"
    },
    "225": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1524,
        1560
      ],
      "op": "ADD",
      "path": "8"
    },
    "226": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1524,
        1560
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "227": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1524,
        1560
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "228": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1524,
        1560
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "230": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1524,
        1560
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "231": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1524,
        1560
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "233": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1524,
        1560
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "235": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1524,
        1560
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "236": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1524,
        1560
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "237": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1524,
        1560
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "238": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1524,
        1560
      ],
      "op": "DUP2",
      "path": "8"
    },
    "239": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1524,
        1560
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "240": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "242": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "244": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "246": {
      "op": "SHL"
    },
    "247": {
      "op": "SUB"
    },
    "248": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1524,
        1560
      ],
      "op": "AND",
      "path": "8"
    },
    "249": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1524,
        1560
      ],
      "op": "DUP2",
      "path": "8"
    },
    "250": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1524,
        1560
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "251": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1524,
        1560
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "253": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1524,
        1560
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "254": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1524,
        1560
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "255": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1524,
        1560
      ],
      "op": "ADD",
      "path": "8"
    },
    "256": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1524,
        1560
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "257": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1524,
        1560
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "259": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1524,
        1560
      ],
      "op": "ADD",
      "path": "8"
    },
    "260": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1524,
        1560
      ],
      "op": "DUP1",
      "path": "8"
    },
    "261": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1524,
        1560
      ],
      "op": "DUP4",
      "path": "8"
    },
    "262": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1524,
        1560
      ],
      "op": "GT",
      "path": "8"
    },
    "263": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1524,
        1560
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xED"
    },
    "266": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1524,
        1560
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "267": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1524,
        1560
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "268": {
      "op": "POP"
    },
    "269": {
      "op": "POP"
    },
    "270": {
      "op": "POP"
    },
    "271": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1524,
        1560
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "272": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1524,
        1560
      ],
      "op": "DUP4",
      "path": "8"
    },
    "273": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1524,
        1560
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "274": {
      "op": "POP"
    },
    "275": {
      "op": "POP"
    },
    "276": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1524,
        1560
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x2"
    },
    "278": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1524,
        1560
      ],
      "op": "DUP3",
      "path": "8"
    },
    "279": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1524,
        1560
      ],
      "op": "ADD",
      "path": "8"
    },
    "280": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1524,
        1560
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "281": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1524,
        1560
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "283": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1524,
        1560
      ],
      "op": "DUP3",
      "path": "8"
    },
    "284": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1524,
        1560
      ],
      "op": "ADD",
      "path": "8"
    },
    "285": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1524,
        1560
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "286": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1524,
        1560
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3"
    },
    "288": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1524,
        1560
      ],
      "op": "DUP3",
      "path": "8"
    },
    "289": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1524,
        1560
      ],
      "op": "ADD",
      "path": "8"
    },
    "290": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1524,
        1560
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "291": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "293": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "295": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "297": {
      "op": "SHL"
    },
    "298": {
      "op": "SUB"
    },
    "299": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1524,
        1560
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "300": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1524,
        1560
      ],
      "op": "DUP2",
      "path": "8"
    },
    "301": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1524,
        1560
      ],
      "op": "AND",
      "path": "8"
    },
    "302": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1524,
        1560
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "304": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1524,
        1560
      ],
      "op": "DUP4",
      "path": "8"
    },
    "305": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1524,
        1560
      ],
      "op": "ADD",
      "path": "8"
    },
    "306": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1524,
        1560
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "307": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1524,
        1560
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "309": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1524,
        1560
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "310": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1524,
        1560
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "311": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1524,
        1560
      ],
      "op": "ADD",
      "path": "8"
    },
    "312": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1524,
        1560
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "313": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1524,
        1560
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x60"
    },
    "315": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1524,
        1560
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "316": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1524,
        1560
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "317": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1524,
        1560
      ],
      "op": "ADD",
      "path": "8"
    },
    "318": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1524,
        1560
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "319": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1575,
        1588
      ],
      "op": "DUP2",
      "path": "8",
      "statement": 1
    },
    "320": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1575,
        1588
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "321": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1524,
        1560
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "322": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1524,
        1560
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "323": {
      "op": "POP"
    },
    "324": {
      "branch": 12,
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1575,
        1602
      ],
      "op": "AND",
      "path": "8"
    },
    "325": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1571,
        1623
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x161"
    },
    "328": {
      "branch": 12,
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1571,
        1623
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "329": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1611,
        1623
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "331": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1611,
        1623
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "332": {
      "op": "PUSH4",
      "value": "0x16307797"
    },
    "337": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "339": {
      "op": "SHL"
    },
    "340": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1611,
        1623
      ],
      "op": "DUP2",
      "path": "8"
    },
    "341": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1611,
        1623
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "342": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1611,
        1623
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "344": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1611,
        1623
      ],
      "op": "ADD",
      "path": "8"
    },
    "345": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1611,
        1623
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "347": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1611,
        1623
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "348": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1611,
        1623
      ],
      "op": "DUP1",
      "path": "8"
    },
    "349": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1611,
        1623
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "350": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1611,
        1623
      ],
      "op": "SUB",
      "path": "8"
    },
    "351": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1611,
        1623
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "352": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1611,
        1623
      ],
      "op": "REVERT",
      "path": "8"
    },
    "353": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1571,
        1623
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "354": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1659,
        1664
      ],
      "op": "DUP1",
      "path": "8",
      "statement": 2
    },
    "355": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1659,
        1676
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x80"
    },
    "357": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1659,
        1676
      ],
      "op": "ADD",
      "path": "8"
    },
    "358": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1659,
        1676
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "359": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1637,
        1643
      ],
      "op": "DUP3",
      "path": "8"
    },
    "360": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1637,
        1655
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "362": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1637,
        1655
      ],
      "op": "ADD",
      "path": "8"
    },
    "363": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1637,
        1655
      ],
      "op": "CALLDATALOAD",
      "path": "8"
    },
    "364": {
      "branch": 13,
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1637,
        1676
      ],
      "op": "EQ",
      "path": "8"
    },
    "365": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1633,
        1717
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x189"
    },
    "368": {
      "branch": 13,
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1633,
        1717
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "369": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1697,
        1717
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "371": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1697,
        1717
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "372": {
      "op": "PUSH4",
      "value": "0x1391E11B"
    },
    "377": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "379": {
      "op": "SHL"
    },
    "380": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1697,
        1717
      ],
      "op": "DUP2",
      "path": "8"
    },
    "381": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1697,
        1717
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "382": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1697,
        1717
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "384": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1697,
        1717
      ],
      "op": "ADD",
      "path": "8"
    },
    "385": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1697,
        1717
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "387": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1697,
        1717
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "388": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1697,
        1717
      ],
      "op": "DUP1",
      "path": "8"
    },
    "389": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1697,
        1717
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "390": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1697,
        1717
      ],
      "op": "SUB",
      "path": "8"
    },
    "391": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1697,
        1717
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "392": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1697,
        1717
      ],
      "op": "REVERT",
      "path": "8"
    },
    "393": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1633,
        1717
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "394": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1762,
        1767
      ],
      "op": "DUP1",
      "path": "8"
    },
    "395": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1762,
        1784
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x60"
    },
    "397": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1762,
        1784
      ],
      "op": "ADD",
      "path": "8"
    },
    "398": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1762,
        1784
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "399": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "401": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "403": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "405": {
      "op": "SHL"
    },
    "406": {
      "op": "SUB"
    },
    "407": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1744,
        1801
      ],
      "op": "AND",
      "path": "8"
    },
    "408": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1744,
        1801
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x6E785635"
    },
    "413": {
      "offset": [
        673,
        682
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x1E8480"
    },
    "417": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1744,
        1858
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "419": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1744,
        1858
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "420": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1744,
        1858
      ],
      "op": "DUP3",
      "path": "8"
    },
    "421": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1744,
        1858
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xFFFFFFFF"
    },
    "426": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1744,
        1858
      ],
      "op": "AND",
      "path": "8"
    },
    "427": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1744,
        1858
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xE0"
    },
    "429": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1744,
        1858
      ],
      "op": "SHL",
      "path": "8"
    },
    "430": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1744,
        1858
      ],
      "op": "DUP2",
      "path": "8"
    },
    "431": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1744,
        1858
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "432": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1744,
        1858
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "434": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1744,
        1858
      ],
      "op": "ADD",
      "path": "8"
    },
    "435": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1744,
        1858
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "437": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1744,
        1858
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "439": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1744,
        1858
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "440": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1744,
        1858
      ],
      "op": "DUP1",
      "path": "8"
    },
    "441": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1744,
        1858
      ],
      "op": "DUP4",
      "path": "8"
    },
    "442": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1744,
        1858
      ],
      "op": "SUB",
      "path": "8"
    },
    "443": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1744,
        1858
      ],
      "op": "DUP2",
      "path": "8"
    },
    "444": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1744,
        1858
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "446": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1744,
        1858
      ],
      "op": "DUP9",
      "path": "8"
    },
    "447": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1744,
        1858
      ],
      "op": "DUP1",
      "path": "8"
    },
    "448": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1744,
        1858
      ],
      "op": "EXTCODESIZE",
      "path": "8"
    },
    "449": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1744,
        1858
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "450": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1744,
        1858
      ],
      "op": "DUP1",
      "path": "8"
    },
    "451": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1744,
        1858
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "452": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1744,
        1858
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1CC"
    },
    "455": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1744,
        1858
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "456": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1744,
        1858
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "458": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1744,
        1858
      ],
      "op": "DUP1",
      "path": "8"
    },
    "459": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1744,
        1858
      ],
      "op": "REVERT",
      "path": "8"
    },
    "460": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1744,
        1858
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "461": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1744,
        1858
      ],
      "op": "POP",
      "path": "8"
    },
    "462": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1744,
        1858
      ],
      "op": "DUP8",
      "path": "8"
    },
    "463": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1744,
        1858
      ],
      "op": "CALL",
      "path": "8"
    },
    "464": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1744,
        1858
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "465": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1744,
        1858
      ],
      "op": "POP",
      "path": "8"
    },
    "466": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1744,
        1858
      ],
      "op": "POP",
      "path": "8"
    },
    "467": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1744,
        1858
      ],
      "op": "POP",
      "path": "8"
    },
    "468": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1744,
        1858
      ],
      "op": "POP",
      "path": "8"
    },
    "469": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1744,
        1858
      ],
      "op": "DUP1",
      "path": "8"
    },
    "470": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1744,
        1858
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "471": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1744,
        1858
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1DE"
    },
    "474": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1744,
        1858
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "475": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1744,
        1858
      ],
      "op": "POP",
      "path": "8"
    },
    "476": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1744,
        1858
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "478": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1744,
        1858
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "479": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1728,
        2053
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x25D"
    },
    "482": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1728,
        2053
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "483": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1728,
        2053
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "484": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1728,
        2053
      ],
      "op": "DUP1",
      "path": "8"
    },
    "485": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1728,
        2053
      ],
      "op": "DUP1",
      "path": "8"
    },
    "486": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1728,
        2053
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "487": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1728,
        2053
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x20C"
    },
    "490": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1728,
        2053
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "491": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1728,
        2053
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "493": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1728,
        2053
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "494": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1728,
        2053
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "495": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1728,
        2053
      ],
      "op": "POP",
      "path": "8"
    },
    "496": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1728,
        2053
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "498": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1728,
        2053
      ],
      "op": "NOT",
      "path": "8"
    },
    "499": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1728,
        2053
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3F"
    },
    "501": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1728,
        2053
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "502": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1728,
        2053
      ],
      "op": "ADD",
      "path": "8"
    },
    "503": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1728,
        2053
      ],
      "op": "AND",
      "path": "8"
    },
    "504": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1728,
        2053
      ],
      "op": "DUP3",
      "path": "8"
    },
    "505": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1728,
        2053
      ],
      "op": "ADD",
      "path": "8"
    },
    "506": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1728,
        2053
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "508": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1728,
        2053
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "509": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1728,
        2053
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "510": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1728,
        2053
      ],
      "op": "DUP3",
      "path": "8"
    },
    "511": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1728,
        2053
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "512": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1728,
        2053
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "513": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1728,
        2053
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "515": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1728,
        2053
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "517": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1728,
        2053
      ],
      "op": "DUP5",
      "path": "8"
    },
    "518": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1728,
        2053
      ],
      "op": "ADD",
      "path": "8"
    },
    "519": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1728,
        2053
      ],
      "op": "RETURNDATACOPY",
      "path": "8"
    },
    "520": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1728,
        2053
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x211"
    },
    "523": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1728,
        2053
      ],
      "op": "JUMP",
      "path": "8"
    },
    "524": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1728,
        2053
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "525": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1728,
        2053
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x60"
    },
    "527": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1728,
        2053
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "528": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1728,
        2053
      ],
      "op": "POP",
      "path": "8"
    },
    "529": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1728,
        2053
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "530": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1728,
        2053
      ],
      "op": "POP",
      "path": "8"
    },
    "531": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1917,
        1944
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "533": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1947,
        1976
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x21D"
    },
    "536": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1964,
        1975
      ],
      "op": "DUP3",
      "path": "8"
    },
    "537": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1947,
        1963
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3F7"
    },
    "540": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "jump": "i",
      "offset": [
        1947,
        1976
      ],
      "op": "JUMP",
      "path": "8"
    },
    "541": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1947,
        1976
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "542": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1917,
        1976
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "543": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1917,
        1976
      ],
      "op": "POP",
      "path": "8"
    },
    "544": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1995,
        2042
      ],
      "op": "PUSH32",
      "path": "8",
      "statement": 3,
      "value": "0xBF632020A1C07F4B367CA6AE407917CE61E6B899501CD7DD12053431C249F4B9"
    },
    "577": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        2010,
        2013
      ],
      "op": "DUP6",
      "path": "8"
    },
    "578": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        2015,
        2028
      ],
      "op": "DUP3",
      "path": "8"
    },
    "579": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        2030,
        2041
      ],
      "op": "DUP5",
      "path": "8"
    },
    "580": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1995,
        2042
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "582": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1995,
        2042
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "583": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1995,
        2042
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x252"
    },
    "586": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1995,
        2042
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "587": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1995,
        2042
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "588": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1995,
        2042
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "589": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1995,
        2042
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "590": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1995,
        2042
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x673"
    },
    "593": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "jump": "i",
      "offset": [
        1995,
        2042
      ],
      "op": "JUMP",
      "path": "8"
    },
    "594": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1995,
        2042
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "595": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1995,
        2042
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "597": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1995,
        2042
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "598": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1995,
        2042
      ],
      "op": "DUP1",
      "path": "8"
    },
    "599": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1995,
        2042
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "600": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1995,
        2042
      ],
      "op": "SUB",
      "path": "8"
    },
    "601": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1995,
        2042
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "602": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1995,
        2042
      ],
      "op": "LOG1",
      "path": "8"
    },
    "603": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1903,
        2053
      ],
      "op": "POP",
      "path": "8"
    },
    "604": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1870,
        2053
      ],
      "op": "POP",
      "path": "8"
    },
    "605": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1728,
        2053
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "606": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        2152,
        2158
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 4,
      "value": "0x0"
    },
    "608": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        2152,
        2163
      ],
      "op": "DUP4",
      "path": "8"
    },
    "609": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        2152,
        2163
      ],
      "op": "DUP2",
      "path": "8"
    },
    "610": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        2152,
        2163
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "611": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        2152,
        2163
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "613": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        2152,
        2163
      ],
      "op": "DUP2",
      "path": "8"
    },
    "614": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        2152,
        2163
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "615": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        2152,
        2163
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "616": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        2152,
        2163
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "618": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        2152,
        2163
      ],
      "op": "DUP2",
      "path": "8"
    },
    "619": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        2152,
        2163
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "620": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        2145,
        2163
      ],
      "op": "DUP1",
      "path": "8"
    },
    "621": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        2145,
        2163
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "622": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "624": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "626": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "628": {
      "op": "SHL"
    },
    "629": {
      "op": "SUB"
    },
    "630": {
      "op": "NOT"
    },
    "631": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        2145,
        2163
      ],
      "op": "AND",
      "path": "8"
    },
    "632": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        2145,
        2163
      ],
      "op": "DUP2",
      "path": "8"
    },
    "633": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        2145,
        2163
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "634": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        2152,
        2163
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "635": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        2145,
        2163
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x287"
    },
    "638": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        2145,
        2163
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "640": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        2145,
        2163
      ],
      "op": "DUP4",
      "path": "8"
    },
    "641": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        2145,
        2163
      ],
      "op": "ADD",
      "path": "8"
    },
    "642": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        2152,
        2158
      ],
      "op": "DUP3",
      "path": "8"
    },
    "643": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        2145,
        2163
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x4B6"
    },
    "646": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "jump": "i",
      "offset": [
        2145,
        2163
      ],
      "op": "JUMP",
      "path": "8"
    },
    "647": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        2145,
        2163
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "648": {
      "op": "POP"
    },
    "649": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        2145,
        2163
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "651": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        2145,
        2163
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x2"
    },
    "653": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        2145,
        2163
      ],
      "op": "DUP3",
      "path": "8"
    },
    "654": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        2145,
        2163
      ],
      "op": "ADD",
      "path": "8"
    },
    "655": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        2145,
        2163
      ],
      "op": "DUP2",
      "path": "8"
    },
    "656": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        2145,
        2163
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "657": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        2145,
        2163
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "658": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        2145,
        2163
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3"
    },
    "660": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        2145,
        2163
      ],
      "op": "DUP3",
      "path": "8"
    },
    "661": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        2145,
        2163
      ],
      "op": "ADD",
      "path": "8"
    },
    "662": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        2145,
        2163
      ],
      "op": "DUP1",
      "path": "8"
    },
    "663": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        2145,
        2163
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "664": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "666": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "668": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "670": {
      "op": "SHL"
    },
    "671": {
      "op": "SUB"
    },
    "672": {
      "op": "NOT"
    },
    "673": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        2145,
        2163
      ],
      "op": "AND",
      "path": "8"
    },
    "674": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        2145,
        2163
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "675": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        2145,
        2163
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "676": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        2145,
        2163
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "678": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        2145,
        2163
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "679": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        2145,
        2163
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "680": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        2145,
        2163
      ],
      "op": "ADD",
      "path": "8"
    },
    "681": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        2145,
        2163
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "682": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        2179,
        2215
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 5,
      "value": "0x40"
    },
    "684": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        2179,
        2215
      ],
      "op": "DUP1",
      "path": "8"
    },
    "685": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        2179,
        2215
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "686": {
      "op": "DUP5"
    },
    "687": {
      "op": "DUP2"
    },
    "688": {
      "op": "MSTORE"
    },
    "689": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        2202,
        2214
      ],
      "op": "DUP4",
      "path": "8"
    },
    "690": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        2202,
        2214
      ],
      "op": "CALLDATALOAD",
      "path": "8"
    },
    "691": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "693": {
      "op": "DUP3"
    },
    "694": {
      "op": "ADD"
    },
    "695": {
      "op": "MSTORE"
    },
    "696": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        2179,
        2215
      ],
      "op": "PUSH32",
      "path": "8",
      "value": "0x8497A12481E78C68D92B598EC252FED7981F6F4DB17519F38B30085D27B0693A"
    },
    "729": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        2179,
        2215
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "730": {
      "op": "ADD"
    },
    "731": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        2179,
        2215
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "733": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        2179,
        2215
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "734": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        2179,
        2215
      ],
      "op": "DUP1",
      "path": "8"
    },
    "735": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        2179,
        2215
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "736": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        2179,
        2215
      ],
      "op": "SUB",
      "path": "8"
    },
    "737": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        2179,
        2215
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "738": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        2179,
        2215
      ],
      "op": "LOG1",
      "path": "8"
    },
    "739": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1459,
        2222
      ],
      "op": "POP",
      "path": "8"
    },
    "740": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1360,
        2222
      ],
      "op": "POP",
      "path": "8"
    },
    "741": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "offset": [
        1360,
        2222
      ],
      "op": "POP",
      "path": "8"
    },
    "742": {
      "fn": "TwoStepExchange.executeSwapOrder",
      "jump": "o",
      "offset": [
        1360,
        2222
      ],
      "op": "JUMP",
      "path": "8"
    },
    "743": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        980,
        1354
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "744": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1145,
        1347
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 6,
      "value": "0x40"
    },
    "746": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1145,
        1347
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "747": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1145,
        1347
      ],
      "op": "DUP1",
      "path": "8"
    },
    "748": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1145,
        1347
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xA0"
    },
    "750": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1145,
        1347
      ],
      "op": "ADD",
      "path": "8"
    },
    "751": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1145,
        1347
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "753": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1145,
        1347
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "754": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1145,
        1347
      ],
      "op": "DUP1",
      "path": "8"
    },
    "755": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1178,
        1188
      ],
      "op": "CALLER",
      "path": "8"
    },
    "756": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "758": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "760": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "762": {
      "op": "SHL"
    },
    "763": {
      "op": "SUB"
    },
    "764": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1145,
        1347
      ],
      "op": "AND",
      "path": "8"
    },
    "765": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1145,
        1347
      ],
      "op": "DUP2",
      "path": "8"
    },
    "766": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1145,
        1347
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "767": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1145,
        1347
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "769": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1145,
        1347
      ],
      "op": "ADD",
      "path": "8"
    },
    "770": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1209,
        1215
      ],
      "op": "DUP6",
      "path": "8"
    },
    "771": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1209,
        1215
      ],
      "op": "DUP6",
      "path": "8"
    },
    "772": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1145,
        1347
      ],
      "op": "DUP1",
      "path": "8"
    },
    "773": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1145,
        1347
      ],
      "op": "DUP1",
      "path": "8"
    },
    "774": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1145,
        1347
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "776": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1145,
        1347
      ],
      "op": "MUL",
      "path": "8"
    },
    "777": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1145,
        1347
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "779": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1145,
        1347
      ],
      "op": "ADD",
      "path": "8"
    },
    "780": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1145,
        1347
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "782": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1145,
        1347
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "783": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1145,
        1347
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "784": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1145,
        1347
      ],
      "op": "DUP2",
      "path": "8"
    },
    "785": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1145,
        1347
      ],
      "op": "ADD",
      "path": "8"
    },
    "786": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1145,
        1347
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "788": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1145,
        1347
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "789": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1145,
        1347
      ],
      "op": "DUP1",
      "path": "8"
    },
    "790": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1145,
        1347
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "791": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1145,
        1347
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "792": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1145,
        1347
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "793": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1145,
        1347
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "794": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1145,
        1347
      ],
      "op": "DUP2",
      "path": "8"
    },
    "795": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1145,
        1347
      ],
      "op": "DUP2",
      "path": "8"
    },
    "796": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1145,
        1347
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "797": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1145,
        1347
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "799": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1145,
        1347
      ],
      "op": "ADD",
      "path": "8"
    },
    "800": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1145,
        1347
      ],
      "op": "DUP4",
      "path": "8"
    },
    "801": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1145,
        1347
      ],
      "op": "DUP4",
      "path": "8"
    },
    "802": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1145,
        1347
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "804": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1145,
        1347
      ],
      "op": "MUL",
      "path": "8"
    },
    "805": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1145,
        1347
      ],
      "op": "DUP1",
      "path": "8"
    },
    "806": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1145,
        1347
      ],
      "op": "DUP3",
      "path": "8"
    },
    "807": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1145,
        1347
      ],
      "op": "DUP5",
      "path": "8"
    },
    "808": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1145,
        1347
      ],
      "op": "CALLDATACOPY",
      "path": "8"
    },
    "809": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1145,
        1347
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "811": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1145,
        1347
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "812": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1145,
        1347
      ],
      "op": "ADD",
      "path": "8"
    },
    "813": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1145,
        1347
      ],
      "op": "DUP3",
      "path": "8"
    },
    "814": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1145,
        1347
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "815": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1145,
        1347
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "816": {
      "op": "POP"
    },
    "817": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1145,
        1347
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "818": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1145,
        1347
      ],
      "op": "DUP6",
      "path": "8"
    },
    "819": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1145,
        1347
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "820": {
      "op": "POP"
    },
    "821": {
      "op": "POP"
    },
    "822": {
      "op": "POP"
    },
    "823": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1145,
        1347
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "825": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1145,
        1347
      ],
      "op": "DUP3",
      "path": "8"
    },
    "826": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1145,
        1347
      ],
      "op": "ADD",
      "path": "8"
    },
    "827": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1145,
        1347
      ],
      "op": "DUP6",
      "path": "8"
    },
    "828": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1145,
        1347
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "829": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1145,
        1347
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "830": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "832": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "834": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "836": {
      "op": "SHL"
    },
    "837": {
      "op": "SUB"
    },
    "838": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1145,
        1347
      ],
      "op": "DUP5",
      "path": "8"
    },
    "839": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1145,
        1347
      ],
      "op": "AND",
      "path": "8"
    },
    "840": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1145,
        1347
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "842": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1145,
        1347
      ],
      "op": "DUP4",
      "path": "8"
    },
    "843": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1145,
        1347
      ],
      "op": "ADD",
      "path": "8"
    },
    "844": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1145,
        1347
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "845": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1324,
        1336
      ],
      "op": "NUMBER",
      "path": "8"
    },
    "846": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1145,
        1347
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x60"
    },
    "848": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1145,
        1347
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "849": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1145,
        1347
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "850": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1145,
        1347
      ],
      "op": "ADD",
      "path": "8"
    },
    "851": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1145,
        1347
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "852": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1145,
        1347
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "853": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1145,
        1347
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "854": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1145,
        1347
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "855": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1136,
        1141
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "857": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1134,
        1141
      ],
      "op": "DUP1",
      "path": "8"
    },
    "858": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1134,
        1141
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "859": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1145,
        1347
      ],
      "op": "DUP3",
      "path": "8"
    },
    "860": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1145,
        1347
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "861": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1136,
        1141
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "862": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1145,
        1347
      ],
      "op": "DUP3",
      "path": "8"
    },
    "863": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1145,
        1347
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "864": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1134,
        1141
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x368"
    },
    "867": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1134,
        1141
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "868": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1134,
        1141
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x6A8"
    },
    "871": {
      "fn": "TwoStepExchange.createSwapOrder",
      "jump": "i",
      "offset": [
        1134,
        1141
      ],
      "op": "JUMP",
      "path": "8"
    },
    "872": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1134,
        1141
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "873": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1134,
        1141
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "874": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1134,
        1141
      ],
      "op": "DUP3",
      "path": "8"
    },
    "875": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1134,
        1141
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "876": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1134,
        1141
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "877": {
      "op": "POP"
    },
    "878": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1127,
        1142
      ],
      "op": "DUP2",
      "path": "8"
    },
    "879": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1127,
        1142
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "880": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1127,
        1142
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "882": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1127,
        1142
      ],
      "op": "DUP1",
      "path": "8"
    },
    "883": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1127,
        1142
      ],
      "op": "DUP3",
      "path": "8"
    },
    "884": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1127,
        1142
      ],
      "op": "ADD",
      "path": "8"
    },
    "885": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1127,
        1142
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "886": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1127,
        1142
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "887": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1127,
        1142
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "888": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1127,
        1142
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "889": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1127,
        1142
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "891": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1127,
        1142
      ],
      "op": "ADD",
      "path": "8"
    },
    "892": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "894": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1127,
        1142
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "895": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1127,
        1347
      ],
      "op": "DUP3",
      "path": "8"
    },
    "896": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1127,
        1347
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "897": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1127,
        1347
      ],
      "op": "DUP2",
      "path": "8"
    },
    "898": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1127,
        1347
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "899": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "901": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "903": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "905": {
      "op": "SHL"
    },
    "906": {
      "op": "SUB"
    },
    "907": {
      "op": "NOT"
    },
    "908": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1127,
        1347
      ],
      "op": "AND",
      "path": "8"
    },
    "909": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "911": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "913": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "915": {
      "op": "SHL"
    },
    "916": {
      "op": "SUB"
    },
    "917": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1127,
        1347
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "918": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1127,
        1347
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "919": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1127,
        1347
      ],
      "op": "AND",
      "path": "8"
    },
    "920": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1127,
        1347
      ],
      "op": "OR",
      "path": "8"
    },
    "921": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1127,
        1347
      ],
      "op": "DUP2",
      "path": "8"
    },
    "922": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1127,
        1347
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "923": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1127,
        1347
      ],
      "op": "DUP3",
      "path": "8"
    },
    "924": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1127,
        1347
      ],
      "op": "DUP3",
      "path": "8"
    },
    "925": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1127,
        1347
      ],
      "op": "ADD",
      "path": "8"
    },
    "926": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1127,
        1347
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "927": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1127,
        1347
      ],
      "op": "DUP1",
      "path": "8"
    },
    "928": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1127,
        1347
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "929": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1127,
        1142
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "930": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1127,
        1142
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "931": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1127,
        1347
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3B4"
    },
    "934": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1127,
        1347
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "935": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "937": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1127,
        1347
      ],
      "op": "DUP6",
      "path": "8"
    },
    "938": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1127,
        1347
      ],
      "op": "ADD",
      "path": "8"
    },
    "939": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1127,
        1347
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "940": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1127,
        1347
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "941": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1127,
        1347
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "942": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1127,
        1347
      ],
      "op": "ADD",
      "path": "8"
    },
    "943": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1127,
        1347
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "944": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1127,
        1347
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x4D7"
    },
    "947": {
      "fn": "TwoStepExchange.createSwapOrder",
      "jump": "i",
      "offset": [
        1127,
        1347
      ],
      "op": "JUMP",
      "path": "8"
    },
    "948": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1127,
        1347
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "949": {
      "op": "POP"
    },
    "950": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1127,
        1347
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "952": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1127,
        1347
      ],
      "op": "DUP3",
      "path": "8"
    },
    "953": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1127,
        1347
      ],
      "op": "ADD",
      "path": "8"
    },
    "954": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1127,
        1347
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "955": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1127,
        1347
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x2"
    },
    "957": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1127,
        1347
      ],
      "op": "DUP3",
      "path": "8"
    },
    "958": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1127,
        1347
      ],
      "op": "ADD",
      "path": "8"
    },
    "959": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1127,
        1347
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "960": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1127,
        1347
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x60"
    },
    "962": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1127,
        1347
      ],
      "op": "DUP3",
      "path": "8"
    },
    "963": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1127,
        1347
      ],
      "op": "ADD",
      "path": "8"
    },
    "964": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1127,
        1347
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "965": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1127,
        1347
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3"
    },
    "967": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1127,
        1347
      ],
      "op": "DUP3",
      "path": "8"
    },
    "968": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1127,
        1347
      ],
      "op": "ADD",
      "path": "8"
    },
    "969": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1127,
        1347
      ],
      "op": "DUP1",
      "path": "8"
    },
    "970": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1127,
        1347
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "971": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "973": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "975": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "977": {
      "op": "SHL"
    },
    "978": {
      "op": "SUB"
    },
    "979": {
      "op": "NOT"
    },
    "980": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1127,
        1347
      ],
      "op": "AND",
      "path": "8"
    },
    "981": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "983": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "985": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "987": {
      "op": "SHL"
    },
    "988": {
      "op": "SUB"
    },
    "989": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1127,
        1347
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "990": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1127,
        1347
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "991": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1127,
        1347
      ],
      "op": "AND",
      "path": "8"
    },
    "992": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1127,
        1347
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "993": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1127,
        1347
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "994": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1127,
        1347
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "995": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1127,
        1347
      ],
      "op": "OR",
      "path": "8"
    },
    "996": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1127,
        1347
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "997": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1127,
        1347
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "998": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1127,
        1347
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x80"
    },
    "1000": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1127,
        1347
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1001": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1127,
        1347
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1002": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1127,
        1347
      ],
      "op": "ADD",
      "path": "8"
    },
    "1003": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1127,
        1347
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1004": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1127,
        1347
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "1006": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1127,
        1347
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1007": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1127,
        1347
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1008": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1127,
        1347
      ],
      "op": "ADD",
      "path": "8"
    },
    "1009": {
      "fn": "TwoStepExchange.createSwapOrder",
      "offset": [
        1127,
        1347
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "1010": {
      "op": "POP"
    },
    "1011": {
      "op": "POP"
    },
    "1012": {
      "op": "POP"
    },
    "1013": {
      "op": "POP"
    },
    "1014": {
      "fn": "TwoStepExchange.createSwapOrder",
      "jump": "o",
      "offset": [
        980,
        1354
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1015": {
      "fn": "TwoStepExchange.getRevertMessage",
      "offset": [
        2228,
        2833
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1016": {
      "fn": "TwoStepExchange.getRevertMessage",
      "offset": [
        2332,
        2357
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1018": {
      "fn": "TwoStepExchange.getRevertMessage",
      "offset": [
        2332,
        2357
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1019": {
      "fn": "TwoStepExchange.getRevertMessage",
      "offset": [
        2332,
        2357
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1020": {
      "fn": "TwoStepExchange.getRevertMessage",
      "offset": [
        2332,
        2357
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "1022": {
      "fn": "TwoStepExchange.getRevertMessage",
      "offset": [
        2332,
        2357
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1023": {
      "fn": "TwoStepExchange.getRevertMessage",
      "offset": [
        2332,
        2357
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1024": {
      "fn": "TwoStepExchange.getRevertMessage",
      "offset": [
        2332,
        2357
      ],
      "op": "ADD",
      "path": "8"
    },
    "1025": {
      "fn": "TwoStepExchange.getRevertMessage",
      "offset": [
        2332,
        2357
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1026": {
      "fn": "TwoStepExchange.getRevertMessage",
      "offset": [
        2332,
        2357
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "1027": {
      "fn": "TwoStepExchange.getRevertMessage",
      "offset": [
        2332,
        2357
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1028": {
      "fn": "TwoStepExchange.getRevertMessage",
      "offset": [
        2332,
        2352
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1030": {
      "fn": "TwoStepExchange.getRevertMessage",
      "offset": [
        2332,
        2357
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1031": {
      "fn": "TwoStepExchange.getRevertMessage",
      "offset": [
        2332,
        2357
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1032": {
      "fn": "TwoStepExchange.getRevertMessage",
      "offset": [
        2445,
        2462
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1033": {
      "fn": "TwoStepExchange.getRevertMessage",
      "offset": [
        2445,
        2462
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1034": {
      "fn": "TwoStepExchange.getRevertMessage",
      "offset": [
        2445,
        2462
      ],
      "op": "ADD",
      "path": "8"
    },
    "1035": {
      "fn": "TwoStepExchange.getRevertMessage",
      "offset": [
        2439,
        2463
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1036": {
      "fn": "TwoStepExchange.getRevertMessage",
      "offset": [
        2307,
        2320
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x60"
    },
    "1038": {
      "fn": "TwoStepExchange.getRevertMessage",
      "offset": [
        2307,
        2320
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1039": {
      "fn": "TwoStepExchange.getRevertMessage",
      "offset": [
        2332,
        2357
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1040": {
      "op": "PUSH4",
      "value": "0x7B9E433"
    },
    "1045": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1047": {
      "op": "SHL"
    },
    "1048": {
      "fn": "TwoStepExchange.getRevertMessage",
      "offset": [
        2487,
        2522
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1049": {
      "branch": 14,
      "fn": "TwoStepExchange.getRevertMessage",
      "offset": [
        2487,
        2522
      ],
      "op": "ADD",
      "path": "8"
    },
    "1050": {
      "fn": "TwoStepExchange.getRevertMessage",
      "offset": [
        2483,
        2802
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x477"
    },
    "1053": {
      "branch": 14,
      "fn": "TwoStepExchange.getRevertMessage",
      "offset": [
        2483,
        2802
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1054": {
      "fn": "TwoStepExchange.getRevertMessage",
      "offset": [
        2629,
        2633
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "1056": {
      "fn": "TwoStepExchange.getRevertMessage",
      "offset": [
        2621,
        2627
      ],
      "op": "DUP5",
      "path": "8"
    },
    "1057": {
      "fn": "TwoStepExchange.getRevertMessage",
      "offset": [
        2617,
        2634
      ],
      "op": "ADD",
      "path": "8"
    },
    "1058": {
      "fn": "TwoStepExchange.getRevertMessage",
      "offset": [
        2607,
        2634
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "1059": {
      "fn": "TwoStepExchange.getRevertMessage",
      "offset": [
        2607,
        2634
      ],
      "op": "POP",
      "path": "8"
    },
    "1060": {
      "fn": "TwoStepExchange.getRevertMessage",
      "offset": [
        2683,
        2689
      ],
      "op": "DUP4",
      "path": "8",
      "statement": 7
    },
    "1061": {
      "fn": "TwoStepExchange.getRevertMessage",
      "offset": [
        2672,
        2700
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1062": {
      "fn": "TwoStepExchange.getRevertMessage",
      "offset": [
        2672,
        2700
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "1064": {
      "fn": "TwoStepExchange.getRevertMessage",
      "offset": [
        2672,
        2700
      ],
      "op": "ADD",
      "path": "8"
    },
    "1065": {
      "fn": "TwoStepExchange.getRevertMessage",
      "offset": [
        2672,
        2700
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1066": {
      "fn": "TwoStepExchange.getRevertMessage",
      "offset": [
        2672,
        2700
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1067": {
      "fn": "TwoStepExchange.getRevertMessage",
      "offset": [
        2672,
        2700
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1068": {
      "fn": "TwoStepExchange.getRevertMessage",
      "offset": [
        2672,
        2700
      ],
      "op": "ADD",
      "path": "8"
    },
    "1069": {
      "fn": "TwoStepExchange.getRevertMessage",
      "offset": [
        2672,
        2700
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1070": {
      "fn": "TwoStepExchange.getRevertMessage",
      "offset": [
        2672,
        2700
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x437"
    },
    "1073": {
      "fn": "TwoStepExchange.getRevertMessage",
      "offset": [
        2672,
        2700
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1074": {
      "fn": "TwoStepExchange.getRevertMessage",
      "offset": [
        2672,
        2700
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1075": {
      "fn": "TwoStepExchange.getRevertMessage",
      "offset": [
        2672,
        2700
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x6E5"
    },
    "1078": {
      "fn": "TwoStepExchange.getRevertMessage",
      "jump": "i",
      "offset": [
        2672,
        2700
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1079": {
      "fn": "TwoStepExchange.getRevertMessage",
      "offset": [
        2672,
        2700
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1080": {
      "fn": "TwoStepExchange.getRevertMessage",
      "offset": [
        2662,
        2701
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1081": {
      "fn": "TwoStepExchange.getRevertMessage",
      "offset": [
        2662,
        2701
      ],
      "op": "POP",
      "path": "8"
    },
    "1082": {
      "fn": "TwoStepExchange.getRevertMessage",
      "offset": [
        2720,
        2749
      ],
      "op": "PUSH32",
      "path": "8",
      "statement": 8,
      "value": "0x834F1FF8B471941193150A9823E4CAEC4E20847EEE18456B3782315A53E619E5"
    },
    "1115": {
      "fn": "TwoStepExchange.getRevertMessage",
      "offset": [
        2734,
        2740
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1116": {
      "fn": "TwoStepExchange.getRevertMessage",
      "offset": [
        2742,
        2748
      ],
      "op": "DUP6",
      "path": "8"
    },
    "1117": {
      "fn": "TwoStepExchange.getRevertMessage",
      "offset": [
        2720,
        2749
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1119": {
      "fn": "TwoStepExchange.getRevertMessage",
      "offset": [
        2720,
        2749
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1120": {
      "fn": "TwoStepExchange.getRevertMessage",
      "offset": [
        2720,
        2749
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x46A"
    },
    "1123": {
      "fn": "TwoStepExchange.getRevertMessage",
      "offset": [
        2720,
        2749
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "1124": {
      "fn": "TwoStepExchange.getRevertMessage",
      "offset": [
        2720,
        2749
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1125": {
      "fn": "TwoStepExchange.getRevertMessage",
      "offset": [
        2720,
        2749
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1126": {
      "fn": "TwoStepExchange.getRevertMessage",
      "offset": [
        2720,
        2749
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x792"
    },
    "1129": {
      "fn": "TwoStepExchange.getRevertMessage",
      "jump": "i",
      "offset": [
        2720,
        2749
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1130": {
      "fn": "TwoStepExchange.getRevertMessage",
      "offset": [
        2720,
        2749
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1131": {
      "fn": "TwoStepExchange.getRevertMessage",
      "offset": [
        2720,
        2749
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1133": {
      "fn": "TwoStepExchange.getRevertMessage",
      "offset": [
        2720,
        2749
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1134": {
      "fn": "TwoStepExchange.getRevertMessage",
      "offset": [
        2720,
        2749
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1135": {
      "fn": "TwoStepExchange.getRevertMessage",
      "offset": [
        2720,
        2749
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1136": {
      "fn": "TwoStepExchange.getRevertMessage",
      "offset": [
        2720,
        2749
      ],
      "op": "SUB",
      "path": "8"
    },
    "1137": {
      "fn": "TwoStepExchange.getRevertMessage",
      "offset": [
        2720,
        2749
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1138": {
      "fn": "TwoStepExchange.getRevertMessage",
      "offset": [
        2720,
        2749
      ],
      "op": "LOG1",
      "path": "8"
    },
    "1139": {
      "fn": "TwoStepExchange.getRevertMessage",
      "offset": [
        2483,
        2802
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x4AF"
    },
    "1142": {
      "fn": "TwoStepExchange.getRevertMessage",
      "offset": [
        2483,
        2802
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1143": {
      "fn": "TwoStepExchange.getRevertMessage",
      "offset": [
        2483,
        2802
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1144": {
      "fn": "TwoStepExchange.getRevertMessage",
      "offset": [
        2771,
        2802
      ],
      "op": "PUSH32",
      "path": "8",
      "statement": 9,
      "value": "0xAB15871CB2FA4DB3B815CF4C915F3EA1BBCFABE6094E9B8B2B1A0E973FAD673E"
    },
    "1177": {
      "fn": "TwoStepExchange.getRevertMessage",
      "offset": [
        2795,
        2801
      ],
      "op": "DUP5",
      "path": "8"
    },
    "1178": {
      "fn": "TwoStepExchange.getRevertMessage",
      "offset": [
        2771,
        2802
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1180": {
      "fn": "TwoStepExchange.getRevertMessage",
      "offset": [
        2771,
        2802
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1181": {
      "fn": "TwoStepExchange.getRevertMessage",
      "offset": [
        2771,
        2802
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x4A6"
    },
    "1184": {
      "fn": "TwoStepExchange.getRevertMessage",
      "offset": [
        2771,
        2802
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1185": {
      "fn": "TwoStepExchange.getRevertMessage",
      "offset": [
        2771,
        2802
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1186": {
      "fn": "TwoStepExchange.getRevertMessage",
      "offset": [
        2771,
        2802
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x7C0"
    },
    "1189": {
      "fn": "TwoStepExchange.getRevertMessage",
      "jump": "i",
      "offset": [
        2771,
        2802
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1190": {
      "fn": "TwoStepExchange.getRevertMessage",
      "offset": [
        2771,
        2802
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1191": {
      "fn": "TwoStepExchange.getRevertMessage",
      "offset": [
        2771,
        2802
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1193": {
      "fn": "TwoStepExchange.getRevertMessage",
      "offset": [
        2771,
        2802
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1194": {
      "fn": "TwoStepExchange.getRevertMessage",
      "offset": [
        2771,
        2802
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1195": {
      "fn": "TwoStepExchange.getRevertMessage",
      "offset": [
        2771,
        2802
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1196": {
      "fn": "TwoStepExchange.getRevertMessage",
      "offset": [
        2771,
        2802
      ],
      "op": "SUB",
      "path": "8"
    },
    "1197": {
      "fn": "TwoStepExchange.getRevertMessage",
      "offset": [
        2771,
        2802
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1198": {
      "fn": "TwoStepExchange.getRevertMessage",
      "offset": [
        2771,
        2802
      ],
      "op": "LOG1",
      "path": "8"
    },
    "1199": {
      "fn": "TwoStepExchange.getRevertMessage",
      "offset": [
        2483,
        2802
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1200": {
      "op": "POP"
    },
    "1201": {
      "fn": "TwoStepExchange.getRevertMessage",
      "offset": [
        2820,
        2826
      ],
      "op": "SWAP3",
      "path": "8",
      "statement": 10
    },
    "1202": {
      "fn": "TwoStepExchange.getRevertMessage",
      "offset": [
        2228,
        2833
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1203": {
      "op": "POP"
    },
    "1204": {
      "op": "POP"
    },
    "1205": {
      "fn": "TwoStepExchange.getRevertMessage",
      "jump": "o",
      "offset": [
        2228,
        2833
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1206": {
      "op": "JUMPDEST"
    },
    "1207": {
      "op": "POP"
    },
    "1208": {
      "op": "DUP1"
    },
    "1209": {
      "op": "SLOAD"
    },
    "1210": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1212": {
      "op": "DUP3"
    },
    "1213": {
      "op": "SSTORE"
    },
    "1214": {
      "op": "SWAP1"
    },
    "1215": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1217": {
      "op": "MSTORE"
    },
    "1218": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1220": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1222": {
      "op": "KECCAK256"
    },
    "1223": {
      "op": "SWAP1"
    },
    "1224": {
      "op": "DUP2"
    },
    "1225": {
      "op": "ADD"
    },
    "1226": {
      "op": "SWAP1"
    },
    "1227": {
      "op": "PUSH2",
      "value": "0x4D4"
    },
    "1230": {
      "op": "SWAP2"
    },
    "1231": {
      "op": "SWAP1"
    },
    "1232": {
      "op": "PUSH2",
      "value": "0x53C"
    },
    "1235": {
      "jump": "i",
      "op": "JUMP"
    },
    "1236": {
      "op": "JUMPDEST"
    },
    "1237": {
      "op": "POP"
    },
    "1238": {
      "jump": "o",
      "op": "JUMP"
    },
    "1239": {
      "op": "JUMPDEST"
    },
    "1240": {
      "op": "DUP3"
    },
    "1241": {
      "op": "DUP1"
    },
    "1242": {
      "op": "SLOAD"
    },
    "1243": {
      "op": "DUP3"
    },
    "1244": {
      "op": "DUP3"
    },
    "1245": {
      "op": "SSTORE"
    },
    "1246": {
      "op": "SWAP1"
    },
    "1247": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1249": {
      "op": "MSTORE"
    },
    "1250": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1252": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1254": {
      "op": "KECCAK256"
    },
    "1255": {
      "op": "SWAP1"
    },
    "1256": {
      "op": "DUP2"
    },
    "1257": {
      "op": "ADD"
    },
    "1258": {
      "op": "SWAP3"
    },
    "1259": {
      "op": "DUP3"
    },
    "1260": {
      "op": "ISZERO"
    },
    "1261": {
      "op": "PUSH2",
      "value": "0x52C"
    },
    "1264": {
      "op": "JUMPI"
    },
    "1265": {
      "op": "SWAP2"
    },
    "1266": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1268": {
      "op": "MUL"
    },
    "1269": {
      "op": "DUP3"
    },
    "1270": {
      "op": "ADD"
    },
    "1271": {
      "op": "JUMPDEST"
    },
    "1272": {
      "op": "DUP3"
    },
    "1273": {
      "op": "DUP2"
    },
    "1274": {
      "op": "GT"
    },
    "1275": {
      "op": "ISZERO"
    },
    "1276": {
      "op": "PUSH2",
      "value": "0x52C"
    },
    "1279": {
      "op": "JUMPI"
    },
    "1280": {
      "op": "DUP3"
    },
    "1281": {
      "op": "MLOAD"
    },
    "1282": {
      "op": "DUP3"
    },
    "1283": {
      "op": "SLOAD"
    },
    "1284": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1286": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1288": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1290": {
      "op": "SHL"
    },
    "1291": {
      "op": "SUB"
    },
    "1292": {
      "op": "NOT"
    },
    "1293": {
      "op": "AND"
    },
    "1294": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1296": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1298": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1300": {
      "op": "SHL"
    },
    "1301": {
      "op": "SUB"
    },
    "1302": {
      "op": "SWAP1"
    },
    "1303": {
      "op": "SWAP2"
    },
    "1304": {
      "op": "AND"
    },
    "1305": {
      "op": "OR"
    },
    "1306": {
      "op": "DUP3"
    },
    "1307": {
      "op": "SSTORE"
    },
    "1308": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1310": {
      "op": "SWAP1"
    },
    "1311": {
      "op": "SWAP3"
    },
    "1312": {
      "op": "ADD"
    },
    "1313": {
      "op": "SWAP2"
    },
    "1314": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1316": {
      "op": "SWAP1"
    },
    "1317": {
      "op": "SWAP2"
    },
    "1318": {
      "op": "ADD"
    },
    "1319": {
      "op": "SWAP1"
    },
    "1320": {
      "op": "PUSH2",
      "value": "0x4F7"
    },
    "1323": {
      "op": "JUMP"
    },
    "1324": {
      "op": "JUMPDEST"
    },
    "1325": {
      "op": "POP"
    },
    "1326": {
      "op": "PUSH2",
      "value": "0x538"
    },
    "1329": {
      "op": "SWAP3"
    },
    "1330": {
      "op": "SWAP2"
    },
    "1331": {
      "op": "POP"
    },
    "1332": {
      "op": "PUSH2",
      "value": "0x53C"
    },
    "1335": {
      "jump": "i",
      "op": "JUMP"
    },
    "1336": {
      "op": "JUMPDEST"
    },
    "1337": {
      "op": "POP"
    },
    "1338": {
      "op": "SWAP1"
    },
    "1339": {
      "jump": "o",
      "op": "JUMP"
    },
    "1340": {
      "op": "JUMPDEST"
    },
    "1341": {
      "op": "JUMPDEST"
    },
    "1342": {
      "op": "DUP1"
    },
    "1343": {
      "op": "DUP3"
    },
    "1344": {
      "op": "GT"
    },
    "1345": {
      "op": "ISZERO"
    },
    "1346": {
      "op": "PUSH2",
      "value": "0x538"
    },
    "1349": {
      "op": "JUMPI"
    },
    "1350": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1352": {
      "op": "DUP2"
    },
    "1353": {
      "op": "SSTORE"
    },
    "1354": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1356": {
      "op": "ADD"
    },
    "1357": {
      "op": "PUSH2",
      "value": "0x53D"
    },
    "1360": {
      "op": "JUMP"
    },
    "1361": {
      "op": "JUMPDEST"
    },
    "1362": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1364": {
      "op": "DUP1"
    },
    "1365": {
      "op": "DUP3"
    },
    "1366": {
      "op": "DUP5"
    },
    "1367": {
      "op": "SUB"
    },
    "1368": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1370": {
      "op": "DUP2"
    },
    "1371": {
      "op": "SLT"
    },
    "1372": {
      "op": "ISZERO"
    },
    "1373": {
      "op": "PUSH2",
      "value": "0x565"
    },
    "1376": {
      "op": "JUMPI"
    },
    "1377": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1379": {
      "op": "DUP1"
    },
    "1380": {
      "op": "REVERT"
    },
    "1381": {
      "op": "JUMPDEST"
    },
    "1382": {
      "op": "DUP4"
    },
    "1383": {
      "op": "CALLDATALOAD"
    },
    "1384": {
      "op": "SWAP3"
    },
    "1385": {
      "op": "POP"
    },
    "1386": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1388": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1390": {
      "op": "NOT"
    },
    "1391": {
      "op": "DUP3"
    },
    "1392": {
      "op": "ADD"
    },
    "1393": {
      "op": "SLT"
    },
    "1394": {
      "op": "ISZERO"
    },
    "1395": {
      "op": "PUSH2",
      "value": "0x57B"
    },
    "1398": {
      "op": "JUMPI"
    },
    "1399": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1401": {
      "op": "DUP1"
    },
    "1402": {
      "op": "REVERT"
    },
    "1403": {
      "op": "JUMPDEST"
    },
    "1404": {
      "op": "POP"
    },
    "1405": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1407": {
      "op": "DUP4"
    },
    "1408": {
      "op": "ADD"
    },
    "1409": {
      "op": "SWAP1"
    },
    "1410": {
      "op": "POP"
    },
    "1411": {
      "op": "SWAP3"
    },
    "1412": {
      "op": "POP"
    },
    "1413": {
      "op": "SWAP3"
    },
    "1414": {
      "op": "SWAP1"
    },
    "1415": {
      "op": "POP"
    },
    "1416": {
      "jump": "o",
      "op": "JUMP"
    },
    "1417": {
      "op": "JUMPDEST"
    },
    "1418": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1420": {
      "op": "DUP1"
    },
    "1421": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1423": {
      "op": "DUP1"
    },
    "1424": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1426": {
      "op": "DUP6"
    },
    "1427": {
      "op": "DUP8"
    },
    "1428": {
      "op": "SUB"
    },
    "1429": {
      "op": "SLT"
    },
    "1430": {
      "op": "ISZERO"
    },
    "1431": {
      "op": "PUSH2",
      "value": "0x59F"
    },
    "1434": {
      "op": "JUMPI"
    },
    "1435": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1437": {
      "op": "DUP1"
    },
    "1438": {
      "op": "REVERT"
    },
    "1439": {
      "op": "JUMPDEST"
    },
    "1440": {
      "op": "DUP5"
    },
    "1441": {
      "op": "CALLDATALOAD"
    },
    "1442": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1451": {
      "op": "DUP1"
    },
    "1452": {
      "op": "DUP3"
    },
    "1453": {
      "op": "GT"
    },
    "1454": {
      "op": "ISZERO"
    },
    "1455": {
      "op": "PUSH2",
      "value": "0x5B7"
    },
    "1458": {
      "op": "JUMPI"
    },
    "1459": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1461": {
      "op": "DUP1"
    },
    "1462": {
      "op": "REVERT"
    },
    "1463": {
      "op": "JUMPDEST"
    },
    "1464": {
      "op": "DUP2"
    },
    "1465": {
      "op": "DUP8"
    },
    "1466": {
      "op": "ADD"
    },
    "1467": {
      "op": "SWAP2"
    },
    "1468": {
      "op": "POP"
    },
    "1469": {
      "op": "DUP8"
    },
    "1470": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1472": {
      "op": "DUP4"
    },
    "1473": {
      "op": "ADD"
    },
    "1474": {
      "op": "SLT"
    },
    "1475": {
      "op": "PUSH2",
      "value": "0x5CB"
    },
    "1478": {
      "op": "JUMPI"
    },
    "1479": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1481": {
      "op": "DUP1"
    },
    "1482": {
      "op": "REVERT"
    },
    "1483": {
      "op": "JUMPDEST"
    },
    "1484": {
      "op": "DUP2"
    },
    "1485": {
      "op": "CALLDATALOAD"
    },
    "1486": {
      "op": "DUP2"
    },
    "1487": {
      "op": "DUP2"
    },
    "1488": {
      "op": "GT"
    },
    "1489": {
      "op": "ISZERO"
    },
    "1490": {
      "op": "PUSH2",
      "value": "0x5DA"
    },
    "1493": {
      "op": "JUMPI"
    },
    "1494": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1496": {
      "op": "DUP1"
    },
    "1497": {
      "op": "REVERT"
    },
    "1498": {
      "op": "JUMPDEST"
    },
    "1499": {
      "op": "DUP9"
    },
    "1500": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1502": {
      "op": "DUP3"
    },
    "1503": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "1505": {
      "op": "SHL"
    },
    "1506": {
      "op": "DUP6"
    },
    "1507": {
      "op": "ADD"
    },
    "1508": {
      "op": "ADD"
    },
    "1509": {
      "op": "GT"
    },
    "1510": {
      "op": "ISZERO"
    },
    "1511": {
      "op": "PUSH2",
      "value": "0x5EF"
    },
    "1514": {
      "op": "JUMPI"
    },
    "1515": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1517": {
      "op": "DUP1"
    },
    "1518": {
      "op": "REVERT"
    },
    "1519": {
      "op": "JUMPDEST"
    },
    "1520": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1522": {
      "op": "SWAP3"
    },
    "1523": {
      "op": "DUP4"
    },
    "1524": {
      "op": "ADD"
    },
    "1525": {
      "op": "SWAP7"
    },
    "1526": {
      "op": "POP"
    },
    "1527": {
      "op": "SWAP5"
    },
    "1528": {
      "op": "POP"
    },
    "1529": {
      "op": "POP"
    },
    "1530": {
      "op": "DUP6"
    },
    "1531": {
      "op": "ADD"
    },
    "1532": {
      "op": "CALLDATALOAD"
    },
    "1533": {
      "op": "SWAP2"
    },
    "1534": {
      "op": "POP"
    },
    "1535": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1537": {
      "op": "DUP6"
    },
    "1538": {
      "op": "ADD"
    },
    "1539": {
      "op": "CALLDATALOAD"
    },
    "1540": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1542": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1544": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1546": {
      "op": "SHL"
    },
    "1547": {
      "op": "SUB"
    },
    "1548": {
      "op": "DUP2"
    },
    "1549": {
      "op": "AND"
    },
    "1550": {
      "op": "DUP2"
    },
    "1551": {
      "op": "EQ"
    },
    "1552": {
      "op": "PUSH2",
      "value": "0x618"
    },
    "1555": {
      "op": "JUMPI"
    },
    "1556": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1558": {
      "op": "DUP1"
    },
    "1559": {
      "op": "REVERT"
    },
    "1560": {
      "op": "JUMPDEST"
    },
    "1561": {
      "op": "SWAP4"
    },
    "1562": {
      "op": "SWAP7"
    },
    "1563": {
      "op": "SWAP3"
    },
    "1564": {
      "op": "SWAP6"
    },
    "1565": {
      "op": "POP"
    },
    "1566": {
      "op": "SWAP1"
    },
    "1567": {
      "op": "SWAP4"
    },
    "1568": {
      "op": "POP"
    },
    "1569": {
      "op": "POP"
    },
    "1570": {
      "jump": "o",
      "op": "JUMP"
    },
    "1571": {
      "op": "JUMPDEST"
    },
    "1572": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1574": {
      "op": "JUMPDEST"
    },
    "1575": {
      "op": "DUP4"
    },
    "1576": {
      "op": "DUP2"
    },
    "1577": {
      "op": "LT"
    },
    "1578": {
      "op": "ISZERO"
    },
    "1579": {
      "op": "PUSH2",
      "value": "0x63E"
    },
    "1582": {
      "op": "JUMPI"
    },
    "1583": {
      "op": "DUP2"
    },
    "1584": {
      "op": "DUP2"
    },
    "1585": {
      "op": "ADD"
    },
    "1586": {
      "op": "MLOAD"
    },
    "1587": {
      "op": "DUP4"
    },
    "1588": {
      "op": "DUP3"
    },
    "1589": {
      "op": "ADD"
    },
    "1590": {
      "op": "MSTORE"
    },
    "1591": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1593": {
      "op": "ADD"
    },
    "1594": {
      "op": "PUSH2",
      "value": "0x626"
    },
    "1597": {
      "op": "JUMP"
    },
    "1598": {
      "op": "JUMPDEST"
    },
    "1599": {
      "op": "POP"
    },
    "1600": {
      "op": "POP"
    },
    "1601": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1603": {
      "op": "SWAP2"
    },
    "1604": {
      "op": "ADD"
    },
    "1605": {
      "op": "MSTORE"
    },
    "1606": {
      "jump": "o",
      "op": "JUMP"
    },
    "1607": {
      "op": "JUMPDEST"
    },
    "1608": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1610": {
      "op": "DUP2"
    },
    "1611": {
      "op": "MLOAD"
    },
    "1612": {
      "op": "DUP1"
    },
    "1613": {
      "op": "DUP5"
    },
    "1614": {
      "op": "MSTORE"
    },
    "1615": {
      "op": "PUSH2",
      "value": "0x65F"
    },
    "1618": {
      "op": "DUP2"
    },
    "1619": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1621": {
      "op": "DUP7"
    },
    "1622": {
      "op": "ADD"
    },
    "1623": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1625": {
      "op": "DUP7"
    },
    "1626": {
      "op": "ADD"
    },
    "1627": {
      "op": "PUSH2",
      "value": "0x623"
    },
    "1630": {
      "jump": "i",
      "op": "JUMP"
    },
    "1631": {
      "op": "JUMPDEST"
    },
    "1632": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1634": {
      "op": "ADD"
    },
    "1635": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1637": {
      "op": "NOT"
    },
    "1638": {
      "op": "AND"
    },
    "1639": {
      "op": "SWAP3"
    },
    "1640": {
      "op": "SWAP1"
    },
    "1641": {
      "op": "SWAP3"
    },
    "1642": {
      "op": "ADD"
    },
    "1643": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1645": {
      "op": "ADD"
    },
    "1646": {
      "op": "SWAP3"
    },
    "1647": {
      "op": "SWAP2"
    },
    "1648": {
      "op": "POP"
    },
    "1649": {
      "op": "POP"
    },
    "1650": {
      "jump": "o",
      "op": "JUMP"
    },
    "1651": {
      "op": "JUMPDEST"
    },
    "1652": {
      "op": "DUP4"
    },
    "1653": {
      "op": "DUP2"
    },
    "1654": {
      "op": "MSTORE"
    },
    "1655": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1657": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1659": {
      "op": "DUP3"
    },
    "1660": {
      "op": "ADD"
    },
    "1661": {
      "op": "MSTORE"
    },
    "1662": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1664": {
      "op": "PUSH2",
      "value": "0x68C"
    },
    "1667": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1669": {
      "op": "DUP4"
    },
    "1670": {
      "op": "ADD"
    },
    "1671": {
      "op": "DUP6"
    },
    "1672": {
      "op": "PUSH2",
      "value": "0x647"
    },
    "1675": {
      "jump": "i",
      "op": "JUMP"
    },
    "1676": {
      "op": "JUMPDEST"
    },
    "1677": {
      "op": "DUP3"
    },
    "1678": {
      "op": "DUP2"
    },
    "1679": {
      "op": "SUB"
    },
    "1680": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1682": {
      "op": "DUP5"
    },
    "1683": {
      "op": "ADD"
    },
    "1684": {
      "op": "MSTORE"
    },
    "1685": {
      "op": "PUSH2",
      "value": "0x69E"
    },
    "1688": {
      "op": "DUP2"
    },
    "1689": {
      "op": "DUP6"
    },
    "1690": {
      "op": "PUSH2",
      "value": "0x647"
    },
    "1693": {
      "jump": "i",
      "op": "JUMP"
    },
    "1694": {
      "op": "JUMPDEST"
    },
    "1695": {
      "op": "SWAP7"
    },
    "1696": {
      "op": "SWAP6"
    },
    "1697": {
      "op": "POP"
    },
    "1698": {
      "op": "POP"
    },
    "1699": {
      "op": "POP"
    },
    "1700": {
      "op": "POP"
    },
    "1701": {
      "op": "POP"
    },
    "1702": {
      "op": "POP"
    },
    "1703": {
      "jump": "o",
      "op": "JUMP"
    },
    "1704": {
      "op": "JUMPDEST"
    },
    "1705": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1707": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1709": {
      "op": "DUP3"
    },
    "1710": {
      "op": "ADD"
    },
    "1711": {
      "op": "PUSH2",
      "value": "0x6C8"
    },
    "1714": {
      "op": "JUMPI"
    },
    "1715": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1720": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1722": {
      "op": "SHL"
    },
    "1723": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1725": {
      "op": "MSTORE"
    },
    "1726": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "1728": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1730": {
      "op": "MSTORE"
    },
    "1731": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1733": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1735": {
      "op": "REVERT"
    },
    "1736": {
      "op": "JUMPDEST"
    },
    "1737": {
      "op": "POP"
    },
    "1738": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1740": {
      "op": "ADD"
    },
    "1741": {
      "op": "SWAP1"
    },
    "1742": {
      "jump": "o",
      "op": "JUMP"
    },
    "1743": {
      "op": "JUMPDEST"
    },
    "1744": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1749": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1751": {
      "op": "SHL"
    },
    "1752": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1754": {
      "op": "MSTORE"
    },
    "1755": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "1757": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1759": {
      "op": "MSTORE"
    },
    "1760": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1762": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1764": {
      "op": "REVERT"
    },
    "1765": {
      "op": "JUMPDEST"
    },
    "1766": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1768": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1770": {
      "op": "DUP3"
    },
    "1771": {
      "op": "DUP5"
    },
    "1772": {
      "op": "SUB"
    },
    "1773": {
      "op": "SLT"
    },
    "1774": {
      "op": "ISZERO"
    },
    "1775": {
      "op": "PUSH2",
      "value": "0x6F7"
    },
    "1778": {
      "op": "JUMPI"
    },
    "1779": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1781": {
      "op": "DUP1"
    },
    "1782": {
      "op": "REVERT"
    },
    "1783": {
      "op": "JUMPDEST"
    },
    "1784": {
      "op": "DUP2"
    },
    "1785": {
      "op": "MLOAD"
    },
    "1786": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1795": {
      "op": "DUP1"
    },
    "1796": {
      "op": "DUP3"
    },
    "1797": {
      "op": "GT"
    },
    "1798": {
      "op": "ISZERO"
    },
    "1799": {
      "op": "PUSH2",
      "value": "0x70F"
    },
    "1802": {
      "op": "JUMPI"
    },
    "1803": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1805": {
      "op": "DUP1"
    },
    "1806": {
      "op": "REVERT"
    },
    "1807": {
      "op": "JUMPDEST"
    },
    "1808": {
      "op": "DUP2"
    },
    "1809": {
      "op": "DUP5"
    },
    "1810": {
      "op": "ADD"
    },
    "1811": {
      "op": "SWAP2"
    },
    "1812": {
      "op": "POP"
    },
    "1813": {
      "op": "DUP5"
    },
    "1814": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1816": {
      "op": "DUP4"
    },
    "1817": {
      "op": "ADD"
    },
    "1818": {
      "op": "SLT"
    },
    "1819": {
      "op": "PUSH2",
      "value": "0x723"
    },
    "1822": {
      "op": "JUMPI"
    },
    "1823": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1825": {
      "op": "DUP1"
    },
    "1826": {
      "op": "REVERT"
    },
    "1827": {
      "op": "JUMPDEST"
    },
    "1828": {
      "op": "DUP2"
    },
    "1829": {
      "op": "MLOAD"
    },
    "1830": {
      "op": "DUP2"
    },
    "1831": {
      "op": "DUP2"
    },
    "1832": {
      "op": "GT"
    },
    "1833": {
      "op": "ISZERO"
    },
    "1834": {
      "op": "PUSH2",
      "value": "0x735"
    },
    "1837": {
      "op": "JUMPI"
    },
    "1838": {
      "op": "PUSH2",
      "value": "0x735"
    },
    "1841": {
      "op": "PUSH2",
      "value": "0x6CF"
    },
    "1844": {
      "jump": "i",
      "op": "JUMP"
    },
    "1845": {
      "op": "JUMPDEST"
    },
    "1846": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1848": {
      "op": "MLOAD"
    },
    "1849": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1851": {
      "op": "DUP3"
    },
    "1852": {
      "op": "ADD"
    },
    "1853": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1855": {
      "op": "NOT"
    },
    "1856": {
      "op": "SWAP1"
    },
    "1857": {
      "op": "DUP2"
    },
    "1858": {
      "op": "AND"
    },
    "1859": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "1861": {
      "op": "ADD"
    },
    "1862": {
      "op": "AND"
    },
    "1863": {
      "op": "DUP2"
    },
    "1864": {
      "op": "ADD"
    },
    "1865": {
      "op": "SWAP1"
    },
    "1866": {
      "op": "DUP4"
    },
    "1867": {
      "op": "DUP3"
    },
    "1868": {
      "op": "GT"
    },
    "1869": {
      "op": "DUP2"
    },
    "1870": {
      "op": "DUP4"
    },
    "1871": {
      "op": "LT"
    },
    "1872": {
      "op": "OR"
    },
    "1873": {
      "op": "ISZERO"
    },
    "1874": {
      "op": "PUSH2",
      "value": "0x75D"
    },
    "1877": {
      "op": "JUMPI"
    },
    "1878": {
      "op": "PUSH2",
      "value": "0x75D"
    },
    "1881": {
      "op": "PUSH2",
      "value": "0x6CF"
    },
    "1884": {
      "jump": "i",
      "op": "JUMP"
    },
    "1885": {
      "op": "JUMPDEST"
    },
    "1886": {
      "op": "DUP2"
    },
    "1887": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1889": {
      "op": "MSTORE"
    },
    "1890": {
      "op": "DUP3"
    },
    "1891": {
      "op": "DUP2"
    },
    "1892": {
      "op": "MSTORE"
    },
    "1893": {
      "op": "DUP8"
    },
    "1894": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1896": {
      "op": "DUP5"
    },
    "1897": {
      "op": "DUP8"
    },
    "1898": {
      "op": "ADD"
    },
    "1899": {
      "op": "ADD"
    },
    "1900": {
      "op": "GT"
    },
    "1901": {
      "op": "ISZERO"
    },
    "1902": {
      "op": "PUSH2",
      "value": "0x776"
    },
    "1905": {
      "op": "JUMPI"
    },
    "1906": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1908": {
      "op": "DUP1"
    },
    "1909": {
      "op": "REVERT"
    },
    "1910": {
      "op": "JUMPDEST"
    },
    "1911": {
      "op": "PUSH2",
      "value": "0x787"
    },
    "1914": {
      "op": "DUP4"
    },
    "1915": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1917": {
      "op": "DUP4"
    },
    "1918": {
      "op": "ADD"
    },
    "1919": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1921": {
      "op": "DUP9"
    },
    "1922": {
      "op": "ADD"
    },
    "1923": {
      "op": "PUSH2",
      "value": "0x623"
    },
    "1926": {
      "jump": "i",
      "op": "JUMP"
    },
    "1927": {
      "op": "JUMPDEST"
    },
    "1928": {
      "op": "SWAP8"
    },
    "1929": {
      "op": "SWAP7"
    },
    "1930": {
      "op": "POP"
    },
    "1931": {
      "op": "POP"
    },
    "1932": {
      "op": "POP"
    },
    "1933": {
      "op": "POP"
    },
    "1934": {
      "op": "POP"
    },
    "1935": {
      "op": "POP"
    },
    "1936": {
      "op": "POP"
    },
    "1937": {
      "jump": "o",
      "op": "JUMP"
    },
    "1938": {
      "op": "JUMPDEST"
    },
    "1939": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1941": {
      "op": "DUP2"
    },
    "1942": {
      "op": "MSTORE"
    },
    "1943": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1945": {
      "op": "PUSH2",
      "value": "0x7A5"
    },
    "1948": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1950": {
      "op": "DUP4"
    },
    "1951": {
      "op": "ADD"
    },
    "1952": {
      "op": "DUP6"
    },
    "1953": {
      "op": "PUSH2",
      "value": "0x647"
    },
    "1956": {
      "jump": "i",
      "op": "JUMP"
    },
    "1957": {
      "op": "JUMPDEST"
    },
    "1958": {
      "op": "DUP3"
    },
    "1959": {
      "op": "DUP2"
    },
    "1960": {
      "op": "SUB"
    },
    "1961": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1963": {
      "op": "DUP5"
    },
    "1964": {
      "op": "ADD"
    },
    "1965": {
      "op": "MSTORE"
    },
    "1966": {
      "op": "PUSH2",
      "value": "0x7B7"
    },
    "1969": {
      "op": "DUP2"
    },
    "1970": {
      "op": "DUP6"
    },
    "1971": {
      "op": "PUSH2",
      "value": "0x647"
    },
    "1974": {
      "jump": "i",
      "op": "JUMP"
    },
    "1975": {
      "op": "JUMPDEST"
    },
    "1976": {
      "op": "SWAP6"
    },
    "1977": {
      "op": "SWAP5"
    },
    "1978": {
      "op": "POP"
    },
    "1979": {
      "op": "POP"
    },
    "1980": {
      "op": "POP"
    },
    "1981": {
      "op": "POP"
    },
    "1982": {
      "op": "POP"
    },
    "1983": {
      "jump": "o",
      "op": "JUMP"
    },
    "1984": {
      "op": "JUMPDEST"
    },
    "1985": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1987": {
      "op": "DUP2"
    },
    "1988": {
      "op": "MSTORE"
    },
    "1989": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1991": {
      "op": "PUSH2",
      "value": "0x7D3"
    },
    "1994": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1996": {
      "op": "DUP4"
    },
    "1997": {
      "op": "ADD"
    },
    "1998": {
      "op": "DUP5"
    },
    "1999": {
      "op": "PUSH2",
      "value": "0x647"
    },
    "2002": {
      "jump": "i",
      "op": "JUMP"
    },
    "2003": {
      "op": "JUMPDEST"
    },
    "2004": {
      "op": "SWAP4"
    },
    "2005": {
      "op": "SWAP3"
    },
    "2006": {
      "op": "POP"
    },
    "2007": {
      "op": "POP"
    },
    "2008": {
      "op": "POP"
    },
    "2009": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "960c05eab5709d746123eafbfd05aab634b95ad3",
  "source": "// SCH Course Copyright Policy (C): DO-NOT-SHARE-WITH-ANYONE\n// https://smartcontractshacking.com/#copyright-policy\npragma solidity ^0.8.13;\n\nimport \"../interfaces/ICallbackContract.sol\";\n\ncontract TwoStepExchange {\n    error OnlyKeeper();\n    error InvalidBlockNumber();\n    error EmptyOrder();\n\n    struct SwapOrder {\n        address account;\n        address[] route;\n        uint256 amountIn;\n        address callbackContract;\n        uint256 blockNumber;\n    }\n\n    struct PriceParams {\n        uint256 price;\n        uint256 blockNumber;\n    }\n\n    mapping(uint256 => SwapOrder) orders;\n    uint256 nonce;\n    address keeper;\n    uint256 constant CALLBACK_GAS_LIMIT = 2_000_000;\n\n    event CallbackFailed(uint256 id, string revertMessage, bytes revertData);\n    event SwapOrderExecuted(uint256 id, uint256 price);\n    event RevertMessageUnparsable(bytes data);\n    event ParsedMessage(string message, bytes data);\n\n    constructor() {\n        keeper = msg.sender;\n    }\n\n    function createSwapOrder(\n        address[] calldata _route,\n        uint256 _amountIn,\n        address _callbackContract\n    ) external {\n        orders[++nonce] = SwapOrder({\n            account: msg.sender,\n            route: _route,\n            amountIn: _amountIn,\n            callbackContract: _callbackContract,\n            blockNumber: block.number\n        });\n    }\n\n    function executeSwapOrder(\n        uint256 _id,\n        PriceParams calldata params\n    ) external {\n        if (msg.sender != keeper) revert OnlyKeeper();\n        SwapOrder memory order = orders[_id];\n\n        if (order.account == address(0)) revert EmptyOrder();\n        if (params.blockNumber != order.blockNumber)\n            revert InvalidBlockNumber();\n\n        try\n            ICallbackContract(order.callbackContract).beforeExecution{\n                gas: CALLBACK_GAS_LIMIT\n            }()\n        {} catch (bytes memory _revertData) {\n            string memory revertMessage = getRevertMessage(_revertData);\n            emit CallbackFailed(_id, revertMessage, _revertData);\n        }\n\n        /** Execute the swap order at the provided price **/\n        /** ... **/\n\n        delete orders[_id];\n\n        emit SwapOrderExecuted(_id, params.price);\n    }\n\n    function getRevertMessage(\n        bytes memory result\n    ) internal returns (string memory) {\n        string memory parsed = \"\";\n        bytes32 errorSelector;\n\n        assembly {\n            errorSelector := mload(add(result, 0x20))\n        }\n\n        if (errorSelector == bytes4(0x08c379a0)) {\n            // Selector for Error(String)\n            assembly {\n                result := add(result, 0x04)\n            }\n\n            parsed = (abi.decode(result, (string)));\n            emit ParsedMessage(parsed, result);\n        } else emit RevertMessageUnparsable(result);\n\n        return parsed;\n    }\n}\n",
  "sourceMap": "189:2646:8:-:0;;;924:50;;;;;;;;;-1:-1:-1;948:6:8;:19;;-1:-1:-1;;;;;;948:19:8;957:10;948:19;;;189:2646;;;;;;",
  "sourcePath": "contracts/TwoStepExchange.sol",
  "type": "contract"
}