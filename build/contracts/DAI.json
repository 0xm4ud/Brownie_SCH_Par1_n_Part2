{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "chainId_",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "src",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "guy",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "wad",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": true,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes4",
          "name": "sig",
          "type": "bytes4"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "usr",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "arg1",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "arg2",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "LogNote",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "src",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "dst",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "wad",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "DOMAIN_SEPARATOR",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "PERMIT_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "usr",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "wad",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "usr",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "wad",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "guy",
          "type": "address"
        }
      ],
      "name": "deny",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "usr",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "wad",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "src",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "dst",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "wad",
          "type": "uint256"
        }
      ],
      "name": "move",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "nonces",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "holder",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "expiry",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "allowed",
          "type": "bool"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "permit",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "usr",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "wad",
          "type": "uint256"
        }
      ],
      "name": "pull",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "usr",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "wad",
          "type": "uint256"
        }
      ],
      "name": "push",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "guy",
          "type": "address"
        }
      ],
      "name": "rely",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "dst",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "wad",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "src",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "dst",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "wad",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "wards",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/unchecked-returns-3/DAI.sol"
  },
  "ast": {
    "absolutePath": "contracts/unchecked-returns-3/DAI.sol",
    "exportedSymbols": {
      "DAI": [
        623
      ],
      "LibNote": [
        19
      ]
    },
    "id": 624,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "=",
          "0.5",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "165:24:0"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "/// /nix/store/8xb41r4qd0cjb63wcrxf1qmfg88p0961-dss-6fd7de0/src/lib.sol",
        "fullyImplemented": true,
        "id": 19,
        "linearizedBaseContracts": [
          19
        ],
        "name": "LibNote",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": true,
            "documentation": null,
            "id": 13,
            "name": "LogNote",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 12,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3,
                  "indexed": true,
                  "name": "sig",
                  "nodeType": "VariableDeclaration",
                  "scope": 13,
                  "src": "986:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 2,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "986:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5,
                  "indexed": true,
                  "name": "usr",
                  "nodeType": "VariableDeclaration",
                  "scope": 13,
                  "src": "1017:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1017:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7,
                  "indexed": true,
                  "name": "arg1",
                  "nodeType": "VariableDeclaration",
                  "scope": 13,
                  "src": "1048:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 6,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1048:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9,
                  "indexed": true,
                  "name": "arg2",
                  "nodeType": "VariableDeclaration",
                  "scope": 13,
                  "src": "1080:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 8,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1080:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11,
                  "indexed": false,
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "scope": 13,
                  "src": "1112:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 10,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1112:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "976:164:0"
            },
            "src": "963:188:0"
          },
          {
            "body": {
              "id": 17,
              "nodeType": "Block",
              "src": "1171:932:0",
              "statements": [
                {
                  "id": 15,
                  "nodeType": "PlaceholderStatement",
                  "src": "1181:1:0"
                },
                {
                  "externalReferences": [],
                  "id": 16,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    let mark := msize()\n    mstore(0x40, add(mark, 288))\n    mstore(mark, 0x20)\n    mstore(add(mark, 0x20), 224)\n    calldatacopy(add(mark, 0x40), 0, 224)\n    log4(mark, 288, shl(224, shr(224, calldataload(0))), caller(), calldataload(4), calldataload(36))\n}",
                  "src": "1192:905:0"
                }
              ]
            },
            "documentation": null,
            "id": 18,
            "name": "note",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 14,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1171:0:0"
            },
            "src": "1157:946:0",
            "visibility": "internal"
          }
        ],
        "scope": 624,
        "src": "940:1165:0"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 20,
              "name": "LibNote",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 19,
              "src": "2982:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LibNote_$19",
                "typeString": "contract LibNote"
              }
            },
            "id": 21,
            "nodeType": "InheritanceSpecifier",
            "src": "2982:7:0"
          }
        ],
        "contractDependencies": [
          19
        ],
        "contractKind": "contract",
        "documentation": "/// /nix/store/8xb41r4qd0cjb63wcrxf1qmfg88p0961-dss-6fd7de0/src/dai.sol",
        "fullyImplemented": true,
        "id": 623,
        "linearizedBaseContracts": [
          623,
          19
        ],
        "name": "DAI",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 25,
            "name": "wards",
            "nodeType": "VariableDeclaration",
            "scope": 623,
            "src": "3016:38:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 24,
              "keyType": {
                "id": 22,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "3025:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "3016:25:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 23,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "3036:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 40,
              "nodeType": "Block",
              "src": "3106:19:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 38,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 34,
                        "name": "wards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
                        "src": "3108:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 36,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 35,
                        "name": "guy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27,
                        "src": "3114:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3108:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 37,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3121:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "3108:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 39,
                  "nodeType": "ExpressionStatement",
                  "src": "3108:14:0"
                }
              ]
            },
            "documentation": null,
            "id": 41,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 30,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 29,
                  "name": "note",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 18,
                  "src": "3096:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3096:4:0"
              },
              {
                "arguments": null,
                "id": 32,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 31,
                  "name": "auth",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 71,
                  "src": "3101:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3101:4:0"
              }
            ],
            "name": "rely",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 28,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27,
                  "name": "guy",
                  "nodeType": "VariableDeclaration",
                  "scope": 41,
                  "src": "3074:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 26,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3074:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3073:13:0"
            },
            "returnParameters": {
              "id": 33,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3106:0:0"
            },
            "scope": 623,
            "src": "3060:65:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 56,
              "nodeType": "Block",
              "src": "3176:19:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 54,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 50,
                        "name": "wards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
                        "src": "3178:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 52,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 51,
                        "name": "guy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43,
                        "src": "3184:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3178:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 53,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3191:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3178:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 55,
                  "nodeType": "ExpressionStatement",
                  "src": "3178:14:0"
                }
              ]
            },
            "documentation": null,
            "id": 57,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 46,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 45,
                  "name": "note",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 18,
                  "src": "3166:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3166:4:0"
              },
              {
                "arguments": null,
                "id": 48,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 47,
                  "name": "auth",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 71,
                  "src": "3171:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3171:4:0"
              }
            ],
            "name": "deny",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 44,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43,
                  "name": "guy",
                  "nodeType": "VariableDeclaration",
                  "scope": 57,
                  "src": "3144:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 42,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3144:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3143:13:0"
            },
            "returnParameters": {
              "id": 49,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3176:0:0"
            },
            "scope": 623,
            "src": "3130:65:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 70,
              "nodeType": "Block",
              "src": "3214:81:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 65,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 60,
                            "name": "wards",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25,
                            "src": "3232:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 63,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 61,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 638,
                              "src": "3238:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 62,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3238:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3232:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 64,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3253:1:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "3232:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4461692f6e6f742d617574686f72697a6564",
                        "id": 66,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3256:20:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3be4598c02bca0f13eeb6d4ba1696751ebabf37b25dbcabf9c189a64a0e7d0fa",
                          "typeString": "literal_string \"Dai/not-authorized\""
                        },
                        "value": "Dai/not-authorized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3be4598c02bca0f13eeb6d4ba1696751ebabf37b25dbcabf9c189a64a0e7d0fa",
                          "typeString": "literal_string \"Dai/not-authorized\""
                        }
                      ],
                      "id": 59,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        641,
                        642
                      ],
                      "referencedDeclaration": 642,
                      "src": "3224:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 67,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3224:53:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68,
                  "nodeType": "ExpressionStatement",
                  "src": "3224:53:0"
                },
                {
                  "id": 69,
                  "nodeType": "PlaceholderStatement",
                  "src": "3287:1:0"
                }
              ]
            },
            "documentation": null,
            "id": 71,
            "name": "auth",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 58,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3214:0:0"
            },
            "src": "3200:95:0",
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 74,
            "name": "name",
            "nodeType": "VariableDeclaration",
            "scope": 623,
            "src": "3327:51:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 72,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "3327:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "44616920537461626c65636f696e",
              "id": 73,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "3362:16:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_0b1461ddc0c1d5ded79a1db0f74dae949050a7c0b28728c724b24958c27a328b",
                "typeString": "literal_string \"Dai Stablecoin\""
              },
              "value": "Dai Stablecoin"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 77,
            "name": "symbol",
            "nodeType": "VariableDeclaration",
            "scope": 623,
            "src": "3384:40:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 75,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "3384:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "444149",
              "id": 76,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "3419:5:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_a5e92f3efb6826155f1f728e162af9d7cda33a574a1153b58f03ea01cc37e568",
                "typeString": "literal_string \"DAI\""
              },
              "value": "DAI"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 80,
            "name": "version",
            "nodeType": "VariableDeclaration",
            "scope": 623,
            "src": "3430:38:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 78,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "3430:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "31",
              "id": 79,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "3465:3:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
                "typeString": "literal_string \"1\""
              },
              "value": "1"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 83,
            "name": "decimals",
            "nodeType": "VariableDeclaration",
            "scope": 623,
            "src": "3474:36:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 81,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "3474:5:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "36",
              "id": 82,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "3509:1:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_6_by_1",
                "typeString": "int_const 6"
              },
              "value": "6"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 85,
            "name": "totalSupply",
            "nodeType": "VariableDeclaration",
            "scope": 623,
            "src": "3516:26:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 84,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "3516:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 89,
            "name": "balanceOf",
            "nodeType": "VariableDeclaration",
            "scope": 623,
            "src": "3549:63:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 88,
              "keyType": {
                "id": 86,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "3558:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "3549:25:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 87,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "3569:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 95,
            "name": "allowance",
            "nodeType": "VariableDeclaration",
            "scope": 623,
            "src": "3618:63:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(address => uint256))"
            },
            "typeName": {
              "id": 94,
              "keyType": {
                "id": 90,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "3627:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "3618:46:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(address => uint256))"
              },
              "valueType": {
                "id": 93,
                "keyType": {
                  "id": 91,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "3647:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "3638:25:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueType": {
                  "id": 92,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "3658:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 99,
            "name": "nonces",
            "nodeType": "VariableDeclaration",
            "scope": 623,
            "src": "3687:60:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 98,
              "keyType": {
                "id": 96,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "3696:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "3687:25:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 97,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "3707:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 107,
            "name": "Approval",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 106,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 101,
                  "indexed": true,
                  "name": "src",
                  "nodeType": "VariableDeclaration",
                  "scope": 107,
                  "src": "3769:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 100,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3769:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 103,
                  "indexed": true,
                  "name": "guy",
                  "nodeType": "VariableDeclaration",
                  "scope": 107,
                  "src": "3790:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 102,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3790:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 105,
                  "indexed": false,
                  "name": "wad",
                  "nodeType": "VariableDeclaration",
                  "scope": 107,
                  "src": "3811:8:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 104,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3811:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3768:52:0"
            },
            "src": "3754:67:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 115,
            "name": "Transfer",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 114,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 109,
                  "indexed": true,
                  "name": "src",
                  "nodeType": "VariableDeclaration",
                  "scope": 115,
                  "src": "3841:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 108,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3841:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 111,
                  "indexed": true,
                  "name": "dst",
                  "nodeType": "VariableDeclaration",
                  "scope": 115,
                  "src": "3862:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 110,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3862:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 113,
                  "indexed": false,
                  "name": "wad",
                  "nodeType": "VariableDeclaration",
                  "scope": 115,
                  "src": "3883:8:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 112,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3883:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3840:52:0"
            },
            "src": "3826:67:0"
          },
          {
            "body": {
              "id": 135,
              "nodeType": "Block",
              "src": "3979:42:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 132,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "components": [
                            {
                              "argumentTypes": null,
                              "id": 129,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "argumentTypes": null,
                                "id": 125,
                                "name": "z",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 122,
                                "src": "3998:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 128,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "id": 126,
                                  "name": "x",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 117,
                                  "src": "4002:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "id": 127,
                                  "name": "y",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 119,
                                  "src": "4006:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4002:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "3998:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 130,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "3997:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 131,
                          "name": "x",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 117,
                          "src": "4012:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3997:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 124,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        641,
                        642
                      ],
                      "referencedDeclaration": 641,
                      "src": "3989:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3989:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 134,
                  "nodeType": "ExpressionStatement",
                  "src": "3989:25:0"
                }
              ]
            },
            "documentation": null,
            "id": 136,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "add",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 120,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 117,
                  "name": "x",
                  "nodeType": "VariableDeclaration",
                  "scope": 136,
                  "src": "3932:6:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 116,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3932:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 119,
                  "name": "y",
                  "nodeType": "VariableDeclaration",
                  "scope": 136,
                  "src": "3940:6:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 118,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3940:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3931:16:0"
            },
            "returnParameters": {
              "id": 123,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 122,
                  "name": "z",
                  "nodeType": "VariableDeclaration",
                  "scope": 136,
                  "src": "3971:6:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 121,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3971:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3970:8:0"
            },
            "scope": 623,
            "src": "3919:102:0",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 156,
              "nodeType": "Block",
              "src": "4086:42:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 153,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "components": [
                            {
                              "argumentTypes": null,
                              "id": 150,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "argumentTypes": null,
                                "id": 146,
                                "name": "z",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 143,
                                "src": "4105:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 149,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "id": 147,
                                  "name": "x",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 138,
                                  "src": "4109:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "id": 148,
                                  "name": "y",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 140,
                                  "src": "4113:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4109:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "4105:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 151,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "4104:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 152,
                          "name": "x",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 138,
                          "src": "4119:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4104:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 145,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        641,
                        642
                      ],
                      "referencedDeclaration": 641,
                      "src": "4096:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 154,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4096:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 155,
                  "nodeType": "ExpressionStatement",
                  "src": "4096:25:0"
                }
              ]
            },
            "documentation": null,
            "id": 157,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sub",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 141,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 138,
                  "name": "x",
                  "nodeType": "VariableDeclaration",
                  "scope": 157,
                  "src": "4039:6:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 137,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4039:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 140,
                  "name": "y",
                  "nodeType": "VariableDeclaration",
                  "scope": 157,
                  "src": "4047:6:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 139,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4047:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4038:16:0"
            },
            "returnParameters": {
              "id": 144,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 143,
                  "name": "z",
                  "nodeType": "VariableDeclaration",
                  "scope": 157,
                  "src": "4078:6:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 142,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4078:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4077:8:0"
            },
            "scope": 623,
            "src": "4026:102:0",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 159,
            "name": "DOMAIN_SEPARATOR",
            "nodeType": "VariableDeclaration",
            "scope": 623,
            "src": "4165:31:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 158,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "4165:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 162,
            "name": "PERMIT_TYPEHASH",
            "nodeType": "VariableDeclaration",
            "scope": 623,
            "src": "4346:108:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 160,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "4346:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "307865613261613061316265313161303765643836643735356339333436376634663832333632623435323337316431626139346431373135313233353131616362",
              "id": 161,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "4388:66:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_105916522785188513640362517802612480037966763957092682311465172263008277174987_by_1",
                "typeString": "int_const 1059...(70 digits omitted)...4987"
              },
              "value": "0xea2aa0a1be11a07ed86d755c93467f4f82362b452371d1ba94d1715123511acb"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 199,
              "nodeType": "Block",
              "src": "4498:331:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 167,
                        "name": "wards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
                        "src": "4508:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 170,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 168,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 638,
                          "src": "4514:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 169,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4514:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4508:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 171,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4528:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "4508:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 173,
                  "nodeType": "ExpressionStatement",
                  "src": "4508:21:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 197,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 174,
                      "name": "DOMAIN_SEPARATOR",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 159,
                      "src": "4539:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "hexValue": "454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
                                  "id": 179,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4602:84:0",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
                                    "typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
                                  },
                                  "value": "EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
                                    "typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
                                  }
                                ],
                                "id": 178,
                                "name": "keccak256",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 632,
                                "src": "4592:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                  "typeString": "function (bytes memory) pure returns (bytes32)"
                                }
                              },
                              "id": 180,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4592:95:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 183,
                                      "name": "name",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 74,
                                      "src": "4717:4:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory",
                                        "typeString": "string memory"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_string_memory",
                                        "typeString": "string memory"
                                      }
                                    ],
                                    "id": 182,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "4711:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                      "typeString": "type(bytes storage pointer)"
                                    },
                                    "typeName": "bytes"
                                  },
                                  "id": 184,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4711:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 181,
                                "name": "keccak256",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 632,
                                "src": "4701:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                  "typeString": "function (bytes memory) pure returns (bytes32)"
                                }
                              },
                              "id": 185,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4701:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 188,
                                      "name": "version",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 80,
                                      "src": "4753:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory",
                                        "typeString": "string memory"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_string_memory",
                                        "typeString": "string memory"
                                      }
                                    ],
                                    "id": 187,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "4747:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                      "typeString": "type(bytes storage pointer)"
                                    },
                                    "typeName": "bytes"
                                  },
                                  "id": 189,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4747:14:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 186,
                                "name": "keccak256",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 632,
                                "src": "4737:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                  "typeString": "function (bytes memory) pure returns (bytes32)"
                                }
                              },
                              "id": 190,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4737:25:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 191,
                              "name": "chainId_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 164,
                              "src": "4776:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 193,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 654,
                                  "src": "4806:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_DAI_$623",
                                    "typeString": "contract DAI"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_DAI_$623",
                                    "typeString": "contract DAI"
                                  }
                                ],
                                "id": 192,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4798:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": "address"
                              },
                              "id": 194,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4798:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 176,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 625,
                              "src": "4568:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 177,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "encode",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4568:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 195,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4568:253:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 175,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 632,
                        "src": "4558:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 196,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4558:264:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "4539:283:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 198,
                  "nodeType": "ExpressionStatement",
                  "src": "4539:283:0"
                }
              ]
            },
            "documentation": null,
            "id": 200,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 165,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 164,
                  "name": "chainId_",
                  "nodeType": "VariableDeclaration",
                  "scope": 200,
                  "src": "4473:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 163,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4473:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4472:18:0"
            },
            "returnParameters": {
              "id": 166,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4498:0:0"
            },
            "scope": 623,
            "src": "4461:368:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 216,
              "nodeType": "Block",
              "src": "4921:58:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 210,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 638,
                          "src": "4951:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 211,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4951:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 212,
                        "name": "dst",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 202,
                        "src": "4963:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 213,
                        "name": "wad",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 204,
                        "src": "4968:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 209,
                      "name": "transferFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 315,
                      "src": "4938:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) returns (bool)"
                      }
                    },
                    "id": 214,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4938:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 208,
                  "id": 215,
                  "nodeType": "Return",
                  "src": "4931:41:0"
                }
              ]
            },
            "documentation": null,
            "id": 217,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 205,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 202,
                  "name": "dst",
                  "nodeType": "VariableDeclaration",
                  "scope": 217,
                  "src": "4874:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 201,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4874:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 204,
                  "name": "wad",
                  "nodeType": "VariableDeclaration",
                  "scope": 217,
                  "src": "4887:8:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 203,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4887:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4873:23:0"
            },
            "returnParameters": {
              "id": 208,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 207,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 217,
                  "src": "4915:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 206,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4915:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4914:6:0"
            },
            "scope": 623,
            "src": "4856:123:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 314,
              "nodeType": "Block",
              "src": "5076:486:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 233,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 229,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 89,
                            "src": "5094:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 231,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 230,
                            "name": "src",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 219,
                            "src": "5104:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5094:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 232,
                          "name": "wad",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 223,
                          "src": "5112:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5094:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4461692f696e73756666696369656e742d62616c616e6365",
                        "id": 234,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5117:26:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_81d4f90f41a40b202519ea11e7240209a00f9ccd5114c8ff9e7ca99dac344c0e",
                          "typeString": "literal_string \"Dai/insufficient-balance\""
                        },
                        "value": "Dai/insufficient-balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_81d4f90f41a40b202519ea11e7240209a00f9ccd5114c8ff9e7ca99dac344c0e",
                          "typeString": "literal_string \"Dai/insufficient-balance\""
                        }
                      ],
                      "id": 228,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        641,
                        642
                      ],
                      "referencedDeclaration": 642,
                      "src": "5086:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 235,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5086:58:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 236,
                  "nodeType": "ExpressionStatement",
                  "src": "5086:58:0"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 240,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 237,
                        "name": "src",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 219,
                        "src": "5158:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 238,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 638,
                          "src": "5165:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 239,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "5165:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "src": "5158:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 251,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 241,
                            "name": "allowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 95,
                            "src": "5179:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                              "typeString": "mapping(address => mapping(address => uint256))"
                            }
                          },
                          "id": 243,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 242,
                            "name": "src",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 219,
                            "src": "5189:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5179:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 246,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 244,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 638,
                            "src": "5194:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 245,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "5194:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5179:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 249,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "-",
                            "prefix": true,
                            "src": "5214:2:0",
                            "subExpression": {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 248,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5215:1:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_minus_1_by_1",
                              "typeString": "int_const -1"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_minus_1_by_1",
                              "typeString": "int_const -1"
                            }
                          ],
                          "id": 247,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5209:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": "uint"
                        },
                        "id": 250,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5209:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "5179:38:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "5158:59:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 283,
                  "nodeType": "IfStatement",
                  "src": "5154:241:0",
                  "trueBody": {
                    "id": 282,
                    "nodeType": "Block",
                    "src": "5219:176:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 261,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 254,
                                    "name": "allowance",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 95,
                                    "src": "5241:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                      "typeString": "mapping(address => mapping(address => uint256))"
                                    }
                                  },
                                  "id": 256,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 255,
                                    "name": "src",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 219,
                                    "src": "5251:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "5241:14:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 259,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 257,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 638,
                                    "src": "5256:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 258,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "5256:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5241:26:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 260,
                                "name": "wad",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 223,
                                "src": "5271:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "5241:33:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "4461692f696e73756666696369656e742d616c6c6f77616e6365",
                              "id": 262,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5276:28:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_dc58e5d7bface59881a0c9cb071ac4c6184df72982996070a51bb5124c2b87ba",
                                "typeString": "literal_string \"Dai/insufficient-allowance\""
                              },
                              "value": "Dai/insufficient-allowance"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_dc58e5d7bface59881a0c9cb071ac4c6184df72982996070a51bb5124c2b87ba",
                                "typeString": "literal_string \"Dai/insufficient-allowance\""
                              }
                            ],
                            "id": 253,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              641,
                              642
                            ],
                            "referencedDeclaration": 642,
                            "src": "5233:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 263,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5233:72:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 264,
                        "nodeType": "ExpressionStatement",
                        "src": "5233:72:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 280,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 265,
                                "name": "allowance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 95,
                                "src": "5319:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 269,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 266,
                                "name": "src",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 219,
                                "src": "5329:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5319:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 270,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 267,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 638,
                                "src": "5334:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 268,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "5334:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5319:26:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 272,
                                    "name": "allowance",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 95,
                                    "src": "5352:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                      "typeString": "mapping(address => mapping(address => uint256))"
                                    }
                                  },
                                  "id": 274,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 273,
                                    "name": "src",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 219,
                                    "src": "5362:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "5352:14:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 277,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 275,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 638,
                                    "src": "5367:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 276,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "5367:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5352:26:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 278,
                                "name": "wad",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 223,
                                "src": "5380:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 271,
                              "name": "sub",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 157,
                              "src": "5348:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 279,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5348:36:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5319:65:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 281,
                        "nodeType": "ExpressionStatement",
                        "src": "5319:65:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 284,
                        "name": "balanceOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89,
                        "src": "5404:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 286,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 285,
                        "name": "src",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 219,
                        "src": "5414:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5404:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 288,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 89,
                            "src": "5425:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 290,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 289,
                            "name": "src",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 219,
                            "src": "5435:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5425:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 291,
                          "name": "wad",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 223,
                          "src": "5441:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 287,
                        "name": "sub",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 157,
                        "src": "5421:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 292,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5421:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5404:41:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 294,
                  "nodeType": "ExpressionStatement",
                  "src": "5404:41:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 304,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 295,
                        "name": "balanceOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89,
                        "src": "5455:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 297,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 296,
                        "name": "dst",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 221,
                        "src": "5465:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5455:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 299,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 89,
                            "src": "5476:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 301,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 300,
                            "name": "dst",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 221,
                            "src": "5486:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5476:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 302,
                          "name": "wad",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 223,
                          "src": "5492:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 298,
                        "name": "add",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 136,
                        "src": "5472:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 303,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5472:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5455:41:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 305,
                  "nodeType": "ExpressionStatement",
                  "src": "5455:41:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 307,
                        "name": "src",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 219,
                        "src": "5520:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 308,
                        "name": "dst",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 221,
                        "src": "5525:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 309,
                        "name": "wad",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 223,
                        "src": "5530:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 306,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 115,
                      "src": "5511:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 310,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5511:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 311,
                  "nodeType": "EmitStatement",
                  "src": "5506:28:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 312,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5551:4:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 227,
                  "id": 313,
                  "nodeType": "Return",
                  "src": "5544:11:0"
                }
              ]
            },
            "documentation": null,
            "id": 315,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 224,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 219,
                  "name": "src",
                  "nodeType": "VariableDeclaration",
                  "scope": 315,
                  "src": "5006:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 218,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5006:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 221,
                  "name": "dst",
                  "nodeType": "VariableDeclaration",
                  "scope": 315,
                  "src": "5019:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 220,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5019:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 223,
                  "name": "wad",
                  "nodeType": "VariableDeclaration",
                  "scope": 315,
                  "src": "5032:8:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 222,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5032:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5005:36:0"
            },
            "returnParameters": {
              "id": 227,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 226,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 315,
                  "src": "5066:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 225,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5066:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5065:6:0"
            },
            "scope": 623,
            "src": "4984:578:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 350,
              "nodeType": "Block",
              "src": "5618:151:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 333,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 324,
                        "name": "balanceOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89,
                        "src": "5628:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 326,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 325,
                        "name": "usr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 317,
                        "src": "5638:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5628:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 328,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 89,
                            "src": "5649:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 330,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 329,
                            "name": "usr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 317,
                            "src": "5659:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5649:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 331,
                          "name": "wad",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 319,
                          "src": "5665:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 327,
                        "name": "add",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 136,
                        "src": "5645:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 332,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5645:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5628:41:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 334,
                  "nodeType": "ExpressionStatement",
                  "src": "5628:41:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 340,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 335,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 85,
                      "src": "5679:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 337,
                          "name": "totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 85,
                          "src": "5700:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 338,
                          "name": "wad",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 319,
                          "src": "5713:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 336,
                        "name": "add",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 136,
                        "src": "5696:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 339,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5696:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5679:38:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 341,
                  "nodeType": "ExpressionStatement",
                  "src": "5679:38:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 344,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5749:1:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 343,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5741:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 345,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5741:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 346,
                        "name": "usr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 317,
                        "src": "5753:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 347,
                        "name": "wad",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 319,
                        "src": "5758:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 342,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 115,
                      "src": "5732:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 348,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5732:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 349,
                  "nodeType": "EmitStatement",
                  "src": "5727:35:0"
                }
              ]
            },
            "documentation": null,
            "id": 351,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 322,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 321,
                  "name": "auth",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 71,
                  "src": "5613:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "5613:4:0"
              }
            ],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 320,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 317,
                  "name": "usr",
                  "nodeType": "VariableDeclaration",
                  "scope": 351,
                  "src": "5581:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 316,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5581:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 319,
                  "name": "wad",
                  "nodeType": "VariableDeclaration",
                  "scope": 351,
                  "src": "5594:8:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 318,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5594:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5580:23:0"
            },
            "returnParameters": {
              "id": 323,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5618:0:0"
            },
            "scope": 623,
            "src": "5567:202:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 440,
              "nodeType": "Block",
              "src": "5820:469:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 363,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 359,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 89,
                            "src": "5838:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 361,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 360,
                            "name": "usr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 353,
                            "src": "5848:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5838:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 362,
                          "name": "wad",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 355,
                          "src": "5856:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5838:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4461692f696e73756666696369656e742d62616c616e6365",
                        "id": 364,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5861:26:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_81d4f90f41a40b202519ea11e7240209a00f9ccd5114c8ff9e7ca99dac344c0e",
                          "typeString": "literal_string \"Dai/insufficient-balance\""
                        },
                        "value": "Dai/insufficient-balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_81d4f90f41a40b202519ea11e7240209a00f9ccd5114c8ff9e7ca99dac344c0e",
                          "typeString": "literal_string \"Dai/insufficient-balance\""
                        }
                      ],
                      "id": 358,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        641,
                        642
                      ],
                      "referencedDeclaration": 642,
                      "src": "5830:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 365,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5830:58:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 366,
                  "nodeType": "ExpressionStatement",
                  "src": "5830:58:0"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 382,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 370,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 367,
                        "name": "usr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 353,
                        "src": "5902:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 368,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 638,
                          "src": "5909:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 369,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "5909:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "src": "5902:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 381,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 371,
                            "name": "allowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 95,
                            "src": "5923:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                              "typeString": "mapping(address => mapping(address => uint256))"
                            }
                          },
                          "id": 373,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 372,
                            "name": "usr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 353,
                            "src": "5933:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5923:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 376,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 374,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 638,
                            "src": "5938:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 375,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "5938:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5923:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 379,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "-",
                            "prefix": true,
                            "src": "5958:2:0",
                            "subExpression": {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 378,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5959:1:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_minus_1_by_1",
                              "typeString": "int_const -1"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_minus_1_by_1",
                              "typeString": "int_const -1"
                            }
                          ],
                          "id": 377,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5953:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": "uint"
                        },
                        "id": 380,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5953:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "5923:38:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "5902:59:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 413,
                  "nodeType": "IfStatement",
                  "src": "5898:241:0",
                  "trueBody": {
                    "id": 412,
                    "nodeType": "Block",
                    "src": "5963:176:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 391,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 384,
                                    "name": "allowance",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 95,
                                    "src": "5985:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                      "typeString": "mapping(address => mapping(address => uint256))"
                                    }
                                  },
                                  "id": 386,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 385,
                                    "name": "usr",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 353,
                                    "src": "5995:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "5985:14:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 389,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 387,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 638,
                                    "src": "6000:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 388,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "6000:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5985:26:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 390,
                                "name": "wad",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 355,
                                "src": "6015:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "5985:33:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "4461692f696e73756666696369656e742d616c6c6f77616e6365",
                              "id": 392,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6020:28:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_dc58e5d7bface59881a0c9cb071ac4c6184df72982996070a51bb5124c2b87ba",
                                "typeString": "literal_string \"Dai/insufficient-allowance\""
                              },
                              "value": "Dai/insufficient-allowance"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_dc58e5d7bface59881a0c9cb071ac4c6184df72982996070a51bb5124c2b87ba",
                                "typeString": "literal_string \"Dai/insufficient-allowance\""
                              }
                            ],
                            "id": 383,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              641,
                              642
                            ],
                            "referencedDeclaration": 642,
                            "src": "5977:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 393,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5977:72:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 394,
                        "nodeType": "ExpressionStatement",
                        "src": "5977:72:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 410,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 395,
                                "name": "allowance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 95,
                                "src": "6063:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 399,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 396,
                                "name": "usr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 353,
                                "src": "6073:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6063:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 400,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 397,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 638,
                                "src": "6078:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 398,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "6078:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6063:26:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 402,
                                    "name": "allowance",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 95,
                                    "src": "6096:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                      "typeString": "mapping(address => mapping(address => uint256))"
                                    }
                                  },
                                  "id": 404,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 403,
                                    "name": "usr",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 353,
                                    "src": "6106:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "6096:14:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 407,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 405,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 638,
                                    "src": "6111:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 406,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "6111:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6096:26:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 408,
                                "name": "wad",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 355,
                                "src": "6124:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 401,
                              "name": "sub",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 157,
                              "src": "6092:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 409,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6092:36:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6063:65:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 411,
                        "nodeType": "ExpressionStatement",
                        "src": "6063:65:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 423,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 414,
                        "name": "balanceOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89,
                        "src": "6148:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 416,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 415,
                        "name": "usr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 353,
                        "src": "6158:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6148:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 418,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 89,
                            "src": "6169:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 420,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 419,
                            "name": "usr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 353,
                            "src": "6179:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6169:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 421,
                          "name": "wad",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 355,
                          "src": "6185:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 417,
                        "name": "sub",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 157,
                        "src": "6165:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 422,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6165:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6148:41:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 424,
                  "nodeType": "ExpressionStatement",
                  "src": "6148:41:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 430,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 425,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 85,
                      "src": "6199:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 427,
                          "name": "totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 85,
                          "src": "6220:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 428,
                          "name": "wad",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 355,
                          "src": "6233:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 426,
                        "name": "sub",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 157,
                        "src": "6216:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 429,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6216:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6199:38:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 431,
                  "nodeType": "ExpressionStatement",
                  "src": "6199:38:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 433,
                        "name": "usr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 353,
                        "src": "6261:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 435,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6274:1:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 434,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6266:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 436,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6266:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 437,
                        "name": "wad",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 355,
                        "src": "6278:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 432,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 115,
                      "src": "6252:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 438,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6252:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 439,
                  "nodeType": "EmitStatement",
                  "src": "6247:35:0"
                }
              ]
            },
            "documentation": null,
            "id": 441,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 356,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 353,
                  "name": "usr",
                  "nodeType": "VariableDeclaration",
                  "scope": 441,
                  "src": "5788:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 352,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5788:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 355,
                  "name": "wad",
                  "nodeType": "VariableDeclaration",
                  "scope": 441,
                  "src": "5801:8:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 354,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5801:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5787:23:0"
            },
            "returnParameters": {
              "id": 357,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5820:0:0"
            },
            "scope": 623,
            "src": "5774:515:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 468,
              "nodeType": "Block",
              "src": "6358:115:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 457,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 450,
                          "name": "allowance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 95,
                          "src": "6368:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 454,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 451,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 638,
                            "src": "6378:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 452,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "6378:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6368:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 455,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 453,
                        "name": "usr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 443,
                        "src": "6390:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6368:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 456,
                      "name": "wad",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 445,
                      "src": "6397:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6368:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 458,
                  "nodeType": "ExpressionStatement",
                  "src": "6368:32:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 460,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 638,
                          "src": "6424:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 461,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "6424:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 462,
                        "name": "usr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 443,
                        "src": "6436:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 463,
                        "name": "wad",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 445,
                        "src": "6441:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 459,
                      "name": "Approval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 107,
                      "src": "6415:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 464,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6415:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 465,
                  "nodeType": "EmitStatement",
                  "src": "6410:35:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 466,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6462:4:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 449,
                  "id": 467,
                  "nodeType": "Return",
                  "src": "6455:11:0"
                }
              ]
            },
            "documentation": null,
            "id": 469,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 446,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 443,
                  "name": "usr",
                  "nodeType": "VariableDeclaration",
                  "scope": 469,
                  "src": "6311:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 442,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6311:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 445,
                  "name": "wad",
                  "nodeType": "VariableDeclaration",
                  "scope": 469,
                  "src": "6324:8:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 444,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6324:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6310:23:0"
            },
            "returnParameters": {
              "id": 449,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 448,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 469,
                  "src": "6352:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 447,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6352:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6351:6:0"
            },
            "scope": 623,
            "src": "6294:179:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 483,
              "nodeType": "Block",
              "src": "6546:51:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 477,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 638,
                          "src": "6569:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 478,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "6569:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 479,
                        "name": "usr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 471,
                        "src": "6581:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 480,
                        "name": "wad",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 473,
                        "src": "6586:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 476,
                      "name": "transferFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 315,
                      "src": "6556:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) returns (bool)"
                      }
                    },
                    "id": 481,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6556:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 482,
                  "nodeType": "ExpressionStatement",
                  "src": "6556:34:0"
                }
              ]
            },
            "documentation": null,
            "id": 484,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "push",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 474,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 471,
                  "name": "usr",
                  "nodeType": "VariableDeclaration",
                  "scope": 484,
                  "src": "6514:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 470,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6514:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 473,
                  "name": "wad",
                  "nodeType": "VariableDeclaration",
                  "scope": 484,
                  "src": "6527:8:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 472,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6527:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6513:23:0"
            },
            "returnParameters": {
              "id": 475,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6546:0:0"
            },
            "scope": 623,
            "src": "6500:97:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 498,
              "nodeType": "Block",
              "src": "6648:51:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 492,
                        "name": "usr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 486,
                        "src": "6671:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 493,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 638,
                          "src": "6676:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 494,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "6676:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 495,
                        "name": "wad",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 488,
                        "src": "6688:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 491,
                      "name": "transferFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 315,
                      "src": "6658:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) returns (bool)"
                      }
                    },
                    "id": 496,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6658:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 497,
                  "nodeType": "ExpressionStatement",
                  "src": "6658:34:0"
                }
              ]
            },
            "documentation": null,
            "id": 499,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pull",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 489,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 486,
                  "name": "usr",
                  "nodeType": "VariableDeclaration",
                  "scope": 499,
                  "src": "6616:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 485,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6616:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 488,
                  "name": "wad",
                  "nodeType": "VariableDeclaration",
                  "scope": 499,
                  "src": "6629:8:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 487,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6629:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6615:23:0"
            },
            "returnParameters": {
              "id": 490,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6648:0:0"
            },
            "scope": 623,
            "src": "6602:97:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 514,
              "nodeType": "Block",
              "src": "6763:44:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 509,
                        "name": "src",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 501,
                        "src": "6786:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 510,
                        "name": "dst",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 503,
                        "src": "6791:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 511,
                        "name": "wad",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 505,
                        "src": "6796:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 508,
                      "name": "transferFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 315,
                      "src": "6773:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) returns (bool)"
                      }
                    },
                    "id": 512,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6773:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 513,
                  "nodeType": "ExpressionStatement",
                  "src": "6773:27:0"
                }
              ]
            },
            "documentation": null,
            "id": 515,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "move",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 506,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 501,
                  "name": "src",
                  "nodeType": "VariableDeclaration",
                  "scope": 515,
                  "src": "6718:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 500,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6718:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 503,
                  "name": "dst",
                  "nodeType": "VariableDeclaration",
                  "scope": 515,
                  "src": "6731:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 502,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6731:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 505,
                  "name": "wad",
                  "nodeType": "VariableDeclaration",
                  "scope": 515,
                  "src": "6744:8:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 504,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6744:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6717:36:0"
            },
            "returnParameters": {
              "id": 507,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6763:0:0"
            },
            "scope": 623,
            "src": "6704:103:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 621,
              "nodeType": "Block",
              "src": "7007:833:0",
              "statements": [
                {
                  "assignments": [
                    535
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 535,
                      "name": "digest",
                      "nodeType": "VariableDeclaration",
                      "scope": 621,
                      "src": "7017:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 534,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "7017:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 554,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "1901",
                            "id": 539,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7090:10:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string \"\u0019\u0001\""
                            },
                            "value": "\u0019\u0001"
                          },
                          {
                            "argumentTypes": null,
                            "id": 540,
                            "name": "DOMAIN_SEPARATOR",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 159,
                            "src": "7118:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 544,
                                    "name": "PERMIT_TYPEHASH",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 162,
                                    "src": "7173:15:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 545,
                                    "name": "holder",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 517,
                                    "src": "7227:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 546,
                                    "name": "spender",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 519,
                                    "src": "7272:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 547,
                                    "name": "nonce",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 521,
                                    "src": "7318:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 548,
                                    "name": "expiry",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 523,
                                    "src": "7362:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 549,
                                    "name": "allowed",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 525,
                                    "src": "7407:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 542,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 625,
                                    "src": "7162:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 543,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encode",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "7162:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 550,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7162:253:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 541,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 632,
                              "src": "7152:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 551,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7152:264:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string \"\u0019\u0001\""
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 537,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 625,
                            "src": "7056:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 538,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "7056:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 552,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7056:370:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 536,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 632,
                      "src": "7046:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 553,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7046:381:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7017:410:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 560,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 556,
                          "name": "holder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 517,
                          "src": "7446:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 558,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7464:1:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 557,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7456:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 559,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7456:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "7446:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4461692f696e76616c69642d616464726573732d30",
                        "id": 561,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7468:23:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6cade1c7c8c98b461ad80d1311ad396c59d17ffb04ff0f7a511ced53dd9ceec1",
                          "typeString": "literal_string \"Dai/invalid-address-0\""
                        },
                        "value": "Dai/invalid-address-0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6cade1c7c8c98b461ad80d1311ad396c59d17ffb04ff0f7a511ced53dd9ceec1",
                          "typeString": "literal_string \"Dai/invalid-address-0\""
                        }
                      ],
                      "id": 555,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        641,
                        642
                      ],
                      "referencedDeclaration": 642,
                      "src": "7438:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 562,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7438:54:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 563,
                  "nodeType": "ExpressionStatement",
                  "src": "7438:54:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 572,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 565,
                          "name": "holder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 517,
                          "src": "7510:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 567,
                              "name": "digest",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 535,
                              "src": "7530:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 568,
                              "name": "v",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 527,
                              "src": "7538:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 569,
                              "name": "r",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 529,
                              "src": "7541:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 570,
                              "name": "s",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 531,
                              "src": "7544:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 566,
                            "name": "ecrecover",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 630,
                            "src": "7520:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
                              "typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
                            }
                          },
                          "id": 571,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7520:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7510:36:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4461692f696e76616c69642d7065726d6974",
                        "id": 573,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7548:20:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e974ba7acb290ca076887e7ba12e7b1839924d20ca241ab20707d98be809b312",
                          "typeString": "literal_string \"Dai/invalid-permit\""
                        },
                        "value": "Dai/invalid-permit"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e974ba7acb290ca076887e7ba12e7b1839924d20ca241ab20707d98be809b312",
                          "typeString": "literal_string \"Dai/invalid-permit\""
                        }
                      ],
                      "id": 564,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        641,
                        642
                      ],
                      "referencedDeclaration": 642,
                      "src": "7502:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 574,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7502:67:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 575,
                  "nodeType": "ExpressionStatement",
                  "src": "7502:67:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 583,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 579,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 577,
                            "name": "expiry",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 523,
                            "src": "7587:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 578,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7597:1:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "7587:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 582,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 580,
                            "name": "now",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 640,
                            "src": "7602:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 581,
                            "name": "expiry",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 523,
                            "src": "7609:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7602:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "7587:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4461692f7065726d69742d65787069726564",
                        "id": 584,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7617:20:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_22f5fc5d7aaf9b3e6dfc2273ed4394be56ea60a0b5067b49b7f63dc922b30c7a",
                          "typeString": "literal_string \"Dai/permit-expired\""
                        },
                        "value": "Dai/permit-expired"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_22f5fc5d7aaf9b3e6dfc2273ed4394be56ea60a0b5067b49b7f63dc922b30c7a",
                          "typeString": "literal_string \"Dai/permit-expired\""
                        }
                      ],
                      "id": 576,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        641,
                        642
                      ],
                      "referencedDeclaration": 642,
                      "src": "7579:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 585,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7579:59:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 586,
                  "nodeType": "ExpressionStatement",
                  "src": "7579:59:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 593,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 588,
                          "name": "nonce",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 521,
                          "src": "7656:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 592,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "7665:16:0",
                          "subExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 589,
                              "name": "nonces",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 99,
                              "src": "7665:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 591,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 590,
                              "name": "holder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 517,
                              "src": "7672:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "7665:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7656:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4461692f696e76616c69642d6e6f6e6365",
                        "id": 594,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7683:19:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_56fdb16ed5471260b4f6bf21cd668c7795fa94d1be81d33f14e5ceb3647b779b",
                          "typeString": "literal_string \"Dai/invalid-nonce\""
                        },
                        "value": "Dai/invalid-nonce"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_56fdb16ed5471260b4f6bf21cd668c7795fa94d1be81d33f14e5ceb3647b779b",
                          "typeString": "literal_string \"Dai/invalid-nonce\""
                        }
                      ],
                      "id": 587,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        641,
                        642
                      ],
                      "referencedDeclaration": 642,
                      "src": "7648:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 595,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7648:55:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 596,
                  "nodeType": "ExpressionStatement",
                  "src": "7648:55:0"
                },
                {
                  "assignments": [
                    598
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 598,
                      "name": "wad",
                      "nodeType": "VariableDeclaration",
                      "scope": 621,
                      "src": "7713:8:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 597,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "7713:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 606,
                  "initialValue": {
                    "argumentTypes": null,
                    "condition": {
                      "argumentTypes": null,
                      "id": 599,
                      "name": "allowed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 525,
                      "src": "7724:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 604,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7745:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "id": 605,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "7724:22:0",
                    "trueExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 602,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "-",
                          "prefix": true,
                          "src": "7739:2:0",
                          "subExpression": {
                            "argumentTypes": null,
                            "hexValue": "31",
                            "id": 601,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7740:1:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_minus_1_by_1",
                            "typeString": "int_const -1"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_minus_1_by_1",
                            "typeString": "int_const -1"
                          }
                        ],
                        "id": 600,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "7734:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint"
                      },
                      "id": 603,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7734:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7713:33:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 613,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 607,
                          "name": "allowance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 95,
                          "src": "7756:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 610,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 608,
                          "name": "holder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 517,
                          "src": "7766:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7756:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 611,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 609,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 519,
                        "src": "7774:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7756:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 612,
                      "name": "wad",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 598,
                      "src": "7785:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7756:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 614,
                  "nodeType": "ExpressionStatement",
                  "src": "7756:32:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 616,
                        "name": "holder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 517,
                        "src": "7812:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 617,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 519,
                        "src": "7820:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 618,
                        "name": "wad",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 598,
                        "src": "7829:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 615,
                      "name": "Approval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 107,
                      "src": "7803:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 619,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7803:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 620,
                  "nodeType": "EmitStatement",
                  "src": "7798:35:0"
                }
              ]
            },
            "documentation": null,
            "id": 622,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "permit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 532,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 517,
                  "name": "holder",
                  "nodeType": "VariableDeclaration",
                  "scope": 622,
                  "src": "6865:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 516,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6865:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 519,
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "scope": 622,
                  "src": "6881:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 518,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6881:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 521,
                  "name": "nonce",
                  "nodeType": "VariableDeclaration",
                  "scope": 622,
                  "src": "6898:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 520,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6898:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 523,
                  "name": "expiry",
                  "nodeType": "VariableDeclaration",
                  "scope": 622,
                  "src": "6913:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 522,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6913:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 525,
                  "name": "allowed",
                  "nodeType": "VariableDeclaration",
                  "scope": 622,
                  "src": "6949:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 524,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6949:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 527,
                  "name": "v",
                  "nodeType": "VariableDeclaration",
                  "scope": 622,
                  "src": "6963:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 526,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "6963:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 529,
                  "name": "r",
                  "nodeType": "VariableDeclaration",
                  "scope": 622,
                  "src": "6972:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 528,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6972:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 531,
                  "name": "s",
                  "nodeType": "VariableDeclaration",
                  "scope": 622,
                  "src": "6983:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 530,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6983:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6864:129:0"
            },
            "returnParameters": {
              "id": 533,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7007:0:0"
            },
            "scope": 623,
            "src": "6849:991:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 624,
        "src": "2966:4876:0"
      }
    ],
    "src": "165:7677:0"
  },
  "bytecode": "608060405234801561001057600080fd5b5060405161124d38038061124d8339818101604052602081101561003357600080fd5b5051336000908152602081905260409081902060019055518060526111fb8239604080519182900360520182208282018252600e83527f44616920537461626c65636f696e00000000000000000000000000000000000060209384015281518083018352600181527f3100000000000000000000000000000000000000000000000000000000000000908401528151808401919091527f0b1461ddc0c1d5ded79a1db0f74dae949050a7c0b28728c724b24958c27a328b818301527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6606082015260808101949094523060a0808601919091528151808603909101815260c090940190528251920191909120600555506110a9806101526000396000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c80637ecebe00116100b8578063a9059cbb1161007c578063a9059cbb146103e0578063b753a98c1461040c578063bb35783b14610438578063bf353dbb1461046e578063dd62ed3e14610494578063f2d5d56b146104c257610142565b80637ecebe00146103065780638fcbaf0c1461032c57806395d89b41146103865780639c52a7f11461038e5780639dc29fac146103b457610142565b8063313ce5671161010a578063313ce5671461025e5780633644e5151461027c57806340c10f191461028457806354fd4d50146102b257806365fae35e146102ba57806370a08231146102e057610142565b806306fdde0314610147578063095ea7b3146101c657806318160ddd1461020657806323b872dd1461022057806330adf81f14610256575b600080fd5b61014f6104ee565b60405160208082528190810183818151815260200191508051906020019080838360005b8381101561018b578082015183820152602001610173565b50505050905090810190601f1680156101b85780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101f2600480360360408110156101dc57600080fd5b506001600160a01b038135169060200135610516565b604051901515815260200160405180910390f35b61020e610588565b60405190815260200160405180910390f35b6101f26004803603606081101561023657600080fd5b506001600160a01b0381358116916020810135909116906040013561058e565b61020e6107db565b6102666107ff565b60405160ff909116815260200160405180910390f35b61020e610804565b6102b06004803603604081101561029a57600080fd5b506001600160a01b03813516906020013561080a565b005b61014f6108f1565b6102b0600480360360208110156102d057600080fd5b50356001600160a01b031661090c565b61020e600480360360208110156102f657600080fd5b50356001600160a01b03166109ba565b61020e6004803603602081101561031c57600080fd5b50356001600160a01b03166109ce565b6102b0600480360361010081101561034357600080fd5b506001600160a01b038135811691602081013590911690604081013590606081013590608081013515159060ff60a0820135169060c08101359060e001356109e2565b61014f610cfc565b6102b0600480360360208110156103a457600080fd5b50356001600160a01b0316610d19565b6102b0600480360360408110156103ca57600080fd5b506001600160a01b038135169060200135610dc4565b6101f2600480360360408110156103f657600080fd5b506001600160a01b038135169060200135610fde565b6102b06004803603604081101561042257600080fd5b506001600160a01b038135169060200135610ff2565b6102b06004803603606081101561044e57600080fd5b506001600160a01b03813581169160208101359091169060400135611002565b61020e6004803603602081101561048457600080fd5b50356001600160a01b0316611013565b61020e600480360360408110156104aa57600080fd5b506001600160a01b0381358116916020013516611027565b6102b0600480360360408110156104d857600080fd5b506001600160a01b038135169060200135611049565b60405160408082019052600e81526d2230b49029ba30b13632b1b7b4b760911b602082015281565b336000908152600360205281604082206001600160a01b038516600090815260209190915260409020556001600160a01b038316337f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405190815260200160405180910390a35060015b92915050565b60015481565b6001600160a01b0383166000908152600260205281604082205410156105f55760405162461bcd60e51b81526020600482015260186024820152774461692f696e73756666696369656e742d62616c616e636560401b604482015260640160405180910390fd5b6001600160a01b038416331480159061063957506001600160a01b038416600090815260036020526000199060409020336000908152602091909152604090205414155b15610718576001600160a01b03841660009081526003602052829060409020336000908152602091909152604090205410156106bb5760405162461bcd60e51b815260206004820152601a60248201527f4461692f696e73756666696369656e742d616c6c6f77616e6365000000000000604482015260640160405180910390fd5b6001600160a01b038416600090815260036020526106ee9060409020336000908152602091909152604090205483611054565b6001600160a01b038516600090815260036020526040902033600090815260209190915260409020555b6001600160a01b0384166000908152600260205261073b90604090205483611054565b6001600160a01b0385166000908152600260205260409020556001600160a01b0383166000908152600260205261077790604090205483611064565b6001600160a01b0384166000908152600260205260409020556001600160a01b038084169085167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405190815260200160405180910390a35060019392505050565b7fea2aa0a1be11a07ed86d755c93467f4f82362b452371d1ba94d1715123511acb81565b600681565b60055481565b336000908152602081905260409020546001146108625760405162461bcd60e51b815260206004820152601260248201527111185a4bdb9bdd0b585d5d1a1bdc9a5e995960721b604482015260640160405180910390fd5b6001600160a01b0382166000908152600260205261088590604090205482611064565b6001600160a01b0383166000908152600260205260409020556001546108ab9082611064565b6001556001600160a01b03821660007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405190815260200160405180910390a35050565b6040516040808201905260018152603160f81b602082015281565b336000908152602081905260409020546001146109645760405162461bcd60e51b815260206004820152601260248201527111185a4bdb9bdd0b585d5d1a1bdc9a5e995960721b604482015260640160405180910390fd5b6001600160a01b0381166000908152602081905260019060409020555961012081016040526020815260e0602082015260e060006040830137602435600435336001600160e01b03196000351661012085a45050565b600260205280600052604060002054905081565b600460205280600052604060002054905081565b6005546000907fea2aa0a1be11a07ed86d755c93467f4f82362b452371d1ba94d1715123511acb8a8a8a8a8a60405160208101969096526001600160a01b03948516604080880191909152939094166060860152608085019190915260a084015290151560c083015260e090910190516020818303038152906040528051906020012060405161190160f01b6020820152602281019290925260428201526062016040516020818303038152906040528051906020012090506001600160a01b038916610aed5760405162461bcd60e51b815260206004820152601560248201527404461692f696e76616c69642d616464726573732d3605c1b604482015260640160405180910390fd5b60018185858560405160008152602001604052604051808581526020018460ff1660ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015610b4a573d6000803e3d6000fd5b505050602060405103516001600160a01b0316896001600160a01b031614610bad5760405162461bcd60e51b815260206004820152601260248201527111185a4bda5b9d985b1a590b5c195c9b5a5d60721b604482015260640160405180910390fd5b851580610bba5750854211155b610bff5760405162461bcd60e51b815260206004820152601260248201527111185a4bdc195c9b5a5d0b595e1c1a5c995960721b604482015260640160405180910390fd5b6001600160a01b03891660009081526004602052604090208054600181019091558714610c665760405162461bcd60e51b81526020600482015260116024820152704461692f696e76616c69642d6e6f6e636560781b604482015260640160405180910390fd5b600085610c74576000610c78565b6000195b6001600160a01b038b16600090815260036020529091508190604090206001600160a01b038b16600090815260209190915260409020556001600160a01b03808a16908b167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258360405190815260200160405180910390a350505050505050505050565b60405160408082019052600381526244414960e81b602082015281565b33600090815260208190526040902054600114610d715760405162461bcd60e51b815260206004820152601260248201527111185a4bdb9bdd0b585d5d1a1bdc9a5e995960721b604482015260640160405180910390fd5b6001600160a01b0381166000908152602081905260408120555961012081016040526020815260e0602082015260e060006040830137602435600435336001600160e01b03196000351661012085a45050565b6001600160a01b03821660009081526002602052819060409020541015610e2c5760405162461bcd60e51b81526020600482015260186024820152774461692f696e73756666696369656e742d62616c616e636560401b604482015260640160405180910390fd5b6001600160a01b0382163314801590610e7057506001600160a01b038216600090815260036020526000199060409020336000908152602091909152604090205414155b15610f4f576001600160a01b0382166000908152600360205281906040902033600090815260209190915260409020541015610ef25760405162461bcd60e51b815260206004820152601a60248201527f4461692f696e73756666696369656e742d616c6c6f77616e6365000000000000604482015260640160405180910390fd5b6001600160a01b03821660009081526003602052610f259060409020336000908152602091909152604090205482611054565b6001600160a01b038316600090815260036020526040902033600090815260209190915260409020555b6001600160a01b03821660009081526002602052610f7290604090205482611054565b6001600160a01b038316600090815260026020526040902055600154610f989082611054565b60015560006001600160a01b0383167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405190815260200160405180910390a35050565b6000610feb33848461058e565b9392505050565b610ffd33838361058e565b505050565b61100d83838361058e565b50505050565b600060205280600052604060002054905081565b6003602052816000526040600020602052806000526040600020549150829050565b610ffd82338361058e565b8082038281111561058257600080fd5b8082018281101561058257600080fdfea265627a7a72315820413263ab7e070f8ceed9a5619709b592af8ae24cfbbfaa33b7afdb1289b8632064736f6c634300050c0032454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
  "bytecodeSha1": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
  "compiler": {
    "evm_version": "petersburg",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.5.12+commit.7709ece9"
  },
  "contractName": "DAI",
  "coverageMap": {
    "branches": {
      "0": {
        "DAI.add": {
          "48": [
            3997,
            4013,
            true
          ]
        },
        "DAI.burn": {
          "43": [
            5838,
            5859,
            true
          ],
          "44": [
            5902,
            5919,
            false
          ],
          "45": [
            5923,
            5961,
            false
          ],
          "46": [
            5985,
            6018,
            true
          ]
        },
        "DAI.permit": {
          "37": [
            7446,
            7466,
            true
          ],
          "38": [
            7510,
            7546,
            true
          ],
          "39": [
            7587,
            7598,
            true
          ],
          "40": [
            7602,
            7615,
            true
          ],
          "41": [
            7656,
            7681,
            true
          ],
          "42": [
            7724,
            7731,
            true
          ]
        },
        "DAI.sub": {
          "47": [
            4104,
            4120,
            true
          ]
        },
        "DAI.transferFrom": {
          "33": [
            5094,
            5115,
            true
          ],
          "34": [
            5158,
            5175,
            false
          ],
          "35": [
            5179,
            5217,
            false
          ],
          "36": [
            5241,
            5274,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "DAI.add": {
          "32": [
            3989,
            4014
          ]
        },
        "DAI.approve": {
          "0": [
            6368,
            6400
          ],
          "1": [
            6410,
            6445
          ],
          "2": [
            6455,
            6466
          ]
        },
        "DAI.burn": {
          "21": [
            5830,
            5888
          ],
          "22": [
            5977,
            6049
          ],
          "23": [
            6063,
            6128
          ],
          "24": [
            6148,
            6189
          ],
          "25": [
            6199,
            6237
          ],
          "26": [
            6247,
            6282
          ]
        },
        "DAI.deny": {
          "20": [
            3178,
            3192
          ]
        },
        "DAI.mint": {
          "10": [
            5628,
            5669
          ],
          "11": [
            5679,
            5717
          ],
          "12": [
            5727,
            5762
          ]
        },
        "DAI.move": {
          "29": [
            6773,
            6800
          ]
        },
        "DAI.permit": {
          "14": [
            7438,
            7492
          ],
          "15": [
            7502,
            7569
          ],
          "16": [
            7579,
            7638
          ],
          "17": [
            7648,
            7703
          ],
          "18": [
            7756,
            7788
          ],
          "19": [
            7798,
            7833
          ]
        },
        "DAI.pull": {
          "30": [
            6658,
            6692
          ]
        },
        "DAI.push": {
          "28": [
            6556,
            6590
          ]
        },
        "DAI.rely": {
          "13": [
            3108,
            3122
          ]
        },
        "DAI.sub": {
          "31": [
            4096,
            4121
          ]
        },
        "DAI.transfer": {
          "27": [
            4931,
            4972
          ]
        },
        "DAI.transferFrom": {
          "3": [
            5086,
            5144
          ],
          "4": [
            5233,
            5305
          ],
          "5": [
            5319,
            5384
          ],
          "6": [
            5404,
            5445
          ],
          "7": [
            5455,
            5496
          ],
          "8": [
            5506,
            5534
          ],
          "9": [
            5544,
            5555
          ]
        }
      }
    }
  },
  "dependencies": [
    "LibNote"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "2966:4876:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2966:4876:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3327:51;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;3327:51:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6294:179;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;6294:179:0;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;3516:26;;;:::i;:::-;;;;;;;;;;;;;;;4984:578;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4984:578:0;;;;;;;;;;;;;;;;;:::i;4346:108::-;;;:::i;3474:36::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;4165:31;;;:::i;5567:202::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;5567:202:0;;;;;;;;:::i;:::-;;3430:38;;;:::i;3060:65::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3060:65:0;-1:-1:-1;;;;;3060:65:0;;:::i;3549:63::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3549:63:0;-1:-1:-1;;;;;3549:63:0;;:::i;3687:60::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3687:60:0;-1:-1:-1;;;;;3687:60:0;;:::i;6849:991::-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;;6849:991:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;3384:40::-;;;:::i;3130:65::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3130:65:0;-1:-1:-1;;;;;3130:65:0;;:::i;5774:515::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;5774:515:0;;;;;;;;:::i;4856:123::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4856:123:0;;;;;;;;:::i;6500:97::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;6500:97:0;;;;;;;;:::i;6704:103::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;6704:103:0;;;;;;;;;;;;;;;;;:::i;3016:38::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3016:38:0;-1:-1:-1;;;;;3016:38:0;;:::i;3618:63::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3618:63:0;;;;;;;;;;:::i;6602:97::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;6602:97:0;;;;;;;;:::i;3327:51::-;;;;;;;;;;;;-1:-1:-1;;;3327:51:0;;;;;:::o;6294:179::-;6378:10;6352:4;6368:21;;;:9;:21;;6397:3;6368:21;6352:4;6368:21;-1:-1:-1;;;;;6368:26:0;;;;;;;;;;;;;;:32;-1:-1:-1;;;;;6415:30:0;;6424:10;6415:30;6441:3;6415:30;;;;;;;;;;;;;;-1:-1:-1;6462:4:0;6294:179;;;;;:::o;3516:26::-;;;;:::o;4984:578::-;-1:-1:-1;;;;;5094:14:0;;5066:4;5094:14;;;:9;:14;;5112:3;5094:14;5066:4;5094:14;;:21;;5086:58;;;;-1:-1:-1;;;5086:58:0;;;;;;;;;;;;-1:-1:-1;;;5086:58:0;;;;;;;;;;;;;;-1:-1:-1;;;;;5158:17:0;;5165:10;5158:17;;;;:59;;-1:-1:-1;;;;;;5179:14:0;;;;;;:9;:14;;-1:-1:-1;;5214:2:0;5179:14;;;5194:10;5179:26;;;;;;;;;;;;;:38;;5158:59;5154:241;;;-1:-1:-1;;;;;5241:14:0;;;;;;:9;:14;;5271:3;;5241:14;;;5256:10;5241:26;;;;;;;;;;;;;:33;;5233:72;;;;-1:-1:-1;;;5233:72:0;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5352:14:0;;;;;;:9;:14;;5348:36;;5352:14;;;5367:10;5352:26;;;;;;;;;;;;;5380:3;5348;:36::i;:::-;-1:-1:-1;;;;;5319:14:0;;;;;;:9;:14;;;;;5334:10;5319:26;;;;;;;;;;;;:65;5154:241;-1:-1:-1;;;;;5425:14:0;;;;;;:9;:14;;5421:24;;5425:14;;;;5441:3;5421;:24::i;:::-;-1:-1:-1;;;;;5404:14:0;;;;;;:9;:14;;;;;:41;-1:-1:-1;;;;;5476:14:0;;;;;;:9;:14;;5472:24;;5476:14;;;;5492:3;5472;:24::i;:::-;-1:-1:-1;;;;;5455:14:0;;;;;;:9;:14;;;;;:41;-1:-1:-1;;;;;5511:23:0;;;;;;;5530:3;5511:23;;;;;;;;;;;;;;-1:-1:-1;5551:4:0;4984:578;;;;;:::o;4346:108::-;4388:66;4346:108;:::o;3474:36::-;3509:1;3474:36;:::o;4165:31::-;;;;:::o;5567:202::-;3238:10;3232:5;:17;;;;;;;;;;;3253:1;3232:22;3224:53;;;;-1:-1:-1;;;3224:53:0;;;;;;;;;;;;-1:-1:-1;;;3224:53:0;;;;;;;;;;;;;;-1:-1:-1;;;;;5649:14:0;;;;;;:9;:14;;5645:24;;5649:14;;;;5665:3;5645;:24::i;:::-;-1:-1:-1;;;;;5628:14:0;;;;;;:9;:14;;;;;:41;5700:11;;5696:21;;5713:3;5696;:21::i;:::-;5679:11;:38;-1:-1:-1;;;;;5732:30:0;;5749:1;5732:30;5758:3;5732:30;;;;;;;;;;;;;;5567:202;;:::o;3430:38::-;;;;;;;;;;;;-1:-1:-1;;;3430:38:0;;;;;:::o;3060:65::-;3238:10;3232:5;:17;;;;;;;;;;;3253:1;3232:22;3224:53;;;;-1:-1:-1;;;3224:53:0;;;;;;;;;;;;-1:-1:-1;;;3224:53:0;;;;;;;;;;;;;;-1:-1:-1;;;;;3108:10:0;;:5;:10;;;;;;;3121:1;;3108:10;;;:14;1375:5;1470:3;1464:4;1460:14;1454:4;1447:28;1544:4;1538;1531:18;1635:3;1628:4;1622;1618:15;1611:28;1721:3;1718:1;1711:4;1705;1701:15;1688:37;2038:2;2025:16;1976:1;1963:15;1895:6;-1:-1:-1;;;;;;1861:1:0;1848:15;1830:35;1770:3;1764:4;1759:328;1201:896;;:::o;3549:63::-;;;;;;;;;;;;-1:-1:-1;3549:63:0;:::o;3687:60::-;;;;;;;;;;;;-1:-1:-1;3687:60:0;:::o;6849:991::-;7118:16;;7017:14;;4388:66;7227:6;7272:7;7318:5;7362:6;7407:7;7162:253;;;;;;;;;-1:-1:-1;;;;;7162:253:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;7162:253:0;;;7152:264;;;;;;7056:370;;-1:-1:-1;;;7056:370:0;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;7056:370:0;;;7046:381;;;;;;7017:410;-1:-1:-1;;;;;;7446:20:0;;7438:54;;;;-1:-1:-1;;;7438:54:0;;;;;;;;;;;;-1:-1:-1;;;7438:54:0;;;;;;;;;;;;;;7520:26;7530:6;7538:1;7541;7544;7520:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7520:26:0;;;;;;;;-1:-1:-1;;;;;7510:36:0;:6;-1:-1:-1;;;;;7510:36:0;;7502:67;;;;-1:-1:-1;;;7502:67:0;;;;;;;;;;;;-1:-1:-1;;;7502:67:0;;;;;;;;;;;;;;7587:11;;;:28;;;7609:6;7602:3;:13;;7587:28;7579:59;;;;-1:-1:-1;;;7579:59:0;;;;;;;;;;;;-1:-1:-1;;;7579:59:0;;;;;;;;;;;;;;-1:-1:-1;;;;;7665:14:0;;;;;;:6;:14;;;;;:16;;;;;;;;7656:25;;7648:55;;;;-1:-1:-1;;;7648:55:0;;;;;;;;;;;;-1:-1:-1;;;7648:55:0;;;;;;;;;;;;;;7713:8;7724:7;:22;;7745:1;7724:22;;;-1:-1:-1;;7724:22:0;-1:-1:-1;;;;;7756:17:0;;;;;;:9;:17;;7713:33;;-1:-1:-1;7713:33:0;;7756:17;;;-1:-1:-1;;;;;7756:26:0;;;;;;;;;;;;;;:32;-1:-1:-1;;;;;7803:30:0;;;;;;;7829:3;7803:30;;;;;;;;;;;;;;6849:991;;;;;;;;;;:::o;3384:40::-;;;;;;;;;;;;-1:-1:-1;;;3384:40:0;;;;;:::o;3130:65::-;3238:10;3232:5;:17;;;;;;;;;;;3253:1;3232:22;3224:53;;;;-1:-1:-1;;;3224:53:0;;;;;;;;;;;;-1:-1:-1;;;3224:53:0;;;;;;;;;;;;;;-1:-1:-1;;;;;3178:10:0;;3191:1;3178:10;;;;;;;;3191:1;3178:10;:14;1375:5;1470:3;1464:4;1460:14;1454:4;1447:28;1544:4;1538;1531:18;1635:3;1628:4;1622;1618:15;1611:28;1721:3;1718:1;1711:4;1705;1701:15;1688:37;2038:2;2025:16;1976:1;1963:15;1895:6;-1:-1:-1;;;;;;1861:1:0;1848:15;1830:35;1770:3;1764:4;1759:328;1201:896;;:::o;5774:515::-;-1:-1:-1;;;;;5838:14:0;;;;;;:9;:14;;5856:3;;5838:14;;;;:21;;5830:58;;;;-1:-1:-1;;;5830:58:0;;;;;;;;;;;;-1:-1:-1;;;5830:58:0;;;;;;;;;;;;;;-1:-1:-1;;;;;5902:17:0;;5909:10;5902:17;;;;:59;;-1:-1:-1;;;;;;5923:14:0;;;;;;:9;:14;;-1:-1:-1;;5958:2:0;5923:14;;;5938:10;5923:26;;;;;;;;;;;;;:38;;5902:59;5898:241;;;-1:-1:-1;;;;;5985:14:0;;;;;;:9;:14;;6015:3;;5985:14;;;6000:10;5985:26;;;;;;;;;;;;;:33;;5977:72;;;;-1:-1:-1;;;5977:72:0;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6096:14:0;;;;;;:9;:14;;6092:36;;6096:14;;;6111:10;6096:26;;;;;;;;;;;;;6124:3;6092;:36::i;:::-;-1:-1:-1;;;;;6063:14:0;;;;;;:9;:14;;;;;6078:10;6063:26;;;;;;;;;;;;:65;5898:241;-1:-1:-1;;;;;6169:14:0;;;;;;:9;:14;;6165:24;;6169:14;;;;6185:3;6165;:24::i;:::-;-1:-1:-1;;;;;6148:14:0;;;;;;:9;:14;;;;;:41;6220:11;;6216:21;;6233:3;6216;:21::i;:::-;6199:11;:38;6274:1;-1:-1:-1;;;;;6252:30:0;;;6278:3;6252:30;;;;;;;;;;;;;;5774:515;;:::o;4856:123::-;4915:4;4938:34;4951:10;4963:3;4968;4938:12;:34::i;:::-;4931:41;4856:123;-1:-1:-1;;;4856:123:0:o;6500:97::-;6556:34;6569:10;6581:3;6586;6556:12;:34::i;:::-;;6500:97;;:::o;6704:103::-;6773:27;6786:3;6791;6796;6773:12;:27::i;:::-;;6704:103;;;:::o;3016:38::-;;;;;;;;;;;;-1:-1:-1;3016:38:0;:::o;3618:63::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3618:63:0;;-1:-1:-1;3618:63:0:o;6602:97::-;6658:34;6671:3;6676:10;6688:3;6658:12;:34::i;4026:102::-;4109:5;;;4104:16;;;;4096:25;;;;;3919:102;4002:5;;;3997:16;;;;3989:25;;;;",
  "language": "Solidity",
  "natspec": {
    "methods": {},
    "notice": "/// /nix/store/8xb41r4qd0cjb63wcrxf1qmfg88p0961-dss-6fd7de0/src/dai.sol"
  },
  "offset": [
    2966,
    7842
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x142 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7ECEBE00 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3E0 JUMPI DUP1 PUSH4 0xB753A98C EQ PUSH2 0x40C JUMPI DUP1 PUSH4 0xBB35783B EQ PUSH2 0x438 JUMPI DUP1 PUSH4 0xBF353DBB EQ PUSH2 0x46E JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x494 JUMPI DUP1 PUSH4 0xF2D5D56B EQ PUSH2 0x4C2 JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x306 JUMPI DUP1 PUSH4 0x8FCBAF0C EQ PUSH2 0x32C JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x386 JUMPI DUP1 PUSH4 0x9C52A7F1 EQ PUSH2 0x38E JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x3B4 JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x10A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x25E JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x27C JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x284 JUMPI DUP1 PUSH4 0x54FD4D50 EQ PUSH2 0x2B2 JUMPI DUP1 PUSH4 0x65FAE35E EQ PUSH2 0x2BA JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2E0 JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x206 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x220 JUMPI DUP1 PUSH4 0x30ADF81F EQ PUSH2 0x256 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14F PUSH2 0x4EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 SWAP1 DUP2 ADD DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x18B JUMPI DUP1 DUP3 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x173 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1B8 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x516 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20E PUSH2 0x588 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x236 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x58E JUMP JUMPDEST PUSH2 0x20E PUSH2 0x7DB JUMP JUMPDEST PUSH2 0x266 PUSH2 0x7FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20E PUSH2 0x804 JUMP JUMPDEST PUSH2 0x2B0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x29A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x80A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14F PUSH2 0x8F1 JUMP JUMPDEST PUSH2 0x2B0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x90C JUMP JUMPDEST PUSH2 0x20E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x9BA JUMP JUMPDEST PUSH2 0x20E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x31C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x9CE JUMP JUMPDEST PUSH2 0x2B0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH2 0x100 DUP2 LT ISZERO PUSH2 0x343 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x80 DUP2 ADD CALLDATALOAD ISZERO ISZERO SWAP1 PUSH1 0xFF PUSH1 0xA0 DUP3 ADD CALLDATALOAD AND SWAP1 PUSH1 0xC0 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xE0 ADD CALLDATALOAD PUSH2 0x9E2 JUMP JUMPDEST PUSH2 0x14F PUSH2 0xCFC JUMP JUMPDEST PUSH2 0x2B0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xD19 JUMP JUMPDEST PUSH2 0x2B0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xDC4 JUMP JUMPDEST PUSH2 0x1F2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xFDE JUMP JUMPDEST PUSH2 0x2B0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x422 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xFF2 JUMP JUMPDEST PUSH2 0x2B0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x44E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x1002 JUMP JUMPDEST PUSH2 0x20E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x484 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1013 JUMP JUMPDEST PUSH2 0x20E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x1027 JUMP JUMPDEST PUSH2 0x2B0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x1049 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x40 DUP1 DUP3 ADD SWAP1 MSTORE PUSH1 0xE DUP2 MSTORE PUSH14 0x2230B49029BA30B13632B1B7B4B7 PUSH1 0x91 SHL PUSH1 0x20 DUP3 ADD MSTORE DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE DUP2 PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND CALLER PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE DUP2 PUSH1 0x40 DUP3 KECCAK256 SLOAD LT ISZERO PUSH2 0x5F5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x4461692F696E73756666696369656E742D62616C616E6365 PUSH1 0x40 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND CALLER EQ DUP1 ISZERO SWAP1 PUSH2 0x639 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 NOT SWAP1 PUSH1 0x40 SWAP1 KECCAK256 CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD EQ ISZERO JUMPDEST ISZERO PUSH2 0x718 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE DUP3 SWAP1 PUSH1 0x40 SWAP1 KECCAK256 CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD LT ISZERO PUSH2 0x6BB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4461692F696E73756666696369656E742D616C6C6F77616E6365000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH2 0x6EE SWAP1 PUSH1 0x40 SWAP1 KECCAK256 CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP4 PUSH2 0x1054 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH2 0x73B SWAP1 PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP4 PUSH2 0x1054 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH2 0x777 SWAP1 PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP4 PUSH2 0x1064 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP1 DUP6 AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0xEA2AA0A1BE11A07ED86D755C93467F4F82362B452371D1BA94D1715123511ACB DUP2 JUMP JUMPDEST PUSH1 0x6 DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 EQ PUSH2 0x862 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x11185A4BDB9BDD0B585D5D1A1BDC9A5E9959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH2 0x885 SWAP1 PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 PUSH2 0x1064 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x1 SLOAD PUSH2 0x8AB SWAP1 DUP3 PUSH2 0x1064 JUMP JUMPDEST PUSH1 0x1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x40 DUP1 DUP3 ADD SWAP1 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x31 PUSH1 0xF8 SHL PUSH1 0x20 DUP3 ADD MSTORE DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 EQ PUSH2 0x964 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x11185A4BDB9BDD0B585D5D1A1BDC9A5E9959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0x40 SWAP1 KECCAK256 SSTORE MSIZE PUSH2 0x120 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0xE0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xE0 PUSH1 0x0 PUSH1 0x40 DUP4 ADD CALLDATACOPY PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0x0 CALLDATALOAD AND PUSH2 0x120 DUP6 LOG4 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x0 SWAP1 PUSH32 0xEA2AA0A1BE11A07ED86D755C93467F4F82362B452371D1BA94D1715123511ACB DUP11 DUP11 DUP11 DUP11 DUP11 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND PUSH1 0x40 DUP1 DUP9 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP1 SWAP5 AND PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x80 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA0 DUP5 ADD MSTORE SWAP1 ISZERO ISZERO PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0xE0 SWAP1 SWAP2 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x1901 PUSH1 0xF0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x22 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x42 DUP3 ADD MSTORE PUSH1 0x62 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH2 0xAED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x4461692F696E76616C69642D616464726573732D3 PUSH1 0x5C SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB4A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xBAD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x11185A4BDA5B9D985B1A590B5C195C9B5A5D PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 ISZERO DUP1 PUSH2 0xBBA JUMPI POP DUP6 TIMESTAMP GT ISZERO JUMPDEST PUSH2 0xBFF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x11185A4BDC195C9B5A5D0B595E1C1A5C9959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD SWAP1 SWAP2 SSTORE DUP8 EQ PUSH2 0xC66 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x4461692F696E76616C69642D6E6F6E6365 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP6 PUSH2 0xC74 JUMPI PUSH1 0x0 PUSH2 0xC78 JUMP JUMPDEST PUSH1 0x0 NOT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE SWAP1 SWAP2 POP DUP2 SWAP1 PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP11 AND SWAP1 DUP12 AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x40 DUP1 DUP3 ADD SWAP1 MSTORE PUSH1 0x3 DUP2 MSTORE PUSH3 0x444149 PUSH1 0xE8 SHL PUSH1 0x20 DUP3 ADD MSTORE DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 EQ PUSH2 0xD71 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x11185A4BDB9BDD0B585D5D1A1BDC9A5E9959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE MSIZE PUSH2 0x120 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0xE0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xE0 PUSH1 0x0 PUSH1 0x40 DUP4 ADD CALLDATACOPY PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0x0 CALLDATALOAD AND PUSH2 0x120 DUP6 LOG4 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE DUP2 SWAP1 PUSH1 0x40 SWAP1 KECCAK256 SLOAD LT ISZERO PUSH2 0xE2C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x4461692F696E73756666696369656E742D62616C616E6365 PUSH1 0x40 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND CALLER EQ DUP1 ISZERO SWAP1 PUSH2 0xE70 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 NOT SWAP1 PUSH1 0x40 SWAP1 KECCAK256 CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD EQ ISZERO JUMPDEST ISZERO PUSH2 0xF4F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE DUP2 SWAP1 PUSH1 0x40 SWAP1 KECCAK256 CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD LT ISZERO PUSH2 0xEF2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4461692F696E73756666696369656E742D616C6C6F77616E6365000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH2 0xF25 SWAP1 PUSH1 0x40 SWAP1 KECCAK256 CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 PUSH2 0x1054 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH2 0xF72 SWAP1 PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 PUSH2 0x1054 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x1 SLOAD PUSH2 0xF98 SWAP1 DUP3 PUSH2 0x1054 JUMP JUMPDEST PUSH1 0x1 SSTORE PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFEB CALLER DUP5 DUP5 PUSH2 0x58E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xFFD CALLER DUP4 DUP4 PUSH2 0x58E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x100D DUP4 DUP4 DUP4 PUSH2 0x58E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP2 POP DUP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xFFD DUP3 CALLER DUP4 PUSH2 0x58E JUMP JUMPDEST DUP1 DUP3 SUB DUP3 DUP2 GT ISZERO PUSH2 0x582 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP3 ADD DUP3 DUP2 LT ISZERO PUSH2 0x582 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 COINBASE ORIGIN PUSH4 0xAB7E070F DUP13 0xee 0xd9 0xa5 PUSH2 0x9709 0xb5 SWAP3 0xaf DUP11 0xe2 0x4c 0xfb 0xbf 0xaa CALLER 0xb7 0xaf 0xdb SLT DUP10 0xb8 PUSH4 0x2064736F PUSH13 0x634300050C0032000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        2966,
        7842
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "6": {
      "op": "DUP1"
    },
    "7": {
      "op": "ISZERO"
    },
    "8": {
      "op": "PUSH2",
      "value": "0x10"
    },
    "11": {
      "op": "JUMPI"
    },
    "12": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14": {
      "op": "DUP1"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "REVERT",
      "path": "0"
    },
    "16": {
      "op": "JUMPDEST"
    },
    "17": {
      "offset": [
        2966,
        7842
      ],
      "op": "POP",
      "path": "0"
    },
    "18": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "21": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "LT",
      "path": "0"
    },
    "22": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x142"
    },
    "25": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "26": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "29": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "SHR",
      "path": "0"
    },
    "32": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "DUP1",
      "path": "0"
    },
    "33": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x7ECEBE00"
    },
    "38": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "GT",
      "path": "0"
    },
    "39": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB8"
    },
    "42": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "43": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "DUP1",
      "path": "0"
    },
    "44": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA9059CBB"
    },
    "49": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "GT",
      "path": "0"
    },
    "50": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7C"
    },
    "53": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "54": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "DUP1",
      "path": "0"
    },
    "55": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA9059CBB"
    },
    "60": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "EQ",
      "path": "0"
    },
    "61": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E0"
    },
    "64": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "65": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "DUP1",
      "path": "0"
    },
    "66": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xB753A98C"
    },
    "71": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "EQ",
      "path": "0"
    },
    "72": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x40C"
    },
    "75": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "76": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "DUP1",
      "path": "0"
    },
    "77": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xBB35783B"
    },
    "82": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "EQ",
      "path": "0"
    },
    "83": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x438"
    },
    "86": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "87": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "DUP1",
      "path": "0"
    },
    "88": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xBF353DBB"
    },
    "93": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "EQ",
      "path": "0"
    },
    "94": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x46E"
    },
    "97": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "98": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "DUP1",
      "path": "0"
    },
    "99": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xDD62ED3E"
    },
    "104": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "EQ",
      "path": "0"
    },
    "105": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x494"
    },
    "108": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "109": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "DUP1",
      "path": "0"
    },
    "110": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xF2D5D56B"
    },
    "115": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "EQ",
      "path": "0"
    },
    "116": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4C2"
    },
    "119": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "120": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x142"
    },
    "123": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "JUMP",
      "path": "0"
    },
    "124": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "125": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "DUP1",
      "path": "0"
    },
    "126": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x7ECEBE00"
    },
    "131": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "EQ",
      "path": "0"
    },
    "132": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x306"
    },
    "135": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "136": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "DUP1",
      "path": "0"
    },
    "137": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x8FCBAF0C"
    },
    "142": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "EQ",
      "path": "0"
    },
    "143": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x32C"
    },
    "146": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "147": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "DUP1",
      "path": "0"
    },
    "148": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x95D89B41"
    },
    "153": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "EQ",
      "path": "0"
    },
    "154": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x386"
    },
    "157": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "158": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "DUP1",
      "path": "0"
    },
    "159": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x9C52A7F1"
    },
    "164": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "EQ",
      "path": "0"
    },
    "165": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x38E"
    },
    "168": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "169": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "DUP1",
      "path": "0"
    },
    "170": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x9DC29FAC"
    },
    "175": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "EQ",
      "path": "0"
    },
    "176": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3B4"
    },
    "179": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "180": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x142"
    },
    "183": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "JUMP",
      "path": "0"
    },
    "184": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "185": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "DUP1",
      "path": "0"
    },
    "186": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x313CE567"
    },
    "191": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "GT",
      "path": "0"
    },
    "192": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10A"
    },
    "195": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "196": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "DUP1",
      "path": "0"
    },
    "197": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x313CE567"
    },
    "202": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "EQ",
      "path": "0"
    },
    "203": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x25E"
    },
    "206": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "207": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "DUP1",
      "path": "0"
    },
    "208": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x3644E515"
    },
    "213": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "EQ",
      "path": "0"
    },
    "214": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x27C"
    },
    "217": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "218": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "DUP1",
      "path": "0"
    },
    "219": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x40C10F19"
    },
    "224": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "EQ",
      "path": "0"
    },
    "225": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x284"
    },
    "228": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "229": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "DUP1",
      "path": "0"
    },
    "230": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x54FD4D50"
    },
    "235": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "EQ",
      "path": "0"
    },
    "236": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B2"
    },
    "239": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "240": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "DUP1",
      "path": "0"
    },
    "241": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x65FAE35E"
    },
    "246": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "EQ",
      "path": "0"
    },
    "247": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2BA"
    },
    "250": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "251": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "DUP1",
      "path": "0"
    },
    "252": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x70A08231"
    },
    "257": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "EQ",
      "path": "0"
    },
    "258": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2E0"
    },
    "261": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "262": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x142"
    },
    "265": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "JUMP",
      "path": "0"
    },
    "266": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "267": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "DUP1",
      "path": "0"
    },
    "268": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x6FDDE03"
    },
    "273": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "EQ",
      "path": "0"
    },
    "274": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x147"
    },
    "277": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "278": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "DUP1",
      "path": "0"
    },
    "279": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x95EA7B3"
    },
    "284": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "EQ",
      "path": "0"
    },
    "285": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C6"
    },
    "288": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "289": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "DUP1",
      "path": "0"
    },
    "290": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x18160DDD"
    },
    "295": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "EQ",
      "path": "0"
    },
    "296": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x206"
    },
    "299": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "300": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "DUP1",
      "path": "0"
    },
    "301": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x23B872DD"
    },
    "306": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "EQ",
      "path": "0"
    },
    "307": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x220"
    },
    "310": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "311": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "DUP1",
      "path": "0"
    },
    "312": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x30ADF81F"
    },
    "317": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "EQ",
      "path": "0"
    },
    "318": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x256"
    },
    "321": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "322": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "323": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "325": {
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "DUP1",
      "path": "0"
    },
    "326": {
      "first_revert": true,
      "fn": null,
      "offset": [
        2966,
        7842
      ],
      "op": "REVERT",
      "path": "0"
    },
    "327": {
      "offset": [
        3327,
        3378
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "328": {
      "fn": null,
      "offset": [
        3327,
        3378
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14F"
    },
    "331": {
      "fn": null,
      "offset": [
        3327,
        3378
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4EE"
    },
    "334": {
      "fn": null,
      "jump": "i",
      "offset": [
        3327,
        3378
      ],
      "op": "JUMP",
      "path": "0"
    },
    "335": {
      "fn": null,
      "offset": [
        3327,
        3378
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "336": {
      "fn": null,
      "offset": [
        3327,
        3378
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "338": {
      "fn": null,
      "offset": [
        3327,
        3378
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "339": {
      "fn": null,
      "offset": [
        3327,
        3378
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "341": {
      "fn": null,
      "offset": [
        3327,
        3378
      ],
      "op": "DUP1",
      "path": "0"
    },
    "342": {
      "fn": null,
      "offset": [
        3327,
        3378
      ],
      "op": "DUP3",
      "path": "0"
    },
    "343": {
      "fn": null,
      "offset": [
        3327,
        3378
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "344": {
      "fn": null,
      "offset": [
        3327,
        3378
      ],
      "op": "DUP2",
      "path": "0"
    },
    "345": {
      "fn": null,
      "offset": [
        3327,
        3378
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "346": {
      "fn": null,
      "offset": [
        3327,
        3378
      ],
      "op": "DUP2",
      "path": "0"
    },
    "347": {
      "fn": null,
      "offset": [
        3327,
        3378
      ],
      "op": "ADD",
      "path": "0"
    },
    "348": {
      "fn": null,
      "offset": [
        3327,
        3378
      ],
      "op": "DUP4",
      "path": "0"
    },
    "349": {
      "fn": null,
      "offset": [
        3327,
        3378
      ],
      "op": "DUP2",
      "path": "0"
    },
    "350": {
      "fn": null,
      "offset": [
        3327,
        3378
      ],
      "op": "DUP2",
      "path": "0"
    },
    "351": {
      "fn": null,
      "offset": [
        3327,
        3378
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "352": {
      "fn": null,
      "offset": [
        3327,
        3378
      ],
      "op": "DUP2",
      "path": "0"
    },
    "353": {
      "fn": null,
      "offset": [
        3327,
        3378
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "354": {
      "fn": null,
      "offset": [
        3327,
        3378
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "356": {
      "fn": null,
      "offset": [
        3327,
        3378
      ],
      "op": "ADD",
      "path": "0"
    },
    "357": {
      "fn": null,
      "offset": [
        3327,
        3378
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "358": {
      "fn": null,
      "offset": [
        3327,
        3378
      ],
      "op": "POP",
      "path": "0"
    },
    "359": {
      "fn": null,
      "offset": [
        3327,
        3378
      ],
      "op": "DUP1",
      "path": "0"
    },
    "360": {
      "fn": null,
      "offset": [
        3327,
        3378
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "361": {
      "fn": null,
      "offset": [
        3327,
        3378
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "362": {
      "fn": null,
      "offset": [
        3327,
        3378
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "364": {
      "fn": null,
      "offset": [
        3327,
        3378
      ],
      "op": "ADD",
      "path": "0"
    },
    "365": {
      "fn": null,
      "offset": [
        3327,
        3378
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "366": {
      "fn": null,
      "offset": [
        3327,
        3378
      ],
      "op": "DUP1",
      "path": "0"
    },
    "367": {
      "fn": null,
      "offset": [
        3327,
        3378
      ],
      "op": "DUP4",
      "path": "0"
    },
    "368": {
      "fn": null,
      "offset": [
        3327,
        3378
      ],
      "op": "DUP4",
      "path": "0"
    },
    "369": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "371": {
      "op": "JUMPDEST"
    },
    "372": {
      "op": "DUP4"
    },
    "373": {
      "op": "DUP2"
    },
    "374": {
      "op": "LT"
    },
    "375": {
      "op": "ISZERO"
    },
    "376": {
      "op": "PUSH2",
      "value": "0x18B"
    },
    "379": {
      "op": "JUMPI"
    },
    "380": {
      "op": "DUP1"
    },
    "381": {
      "op": "DUP3"
    },
    "382": {
      "op": "ADD"
    },
    "383": {
      "op": "MLOAD"
    },
    "384": {
      "op": "DUP4"
    },
    "385": {
      "op": "DUP3"
    },
    "386": {
      "op": "ADD"
    },
    "387": {
      "op": "MSTORE"
    },
    "388": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "390": {
      "op": "ADD"
    },
    "391": {
      "op": "PUSH2",
      "value": "0x173"
    },
    "394": {
      "op": "JUMP"
    },
    "395": {
      "op": "JUMPDEST"
    },
    "396": {
      "op": "POP"
    },
    "397": {
      "offset": [
        3327,
        3378
      ],
      "op": "POP",
      "path": "0"
    },
    "398": {
      "fn": null,
      "offset": [
        3327,
        3378
      ],
      "op": "POP",
      "path": "0"
    },
    "399": {
      "fn": null,
      "offset": [
        3327,
        3378
      ],
      "op": "POP",
      "path": "0"
    },
    "400": {
      "fn": null,
      "offset": [
        3327,
        3378
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "401": {
      "fn": null,
      "offset": [
        3327,
        3378
      ],
      "op": "POP",
      "path": "0"
    },
    "402": {
      "fn": null,
      "offset": [
        3327,
        3378
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "403": {
      "fn": null,
      "offset": [
        3327,
        3378
      ],
      "op": "DUP2",
      "path": "0"
    },
    "404": {
      "fn": null,
      "offset": [
        3327,
        3378
      ],
      "op": "ADD",
      "path": "0"
    },
    "405": {
      "fn": null,
      "offset": [
        3327,
        3378
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "406": {
      "fn": null,
      "offset": [
        3327,
        3378
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "408": {
      "fn": null,
      "offset": [
        3327,
        3378
      ],
      "op": "AND",
      "path": "0"
    },
    "409": {
      "fn": null,
      "offset": [
        3327,
        3378
      ],
      "op": "DUP1",
      "path": "0"
    },
    "410": {
      "fn": null,
      "offset": [
        3327,
        3378
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "411": {
      "fn": null,
      "offset": [
        3327,
        3378
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B8"
    },
    "414": {
      "fn": null,
      "offset": [
        3327,
        3378
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "415": {
      "fn": null,
      "offset": [
        3327,
        3378
      ],
      "op": "DUP1",
      "path": "0"
    },
    "416": {
      "fn": null,
      "offset": [
        3327,
        3378
      ],
      "op": "DUP3",
      "path": "0"
    },
    "417": {
      "fn": null,
      "offset": [
        3327,
        3378
      ],
      "op": "SUB",
      "path": "0"
    },
    "418": {
      "fn": null,
      "offset": [
        3327,
        3378
      ],
      "op": "DUP1",
      "path": "0"
    },
    "419": {
      "fn": null,
      "offset": [
        3327,
        3378
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "420": {
      "fn": null,
      "offset": [
        3327,
        3378
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "422": {
      "fn": null,
      "offset": [
        3327,
        3378
      ],
      "op": "DUP4",
      "path": "0"
    },
    "423": {
      "fn": null,
      "offset": [
        3327,
        3378
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "425": {
      "fn": null,
      "offset": [
        3327,
        3378
      ],
      "op": "SUB",
      "path": "0"
    },
    "426": {
      "fn": null,
      "offset": [
        3327,
        3378
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "429": {
      "fn": null,
      "offset": [
        3327,
        3378
      ],
      "op": "EXP",
      "path": "0"
    },
    "430": {
      "fn": null,
      "offset": [
        3327,
        3378
      ],
      "op": "SUB",
      "path": "0"
    },
    "431": {
      "fn": null,
      "offset": [
        3327,
        3378
      ],
      "op": "NOT",
      "path": "0"
    },
    "432": {
      "fn": null,
      "offset": [
        3327,
        3378
      ],
      "op": "AND",
      "path": "0"
    },
    "433": {
      "fn": null,
      "offset": [
        3327,
        3378
      ],
      "op": "DUP2",
      "path": "0"
    },
    "434": {
      "fn": null,
      "offset": [
        3327,
        3378
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "435": {
      "fn": null,
      "offset": [
        3327,
        3378
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "437": {
      "fn": null,
      "offset": [
        3327,
        3378
      ],
      "op": "ADD",
      "path": "0"
    },
    "438": {
      "fn": null,
      "offset": [
        3327,
        3378
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "439": {
      "fn": null,
      "offset": [
        3327,
        3378
      ],
      "op": "POP",
      "path": "0"
    },
    "440": {
      "fn": null,
      "offset": [
        3327,
        3378
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "441": {
      "fn": null,
      "offset": [
        3327,
        3378
      ],
      "op": "POP",
      "path": "0"
    },
    "442": {
      "fn": null,
      "offset": [
        3327,
        3378
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "443": {
      "fn": null,
      "offset": [
        3327,
        3378
      ],
      "op": "POP",
      "path": "0"
    },
    "444": {
      "fn": null,
      "offset": [
        3327,
        3378
      ],
      "op": "POP",
      "path": "0"
    },
    "445": {
      "fn": null,
      "offset": [
        3327,
        3378
      ],
      "op": "POP",
      "path": "0"
    },
    "446": {
      "fn": null,
      "offset": [
        3327,
        3378
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "448": {
      "fn": null,
      "offset": [
        3327,
        3378
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "449": {
      "fn": null,
      "offset": [
        3327,
        3378
      ],
      "op": "DUP1",
      "path": "0"
    },
    "450": {
      "fn": null,
      "offset": [
        3327,
        3378
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "451": {
      "fn": null,
      "offset": [
        3327,
        3378
      ],
      "op": "SUB",
      "path": "0"
    },
    "452": {
      "fn": null,
      "offset": [
        3327,
        3378
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "453": {
      "fn": null,
      "offset": [
        3327,
        3378
      ],
      "op": "RETURN",
      "path": "0"
    },
    "454": {
      "fn": "DAI.approve",
      "offset": [
        6294,
        6473
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "455": {
      "fn": "DAI.approve",
      "offset": [
        6294,
        6473
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F2"
    },
    "458": {
      "fn": "DAI.approve",
      "offset": [
        6294,
        6473
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "460": {
      "fn": "DAI.approve",
      "offset": [
        6294,
        6473
      ],
      "op": "DUP1",
      "path": "0"
    },
    "461": {
      "fn": "DAI.approve",
      "offset": [
        6294,
        6473
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "462": {
      "fn": "DAI.approve",
      "offset": [
        6294,
        6473
      ],
      "op": "SUB",
      "path": "0"
    },
    "463": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "465": {
      "op": "DUP2"
    },
    "466": {
      "op": "LT"
    },
    "467": {
      "op": "ISZERO"
    },
    "468": {
      "op": "PUSH2",
      "value": "0x1DC"
    },
    "471": {
      "op": "JUMPI"
    },
    "472": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "474": {
      "op": "DUP1"
    },
    "475": {
      "op": "REVERT"
    },
    "476": {
      "op": "JUMPDEST"
    },
    "477": {
      "op": "POP"
    },
    "478": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "480": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "482": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "484": {
      "op": "SHL"
    },
    "485": {
      "op": "SUB"
    },
    "486": {
      "fn": "DAI.approve",
      "offset": [
        6294,
        6473
      ],
      "op": "DUP2",
      "path": "0"
    },
    "487": {
      "fn": "DAI.approve",
      "offset": [
        6294,
        6473
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "488": {
      "fn": "DAI.approve",
      "offset": [
        6294,
        6473
      ],
      "op": "AND",
      "path": "0"
    },
    "489": {
      "fn": "DAI.approve",
      "offset": [
        6294,
        6473
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "490": {
      "fn": "DAI.approve",
      "offset": [
        6294,
        6473
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "492": {
      "fn": "DAI.approve",
      "offset": [
        6294,
        6473
      ],
      "op": "ADD",
      "path": "0"
    },
    "493": {
      "fn": "DAI.approve",
      "offset": [
        6294,
        6473
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "494": {
      "fn": "DAI.approve",
      "offset": [
        6294,
        6473
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x516"
    },
    "497": {
      "fn": "DAI.approve",
      "jump": "i",
      "offset": [
        6294,
        6473
      ],
      "op": "JUMP",
      "path": "0"
    },
    "498": {
      "fn": "DAI.approve",
      "offset": [
        6294,
        6473
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "499": {
      "fn": "DAI.approve",
      "offset": [
        6294,
        6473
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "501": {
      "fn": "DAI.approve",
      "offset": [
        6294,
        6473
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "502": {
      "fn": "DAI.approve",
      "offset": [
        6294,
        6473
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "503": {
      "fn": "DAI.approve",
      "offset": [
        6294,
        6473
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "504": {
      "fn": "DAI.approve",
      "offset": [
        6294,
        6473
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "505": {
      "fn": "DAI.approve",
      "offset": [
        6294,
        6473
      ],
      "op": "DUP2",
      "path": "0"
    },
    "506": {
      "fn": "DAI.approve",
      "offset": [
        6294,
        6473
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "507": {
      "fn": "DAI.approve",
      "offset": [
        6294,
        6473
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "509": {
      "fn": "DAI.approve",
      "offset": [
        6294,
        6473
      ],
      "op": "ADD",
      "path": "0"
    },
    "510": {
      "fn": "DAI.approve",
      "offset": [
        6294,
        6473
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "512": {
      "fn": "DAI.approve",
      "offset": [
        6294,
        6473
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "513": {
      "fn": "DAI.approve",
      "offset": [
        6294,
        6473
      ],
      "op": "DUP1",
      "path": "0"
    },
    "514": {
      "fn": "DAI.approve",
      "offset": [
        6294,
        6473
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "515": {
      "fn": "DAI.approve",
      "offset": [
        6294,
        6473
      ],
      "op": "SUB",
      "path": "0"
    },
    "516": {
      "fn": "DAI.approve",
      "offset": [
        6294,
        6473
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "517": {
      "fn": "DAI.approve",
      "offset": [
        6294,
        6473
      ],
      "op": "RETURN",
      "path": "0"
    },
    "518": {
      "offset": [
        3516,
        3542
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "519": {
      "fn": "DAI.approve",
      "offset": [
        3516,
        3542
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x20E"
    },
    "522": {
      "fn": "DAI.approve",
      "offset": [
        3516,
        3542
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x588"
    },
    "525": {
      "fn": "DAI.approve",
      "jump": "i",
      "offset": [
        3516,
        3542
      ],
      "op": "JUMP",
      "path": "0"
    },
    "526": {
      "fn": "DAI.approve",
      "offset": [
        3516,
        3542
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "527": {
      "fn": "DAI.approve",
      "offset": [
        3516,
        3542
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "529": {
      "fn": "DAI.approve",
      "offset": [
        3516,
        3542
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "530": {
      "fn": "DAI.approve",
      "offset": [
        3516,
        3542
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "531": {
      "fn": "DAI.approve",
      "offset": [
        3516,
        3542
      ],
      "op": "DUP2",
      "path": "0"
    },
    "532": {
      "fn": "DAI.approve",
      "offset": [
        3516,
        3542
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "533": {
      "fn": "DAI.approve",
      "offset": [
        3516,
        3542
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "535": {
      "fn": "DAI.approve",
      "offset": [
        3516,
        3542
      ],
      "op": "ADD",
      "path": "0"
    },
    "536": {
      "fn": "DAI.approve",
      "offset": [
        3516,
        3542
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "538": {
      "fn": "DAI.approve",
      "offset": [
        3516,
        3542
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "539": {
      "fn": "DAI.approve",
      "offset": [
        3516,
        3542
      ],
      "op": "DUP1",
      "path": "0"
    },
    "540": {
      "fn": "DAI.approve",
      "offset": [
        3516,
        3542
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "541": {
      "fn": "DAI.approve",
      "offset": [
        3516,
        3542
      ],
      "op": "SUB",
      "path": "0"
    },
    "542": {
      "fn": "DAI.approve",
      "offset": [
        3516,
        3542
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "543": {
      "fn": "DAI.approve",
      "offset": [
        3516,
        3542
      ],
      "op": "RETURN",
      "path": "0"
    },
    "544": {
      "fn": "DAI.transferFrom",
      "offset": [
        4984,
        5562
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "545": {
      "fn": "DAI.transferFrom",
      "offset": [
        4984,
        5562
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F2"
    },
    "548": {
      "fn": "DAI.transferFrom",
      "offset": [
        4984,
        5562
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "550": {
      "fn": "DAI.transferFrom",
      "offset": [
        4984,
        5562
      ],
      "op": "DUP1",
      "path": "0"
    },
    "551": {
      "fn": "DAI.transferFrom",
      "offset": [
        4984,
        5562
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "552": {
      "fn": "DAI.transferFrom",
      "offset": [
        4984,
        5562
      ],
      "op": "SUB",
      "path": "0"
    },
    "553": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "555": {
      "op": "DUP2"
    },
    "556": {
      "op": "LT"
    },
    "557": {
      "op": "ISZERO"
    },
    "558": {
      "op": "PUSH2",
      "value": "0x236"
    },
    "561": {
      "op": "JUMPI"
    },
    "562": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "564": {
      "op": "DUP1"
    },
    "565": {
      "op": "REVERT"
    },
    "566": {
      "op": "JUMPDEST"
    },
    "567": {
      "op": "POP"
    },
    "568": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "570": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "572": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "574": {
      "op": "SHL"
    },
    "575": {
      "op": "SUB"
    },
    "576": {
      "fn": "DAI.transferFrom",
      "offset": [
        4984,
        5562
      ],
      "op": "DUP2",
      "path": "0"
    },
    "577": {
      "fn": "DAI.transferFrom",
      "offset": [
        4984,
        5562
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "578": {
      "fn": "DAI.transferFrom",
      "offset": [
        4984,
        5562
      ],
      "op": "DUP2",
      "path": "0"
    },
    "579": {
      "fn": "DAI.transferFrom",
      "offset": [
        4984,
        5562
      ],
      "op": "AND",
      "path": "0"
    },
    "580": {
      "fn": "DAI.transferFrom",
      "offset": [
        4984,
        5562
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "581": {
      "fn": "DAI.transferFrom",
      "offset": [
        4984,
        5562
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "583": {
      "fn": "DAI.transferFrom",
      "offset": [
        4984,
        5562
      ],
      "op": "DUP2",
      "path": "0"
    },
    "584": {
      "fn": "DAI.transferFrom",
      "offset": [
        4984,
        5562
      ],
      "op": "ADD",
      "path": "0"
    },
    "585": {
      "fn": "DAI.transferFrom",
      "offset": [
        4984,
        5562
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "586": {
      "fn": "DAI.transferFrom",
      "offset": [
        4984,
        5562
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "587": {
      "fn": "DAI.transferFrom",
      "offset": [
        4984,
        5562
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "588": {
      "fn": "DAI.transferFrom",
      "offset": [
        4984,
        5562
      ],
      "op": "AND",
      "path": "0"
    },
    "589": {
      "fn": "DAI.transferFrom",
      "offset": [
        4984,
        5562
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "590": {
      "fn": "DAI.transferFrom",
      "offset": [
        4984,
        5562
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "592": {
      "fn": "DAI.transferFrom",
      "offset": [
        4984,
        5562
      ],
      "op": "ADD",
      "path": "0"
    },
    "593": {
      "fn": "DAI.transferFrom",
      "offset": [
        4984,
        5562
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "594": {
      "fn": "DAI.transferFrom",
      "offset": [
        4984,
        5562
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x58E"
    },
    "597": {
      "fn": "DAI.transferFrom",
      "jump": "i",
      "offset": [
        4984,
        5562
      ],
      "op": "JUMP",
      "path": "0"
    },
    "598": {
      "offset": [
        4346,
        4454
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "599": {
      "fn": "DAI.transferFrom",
      "offset": [
        4346,
        4454
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x20E"
    },
    "602": {
      "fn": "DAI.transferFrom",
      "offset": [
        4346,
        4454
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7DB"
    },
    "605": {
      "fn": "DAI.transferFrom",
      "jump": "i",
      "offset": [
        4346,
        4454
      ],
      "op": "JUMP",
      "path": "0"
    },
    "606": {
      "offset": [
        3474,
        3510
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "607": {
      "fn": "DAI.transferFrom",
      "offset": [
        3474,
        3510
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x266"
    },
    "610": {
      "fn": "DAI.transferFrom",
      "offset": [
        3474,
        3510
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7FF"
    },
    "613": {
      "fn": "DAI.transferFrom",
      "jump": "i",
      "offset": [
        3474,
        3510
      ],
      "op": "JUMP",
      "path": "0"
    },
    "614": {
      "fn": "DAI.transferFrom",
      "offset": [
        3474,
        3510
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "615": {
      "fn": "DAI.transferFrom",
      "offset": [
        3474,
        3510
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "617": {
      "fn": "DAI.transferFrom",
      "offset": [
        3474,
        3510
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "618": {
      "fn": "DAI.transferFrom",
      "offset": [
        3474,
        3510
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "620": {
      "fn": "DAI.transferFrom",
      "offset": [
        3474,
        3510
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "621": {
      "fn": "DAI.transferFrom",
      "offset": [
        3474,
        3510
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "622": {
      "fn": "DAI.transferFrom",
      "offset": [
        3474,
        3510
      ],
      "op": "AND",
      "path": "0"
    },
    "623": {
      "fn": "DAI.transferFrom",
      "offset": [
        3474,
        3510
      ],
      "op": "DUP2",
      "path": "0"
    },
    "624": {
      "fn": "DAI.transferFrom",
      "offset": [
        3474,
        3510
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "625": {
      "fn": "DAI.transferFrom",
      "offset": [
        3474,
        3510
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "627": {
      "fn": "DAI.transferFrom",
      "offset": [
        3474,
        3510
      ],
      "op": "ADD",
      "path": "0"
    },
    "628": {
      "fn": "DAI.transferFrom",
      "offset": [
        3474,
        3510
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "630": {
      "fn": "DAI.transferFrom",
      "offset": [
        3474,
        3510
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "631": {
      "fn": "DAI.transferFrom",
      "offset": [
        3474,
        3510
      ],
      "op": "DUP1",
      "path": "0"
    },
    "632": {
      "fn": "DAI.transferFrom",
      "offset": [
        3474,
        3510
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "633": {
      "fn": "DAI.transferFrom",
      "offset": [
        3474,
        3510
      ],
      "op": "SUB",
      "path": "0"
    },
    "634": {
      "fn": "DAI.transferFrom",
      "offset": [
        3474,
        3510
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "635": {
      "fn": "DAI.transferFrom",
      "offset": [
        3474,
        3510
      ],
      "op": "RETURN",
      "path": "0"
    },
    "636": {
      "offset": [
        4165,
        4196
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "637": {
      "fn": "DAI.transferFrom",
      "offset": [
        4165,
        4196
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x20E"
    },
    "640": {
      "fn": "DAI.transferFrom",
      "offset": [
        4165,
        4196
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x804"
    },
    "643": {
      "fn": "DAI.transferFrom",
      "jump": "i",
      "offset": [
        4165,
        4196
      ],
      "op": "JUMP",
      "path": "0"
    },
    "644": {
      "fn": "DAI.mint",
      "offset": [
        5567,
        5769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "645": {
      "fn": "DAI.mint",
      "offset": [
        5567,
        5769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B0"
    },
    "648": {
      "fn": "DAI.mint",
      "offset": [
        5567,
        5769
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "650": {
      "fn": "DAI.mint",
      "offset": [
        5567,
        5769
      ],
      "op": "DUP1",
      "path": "0"
    },
    "651": {
      "fn": "DAI.mint",
      "offset": [
        5567,
        5769
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "652": {
      "fn": "DAI.mint",
      "offset": [
        5567,
        5769
      ],
      "op": "SUB",
      "path": "0"
    },
    "653": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "655": {
      "op": "DUP2"
    },
    "656": {
      "op": "LT"
    },
    "657": {
      "op": "ISZERO"
    },
    "658": {
      "op": "PUSH2",
      "value": "0x29A"
    },
    "661": {
      "op": "JUMPI"
    },
    "662": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "664": {
      "op": "DUP1"
    },
    "665": {
      "op": "REVERT"
    },
    "666": {
      "op": "JUMPDEST"
    },
    "667": {
      "op": "POP"
    },
    "668": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "670": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "672": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "674": {
      "op": "SHL"
    },
    "675": {
      "op": "SUB"
    },
    "676": {
      "fn": "DAI.mint",
      "offset": [
        5567,
        5769
      ],
      "op": "DUP2",
      "path": "0"
    },
    "677": {
      "fn": "DAI.mint",
      "offset": [
        5567,
        5769
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "678": {
      "fn": "DAI.mint",
      "offset": [
        5567,
        5769
      ],
      "op": "AND",
      "path": "0"
    },
    "679": {
      "fn": "DAI.mint",
      "offset": [
        5567,
        5769
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "680": {
      "fn": "DAI.mint",
      "offset": [
        5567,
        5769
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "682": {
      "fn": "DAI.mint",
      "offset": [
        5567,
        5769
      ],
      "op": "ADD",
      "path": "0"
    },
    "683": {
      "fn": "DAI.mint",
      "offset": [
        5567,
        5769
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "684": {
      "fn": "DAI.mint",
      "offset": [
        5567,
        5769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x80A"
    },
    "687": {
      "fn": "DAI.mint",
      "jump": "i",
      "offset": [
        5567,
        5769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "688": {
      "fn": "DAI.mint",
      "offset": [
        5567,
        5769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "689": {
      "fn": "DAI.mint",
      "offset": [
        5567,
        5769
      ],
      "op": "STOP",
      "path": "0"
    },
    "690": {
      "offset": [
        3430,
        3468
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "691": {
      "fn": "DAI.mint",
      "offset": [
        3430,
        3468
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14F"
    },
    "694": {
      "fn": "DAI.mint",
      "offset": [
        3430,
        3468
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8F1"
    },
    "697": {
      "fn": "DAI.mint",
      "jump": "i",
      "offset": [
        3430,
        3468
      ],
      "op": "JUMP",
      "path": "0"
    },
    "698": {
      "fn": "DAI.rely",
      "offset": [
        3060,
        3125
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "699": {
      "fn": "DAI.rely",
      "offset": [
        3060,
        3125
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B0"
    },
    "702": {
      "fn": "DAI.rely",
      "offset": [
        3060,
        3125
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "704": {
      "fn": "DAI.rely",
      "offset": [
        3060,
        3125
      ],
      "op": "DUP1",
      "path": "0"
    },
    "705": {
      "fn": "DAI.rely",
      "offset": [
        3060,
        3125
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "706": {
      "fn": "DAI.rely",
      "offset": [
        3060,
        3125
      ],
      "op": "SUB",
      "path": "0"
    },
    "707": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "709": {
      "op": "DUP2"
    },
    "710": {
      "op": "LT"
    },
    "711": {
      "op": "ISZERO"
    },
    "712": {
      "op": "PUSH2",
      "value": "0x2D0"
    },
    "715": {
      "op": "JUMPI"
    },
    "716": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "718": {
      "op": "DUP1"
    },
    "719": {
      "op": "REVERT"
    },
    "720": {
      "op": "JUMPDEST"
    },
    "721": {
      "op": "POP"
    },
    "722": {
      "fn": "DAI.rely",
      "offset": [
        3060,
        3125
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "723": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "725": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "727": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "729": {
      "op": "SHL"
    },
    "730": {
      "op": "SUB"
    },
    "731": {
      "fn": "DAI.rely",
      "offset": [
        3060,
        3125
      ],
      "op": "AND",
      "path": "0"
    },
    "732": {
      "fn": "DAI.rely",
      "offset": [
        3060,
        3125
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x90C"
    },
    "735": {
      "fn": "DAI.rely",
      "jump": "i",
      "offset": [
        3060,
        3125
      ],
      "op": "JUMP",
      "path": "0"
    },
    "736": {
      "offset": [
        3549,
        3612
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "737": {
      "fn": "DAI.rely",
      "offset": [
        3549,
        3612
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x20E"
    },
    "740": {
      "fn": "DAI.rely",
      "offset": [
        3549,
        3612
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "742": {
      "fn": "DAI.rely",
      "offset": [
        3549,
        3612
      ],
      "op": "DUP1",
      "path": "0"
    },
    "743": {
      "fn": "DAI.rely",
      "offset": [
        3549,
        3612
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "744": {
      "fn": "DAI.rely",
      "offset": [
        3549,
        3612
      ],
      "op": "SUB",
      "path": "0"
    },
    "745": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "747": {
      "op": "DUP2"
    },
    "748": {
      "op": "LT"
    },
    "749": {
      "op": "ISZERO"
    },
    "750": {
      "op": "PUSH2",
      "value": "0x2F6"
    },
    "753": {
      "op": "JUMPI"
    },
    "754": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "756": {
      "op": "DUP1"
    },
    "757": {
      "op": "REVERT"
    },
    "758": {
      "op": "JUMPDEST"
    },
    "759": {
      "op": "POP"
    },
    "760": {
      "offset": [
        3549,
        3612
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "761": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "763": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "765": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "767": {
      "op": "SHL"
    },
    "768": {
      "op": "SUB"
    },
    "769": {
      "offset": [
        3549,
        3612
      ],
      "op": "AND",
      "path": "0"
    },
    "770": {
      "fn": "DAI.rely",
      "offset": [
        3549,
        3612
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9BA"
    },
    "773": {
      "fn": "DAI.rely",
      "jump": "i",
      "offset": [
        3549,
        3612
      ],
      "op": "JUMP",
      "path": "0"
    },
    "774": {
      "offset": [
        3687,
        3747
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "775": {
      "fn": "DAI.rely",
      "offset": [
        3687,
        3747
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x20E"
    },
    "778": {
      "fn": "DAI.rely",
      "offset": [
        3687,
        3747
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "780": {
      "fn": "DAI.rely",
      "offset": [
        3687,
        3747
      ],
      "op": "DUP1",
      "path": "0"
    },
    "781": {
      "fn": "DAI.rely",
      "offset": [
        3687,
        3747
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "782": {
      "fn": "DAI.rely",
      "offset": [
        3687,
        3747
      ],
      "op": "SUB",
      "path": "0"
    },
    "783": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "785": {
      "op": "DUP2"
    },
    "786": {
      "op": "LT"
    },
    "787": {
      "op": "ISZERO"
    },
    "788": {
      "op": "PUSH2",
      "value": "0x31C"
    },
    "791": {
      "op": "JUMPI"
    },
    "792": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "794": {
      "op": "DUP1"
    },
    "795": {
      "op": "REVERT"
    },
    "796": {
      "op": "JUMPDEST"
    },
    "797": {
      "op": "POP"
    },
    "798": {
      "offset": [
        3687,
        3747
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "799": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "801": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "803": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "805": {
      "op": "SHL"
    },
    "806": {
      "op": "SUB"
    },
    "807": {
      "offset": [
        3687,
        3747
      ],
      "op": "AND",
      "path": "0"
    },
    "808": {
      "fn": "DAI.rely",
      "offset": [
        3687,
        3747
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9CE"
    },
    "811": {
      "fn": "DAI.rely",
      "jump": "i",
      "offset": [
        3687,
        3747
      ],
      "op": "JUMP",
      "path": "0"
    },
    "812": {
      "fn": "DAI.permit",
      "offset": [
        6849,
        7840
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "813": {
      "fn": "DAI.permit",
      "offset": [
        6849,
        7840
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B0"
    },
    "816": {
      "fn": "DAI.permit",
      "offset": [
        6849,
        7840
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "818": {
      "fn": "DAI.permit",
      "offset": [
        6849,
        7840
      ],
      "op": "DUP1",
      "path": "0"
    },
    "819": {
      "fn": "DAI.permit",
      "offset": [
        6849,
        7840
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "820": {
      "fn": "DAI.permit",
      "offset": [
        6849,
        7840
      ],
      "op": "SUB",
      "path": "0"
    },
    "821": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "824": {
      "op": "DUP2"
    },
    "825": {
      "op": "LT"
    },
    "826": {
      "op": "ISZERO"
    },
    "827": {
      "op": "PUSH2",
      "value": "0x343"
    },
    "830": {
      "op": "JUMPI"
    },
    "831": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "833": {
      "op": "DUP1"
    },
    "834": {
      "op": "REVERT"
    },
    "835": {
      "op": "JUMPDEST"
    },
    "836": {
      "op": "POP"
    },
    "837": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "839": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "841": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "843": {
      "op": "SHL"
    },
    "844": {
      "op": "SUB"
    },
    "845": {
      "fn": "DAI.permit",
      "offset": [
        6849,
        7840
      ],
      "op": "DUP2",
      "path": "0"
    },
    "846": {
      "fn": "DAI.permit",
      "offset": [
        6849,
        7840
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "847": {
      "fn": "DAI.permit",
      "offset": [
        6849,
        7840
      ],
      "op": "DUP2",
      "path": "0"
    },
    "848": {
      "fn": "DAI.permit",
      "offset": [
        6849,
        7840
      ],
      "op": "AND",
      "path": "0"
    },
    "849": {
      "fn": "DAI.permit",
      "offset": [
        6849,
        7840
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "850": {
      "fn": "DAI.permit",
      "offset": [
        6849,
        7840
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "852": {
      "fn": "DAI.permit",
      "offset": [
        6849,
        7840
      ],
      "op": "DUP2",
      "path": "0"
    },
    "853": {
      "fn": "DAI.permit",
      "offset": [
        6849,
        7840
      ],
      "op": "ADD",
      "path": "0"
    },
    "854": {
      "fn": "DAI.permit",
      "offset": [
        6849,
        7840
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "855": {
      "fn": "DAI.permit",
      "offset": [
        6849,
        7840
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "856": {
      "fn": "DAI.permit",
      "offset": [
        6849,
        7840
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "857": {
      "fn": "DAI.permit",
      "offset": [
        6849,
        7840
      ],
      "op": "AND",
      "path": "0"
    },
    "858": {
      "fn": "DAI.permit",
      "offset": [
        6849,
        7840
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "859": {
      "fn": "DAI.permit",
      "offset": [
        6849,
        7840
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "861": {
      "fn": "DAI.permit",
      "offset": [
        6849,
        7840
      ],
      "op": "DUP2",
      "path": "0"
    },
    "862": {
      "fn": "DAI.permit",
      "offset": [
        6849,
        7840
      ],
      "op": "ADD",
      "path": "0"
    },
    "863": {
      "fn": "DAI.permit",
      "offset": [
        6849,
        7840
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "864": {
      "fn": "DAI.permit",
      "offset": [
        6849,
        7840
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "865": {
      "fn": "DAI.permit",
      "offset": [
        6849,
        7840
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "867": {
      "fn": "DAI.permit",
      "offset": [
        6849,
        7840
      ],
      "op": "DUP2",
      "path": "0"
    },
    "868": {
      "fn": "DAI.permit",
      "offset": [
        6849,
        7840
      ],
      "op": "ADD",
      "path": "0"
    },
    "869": {
      "fn": "DAI.permit",
      "offset": [
        6849,
        7840
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "870": {
      "fn": "DAI.permit",
      "offset": [
        6849,
        7840
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "871": {
      "fn": "DAI.permit",
      "offset": [
        6849,
        7840
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "873": {
      "fn": "DAI.permit",
      "offset": [
        6849,
        7840
      ],
      "op": "DUP2",
      "path": "0"
    },
    "874": {
      "fn": "DAI.permit",
      "offset": [
        6849,
        7840
      ],
      "op": "ADD",
      "path": "0"
    },
    "875": {
      "fn": "DAI.permit",
      "offset": [
        6849,
        7840
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "876": {
      "fn": "DAI.permit",
      "offset": [
        6849,
        7840
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "877": {
      "fn": "DAI.permit",
      "offset": [
        6849,
        7840
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "878": {
      "fn": "DAI.permit",
      "offset": [
        6849,
        7840
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "879": {
      "fn": "DAI.permit",
      "offset": [
        6849,
        7840
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "881": {
      "fn": "DAI.permit",
      "offset": [
        6849,
        7840
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA0"
    },
    "883": {
      "fn": "DAI.permit",
      "offset": [
        6849,
        7840
      ],
      "op": "DUP3",
      "path": "0"
    },
    "884": {
      "fn": "DAI.permit",
      "offset": [
        6849,
        7840
      ],
      "op": "ADD",
      "path": "0"
    },
    "885": {
      "fn": "DAI.permit",
      "offset": [
        6849,
        7840
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "886": {
      "fn": "DAI.permit",
      "offset": [
        6849,
        7840
      ],
      "op": "AND",
      "path": "0"
    },
    "887": {
      "fn": "DAI.permit",
      "offset": [
        6849,
        7840
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "888": {
      "fn": "DAI.permit",
      "offset": [
        6849,
        7840
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC0"
    },
    "890": {
      "fn": "DAI.permit",
      "offset": [
        6849,
        7840
      ],
      "op": "DUP2",
      "path": "0"
    },
    "891": {
      "fn": "DAI.permit",
      "offset": [
        6849,
        7840
      ],
      "op": "ADD",
      "path": "0"
    },
    "892": {
      "fn": "DAI.permit",
      "offset": [
        6849,
        7840
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "893": {
      "fn": "DAI.permit",
      "offset": [
        6849,
        7840
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "894": {
      "fn": "DAI.permit",
      "offset": [
        6849,
        7840
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "896": {
      "fn": "DAI.permit",
      "offset": [
        6849,
        7840
      ],
      "op": "ADD",
      "path": "0"
    },
    "897": {
      "fn": "DAI.permit",
      "offset": [
        6849,
        7840
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "898": {
      "fn": "DAI.permit",
      "offset": [
        6849,
        7840
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9E2"
    },
    "901": {
      "fn": "DAI.permit",
      "jump": "i",
      "offset": [
        6849,
        7840
      ],
      "op": "JUMP",
      "path": "0"
    },
    "902": {
      "offset": [
        3384,
        3424
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "903": {
      "fn": "DAI.permit",
      "offset": [
        3384,
        3424
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14F"
    },
    "906": {
      "fn": "DAI.permit",
      "offset": [
        3384,
        3424
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCFC"
    },
    "909": {
      "fn": "DAI.permit",
      "jump": "i",
      "offset": [
        3384,
        3424
      ],
      "op": "JUMP",
      "path": "0"
    },
    "910": {
      "fn": "DAI.deny",
      "offset": [
        3130,
        3195
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "911": {
      "fn": "DAI.deny",
      "offset": [
        3130,
        3195
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B0"
    },
    "914": {
      "fn": "DAI.deny",
      "offset": [
        3130,
        3195
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "916": {
      "fn": "DAI.deny",
      "offset": [
        3130,
        3195
      ],
      "op": "DUP1",
      "path": "0"
    },
    "917": {
      "fn": "DAI.deny",
      "offset": [
        3130,
        3195
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "918": {
      "fn": "DAI.deny",
      "offset": [
        3130,
        3195
      ],
      "op": "SUB",
      "path": "0"
    },
    "919": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "921": {
      "op": "DUP2"
    },
    "922": {
      "op": "LT"
    },
    "923": {
      "op": "ISZERO"
    },
    "924": {
      "op": "PUSH2",
      "value": "0x3A4"
    },
    "927": {
      "op": "JUMPI"
    },
    "928": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "930": {
      "op": "DUP1"
    },
    "931": {
      "op": "REVERT"
    },
    "932": {
      "op": "JUMPDEST"
    },
    "933": {
      "op": "POP"
    },
    "934": {
      "fn": "DAI.deny",
      "offset": [
        3130,
        3195
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "935": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "937": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "939": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "941": {
      "op": "SHL"
    },
    "942": {
      "op": "SUB"
    },
    "943": {
      "fn": "DAI.deny",
      "offset": [
        3130,
        3195
      ],
      "op": "AND",
      "path": "0"
    },
    "944": {
      "fn": "DAI.deny",
      "offset": [
        3130,
        3195
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD19"
    },
    "947": {
      "fn": "DAI.deny",
      "jump": "i",
      "offset": [
        3130,
        3195
      ],
      "op": "JUMP",
      "path": "0"
    },
    "948": {
      "fn": "DAI.burn",
      "offset": [
        5774,
        6289
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "949": {
      "fn": "DAI.burn",
      "offset": [
        5774,
        6289
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B0"
    },
    "952": {
      "fn": "DAI.burn",
      "offset": [
        5774,
        6289
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "954": {
      "fn": "DAI.burn",
      "offset": [
        5774,
        6289
      ],
      "op": "DUP1",
      "path": "0"
    },
    "955": {
      "fn": "DAI.burn",
      "offset": [
        5774,
        6289
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "956": {
      "fn": "DAI.burn",
      "offset": [
        5774,
        6289
      ],
      "op": "SUB",
      "path": "0"
    },
    "957": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "959": {
      "op": "DUP2"
    },
    "960": {
      "op": "LT"
    },
    "961": {
      "op": "ISZERO"
    },
    "962": {
      "op": "PUSH2",
      "value": "0x3CA"
    },
    "965": {
      "op": "JUMPI"
    },
    "966": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "968": {
      "op": "DUP1"
    },
    "969": {
      "op": "REVERT"
    },
    "970": {
      "op": "JUMPDEST"
    },
    "971": {
      "op": "POP"
    },
    "972": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "974": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "976": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "978": {
      "op": "SHL"
    },
    "979": {
      "op": "SUB"
    },
    "980": {
      "fn": "DAI.burn",
      "offset": [
        5774,
        6289
      ],
      "op": "DUP2",
      "path": "0"
    },
    "981": {
      "fn": "DAI.burn",
      "offset": [
        5774,
        6289
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "982": {
      "fn": "DAI.burn",
      "offset": [
        5774,
        6289
      ],
      "op": "AND",
      "path": "0"
    },
    "983": {
      "fn": "DAI.burn",
      "offset": [
        5774,
        6289
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "984": {
      "fn": "DAI.burn",
      "offset": [
        5774,
        6289
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "986": {
      "fn": "DAI.burn",
      "offset": [
        5774,
        6289
      ],
      "op": "ADD",
      "path": "0"
    },
    "987": {
      "fn": "DAI.burn",
      "offset": [
        5774,
        6289
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "988": {
      "fn": "DAI.burn",
      "offset": [
        5774,
        6289
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDC4"
    },
    "991": {
      "fn": "DAI.burn",
      "jump": "i",
      "offset": [
        5774,
        6289
      ],
      "op": "JUMP",
      "path": "0"
    },
    "992": {
      "fn": "DAI.transfer",
      "offset": [
        4856,
        4979
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "993": {
      "fn": "DAI.transfer",
      "offset": [
        4856,
        4979
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F2"
    },
    "996": {
      "fn": "DAI.transfer",
      "offset": [
        4856,
        4979
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "998": {
      "fn": "DAI.transfer",
      "offset": [
        4856,
        4979
      ],
      "op": "DUP1",
      "path": "0"
    },
    "999": {
      "fn": "DAI.transfer",
      "offset": [
        4856,
        4979
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1000": {
      "fn": "DAI.transfer",
      "offset": [
        4856,
        4979
      ],
      "op": "SUB",
      "path": "0"
    },
    "1001": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1003": {
      "op": "DUP2"
    },
    "1004": {
      "op": "LT"
    },
    "1005": {
      "op": "ISZERO"
    },
    "1006": {
      "op": "PUSH2",
      "value": "0x3F6"
    },
    "1009": {
      "op": "JUMPI"
    },
    "1010": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1012": {
      "op": "DUP1"
    },
    "1013": {
      "op": "REVERT"
    },
    "1014": {
      "op": "JUMPDEST"
    },
    "1015": {
      "op": "POP"
    },
    "1016": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1018": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1020": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1022": {
      "op": "SHL"
    },
    "1023": {
      "op": "SUB"
    },
    "1024": {
      "fn": "DAI.transfer",
      "offset": [
        4856,
        4979
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1025": {
      "fn": "DAI.transfer",
      "offset": [
        4856,
        4979
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "1026": {
      "fn": "DAI.transfer",
      "offset": [
        4856,
        4979
      ],
      "op": "AND",
      "path": "0"
    },
    "1027": {
      "fn": "DAI.transfer",
      "offset": [
        4856,
        4979
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1028": {
      "fn": "DAI.transfer",
      "offset": [
        4856,
        4979
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1030": {
      "fn": "DAI.transfer",
      "offset": [
        4856,
        4979
      ],
      "op": "ADD",
      "path": "0"
    },
    "1031": {
      "fn": "DAI.transfer",
      "offset": [
        4856,
        4979
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "1032": {
      "fn": "DAI.transfer",
      "offset": [
        4856,
        4979
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFDE"
    },
    "1035": {
      "fn": "DAI.transfer",
      "jump": "i",
      "offset": [
        4856,
        4979
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1036": {
      "fn": "DAI.push",
      "offset": [
        6500,
        6597
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1037": {
      "fn": "DAI.push",
      "offset": [
        6500,
        6597
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B0"
    },
    "1040": {
      "fn": "DAI.push",
      "offset": [
        6500,
        6597
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1042": {
      "fn": "DAI.push",
      "offset": [
        6500,
        6597
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1043": {
      "fn": "DAI.push",
      "offset": [
        6500,
        6597
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1044": {
      "fn": "DAI.push",
      "offset": [
        6500,
        6597
      ],
      "op": "SUB",
      "path": "0"
    },
    "1045": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1047": {
      "op": "DUP2"
    },
    "1048": {
      "op": "LT"
    },
    "1049": {
      "op": "ISZERO"
    },
    "1050": {
      "op": "PUSH2",
      "value": "0x422"
    },
    "1053": {
      "op": "JUMPI"
    },
    "1054": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1056": {
      "op": "DUP1"
    },
    "1057": {
      "op": "REVERT"
    },
    "1058": {
      "op": "JUMPDEST"
    },
    "1059": {
      "op": "POP"
    },
    "1060": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1062": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1064": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1066": {
      "op": "SHL"
    },
    "1067": {
      "op": "SUB"
    },
    "1068": {
      "fn": "DAI.push",
      "offset": [
        6500,
        6597
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1069": {
      "fn": "DAI.push",
      "offset": [
        6500,
        6597
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "1070": {
      "fn": "DAI.push",
      "offset": [
        6500,
        6597
      ],
      "op": "AND",
      "path": "0"
    },
    "1071": {
      "fn": "DAI.push",
      "offset": [
        6500,
        6597
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1072": {
      "fn": "DAI.push",
      "offset": [
        6500,
        6597
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1074": {
      "fn": "DAI.push",
      "offset": [
        6500,
        6597
      ],
      "op": "ADD",
      "path": "0"
    },
    "1075": {
      "fn": "DAI.push",
      "offset": [
        6500,
        6597
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "1076": {
      "fn": "DAI.push",
      "offset": [
        6500,
        6597
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFF2"
    },
    "1079": {
      "fn": "DAI.push",
      "jump": "i",
      "offset": [
        6500,
        6597
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1080": {
      "fn": "DAI.move",
      "offset": [
        6704,
        6807
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1081": {
      "fn": "DAI.move",
      "offset": [
        6704,
        6807
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B0"
    },
    "1084": {
      "fn": "DAI.move",
      "offset": [
        6704,
        6807
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1086": {
      "fn": "DAI.move",
      "offset": [
        6704,
        6807
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1087": {
      "fn": "DAI.move",
      "offset": [
        6704,
        6807
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1088": {
      "fn": "DAI.move",
      "offset": [
        6704,
        6807
      ],
      "op": "SUB",
      "path": "0"
    },
    "1089": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1091": {
      "op": "DUP2"
    },
    "1092": {
      "op": "LT"
    },
    "1093": {
      "op": "ISZERO"
    },
    "1094": {
      "op": "PUSH2",
      "value": "0x44E"
    },
    "1097": {
      "op": "JUMPI"
    },
    "1098": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1100": {
      "op": "DUP1"
    },
    "1101": {
      "op": "REVERT"
    },
    "1102": {
      "op": "JUMPDEST"
    },
    "1103": {
      "op": "POP"
    },
    "1104": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1106": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1108": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1110": {
      "op": "SHL"
    },
    "1111": {
      "op": "SUB"
    },
    "1112": {
      "fn": "DAI.move",
      "offset": [
        6704,
        6807
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1113": {
      "fn": "DAI.move",
      "offset": [
        6704,
        6807
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "1114": {
      "fn": "DAI.move",
      "offset": [
        6704,
        6807
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1115": {
      "fn": "DAI.move",
      "offset": [
        6704,
        6807
      ],
      "op": "AND",
      "path": "0"
    },
    "1116": {
      "fn": "DAI.move",
      "offset": [
        6704,
        6807
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1117": {
      "fn": "DAI.move",
      "offset": [
        6704,
        6807
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1119": {
      "fn": "DAI.move",
      "offset": [
        6704,
        6807
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1120": {
      "fn": "DAI.move",
      "offset": [
        6704,
        6807
      ],
      "op": "ADD",
      "path": "0"
    },
    "1121": {
      "fn": "DAI.move",
      "offset": [
        6704,
        6807
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "1122": {
      "fn": "DAI.move",
      "offset": [
        6704,
        6807
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1123": {
      "fn": "DAI.move",
      "offset": [
        6704,
        6807
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1124": {
      "fn": "DAI.move",
      "offset": [
        6704,
        6807
      ],
      "op": "AND",
      "path": "0"
    },
    "1125": {
      "fn": "DAI.move",
      "offset": [
        6704,
        6807
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1126": {
      "fn": "DAI.move",
      "offset": [
        6704,
        6807
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1128": {
      "fn": "DAI.move",
      "offset": [
        6704,
        6807
      ],
      "op": "ADD",
      "path": "0"
    },
    "1129": {
      "fn": "DAI.move",
      "offset": [
        6704,
        6807
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "1130": {
      "fn": "DAI.move",
      "offset": [
        6704,
        6807
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1002"
    },
    "1133": {
      "fn": "DAI.move",
      "jump": "i",
      "offset": [
        6704,
        6807
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1134": {
      "offset": [
        3016,
        3054
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1135": {
      "fn": "DAI.move",
      "offset": [
        3016,
        3054
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x20E"
    },
    "1138": {
      "fn": "DAI.move",
      "offset": [
        3016,
        3054
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1140": {
      "fn": "DAI.move",
      "offset": [
        3016,
        3054
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1141": {
      "fn": "DAI.move",
      "offset": [
        3016,
        3054
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1142": {
      "fn": "DAI.move",
      "offset": [
        3016,
        3054
      ],
      "op": "SUB",
      "path": "0"
    },
    "1143": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1145": {
      "op": "DUP2"
    },
    "1146": {
      "op": "LT"
    },
    "1147": {
      "op": "ISZERO"
    },
    "1148": {
      "op": "PUSH2",
      "value": "0x484"
    },
    "1151": {
      "op": "JUMPI"
    },
    "1152": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1154": {
      "op": "DUP1"
    },
    "1155": {
      "op": "REVERT"
    },
    "1156": {
      "op": "JUMPDEST"
    },
    "1157": {
      "op": "POP"
    },
    "1158": {
      "offset": [
        3016,
        3054
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "1159": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1161": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1163": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1165": {
      "op": "SHL"
    },
    "1166": {
      "op": "SUB"
    },
    "1167": {
      "offset": [
        3016,
        3054
      ],
      "op": "AND",
      "path": "0"
    },
    "1168": {
      "fn": "DAI.move",
      "offset": [
        3016,
        3054
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1013"
    },
    "1171": {
      "fn": "DAI.move",
      "jump": "i",
      "offset": [
        3016,
        3054
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1172": {
      "offset": [
        3618,
        3681
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1173": {
      "fn": "DAI.move",
      "offset": [
        3618,
        3681
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x20E"
    },
    "1176": {
      "fn": "DAI.move",
      "offset": [
        3618,
        3681
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1178": {
      "fn": "DAI.move",
      "offset": [
        3618,
        3681
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1179": {
      "fn": "DAI.move",
      "offset": [
        3618,
        3681
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1180": {
      "fn": "DAI.move",
      "offset": [
        3618,
        3681
      ],
      "op": "SUB",
      "path": "0"
    },
    "1181": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1183": {
      "op": "DUP2"
    },
    "1184": {
      "op": "LT"
    },
    "1185": {
      "op": "ISZERO"
    },
    "1186": {
      "op": "PUSH2",
      "value": "0x4AA"
    },
    "1189": {
      "op": "JUMPI"
    },
    "1190": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1192": {
      "op": "DUP1"
    },
    "1193": {
      "op": "REVERT"
    },
    "1194": {
      "op": "JUMPDEST"
    },
    "1195": {
      "op": "POP"
    },
    "1196": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1198": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1200": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1202": {
      "op": "SHL"
    },
    "1203": {
      "op": "SUB"
    },
    "1204": {
      "offset": [
        3618,
        3681
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1205": {
      "fn": "DAI.move",
      "offset": [
        3618,
        3681
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "1206": {
      "fn": "DAI.move",
      "offset": [
        3618,
        3681
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1207": {
      "fn": "DAI.move",
      "offset": [
        3618,
        3681
      ],
      "op": "AND",
      "path": "0"
    },
    "1208": {
      "fn": "DAI.move",
      "offset": [
        3618,
        3681
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1209": {
      "fn": "DAI.move",
      "offset": [
        3618,
        3681
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1211": {
      "fn": "DAI.move",
      "offset": [
        3618,
        3681
      ],
      "op": "ADD",
      "path": "0"
    },
    "1212": {
      "fn": "DAI.move",
      "offset": [
        3618,
        3681
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "1213": {
      "fn": "DAI.move",
      "offset": [
        3618,
        3681
      ],
      "op": "AND",
      "path": "0"
    },
    "1214": {
      "fn": "DAI.move",
      "offset": [
        3618,
        3681
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1027"
    },
    "1217": {
      "fn": "DAI.move",
      "jump": "i",
      "offset": [
        3618,
        3681
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1218": {
      "fn": "DAI.pull",
      "offset": [
        6602,
        6699
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1219": {
      "fn": "DAI.pull",
      "offset": [
        6602,
        6699
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B0"
    },
    "1222": {
      "fn": "DAI.pull",
      "offset": [
        6602,
        6699
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1224": {
      "fn": "DAI.pull",
      "offset": [
        6602,
        6699
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1225": {
      "fn": "DAI.pull",
      "offset": [
        6602,
        6699
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1226": {
      "fn": "DAI.pull",
      "offset": [
        6602,
        6699
      ],
      "op": "SUB",
      "path": "0"
    },
    "1227": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1229": {
      "op": "DUP2"
    },
    "1230": {
      "op": "LT"
    },
    "1231": {
      "op": "ISZERO"
    },
    "1232": {
      "op": "PUSH2",
      "value": "0x4D8"
    },
    "1235": {
      "op": "JUMPI"
    },
    "1236": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1238": {
      "op": "DUP1"
    },
    "1239": {
      "op": "REVERT"
    },
    "1240": {
      "op": "JUMPDEST"
    },
    "1241": {
      "op": "POP"
    },
    "1242": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1244": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1246": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1248": {
      "op": "SHL"
    },
    "1249": {
      "op": "SUB"
    },
    "1250": {
      "fn": "DAI.pull",
      "offset": [
        6602,
        6699
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1251": {
      "fn": "DAI.pull",
      "offset": [
        6602,
        6699
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "1252": {
      "fn": "DAI.pull",
      "offset": [
        6602,
        6699
      ],
      "op": "AND",
      "path": "0"
    },
    "1253": {
      "fn": "DAI.pull",
      "offset": [
        6602,
        6699
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1254": {
      "fn": "DAI.pull",
      "offset": [
        6602,
        6699
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1256": {
      "fn": "DAI.pull",
      "offset": [
        6602,
        6699
      ],
      "op": "ADD",
      "path": "0"
    },
    "1257": {
      "fn": "DAI.pull",
      "offset": [
        6602,
        6699
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "1258": {
      "fn": "DAI.pull",
      "offset": [
        6602,
        6699
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1049"
    },
    "1261": {
      "fn": "DAI.pull",
      "jump": "i",
      "offset": [
        6602,
        6699
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1262": {
      "offset": [
        3327,
        3378
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1263": {
      "fn": "DAI.pull",
      "offset": [
        3327,
        3378
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1265": {
      "fn": "DAI.pull",
      "offset": [
        3327,
        3378
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1266": {
      "fn": "DAI.pull",
      "offset": [
        3327,
        3378
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1268": {
      "fn": "DAI.pull",
      "offset": [
        3327,
        3378
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1269": {
      "fn": "DAI.pull",
      "offset": [
        3327,
        3378
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1270": {
      "fn": "DAI.pull",
      "offset": [
        3327,
        3378
      ],
      "op": "ADD",
      "path": "0"
    },
    "1271": {
      "fn": "DAI.pull",
      "offset": [
        3327,
        3378
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1272": {
      "fn": "DAI.pull",
      "offset": [
        3327,
        3378
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1273": {
      "fn": "DAI.pull",
      "offset": [
        3327,
        3378
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE"
    },
    "1275": {
      "fn": "DAI.pull",
      "offset": [
        3327,
        3378
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1276": {
      "fn": "DAI.pull",
      "offset": [
        3327,
        3378
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1277": {
      "op": "PUSH14",
      "value": "0x2230B49029BA30B13632B1B7B4B7"
    },
    "1292": {
      "op": "PUSH1",
      "value": "0x91"
    },
    "1294": {
      "op": "SHL"
    },
    "1295": {
      "offset": [
        3327,
        3378
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1297": {
      "fn": "DAI.pull",
      "offset": [
        3327,
        3378
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1298": {
      "fn": "DAI.pull",
      "offset": [
        3327,
        3378
      ],
      "op": "ADD",
      "path": "0"
    },
    "1299": {
      "fn": "DAI.pull",
      "offset": [
        3327,
        3378
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1300": {
      "fn": "DAI.pull",
      "offset": [
        3327,
        3378
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1301": {
      "fn": "DAI.pull",
      "jump": "o",
      "offset": [
        3327,
        3378
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1302": {
      "fn": "DAI.approve",
      "offset": [
        6294,
        6473
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1303": {
      "fn": "DAI.approve",
      "offset": [
        6378,
        6388
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 0
    },
    "1304": {
      "fn": "DAI.approve",
      "offset": [
        6352,
        6356
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1306": {
      "fn": "DAI.approve",
      "offset": [
        6368,
        6389
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1307": {
      "fn": "DAI.approve",
      "offset": [
        6368,
        6389
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1308": {
      "fn": "DAI.approve",
      "offset": [
        6368,
        6389
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1309": {
      "fn": "DAI.approve",
      "offset": [
        6368,
        6377
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1311": {
      "fn": "DAI.approve",
      "offset": [
        6368,
        6389
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1313": {
      "fn": "DAI.approve",
      "offset": [
        6368,
        6389
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1314": {
      "fn": "DAI.approve",
      "offset": [
        6397,
        6400
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1315": {
      "fn": "DAI.approve",
      "offset": [
        6368,
        6389
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1317": {
      "fn": "DAI.approve",
      "offset": [
        6352,
        6356
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1318": {
      "fn": "DAI.approve",
      "offset": [
        6368,
        6389
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1319": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1321": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1323": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1325": {
      "op": "SHL"
    },
    "1326": {
      "op": "SUB"
    },
    "1327": {
      "fn": "DAI.approve",
      "offset": [
        6368,
        6394
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1328": {
      "fn": "DAI.approve",
      "offset": [
        6368,
        6394
      ],
      "op": "AND",
      "path": "0"
    },
    "1329": {
      "fn": "DAI.approve",
      "offset": [
        6368,
        6394
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1331": {
      "fn": "DAI.approve",
      "offset": [
        6368,
        6394
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1332": {
      "fn": "DAI.approve",
      "offset": [
        6368,
        6394
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1333": {
      "fn": "DAI.approve",
      "offset": [
        6368,
        6394
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1334": {
      "fn": "DAI.approve",
      "offset": [
        6368,
        6394
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1336": {
      "fn": "DAI.approve",
      "offset": [
        6368,
        6394
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1337": {
      "fn": "DAI.approve",
      "offset": [
        6368,
        6394
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1338": {
      "fn": "DAI.approve",
      "offset": [
        6368,
        6394
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1339": {
      "fn": "DAI.approve",
      "offset": [
        6368,
        6394
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1340": {
      "fn": "DAI.approve",
      "offset": [
        6368,
        6394
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1342": {
      "fn": "DAI.approve",
      "offset": [
        6368,
        6394
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1343": {
      "fn": "DAI.approve",
      "offset": [
        6368,
        6394
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1344": {
      "fn": "DAI.approve",
      "offset": [
        6368,
        6400
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1345": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1347": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1349": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1351": {
      "op": "SHL"
    },
    "1352": {
      "op": "SUB"
    },
    "1353": {
      "fn": "DAI.approve",
      "offset": [
        6415,
        6445
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 1
    },
    "1354": {
      "fn": "DAI.approve",
      "offset": [
        6415,
        6445
      ],
      "op": "AND",
      "path": "0"
    },
    "1355": {
      "fn": "DAI.approve",
      "offset": [
        6424,
        6434
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1356": {
      "fn": "DAI.approve",
      "offset": [
        6415,
        6445
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "1389": {
      "fn": "DAI.approve",
      "offset": [
        6441,
        6444
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1390": {
      "fn": "DAI.approve",
      "offset": [
        6415,
        6445
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1392": {
      "fn": "DAI.approve",
      "offset": [
        6415,
        6445
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1393": {
      "fn": "DAI.approve",
      "offset": [
        6415,
        6445
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1394": {
      "fn": "DAI.approve",
      "offset": [
        6415,
        6445
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1395": {
      "fn": "DAI.approve",
      "offset": [
        6415,
        6445
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1396": {
      "fn": "DAI.approve",
      "offset": [
        6415,
        6445
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1398": {
      "fn": "DAI.approve",
      "offset": [
        6415,
        6445
      ],
      "op": "ADD",
      "path": "0"
    },
    "1399": {
      "fn": "DAI.approve",
      "offset": [
        6415,
        6445
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1401": {
      "fn": "DAI.approve",
      "offset": [
        6415,
        6445
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1402": {
      "fn": "DAI.approve",
      "offset": [
        6415,
        6445
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1403": {
      "fn": "DAI.approve",
      "offset": [
        6415,
        6445
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1404": {
      "fn": "DAI.approve",
      "offset": [
        6415,
        6445
      ],
      "op": "SUB",
      "path": "0"
    },
    "1405": {
      "fn": "DAI.approve",
      "offset": [
        6415,
        6445
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1406": {
      "fn": "DAI.approve",
      "offset": [
        6415,
        6445
      ],
      "op": "LOG3",
      "path": "0"
    },
    "1407": {
      "op": "POP"
    },
    "1408": {
      "fn": "DAI.approve",
      "offset": [
        6462,
        6466
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 2,
      "value": "0x1"
    },
    "1410": {
      "fn": "DAI.approve",
      "offset": [
        6294,
        6473
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1411": {
      "fn": "DAI.approve",
      "offset": [
        6294,
        6473
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1412": {
      "fn": "DAI.approve",
      "offset": [
        6294,
        6473
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1413": {
      "fn": "DAI.approve",
      "offset": [
        6294,
        6473
      ],
      "op": "POP",
      "path": "0"
    },
    "1414": {
      "fn": "DAI.approve",
      "offset": [
        6294,
        6473
      ],
      "op": "POP",
      "path": "0"
    },
    "1415": {
      "fn": "DAI.approve",
      "jump": "o",
      "offset": [
        6294,
        6473
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1416": {
      "offset": [
        3516,
        3542
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1417": {
      "fn": "DAI.approve",
      "offset": [
        3516,
        3542
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1419": {
      "fn": "DAI.approve",
      "offset": [
        3516,
        3542
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1420": {
      "fn": "DAI.approve",
      "offset": [
        3516,
        3542
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1421": {
      "fn": "DAI.approve",
      "jump": "o",
      "offset": [
        3516,
        3542
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1422": {
      "fn": "DAI.transferFrom",
      "offset": [
        4984,
        5562
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1423": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1425": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1427": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1429": {
      "op": "SHL"
    },
    "1430": {
      "op": "SUB"
    },
    "1431": {
      "fn": "DAI.transferFrom",
      "offset": [
        5094,
        5108
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 3
    },
    "1432": {
      "fn": "DAI.transferFrom",
      "offset": [
        5094,
        5108
      ],
      "op": "AND",
      "path": "0"
    },
    "1433": {
      "fn": "DAI.transferFrom",
      "offset": [
        5066,
        5070
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1435": {
      "fn": "DAI.transferFrom",
      "offset": [
        5094,
        5108
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1436": {
      "fn": "DAI.transferFrom",
      "offset": [
        5094,
        5108
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1437": {
      "fn": "DAI.transferFrom",
      "offset": [
        5094,
        5108
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1438": {
      "fn": "DAI.transferFrom",
      "offset": [
        5094,
        5103
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1440": {
      "fn": "DAI.transferFrom",
      "offset": [
        5094,
        5108
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1442": {
      "fn": "DAI.transferFrom",
      "offset": [
        5094,
        5108
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1443": {
      "fn": "DAI.transferFrom",
      "offset": [
        5112,
        5115
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1444": {
      "fn": "DAI.transferFrom",
      "offset": [
        5094,
        5108
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1446": {
      "fn": "DAI.transferFrom",
      "offset": [
        5066,
        5070
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1447": {
      "fn": "DAI.transferFrom",
      "offset": [
        5094,
        5108
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1448": {
      "fn": "DAI.transferFrom",
      "offset": [
        5094,
        5108
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1449": {
      "fn": "DAI.transferFrom",
      "offset": [
        5094,
        5115
      ],
      "op": "LT",
      "path": "0"
    },
    "1450": {
      "branch": 33,
      "fn": "DAI.transferFrom",
      "offset": [
        5094,
        5115
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1451": {
      "fn": "DAI.transferFrom",
      "offset": [
        5086,
        5144
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5F5"
    },
    "1454": {
      "branch": 33,
      "fn": "DAI.transferFrom",
      "offset": [
        5086,
        5144
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1455": {
      "fn": "DAI.transferFrom",
      "offset": [
        5086,
        5144
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1457": {
      "fn": "DAI.transferFrom",
      "offset": [
        5086,
        5144
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1458": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1462": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1464": {
      "op": "SHL"
    },
    "1465": {
      "fn": "DAI.transferFrom",
      "offset": [
        5086,
        5144
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1466": {
      "fn": "DAI.transferFrom",
      "offset": [
        5086,
        5144
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1467": {
      "fn": "DAI.transferFrom",
      "offset": [
        5086,
        5144
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1469": {
      "fn": "DAI.transferFrom",
      "offset": [
        5086,
        5144
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1471": {
      "fn": "DAI.transferFrom",
      "offset": [
        5086,
        5144
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1472": {
      "fn": "DAI.transferFrom",
      "offset": [
        5086,
        5144
      ],
      "op": "ADD",
      "path": "0"
    },
    "1473": {
      "fn": "DAI.transferFrom",
      "offset": [
        5086,
        5144
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1474": {
      "fn": "DAI.transferFrom",
      "offset": [
        5086,
        5144
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x18"
    },
    "1476": {
      "fn": "DAI.transferFrom",
      "offset": [
        5086,
        5144
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "1478": {
      "fn": "DAI.transferFrom",
      "offset": [
        5086,
        5144
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1479": {
      "fn": "DAI.transferFrom",
      "offset": [
        5086,
        5144
      ],
      "op": "ADD",
      "path": "0"
    },
    "1480": {
      "fn": "DAI.transferFrom",
      "offset": [
        5086,
        5144
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1481": {
      "op": "PUSH24",
      "value": "0x4461692F696E73756666696369656E742D62616C616E6365"
    },
    "1506": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1508": {
      "op": "SHL"
    },
    "1509": {
      "fn": "DAI.transferFrom",
      "offset": [
        5086,
        5144
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x44"
    },
    "1511": {
      "fn": "DAI.transferFrom",
      "offset": [
        5086,
        5144
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1512": {
      "fn": "DAI.transferFrom",
      "offset": [
        5086,
        5144
      ],
      "op": "ADD",
      "path": "0"
    },
    "1513": {
      "fn": "DAI.transferFrom",
      "offset": [
        5086,
        5144
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1514": {
      "fn": "DAI.transferFrom",
      "offset": [
        5086,
        5144
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x64"
    },
    "1516": {
      "fn": "DAI.transferFrom",
      "offset": [
        5086,
        5144
      ],
      "op": "ADD",
      "path": "0"
    },
    "1517": {
      "fn": "DAI.transferFrom",
      "offset": [
        5086,
        5144
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1519": {
      "fn": "DAI.transferFrom",
      "offset": [
        5086,
        5144
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1520": {
      "fn": "DAI.transferFrom",
      "offset": [
        5086,
        5144
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1521": {
      "fn": "DAI.transferFrom",
      "offset": [
        5086,
        5144
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1522": {
      "fn": "DAI.transferFrom",
      "offset": [
        5086,
        5144
      ],
      "op": "SUB",
      "path": "0"
    },
    "1523": {
      "fn": "DAI.transferFrom",
      "offset": [
        5086,
        5144
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1524": {
      "fn": "DAI.transferFrom",
      "offset": [
        5086,
        5144
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1525": {
      "fn": "DAI.transferFrom",
      "offset": [
        5086,
        5144
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1526": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1528": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1530": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1532": {
      "op": "SHL"
    },
    "1533": {
      "op": "SUB"
    },
    "1534": {
      "fn": "DAI.transferFrom",
      "offset": [
        5158,
        5175
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1535": {
      "fn": "DAI.transferFrom",
      "offset": [
        5158,
        5175
      ],
      "op": "AND",
      "path": "0"
    },
    "1536": {
      "fn": "DAI.transferFrom",
      "offset": [
        5165,
        5175
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1537": {
      "fn": "DAI.transferFrom",
      "offset": [
        5158,
        5175
      ],
      "op": "EQ",
      "path": "0"
    },
    "1538": {
      "fn": "DAI.transferFrom",
      "offset": [
        5158,
        5175
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1539": {
      "fn": "DAI.transferFrom",
      "offset": [
        5158,
        5175
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1540": {
      "branch": 34,
      "fn": "DAI.transferFrom",
      "offset": [
        5158,
        5175
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1541": {
      "fn": "DAI.transferFrom",
      "offset": [
        5158,
        5217
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x639"
    },
    "1544": {
      "branch": 34,
      "fn": "DAI.transferFrom",
      "offset": [
        5158,
        5217
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1545": {
      "op": "POP"
    },
    "1546": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1548": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1550": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1552": {
      "op": "SHL"
    },
    "1553": {
      "op": "SUB"
    },
    "1554": {
      "fn": "DAI.transferFrom",
      "offset": [
        5179,
        5193
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1555": {
      "fn": "DAI.transferFrom",
      "offset": [
        5179,
        5193
      ],
      "op": "AND",
      "path": "0"
    },
    "1556": {
      "fn": "DAI.transferFrom",
      "offset": [
        5179,
        5193
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1558": {
      "fn": "DAI.transferFrom",
      "offset": [
        5179,
        5193
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1559": {
      "fn": "DAI.transferFrom",
      "offset": [
        5179,
        5193
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1560": {
      "fn": "DAI.transferFrom",
      "offset": [
        5179,
        5193
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1561": {
      "fn": "DAI.transferFrom",
      "offset": [
        5179,
        5188
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1563": {
      "fn": "DAI.transferFrom",
      "offset": [
        5179,
        5193
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1565": {
      "fn": "DAI.transferFrom",
      "offset": [
        5179,
        5193
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1566": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1568": {
      "op": "NOT"
    },
    "1569": {
      "fn": "DAI.transferFrom",
      "offset": [
        5214,
        5216
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1570": {
      "fn": "DAI.transferFrom",
      "offset": [
        5179,
        5193
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1572": {
      "fn": "DAI.transferFrom",
      "offset": [
        5179,
        5193
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1573": {
      "fn": "DAI.transferFrom",
      "offset": [
        5179,
        5193
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1574": {
      "fn": "DAI.transferFrom",
      "offset": [
        5194,
        5204
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1575": {
      "fn": "DAI.transferFrom",
      "offset": [
        5179,
        5205
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1577": {
      "fn": "DAI.transferFrom",
      "offset": [
        5179,
        5205
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1578": {
      "fn": "DAI.transferFrom",
      "offset": [
        5179,
        5205
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1579": {
      "fn": "DAI.transferFrom",
      "offset": [
        5179,
        5205
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1580": {
      "fn": "DAI.transferFrom",
      "offset": [
        5179,
        5205
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1582": {
      "fn": "DAI.transferFrom",
      "offset": [
        5179,
        5205
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1583": {
      "fn": "DAI.transferFrom",
      "offset": [
        5179,
        5205
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1584": {
      "fn": "DAI.transferFrom",
      "offset": [
        5179,
        5205
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1585": {
      "fn": "DAI.transferFrom",
      "offset": [
        5179,
        5205
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1586": {
      "fn": "DAI.transferFrom",
      "offset": [
        5179,
        5205
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1588": {
      "fn": "DAI.transferFrom",
      "offset": [
        5179,
        5205
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1589": {
      "fn": "DAI.transferFrom",
      "offset": [
        5179,
        5205
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1590": {
      "fn": "DAI.transferFrom",
      "offset": [
        5179,
        5205
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1591": {
      "fn": "DAI.transferFrom",
      "offset": [
        5179,
        5217
      ],
      "op": "EQ",
      "path": "0"
    },
    "1592": {
      "branch": 35,
      "fn": "DAI.transferFrom",
      "offset": [
        5179,
        5217
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1593": {
      "fn": "DAI.transferFrom",
      "offset": [
        5158,
        5217
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1594": {
      "fn": "DAI.transferFrom",
      "offset": [
        5154,
        5395
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1595": {
      "fn": "DAI.transferFrom",
      "offset": [
        5154,
        5395
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x718"
    },
    "1598": {
      "branch": 35,
      "fn": "DAI.transferFrom",
      "offset": [
        5154,
        5395
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1599": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1601": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1603": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1605": {
      "op": "SHL"
    },
    "1606": {
      "op": "SUB"
    },
    "1607": {
      "fn": "DAI.transferFrom",
      "offset": [
        5241,
        5255
      ],
      "op": "DUP5",
      "path": "0",
      "statement": 4
    },
    "1608": {
      "fn": "DAI.transferFrom",
      "offset": [
        5241,
        5255
      ],
      "op": "AND",
      "path": "0"
    },
    "1609": {
      "fn": "DAI.transferFrom",
      "offset": [
        5241,
        5255
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1611": {
      "fn": "DAI.transferFrom",
      "offset": [
        5241,
        5255
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1612": {
      "fn": "DAI.transferFrom",
      "offset": [
        5241,
        5255
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1613": {
      "fn": "DAI.transferFrom",
      "offset": [
        5241,
        5255
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1614": {
      "fn": "DAI.transferFrom",
      "offset": [
        5241,
        5250
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1616": {
      "fn": "DAI.transferFrom",
      "offset": [
        5241,
        5255
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1618": {
      "fn": "DAI.transferFrom",
      "offset": [
        5241,
        5255
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1619": {
      "fn": "DAI.transferFrom",
      "offset": [
        5271,
        5274
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1620": {
      "fn": "DAI.transferFrom",
      "offset": [
        5271,
        5274
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1621": {
      "fn": "DAI.transferFrom",
      "offset": [
        5241,
        5255
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1623": {
      "fn": "DAI.transferFrom",
      "offset": [
        5241,
        5255
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1624": {
      "fn": "DAI.transferFrom",
      "offset": [
        5241,
        5255
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1625": {
      "fn": "DAI.transferFrom",
      "offset": [
        5256,
        5266
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1626": {
      "fn": "DAI.transferFrom",
      "offset": [
        5241,
        5267
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1628": {
      "fn": "DAI.transferFrom",
      "offset": [
        5241,
        5267
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1629": {
      "fn": "DAI.transferFrom",
      "offset": [
        5241,
        5267
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1630": {
      "fn": "DAI.transferFrom",
      "offset": [
        5241,
        5267
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1631": {
      "fn": "DAI.transferFrom",
      "offset": [
        5241,
        5267
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1633": {
      "fn": "DAI.transferFrom",
      "offset": [
        5241,
        5267
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1634": {
      "fn": "DAI.transferFrom",
      "offset": [
        5241,
        5267
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1635": {
      "fn": "DAI.transferFrom",
      "offset": [
        5241,
        5267
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1636": {
      "fn": "DAI.transferFrom",
      "offset": [
        5241,
        5267
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1637": {
      "fn": "DAI.transferFrom",
      "offset": [
        5241,
        5267
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1639": {
      "fn": "DAI.transferFrom",
      "offset": [
        5241,
        5267
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1640": {
      "fn": "DAI.transferFrom",
      "offset": [
        5241,
        5267
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1641": {
      "fn": "DAI.transferFrom",
      "offset": [
        5241,
        5267
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1642": {
      "fn": "DAI.transferFrom",
      "offset": [
        5241,
        5274
      ],
      "op": "LT",
      "path": "0"
    },
    "1643": {
      "branch": 36,
      "fn": "DAI.transferFrom",
      "offset": [
        5241,
        5274
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1644": {
      "fn": "DAI.transferFrom",
      "offset": [
        5233,
        5305
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6BB"
    },
    "1647": {
      "branch": 36,
      "fn": "DAI.transferFrom",
      "offset": [
        5233,
        5305
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1648": {
      "fn": "DAI.transferFrom",
      "offset": [
        5233,
        5305
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1650": {
      "fn": "DAI.transferFrom",
      "offset": [
        5233,
        5305
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1651": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1655": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1657": {
      "op": "SHL"
    },
    "1658": {
      "fn": "DAI.transferFrom",
      "offset": [
        5233,
        5305
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1659": {
      "fn": "DAI.transferFrom",
      "offset": [
        5233,
        5305
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1660": {
      "fn": "DAI.transferFrom",
      "offset": [
        5233,
        5305
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1662": {
      "fn": "DAI.transferFrom",
      "offset": [
        5233,
        5305
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1664": {
      "fn": "DAI.transferFrom",
      "offset": [
        5233,
        5305
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1665": {
      "fn": "DAI.transferFrom",
      "offset": [
        5233,
        5305
      ],
      "op": "ADD",
      "path": "0"
    },
    "1666": {
      "fn": "DAI.transferFrom",
      "offset": [
        5233,
        5305
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1667": {
      "fn": "DAI.transferFrom",
      "offset": [
        5233,
        5305
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1A"
    },
    "1669": {
      "fn": "DAI.transferFrom",
      "offset": [
        5233,
        5305
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "1671": {
      "fn": "DAI.transferFrom",
      "offset": [
        5233,
        5305
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1672": {
      "fn": "DAI.transferFrom",
      "offset": [
        5233,
        5305
      ],
      "op": "ADD",
      "path": "0"
    },
    "1673": {
      "fn": "DAI.transferFrom",
      "offset": [
        5233,
        5305
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1674": {
      "fn": "DAI.transferFrom",
      "offset": [
        5233,
        5305
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x4461692F696E73756666696369656E742D616C6C6F77616E6365000000000000"
    },
    "1707": {
      "fn": "DAI.transferFrom",
      "offset": [
        5233,
        5305
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x44"
    },
    "1709": {
      "fn": "DAI.transferFrom",
      "offset": [
        5233,
        5305
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1710": {
      "fn": "DAI.transferFrom",
      "offset": [
        5233,
        5305
      ],
      "op": "ADD",
      "path": "0"
    },
    "1711": {
      "fn": "DAI.transferFrom",
      "offset": [
        5233,
        5305
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1712": {
      "fn": "DAI.transferFrom",
      "offset": [
        5233,
        5305
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x64"
    },
    "1714": {
      "fn": "DAI.transferFrom",
      "offset": [
        5233,
        5305
      ],
      "op": "ADD",
      "path": "0"
    },
    "1715": {
      "fn": "DAI.transferFrom",
      "offset": [
        5233,
        5305
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1717": {
      "fn": "DAI.transferFrom",
      "offset": [
        5233,
        5305
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1718": {
      "fn": "DAI.transferFrom",
      "offset": [
        5233,
        5305
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1719": {
      "fn": "DAI.transferFrom",
      "offset": [
        5233,
        5305
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1720": {
      "fn": "DAI.transferFrom",
      "offset": [
        5233,
        5305
      ],
      "op": "SUB",
      "path": "0"
    },
    "1721": {
      "fn": "DAI.transferFrom",
      "offset": [
        5233,
        5305
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1722": {
      "fn": "DAI.transferFrom",
      "offset": [
        5233,
        5305
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1723": {
      "fn": "DAI.transferFrom",
      "offset": [
        5233,
        5305
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1724": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1726": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1728": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1730": {
      "op": "SHL"
    },
    "1731": {
      "op": "SUB"
    },
    "1732": {
      "fn": "DAI.transferFrom",
      "offset": [
        5352,
        5366
      ],
      "op": "DUP5",
      "path": "0",
      "statement": 5
    },
    "1733": {
      "fn": "DAI.transferFrom",
      "offset": [
        5352,
        5366
      ],
      "op": "AND",
      "path": "0"
    },
    "1734": {
      "fn": "DAI.transferFrom",
      "offset": [
        5352,
        5366
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1736": {
      "fn": "DAI.transferFrom",
      "offset": [
        5352,
        5366
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1737": {
      "fn": "DAI.transferFrom",
      "offset": [
        5352,
        5366
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1738": {
      "fn": "DAI.transferFrom",
      "offset": [
        5352,
        5366
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1739": {
      "fn": "DAI.transferFrom",
      "offset": [
        5352,
        5361
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1741": {
      "fn": "DAI.transferFrom",
      "offset": [
        5352,
        5366
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1743": {
      "fn": "DAI.transferFrom",
      "offset": [
        5352,
        5366
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1744": {
      "fn": "DAI.transferFrom",
      "offset": [
        5348,
        5384
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6EE"
    },
    "1747": {
      "fn": "DAI.transferFrom",
      "offset": [
        5348,
        5384
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1748": {
      "fn": "DAI.transferFrom",
      "offset": [
        5352,
        5366
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1750": {
      "fn": "DAI.transferFrom",
      "offset": [
        5352,
        5366
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1751": {
      "fn": "DAI.transferFrom",
      "offset": [
        5352,
        5366
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1752": {
      "fn": "DAI.transferFrom",
      "offset": [
        5367,
        5377
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1753": {
      "fn": "DAI.transferFrom",
      "offset": [
        5352,
        5378
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1755": {
      "fn": "DAI.transferFrom",
      "offset": [
        5352,
        5378
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1756": {
      "fn": "DAI.transferFrom",
      "offset": [
        5352,
        5378
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1757": {
      "fn": "DAI.transferFrom",
      "offset": [
        5352,
        5378
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1758": {
      "fn": "DAI.transferFrom",
      "offset": [
        5352,
        5378
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1760": {
      "fn": "DAI.transferFrom",
      "offset": [
        5352,
        5378
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1761": {
      "fn": "DAI.transferFrom",
      "offset": [
        5352,
        5378
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1762": {
      "fn": "DAI.transferFrom",
      "offset": [
        5352,
        5378
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1763": {
      "fn": "DAI.transferFrom",
      "offset": [
        5352,
        5378
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1764": {
      "fn": "DAI.transferFrom",
      "offset": [
        5352,
        5378
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1766": {
      "fn": "DAI.transferFrom",
      "offset": [
        5352,
        5378
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1767": {
      "fn": "DAI.transferFrom",
      "offset": [
        5352,
        5378
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1768": {
      "fn": "DAI.transferFrom",
      "offset": [
        5352,
        5378
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1769": {
      "fn": "DAI.transferFrom",
      "offset": [
        5380,
        5383
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1770": {
      "fn": "DAI.transferFrom",
      "offset": [
        5348,
        5351
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1054"
    },
    "1773": {
      "fn": "DAI.transferFrom",
      "jump": "i",
      "offset": [
        5348,
        5384
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1774": {
      "fn": "DAI.transferFrom",
      "offset": [
        5348,
        5384
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1775": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1777": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1779": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1781": {
      "op": "SHL"
    },
    "1782": {
      "op": "SUB"
    },
    "1783": {
      "fn": "DAI.transferFrom",
      "offset": [
        5319,
        5333
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1784": {
      "fn": "DAI.transferFrom",
      "offset": [
        5319,
        5333
      ],
      "op": "AND",
      "path": "0"
    },
    "1785": {
      "fn": "DAI.transferFrom",
      "offset": [
        5319,
        5333
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1787": {
      "fn": "DAI.transferFrom",
      "offset": [
        5319,
        5333
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1788": {
      "fn": "DAI.transferFrom",
      "offset": [
        5319,
        5333
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1789": {
      "fn": "DAI.transferFrom",
      "offset": [
        5319,
        5333
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1790": {
      "fn": "DAI.transferFrom",
      "offset": [
        5319,
        5328
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1792": {
      "fn": "DAI.transferFrom",
      "offset": [
        5319,
        5333
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1794": {
      "fn": "DAI.transferFrom",
      "offset": [
        5319,
        5333
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1795": {
      "fn": "DAI.transferFrom",
      "offset": [
        5319,
        5333
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1797": {
      "fn": "DAI.transferFrom",
      "offset": [
        5319,
        5333
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1798": {
      "fn": "DAI.transferFrom",
      "offset": [
        5319,
        5333
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1799": {
      "fn": "DAI.transferFrom",
      "offset": [
        5334,
        5344
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1800": {
      "fn": "DAI.transferFrom",
      "offset": [
        5319,
        5345
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1802": {
      "fn": "DAI.transferFrom",
      "offset": [
        5319,
        5345
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1803": {
      "fn": "DAI.transferFrom",
      "offset": [
        5319,
        5345
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1804": {
      "fn": "DAI.transferFrom",
      "offset": [
        5319,
        5345
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1805": {
      "fn": "DAI.transferFrom",
      "offset": [
        5319,
        5345
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1807": {
      "fn": "DAI.transferFrom",
      "offset": [
        5319,
        5345
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1808": {
      "fn": "DAI.transferFrom",
      "offset": [
        5319,
        5345
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1809": {
      "fn": "DAI.transferFrom",
      "offset": [
        5319,
        5345
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1810": {
      "fn": "DAI.transferFrom",
      "offset": [
        5319,
        5345
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1811": {
      "fn": "DAI.transferFrom",
      "offset": [
        5319,
        5345
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1813": {
      "fn": "DAI.transferFrom",
      "offset": [
        5319,
        5345
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1814": {
      "fn": "DAI.transferFrom",
      "offset": [
        5319,
        5345
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1815": {
      "fn": "DAI.transferFrom",
      "offset": [
        5319,
        5384
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1816": {
      "fn": "DAI.transferFrom",
      "offset": [
        5154,
        5395
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1817": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1819": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1821": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1823": {
      "op": "SHL"
    },
    "1824": {
      "op": "SUB"
    },
    "1825": {
      "fn": "DAI.transferFrom",
      "offset": [
        5425,
        5439
      ],
      "op": "DUP5",
      "path": "0",
      "statement": 6
    },
    "1826": {
      "fn": "DAI.transferFrom",
      "offset": [
        5425,
        5439
      ],
      "op": "AND",
      "path": "0"
    },
    "1827": {
      "fn": "DAI.transferFrom",
      "offset": [
        5425,
        5439
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1829": {
      "fn": "DAI.transferFrom",
      "offset": [
        5425,
        5439
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1830": {
      "fn": "DAI.transferFrom",
      "offset": [
        5425,
        5439
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1831": {
      "fn": "DAI.transferFrom",
      "offset": [
        5425,
        5439
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1832": {
      "fn": "DAI.transferFrom",
      "offset": [
        5425,
        5434
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1834": {
      "fn": "DAI.transferFrom",
      "offset": [
        5425,
        5439
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1836": {
      "fn": "DAI.transferFrom",
      "offset": [
        5425,
        5439
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1837": {
      "fn": "DAI.transferFrom",
      "offset": [
        5421,
        5445
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x73B"
    },
    "1840": {
      "fn": "DAI.transferFrom",
      "offset": [
        5421,
        5445
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1841": {
      "fn": "DAI.transferFrom",
      "offset": [
        5425,
        5439
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1843": {
      "fn": "DAI.transferFrom",
      "offset": [
        5425,
        5439
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1844": {
      "fn": "DAI.transferFrom",
      "offset": [
        5425,
        5439
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1845": {
      "fn": "DAI.transferFrom",
      "offset": [
        5425,
        5439
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1846": {
      "fn": "DAI.transferFrom",
      "offset": [
        5441,
        5444
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1847": {
      "fn": "DAI.transferFrom",
      "offset": [
        5421,
        5424
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1054"
    },
    "1850": {
      "fn": "DAI.transferFrom",
      "jump": "i",
      "offset": [
        5421,
        5445
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1851": {
      "fn": "DAI.transferFrom",
      "offset": [
        5421,
        5445
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1852": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1854": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1856": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1858": {
      "op": "SHL"
    },
    "1859": {
      "op": "SUB"
    },
    "1860": {
      "fn": "DAI.transferFrom",
      "offset": [
        5404,
        5418
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1861": {
      "fn": "DAI.transferFrom",
      "offset": [
        5404,
        5418
      ],
      "op": "AND",
      "path": "0"
    },
    "1862": {
      "fn": "DAI.transferFrom",
      "offset": [
        5404,
        5418
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1864": {
      "fn": "DAI.transferFrom",
      "offset": [
        5404,
        5418
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1865": {
      "fn": "DAI.transferFrom",
      "offset": [
        5404,
        5418
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1866": {
      "fn": "DAI.transferFrom",
      "offset": [
        5404,
        5418
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1867": {
      "fn": "DAI.transferFrom",
      "offset": [
        5404,
        5413
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1869": {
      "fn": "DAI.transferFrom",
      "offset": [
        5404,
        5418
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1871": {
      "fn": "DAI.transferFrom",
      "offset": [
        5404,
        5418
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1872": {
      "fn": "DAI.transferFrom",
      "offset": [
        5404,
        5418
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1874": {
      "fn": "DAI.transferFrom",
      "offset": [
        5404,
        5418
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1875": {
      "fn": "DAI.transferFrom",
      "offset": [
        5404,
        5418
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1876": {
      "fn": "DAI.transferFrom",
      "offset": [
        5404,
        5445
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1877": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1879": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1881": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1883": {
      "op": "SHL"
    },
    "1884": {
      "op": "SUB"
    },
    "1885": {
      "fn": "DAI.transferFrom",
      "offset": [
        5476,
        5490
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 7
    },
    "1886": {
      "fn": "DAI.transferFrom",
      "offset": [
        5476,
        5490
      ],
      "op": "AND",
      "path": "0"
    },
    "1887": {
      "fn": "DAI.transferFrom",
      "offset": [
        5476,
        5490
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1889": {
      "fn": "DAI.transferFrom",
      "offset": [
        5476,
        5490
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1890": {
      "fn": "DAI.transferFrom",
      "offset": [
        5476,
        5490
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1891": {
      "fn": "DAI.transferFrom",
      "offset": [
        5476,
        5490
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1892": {
      "fn": "DAI.transferFrom",
      "offset": [
        5476,
        5485
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1894": {
      "fn": "DAI.transferFrom",
      "offset": [
        5476,
        5490
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1896": {
      "fn": "DAI.transferFrom",
      "offset": [
        5476,
        5490
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1897": {
      "fn": "DAI.transferFrom",
      "offset": [
        5472,
        5496
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x777"
    },
    "1900": {
      "fn": "DAI.transferFrom",
      "offset": [
        5472,
        5496
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1901": {
      "fn": "DAI.transferFrom",
      "offset": [
        5476,
        5490
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1903": {
      "fn": "DAI.transferFrom",
      "offset": [
        5476,
        5490
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1904": {
      "fn": "DAI.transferFrom",
      "offset": [
        5476,
        5490
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1905": {
      "fn": "DAI.transferFrom",
      "offset": [
        5476,
        5490
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1906": {
      "fn": "DAI.transferFrom",
      "offset": [
        5492,
        5495
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1907": {
      "fn": "DAI.transferFrom",
      "offset": [
        5472,
        5475
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1064"
    },
    "1910": {
      "fn": "DAI.transferFrom",
      "jump": "i",
      "offset": [
        5472,
        5496
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1911": {
      "fn": "DAI.transferFrom",
      "offset": [
        5472,
        5496
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1912": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1914": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1916": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1918": {
      "op": "SHL"
    },
    "1919": {
      "op": "SUB"
    },
    "1920": {
      "fn": "DAI.transferFrom",
      "offset": [
        5455,
        5469
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1921": {
      "fn": "DAI.transferFrom",
      "offset": [
        5455,
        5469
      ],
      "op": "AND",
      "path": "0"
    },
    "1922": {
      "fn": "DAI.transferFrom",
      "offset": [
        5455,
        5469
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1924": {
      "fn": "DAI.transferFrom",
      "offset": [
        5455,
        5469
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1925": {
      "fn": "DAI.transferFrom",
      "offset": [
        5455,
        5469
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1926": {
      "fn": "DAI.transferFrom",
      "offset": [
        5455,
        5469
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1927": {
      "fn": "DAI.transferFrom",
      "offset": [
        5455,
        5464
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1929": {
      "fn": "DAI.transferFrom",
      "offset": [
        5455,
        5469
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1931": {
      "fn": "DAI.transferFrom",
      "offset": [
        5455,
        5469
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1932": {
      "fn": "DAI.transferFrom",
      "offset": [
        5455,
        5469
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1934": {
      "fn": "DAI.transferFrom",
      "offset": [
        5455,
        5469
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1935": {
      "fn": "DAI.transferFrom",
      "offset": [
        5455,
        5469
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1936": {
      "fn": "DAI.transferFrom",
      "offset": [
        5455,
        5496
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1937": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1939": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1941": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1943": {
      "op": "SHL"
    },
    "1944": {
      "op": "SUB"
    },
    "1945": {
      "fn": "DAI.transferFrom",
      "offset": [
        5511,
        5534
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 8
    },
    "1946": {
      "fn": "DAI.transferFrom",
      "offset": [
        5511,
        5534
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1947": {
      "fn": "DAI.transferFrom",
      "offset": [
        5511,
        5534
      ],
      "op": "AND",
      "path": "0"
    },
    "1948": {
      "fn": "DAI.transferFrom",
      "offset": [
        5511,
        5534
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1949": {
      "fn": "DAI.transferFrom",
      "offset": [
        5511,
        5534
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1950": {
      "fn": "DAI.transferFrom",
      "offset": [
        5511,
        5534
      ],
      "op": "AND",
      "path": "0"
    },
    "1951": {
      "fn": "DAI.transferFrom",
      "offset": [
        5511,
        5534
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "1984": {
      "fn": "DAI.transferFrom",
      "offset": [
        5530,
        5533
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1985": {
      "fn": "DAI.transferFrom",
      "offset": [
        5511,
        5534
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1987": {
      "fn": "DAI.transferFrom",
      "offset": [
        5511,
        5534
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1988": {
      "fn": "DAI.transferFrom",
      "offset": [
        5511,
        5534
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1989": {
      "fn": "DAI.transferFrom",
      "offset": [
        5511,
        5534
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1990": {
      "fn": "DAI.transferFrom",
      "offset": [
        5511,
        5534
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1991": {
      "fn": "DAI.transferFrom",
      "offset": [
        5511,
        5534
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1993": {
      "fn": "DAI.transferFrom",
      "offset": [
        5511,
        5534
      ],
      "op": "ADD",
      "path": "0"
    },
    "1994": {
      "fn": "DAI.transferFrom",
      "offset": [
        5511,
        5534
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1996": {
      "fn": "DAI.transferFrom",
      "offset": [
        5511,
        5534
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1997": {
      "fn": "DAI.transferFrom",
      "offset": [
        5511,
        5534
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1998": {
      "fn": "DAI.transferFrom",
      "offset": [
        5511,
        5534
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1999": {
      "fn": "DAI.transferFrom",
      "offset": [
        5511,
        5534
      ],
      "op": "SUB",
      "path": "0"
    },
    "2000": {
      "fn": "DAI.transferFrom",
      "offset": [
        5511,
        5534
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2001": {
      "fn": "DAI.transferFrom",
      "offset": [
        5511,
        5534
      ],
      "op": "LOG3",
      "path": "0"
    },
    "2002": {
      "op": "POP"
    },
    "2003": {
      "fn": "DAI.transferFrom",
      "offset": [
        5551,
        5555
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 9,
      "value": "0x1"
    },
    "2005": {
      "fn": "DAI.transferFrom",
      "offset": [
        4984,
        5562
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "2006": {
      "fn": "DAI.transferFrom",
      "offset": [
        4984,
        5562
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2007": {
      "fn": "DAI.transferFrom",
      "offset": [
        4984,
        5562
      ],
      "op": "POP",
      "path": "0"
    },
    "2008": {
      "fn": "DAI.transferFrom",
      "offset": [
        4984,
        5562
      ],
      "op": "POP",
      "path": "0"
    },
    "2009": {
      "fn": "DAI.transferFrom",
      "offset": [
        4984,
        5562
      ],
      "op": "POP",
      "path": "0"
    },
    "2010": {
      "fn": "DAI.transferFrom",
      "jump": "o",
      "offset": [
        4984,
        5562
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2011": {
      "offset": [
        4346,
        4454
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2012": {
      "offset": [
        4388,
        4454
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xEA2AA0A1BE11A07ED86D755C93467F4F82362B452371D1BA94D1715123511ACB"
    },
    "2045": {
      "offset": [
        4346,
        4454
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2046": {
      "fn": "DAI.transferFrom",
      "jump": "o",
      "offset": [
        4346,
        4454
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2047": {
      "offset": [
        3474,
        3510
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2048": {
      "offset": [
        3509,
        3510
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "2050": {
      "offset": [
        3474,
        3510
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2051": {
      "fn": "DAI.transferFrom",
      "jump": "o",
      "offset": [
        3474,
        3510
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2052": {
      "offset": [
        4165,
        4196
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2053": {
      "fn": "DAI.transferFrom",
      "offset": [
        4165,
        4196
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "2055": {
      "fn": "DAI.transferFrom",
      "offset": [
        4165,
        4196
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2056": {
      "fn": "DAI.transferFrom",
      "offset": [
        4165,
        4196
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2057": {
      "fn": "DAI.transferFrom",
      "jump": "o",
      "offset": [
        4165,
        4196
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2058": {
      "fn": "DAI.mint",
      "offset": [
        5567,
        5769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2059": {
      "offset": [
        3238,
        3248
      ],
      "op": "CALLER",
      "path": "0"
    },
    "2060": {
      "offset": [
        3232,
        3237
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2062": {
      "offset": [
        3232,
        3249
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2063": {
      "fn": "DAI.mint",
      "offset": [
        3232,
        3249
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2064": {
      "fn": "DAI.mint",
      "offset": [
        3232,
        3249
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2065": {
      "fn": "DAI.mint",
      "offset": [
        3232,
        3249
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2067": {
      "fn": "DAI.mint",
      "offset": [
        3232,
        3249
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2068": {
      "fn": "DAI.mint",
      "offset": [
        3232,
        3249
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2069": {
      "fn": "DAI.mint",
      "offset": [
        3232,
        3249
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2070": {
      "fn": "DAI.mint",
      "offset": [
        3232,
        3249
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2072": {
      "fn": "DAI.mint",
      "offset": [
        3232,
        3249
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2073": {
      "fn": "DAI.mint",
      "offset": [
        3232,
        3249
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2074": {
      "fn": "DAI.mint",
      "offset": [
        3232,
        3249
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2075": {
      "offset": [
        3253,
        3254
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2077": {
      "offset": [
        3232,
        3254
      ],
      "op": "EQ",
      "path": "0"
    },
    "2078": {
      "offset": [
        3224,
        3277
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x862"
    },
    "2081": {
      "offset": [
        3224,
        3277
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2082": {
      "fn": "DAI.mint",
      "offset": [
        3224,
        3277
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2084": {
      "fn": "DAI.mint",
      "offset": [
        3224,
        3277
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2085": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2089": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2091": {
      "op": "SHL"
    },
    "2092": {
      "offset": [
        3224,
        3277
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2093": {
      "fn": "DAI.mint",
      "offset": [
        3224,
        3277
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2094": {
      "fn": "DAI.mint",
      "offset": [
        3224,
        3277
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2096": {
      "fn": "DAI.mint",
      "offset": [
        3224,
        3277
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2098": {
      "fn": "DAI.mint",
      "offset": [
        3224,
        3277
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2099": {
      "fn": "DAI.mint",
      "offset": [
        3224,
        3277
      ],
      "op": "ADD",
      "path": "0"
    },
    "2100": {
      "fn": "DAI.mint",
      "offset": [
        3224,
        3277
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2101": {
      "fn": "DAI.mint",
      "offset": [
        3224,
        3277
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x12"
    },
    "2103": {
      "fn": "DAI.mint",
      "offset": [
        3224,
        3277
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "2105": {
      "fn": "DAI.mint",
      "offset": [
        3224,
        3277
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2106": {
      "fn": "DAI.mint",
      "offset": [
        3224,
        3277
      ],
      "op": "ADD",
      "path": "0"
    },
    "2107": {
      "fn": "DAI.mint",
      "offset": [
        3224,
        3277
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2108": {
      "op": "PUSH18",
      "value": "0x11185A4BDB9BDD0B585D5D1A1BDC9A5E9959"
    },
    "2127": {
      "op": "PUSH1",
      "value": "0x72"
    },
    "2129": {
      "op": "SHL"
    },
    "2130": {
      "offset": [
        3224,
        3277
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x44"
    },
    "2132": {
      "fn": "DAI.mint",
      "offset": [
        3224,
        3277
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2133": {
      "fn": "DAI.mint",
      "offset": [
        3224,
        3277
      ],
      "op": "ADD",
      "path": "0"
    },
    "2134": {
      "fn": "DAI.mint",
      "offset": [
        3224,
        3277
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2135": {
      "fn": "DAI.mint",
      "offset": [
        3224,
        3277
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x64"
    },
    "2137": {
      "fn": "DAI.mint",
      "offset": [
        3224,
        3277
      ],
      "op": "ADD",
      "path": "0"
    },
    "2138": {
      "fn": "DAI.mint",
      "offset": [
        3224,
        3277
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2140": {
      "fn": "DAI.mint",
      "offset": [
        3224,
        3277
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2141": {
      "fn": "DAI.mint",
      "offset": [
        3224,
        3277
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2142": {
      "fn": "DAI.mint",
      "offset": [
        3224,
        3277
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2143": {
      "fn": "DAI.mint",
      "offset": [
        3224,
        3277
      ],
      "op": "SUB",
      "path": "0"
    },
    "2144": {
      "fn": "DAI.mint",
      "offset": [
        3224,
        3277
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2145": {
      "fn": "DAI.mint",
      "offset": [
        3224,
        3277
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2146": {
      "fn": "DAI.mint",
      "offset": [
        3224,
        3277
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2147": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2149": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2151": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2153": {
      "op": "SHL"
    },
    "2154": {
      "op": "SUB"
    },
    "2155": {
      "fn": "DAI.mint",
      "offset": [
        5649,
        5663
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 10
    },
    "2156": {
      "fn": "DAI.mint",
      "offset": [
        5649,
        5663
      ],
      "op": "AND",
      "path": "0"
    },
    "2157": {
      "fn": "DAI.mint",
      "offset": [
        5649,
        5663
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2159": {
      "fn": "DAI.mint",
      "offset": [
        5649,
        5663
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2160": {
      "fn": "DAI.mint",
      "offset": [
        5649,
        5663
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2161": {
      "fn": "DAI.mint",
      "offset": [
        5649,
        5663
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2162": {
      "fn": "DAI.mint",
      "offset": [
        5649,
        5658
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "2164": {
      "fn": "DAI.mint",
      "offset": [
        5649,
        5663
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2166": {
      "fn": "DAI.mint",
      "offset": [
        5649,
        5663
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2167": {
      "fn": "DAI.mint",
      "offset": [
        5645,
        5669
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x885"
    },
    "2170": {
      "fn": "DAI.mint",
      "offset": [
        5645,
        5669
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2171": {
      "fn": "DAI.mint",
      "offset": [
        5649,
        5663
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2173": {
      "fn": "DAI.mint",
      "offset": [
        5649,
        5663
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2174": {
      "fn": "DAI.mint",
      "offset": [
        5649,
        5663
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2175": {
      "fn": "DAI.mint",
      "offset": [
        5649,
        5663
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2176": {
      "fn": "DAI.mint",
      "offset": [
        5665,
        5668
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2177": {
      "fn": "DAI.mint",
      "offset": [
        5645,
        5648
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1064"
    },
    "2180": {
      "fn": "DAI.mint",
      "jump": "i",
      "offset": [
        5645,
        5669
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2181": {
      "fn": "DAI.mint",
      "offset": [
        5645,
        5669
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2182": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2184": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2186": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2188": {
      "op": "SHL"
    },
    "2189": {
      "op": "SUB"
    },
    "2190": {
      "fn": "DAI.mint",
      "offset": [
        5628,
        5642
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2191": {
      "fn": "DAI.mint",
      "offset": [
        5628,
        5642
      ],
      "op": "AND",
      "path": "0"
    },
    "2192": {
      "fn": "DAI.mint",
      "offset": [
        5628,
        5642
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2194": {
      "fn": "DAI.mint",
      "offset": [
        5628,
        5642
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2195": {
      "fn": "DAI.mint",
      "offset": [
        5628,
        5642
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2196": {
      "fn": "DAI.mint",
      "offset": [
        5628,
        5642
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2197": {
      "fn": "DAI.mint",
      "offset": [
        5628,
        5637
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "2199": {
      "fn": "DAI.mint",
      "offset": [
        5628,
        5642
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2201": {
      "fn": "DAI.mint",
      "offset": [
        5628,
        5642
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2202": {
      "fn": "DAI.mint",
      "offset": [
        5628,
        5642
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2204": {
      "fn": "DAI.mint",
      "offset": [
        5628,
        5642
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2205": {
      "fn": "DAI.mint",
      "offset": [
        5628,
        5642
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2206": {
      "fn": "DAI.mint",
      "offset": [
        5628,
        5669
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2207": {
      "fn": "DAI.mint",
      "offset": [
        5700,
        5711
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 11,
      "value": "0x1"
    },
    "2209": {
      "fn": "DAI.mint",
      "offset": [
        5700,
        5711
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2210": {
      "fn": "DAI.mint",
      "offset": [
        5696,
        5717
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8AB"
    },
    "2213": {
      "fn": "DAI.mint",
      "offset": [
        5696,
        5717
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2214": {
      "fn": "DAI.mint",
      "offset": [
        5713,
        5716
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2215": {
      "fn": "DAI.mint",
      "offset": [
        5696,
        5699
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1064"
    },
    "2218": {
      "fn": "DAI.mint",
      "jump": "i",
      "offset": [
        5696,
        5717
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2219": {
      "fn": "DAI.mint",
      "offset": [
        5696,
        5717
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2220": {
      "fn": "DAI.mint",
      "offset": [
        5679,
        5690
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2222": {
      "fn": "DAI.mint",
      "offset": [
        5679,
        5717
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2223": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2225": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2227": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2229": {
      "op": "SHL"
    },
    "2230": {
      "op": "SUB"
    },
    "2231": {
      "fn": "DAI.mint",
      "offset": [
        5732,
        5762
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 12
    },
    "2232": {
      "fn": "DAI.mint",
      "offset": [
        5732,
        5762
      ],
      "op": "AND",
      "path": "0"
    },
    "2233": {
      "fn": "DAI.mint",
      "offset": [
        5749,
        5750
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2235": {
      "fn": "DAI.mint",
      "offset": [
        5732,
        5762
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "2268": {
      "fn": "DAI.mint",
      "offset": [
        5758,
        5761
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2269": {
      "fn": "DAI.mint",
      "offset": [
        5732,
        5762
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2271": {
      "fn": "DAI.mint",
      "offset": [
        5732,
        5762
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2272": {
      "fn": "DAI.mint",
      "offset": [
        5732,
        5762
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2273": {
      "fn": "DAI.mint",
      "offset": [
        5732,
        5762
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2274": {
      "fn": "DAI.mint",
      "offset": [
        5732,
        5762
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2275": {
      "fn": "DAI.mint",
      "offset": [
        5732,
        5762
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2277": {
      "fn": "DAI.mint",
      "offset": [
        5732,
        5762
      ],
      "op": "ADD",
      "path": "0"
    },
    "2278": {
      "fn": "DAI.mint",
      "offset": [
        5732,
        5762
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2280": {
      "fn": "DAI.mint",
      "offset": [
        5732,
        5762
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2281": {
      "fn": "DAI.mint",
      "offset": [
        5732,
        5762
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2282": {
      "fn": "DAI.mint",
      "offset": [
        5732,
        5762
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2283": {
      "fn": "DAI.mint",
      "offset": [
        5732,
        5762
      ],
      "op": "SUB",
      "path": "0"
    },
    "2284": {
      "fn": "DAI.mint",
      "offset": [
        5732,
        5762
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2285": {
      "fn": "DAI.mint",
      "offset": [
        5732,
        5762
      ],
      "op": "LOG3",
      "path": "0"
    },
    "2286": {
      "fn": "DAI.mint",
      "offset": [
        5567,
        5769
      ],
      "op": "POP",
      "path": "0"
    },
    "2287": {
      "fn": "DAI.mint",
      "offset": [
        5567,
        5769
      ],
      "op": "POP",
      "path": "0"
    },
    "2288": {
      "fn": "DAI.mint",
      "jump": "o",
      "offset": [
        5567,
        5769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2289": {
      "offset": [
        3430,
        3468
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2290": {
      "fn": "DAI.mint",
      "offset": [
        3430,
        3468
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2292": {
      "fn": "DAI.mint",
      "offset": [
        3430,
        3468
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2293": {
      "fn": "DAI.mint",
      "offset": [
        3430,
        3468
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2295": {
      "fn": "DAI.mint",
      "offset": [
        3430,
        3468
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2296": {
      "fn": "DAI.mint",
      "offset": [
        3430,
        3468
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2297": {
      "fn": "DAI.mint",
      "offset": [
        3430,
        3468
      ],
      "op": "ADD",
      "path": "0"
    },
    "2298": {
      "fn": "DAI.mint",
      "offset": [
        3430,
        3468
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2299": {
      "fn": "DAI.mint",
      "offset": [
        3430,
        3468
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2300": {
      "fn": "DAI.mint",
      "offset": [
        3430,
        3468
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2302": {
      "fn": "DAI.mint",
      "offset": [
        3430,
        3468
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2303": {
      "fn": "DAI.mint",
      "offset": [
        3430,
        3468
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2304": {
      "op": "PUSH1",
      "value": "0x31"
    },
    "2306": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "2308": {
      "op": "SHL"
    },
    "2309": {
      "offset": [
        3430,
        3468
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2311": {
      "fn": "DAI.mint",
      "offset": [
        3430,
        3468
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2312": {
      "fn": "DAI.mint",
      "offset": [
        3430,
        3468
      ],
      "op": "ADD",
      "path": "0"
    },
    "2313": {
      "fn": "DAI.mint",
      "offset": [
        3430,
        3468
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2314": {
      "fn": "DAI.mint",
      "offset": [
        3430,
        3468
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2315": {
      "fn": "DAI.mint",
      "jump": "o",
      "offset": [
        3430,
        3468
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2316": {
      "fn": "DAI.rely",
      "offset": [
        3060,
        3125
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2317": {
      "offset": [
        3238,
        3248
      ],
      "op": "CALLER",
      "path": "0"
    },
    "2318": {
      "offset": [
        3232,
        3237
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2320": {
      "offset": [
        3232,
        3249
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2321": {
      "fn": "DAI.rely",
      "offset": [
        3232,
        3249
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2322": {
      "fn": "DAI.rely",
      "offset": [
        3232,
        3249
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2323": {
      "fn": "DAI.rely",
      "offset": [
        3232,
        3249
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2325": {
      "fn": "DAI.rely",
      "offset": [
        3232,
        3249
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2326": {
      "fn": "DAI.rely",
      "offset": [
        3232,
        3249
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2327": {
      "fn": "DAI.rely",
      "offset": [
        3232,
        3249
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2328": {
      "fn": "DAI.rely",
      "offset": [
        3232,
        3249
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2330": {
      "fn": "DAI.rely",
      "offset": [
        3232,
        3249
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2331": {
      "fn": "DAI.rely",
      "offset": [
        3232,
        3249
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2332": {
      "fn": "DAI.rely",
      "offset": [
        3232,
        3249
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2333": {
      "offset": [
        3253,
        3254
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2335": {
      "offset": [
        3232,
        3254
      ],
      "op": "EQ",
      "path": "0"
    },
    "2336": {
      "offset": [
        3224,
        3277
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x964"
    },
    "2339": {
      "offset": [
        3224,
        3277
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2340": {
      "fn": "DAI.rely",
      "offset": [
        3224,
        3277
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2342": {
      "fn": "DAI.rely",
      "offset": [
        3224,
        3277
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2343": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2347": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2349": {
      "op": "SHL"
    },
    "2350": {
      "offset": [
        3224,
        3277
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2351": {
      "fn": "DAI.rely",
      "offset": [
        3224,
        3277
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2352": {
      "fn": "DAI.rely",
      "offset": [
        3224,
        3277
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2354": {
      "fn": "DAI.rely",
      "offset": [
        3224,
        3277
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2356": {
      "fn": "DAI.rely",
      "offset": [
        3224,
        3277
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2357": {
      "fn": "DAI.rely",
      "offset": [
        3224,
        3277
      ],
      "op": "ADD",
      "path": "0"
    },
    "2358": {
      "fn": "DAI.rely",
      "offset": [
        3224,
        3277
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2359": {
      "fn": "DAI.rely",
      "offset": [
        3224,
        3277
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x12"
    },
    "2361": {
      "fn": "DAI.rely",
      "offset": [
        3224,
        3277
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "2363": {
      "fn": "DAI.rely",
      "offset": [
        3224,
        3277
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2364": {
      "fn": "DAI.rely",
      "offset": [
        3224,
        3277
      ],
      "op": "ADD",
      "path": "0"
    },
    "2365": {
      "fn": "DAI.rely",
      "offset": [
        3224,
        3277
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2366": {
      "op": "PUSH18",
      "value": "0x11185A4BDB9BDD0B585D5D1A1BDC9A5E9959"
    },
    "2385": {
      "op": "PUSH1",
      "value": "0x72"
    },
    "2387": {
      "op": "SHL"
    },
    "2388": {
      "offset": [
        3224,
        3277
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x44"
    },
    "2390": {
      "fn": "DAI.rely",
      "offset": [
        3224,
        3277
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2391": {
      "fn": "DAI.rely",
      "offset": [
        3224,
        3277
      ],
      "op": "ADD",
      "path": "0"
    },
    "2392": {
      "fn": "DAI.rely",
      "offset": [
        3224,
        3277
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2393": {
      "fn": "DAI.rely",
      "offset": [
        3224,
        3277
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x64"
    },
    "2395": {
      "fn": "DAI.rely",
      "offset": [
        3224,
        3277
      ],
      "op": "ADD",
      "path": "0"
    },
    "2396": {
      "fn": "DAI.rely",
      "offset": [
        3224,
        3277
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2398": {
      "fn": "DAI.rely",
      "offset": [
        3224,
        3277
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2399": {
      "fn": "DAI.rely",
      "offset": [
        3224,
        3277
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2400": {
      "fn": "DAI.rely",
      "offset": [
        3224,
        3277
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2401": {
      "fn": "DAI.rely",
      "offset": [
        3224,
        3277
      ],
      "op": "SUB",
      "path": "0"
    },
    "2402": {
      "fn": "DAI.rely",
      "offset": [
        3224,
        3277
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2403": {
      "fn": "DAI.rely",
      "offset": [
        3224,
        3277
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2404": {
      "fn": "DAI.rely",
      "offset": [
        3224,
        3277
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2405": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2407": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2409": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2411": {
      "op": "SHL"
    },
    "2412": {
      "op": "SUB"
    },
    "2413": {
      "fn": "DAI.rely",
      "offset": [
        3108,
        3118
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 13
    },
    "2414": {
      "fn": "DAI.rely",
      "offset": [
        3108,
        3118
      ],
      "op": "AND",
      "path": "0"
    },
    "2415": {
      "fn": "DAI.rely",
      "offset": [
        3108,
        3113
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2417": {
      "fn": "DAI.rely",
      "offset": [
        3108,
        3118
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2418": {
      "fn": "DAI.rely",
      "offset": [
        3108,
        3118
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2419": {
      "fn": "DAI.rely",
      "offset": [
        3108,
        3118
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2420": {
      "fn": "DAI.rely",
      "offset": [
        3108,
        3118
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2422": {
      "fn": "DAI.rely",
      "offset": [
        3108,
        3118
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2423": {
      "fn": "DAI.rely",
      "offset": [
        3108,
        3118
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2424": {
      "fn": "DAI.rely",
      "offset": [
        3108,
        3118
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2425": {
      "fn": "DAI.rely",
      "offset": [
        3121,
        3122
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2427": {
      "fn": "DAI.rely",
      "offset": [
        3121,
        3122
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2428": {
      "fn": "DAI.rely",
      "offset": [
        3108,
        3118
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2430": {
      "fn": "DAI.rely",
      "offset": [
        3108,
        3118
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2431": {
      "fn": "DAI.rely",
      "offset": [
        3108,
        3118
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2432": {
      "fn": "DAI.rely",
      "offset": [
        3108,
        3122
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2433": {
      "offset": [
        1375,
        1380
      ],
      "op": "MSIZE",
      "path": "0"
    },
    "2434": {
      "offset": [
        1470,
        1473
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x120"
    },
    "2437": {
      "offset": [
        1464,
        1468
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2438": {
      "offset": [
        1460,
        1474
      ],
      "op": "ADD",
      "path": "0"
    },
    "2439": {
      "offset": [
        1454,
        1458
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2441": {
      "offset": [
        1447,
        1475
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2442": {
      "offset": [
        1544,
        1548
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2444": {
      "offset": [
        1538,
        1542
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2445": {
      "offset": [
        1531,
        1549
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2446": {
      "offset": [
        1635,
        1638
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "2448": {
      "offset": [
        1628,
        1632
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2450": {
      "offset": [
        1622,
        1626
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2451": {
      "offset": [
        1618,
        1633
      ],
      "op": "ADD",
      "path": "0"
    },
    "2452": {
      "offset": [
        1611,
        1639
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2453": {
      "offset": [
        1721,
        1724
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "2455": {
      "offset": [
        1718,
        1719
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2457": {
      "offset": [
        1711,
        1715
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2459": {
      "offset": [
        1705,
        1709
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2460": {
      "offset": [
        1701,
        1716
      ],
      "op": "ADD",
      "path": "0"
    },
    "2461": {
      "offset": [
        1688,
        1725
      ],
      "op": "CALLDATACOPY",
      "path": "0"
    },
    "2462": {
      "offset": [
        2038,
        2040
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "2464": {
      "offset": [
        2025,
        2041
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "2465": {
      "offset": [
        1976,
        1977
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2467": {
      "offset": [
        1963,
        1978
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "2468": {
      "offset": [
        1895,
        1901
      ],
      "op": "CALLER",
      "path": "0"
    },
    "2469": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2471": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2473": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2475": {
      "op": "SHL"
    },
    "2476": {
      "op": "SUB"
    },
    "2477": {
      "op": "NOT"
    },
    "2478": {
      "offset": [
        1861,
        1862
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2480": {
      "offset": [
        1848,
        1863
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "2481": {
      "offset": [
        1830,
        1865
      ],
      "op": "AND",
      "path": "0"
    },
    "2482": {
      "offset": [
        1770,
        1773
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x120"
    },
    "2485": {
      "offset": [
        1764,
        1768
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2486": {
      "offset": [
        1759,
        2087
      ],
      "op": "LOG4",
      "path": "0"
    },
    "2487": {
      "offset": [
        1201,
        2097
      ],
      "op": "POP",
      "path": "0"
    },
    "2488": {
      "fn": "DAI.rely",
      "offset": [
        1201,
        2097
      ],
      "op": "POP",
      "path": "0"
    },
    "2489": {
      "fn": "DAI.rely",
      "jump": "o",
      "offset": [
        1201,
        2097
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2490": {
      "offset": [
        3549,
        3612
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2491": {
      "fn": "DAI.rely",
      "offset": [
        3549,
        3612
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "2493": {
      "fn": "DAI.rely",
      "offset": [
        3549,
        3612
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2495": {
      "fn": "DAI.rely",
      "offset": [
        3549,
        3612
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2496": {
      "fn": "DAI.rely",
      "offset": [
        3549,
        3612
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2497": {
      "fn": "DAI.rely",
      "offset": [
        3549,
        3612
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2499": {
      "fn": "DAI.rely",
      "offset": [
        3549,
        3612
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2500": {
      "fn": "DAI.rely",
      "offset": [
        3549,
        3612
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2502": {
      "fn": "DAI.rely",
      "offset": [
        3549,
        3612
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2504": {
      "fn": "DAI.rely",
      "offset": [
        3549,
        3612
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2505": {
      "fn": "DAI.rely",
      "offset": [
        3549,
        3612
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2506": {
      "fn": "DAI.rely",
      "offset": [
        3549,
        3612
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2507": {
      "op": "POP"
    },
    "2508": {
      "offset": [
        3549,
        3612
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2509": {
      "fn": "DAI.rely",
      "jump": "o",
      "offset": [
        3549,
        3612
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2510": {
      "offset": [
        3687,
        3747
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2511": {
      "fn": "DAI.rely",
      "offset": [
        3687,
        3747
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2513": {
      "fn": "DAI.rely",
      "offset": [
        3687,
        3747
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2515": {
      "fn": "DAI.rely",
      "offset": [
        3687,
        3747
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2516": {
      "fn": "DAI.rely",
      "offset": [
        3687,
        3747
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2517": {
      "fn": "DAI.rely",
      "offset": [
        3687,
        3747
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2519": {
      "fn": "DAI.rely",
      "offset": [
        3687,
        3747
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2520": {
      "fn": "DAI.rely",
      "offset": [
        3687,
        3747
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2522": {
      "fn": "DAI.rely",
      "offset": [
        3687,
        3747
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2524": {
      "fn": "DAI.rely",
      "offset": [
        3687,
        3747
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2525": {
      "fn": "DAI.rely",
      "offset": [
        3687,
        3747
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2526": {
      "fn": "DAI.rely",
      "offset": [
        3687,
        3747
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2527": {
      "op": "POP"
    },
    "2528": {
      "offset": [
        3687,
        3747
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2529": {
      "fn": "DAI.rely",
      "jump": "o",
      "offset": [
        3687,
        3747
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2530": {
      "fn": "DAI.permit",
      "offset": [
        6849,
        7840
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2531": {
      "fn": "DAI.permit",
      "offset": [
        7118,
        7134
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "2533": {
      "fn": "DAI.permit",
      "offset": [
        7118,
        7134
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2534": {
      "fn": "DAI.permit",
      "offset": [
        7017,
        7031
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2536": {
      "fn": "DAI.permit",
      "offset": [
        7017,
        7031
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2537": {
      "offset": [
        4388,
        4454
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xEA2AA0A1BE11A07ED86D755C93467F4F82362B452371D1BA94D1715123511ACB"
    },
    "2570": {
      "fn": "DAI.permit",
      "offset": [
        7227,
        7233
      ],
      "op": "DUP11",
      "path": "0"
    },
    "2571": {
      "fn": "DAI.permit",
      "offset": [
        7272,
        7279
      ],
      "op": "DUP11",
      "path": "0"
    },
    "2572": {
      "fn": "DAI.permit",
      "offset": [
        7318,
        7323
      ],
      "op": "DUP11",
      "path": "0"
    },
    "2573": {
      "fn": "DAI.permit",
      "offset": [
        7362,
        7368
      ],
      "op": "DUP11",
      "path": "0"
    },
    "2574": {
      "fn": "DAI.permit",
      "offset": [
        7407,
        7414
      ],
      "op": "DUP11",
      "path": "0"
    },
    "2575": {
      "fn": "DAI.permit",
      "offset": [
        7162,
        7415
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2577": {
      "fn": "DAI.permit",
      "offset": [
        7162,
        7415
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2578": {
      "fn": "DAI.permit",
      "offset": [
        7162,
        7415
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2580": {
      "fn": "DAI.permit",
      "offset": [
        7162,
        7415
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2581": {
      "fn": "DAI.permit",
      "offset": [
        7162,
        7415
      ],
      "op": "ADD",
      "path": "0"
    },
    "2582": {
      "fn": "DAI.permit",
      "offset": [
        7162,
        7415
      ],
      "op": "SWAP7",
      "path": "0"
    },
    "2583": {
      "fn": "DAI.permit",
      "offset": [
        7162,
        7415
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2584": {
      "fn": "DAI.permit",
      "offset": [
        7162,
        7415
      ],
      "op": "SWAP7",
      "path": "0"
    },
    "2585": {
      "fn": "DAI.permit",
      "offset": [
        7162,
        7415
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2586": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2588": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2590": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2592": {
      "op": "SHL"
    },
    "2593": {
      "op": "SUB"
    },
    "2594": {
      "fn": "DAI.permit",
      "offset": [
        7162,
        7415
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "2595": {
      "fn": "DAI.permit",
      "offset": [
        7162,
        7415
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2596": {
      "fn": "DAI.permit",
      "offset": [
        7162,
        7415
      ],
      "op": "AND",
      "path": "0"
    },
    "2597": {
      "fn": "DAI.permit",
      "offset": [
        7162,
        7415
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2599": {
      "fn": "DAI.permit",
      "offset": [
        7162,
        7415
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2600": {
      "fn": "DAI.permit",
      "offset": [
        7162,
        7415
      ],
      "op": "DUP9",
      "path": "0"
    },
    "2601": {
      "fn": "DAI.permit",
      "offset": [
        7162,
        7415
      ],
      "op": "ADD",
      "path": "0"
    },
    "2602": {
      "fn": "DAI.permit",
      "offset": [
        7162,
        7415
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2603": {
      "fn": "DAI.permit",
      "offset": [
        7162,
        7415
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2604": {
      "fn": "DAI.permit",
      "offset": [
        7162,
        7415
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2605": {
      "fn": "DAI.permit",
      "offset": [
        7162,
        7415
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2606": {
      "fn": "DAI.permit",
      "offset": [
        7162,
        7415
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "2607": {
      "fn": "DAI.permit",
      "offset": [
        7162,
        7415
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2608": {
      "fn": "DAI.permit",
      "offset": [
        7162,
        7415
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "2609": {
      "fn": "DAI.permit",
      "offset": [
        7162,
        7415
      ],
      "op": "AND",
      "path": "0"
    },
    "2610": {
      "fn": "DAI.permit",
      "offset": [
        7162,
        7415
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "2612": {
      "fn": "DAI.permit",
      "offset": [
        7162,
        7415
      ],
      "op": "DUP7",
      "path": "0"
    },
    "2613": {
      "fn": "DAI.permit",
      "offset": [
        7162,
        7415
      ],
      "op": "ADD",
      "path": "0"
    },
    "2614": {
      "fn": "DAI.permit",
      "offset": [
        7162,
        7415
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2615": {
      "fn": "DAI.permit",
      "offset": [
        7162,
        7415
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2617": {
      "fn": "DAI.permit",
      "offset": [
        7162,
        7415
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2618": {
      "fn": "DAI.permit",
      "offset": [
        7162,
        7415
      ],
      "op": "ADD",
      "path": "0"
    },
    "2619": {
      "fn": "DAI.permit",
      "offset": [
        7162,
        7415
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2620": {
      "fn": "DAI.permit",
      "offset": [
        7162,
        7415
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2621": {
      "fn": "DAI.permit",
      "offset": [
        7162,
        7415
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2622": {
      "fn": "DAI.permit",
      "offset": [
        7162,
        7415
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2623": {
      "fn": "DAI.permit",
      "offset": [
        7162,
        7415
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA0"
    },
    "2625": {
      "fn": "DAI.permit",
      "offset": [
        7162,
        7415
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2626": {
      "fn": "DAI.permit",
      "offset": [
        7162,
        7415
      ],
      "op": "ADD",
      "path": "0"
    },
    "2627": {
      "fn": "DAI.permit",
      "offset": [
        7162,
        7415
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2628": {
      "fn": "DAI.permit",
      "offset": [
        7162,
        7415
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2629": {
      "fn": "DAI.permit",
      "offset": [
        7162,
        7415
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2630": {
      "fn": "DAI.permit",
      "offset": [
        7162,
        7415
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2631": {
      "fn": "DAI.permit",
      "offset": [
        7162,
        7415
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC0"
    },
    "2633": {
      "fn": "DAI.permit",
      "offset": [
        7162,
        7415
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2634": {
      "fn": "DAI.permit",
      "offset": [
        7162,
        7415
      ],
      "op": "ADD",
      "path": "0"
    },
    "2635": {
      "fn": "DAI.permit",
      "offset": [
        7162,
        7415
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2636": {
      "fn": "DAI.permit",
      "offset": [
        7162,
        7415
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "2638": {
      "fn": "DAI.permit",
      "offset": [
        7162,
        7415
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2639": {
      "fn": "DAI.permit",
      "offset": [
        7162,
        7415
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2640": {
      "fn": "DAI.permit",
      "offset": [
        7162,
        7415
      ],
      "op": "ADD",
      "path": "0"
    },
    "2641": {
      "fn": "DAI.permit",
      "offset": [
        7162,
        7415
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2642": {
      "fn": "DAI.permit",
      "offset": [
        7162,
        7415
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2643": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2645": {
      "op": "DUP2"
    },
    "2646": {
      "op": "DUP4"
    },
    "2647": {
      "op": "SUB"
    },
    "2648": {
      "op": "SUB"
    },
    "2649": {
      "op": "DUP2"
    },
    "2650": {
      "op": "MSTORE"
    },
    "2651": {
      "fn": "DAI.permit",
      "offset": [
        7162,
        7415
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2652": {
      "fn": "DAI.permit",
      "offset": [
        7162,
        7415
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2654": {
      "fn": "DAI.permit",
      "offset": [
        7162,
        7415
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2655": {
      "fn": "DAI.permit",
      "offset": [
        7152,
        7416
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2656": {
      "fn": "DAI.permit",
      "offset": [
        7152,
        7416
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2657": {
      "fn": "DAI.permit",
      "offset": [
        7152,
        7416
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2658": {
      "fn": "DAI.permit",
      "offset": [
        7152,
        7416
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2660": {
      "fn": "DAI.permit",
      "offset": [
        7152,
        7416
      ],
      "op": "ADD",
      "path": "0"
    },
    "2661": {
      "fn": "DAI.permit",
      "offset": [
        7152,
        7416
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2662": {
      "fn": "DAI.permit",
      "offset": [
        7056,
        7426
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2664": {
      "fn": "DAI.permit",
      "offset": [
        7056,
        7426
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2665": {
      "op": "PUSH2",
      "value": "0x1901"
    },
    "2668": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "2670": {
      "op": "SHL"
    },
    "2671": {
      "fn": "DAI.permit",
      "offset": [
        7056,
        7426
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2673": {
      "fn": "DAI.permit",
      "offset": [
        7056,
        7426
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2674": {
      "fn": "DAI.permit",
      "offset": [
        7056,
        7426
      ],
      "op": "ADD",
      "path": "0"
    },
    "2675": {
      "fn": "DAI.permit",
      "offset": [
        7056,
        7426
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2676": {
      "fn": "DAI.permit",
      "offset": [
        7056,
        7426
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x22"
    },
    "2678": {
      "fn": "DAI.permit",
      "offset": [
        7056,
        7426
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2679": {
      "fn": "DAI.permit",
      "offset": [
        7056,
        7426
      ],
      "op": "ADD",
      "path": "0"
    },
    "2680": {
      "fn": "DAI.permit",
      "offset": [
        7056,
        7426
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2681": {
      "fn": "DAI.permit",
      "offset": [
        7056,
        7426
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2682": {
      "fn": "DAI.permit",
      "offset": [
        7056,
        7426
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2683": {
      "fn": "DAI.permit",
      "offset": [
        7056,
        7426
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2684": {
      "fn": "DAI.permit",
      "offset": [
        7056,
        7426
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x42"
    },
    "2686": {
      "fn": "DAI.permit",
      "offset": [
        7056,
        7426
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2687": {
      "fn": "DAI.permit",
      "offset": [
        7056,
        7426
      ],
      "op": "ADD",
      "path": "0"
    },
    "2688": {
      "fn": "DAI.permit",
      "offset": [
        7056,
        7426
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2689": {
      "fn": "DAI.permit",
      "offset": [
        7056,
        7426
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x62"
    },
    "2691": {
      "fn": "DAI.permit",
      "offset": [
        7056,
        7426
      ],
      "op": "ADD",
      "path": "0"
    },
    "2692": {
      "fn": "DAI.permit",
      "offset": [
        7056,
        7426
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2694": {
      "fn": "DAI.permit",
      "offset": [
        7056,
        7426
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2695": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2697": {
      "op": "DUP2"
    },
    "2698": {
      "op": "DUP4"
    },
    "2699": {
      "op": "SUB"
    },
    "2700": {
      "op": "SUB"
    },
    "2701": {
      "op": "DUP2"
    },
    "2702": {
      "op": "MSTORE"
    },
    "2703": {
      "fn": "DAI.permit",
      "offset": [
        7056,
        7426
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2704": {
      "fn": "DAI.permit",
      "offset": [
        7056,
        7426
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2706": {
      "fn": "DAI.permit",
      "offset": [
        7056,
        7426
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2707": {
      "fn": "DAI.permit",
      "offset": [
        7046,
        7427
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2708": {
      "fn": "DAI.permit",
      "offset": [
        7046,
        7427
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2709": {
      "fn": "DAI.permit",
      "offset": [
        7046,
        7427
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2710": {
      "fn": "DAI.permit",
      "offset": [
        7046,
        7427
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2712": {
      "fn": "DAI.permit",
      "offset": [
        7046,
        7427
      ],
      "op": "ADD",
      "path": "0"
    },
    "2713": {
      "fn": "DAI.permit",
      "offset": [
        7046,
        7427
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2714": {
      "fn": "DAI.permit",
      "offset": [
        7017,
        7427
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2715": {
      "op": "POP"
    },
    "2716": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2718": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2720": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2722": {
      "op": "SHL"
    },
    "2723": {
      "op": "SUB"
    },
    "2724": {
      "fn": "DAI.permit",
      "offset": [
        7446,
        7466
      ],
      "op": "DUP10",
      "path": "0",
      "statement": 14
    },
    "2725": {
      "branch": 37,
      "fn": "DAI.permit",
      "offset": [
        7446,
        7466
      ],
      "op": "AND",
      "path": "0"
    },
    "2726": {
      "fn": "DAI.permit",
      "offset": [
        7438,
        7492
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAED"
    },
    "2729": {
      "branch": 37,
      "fn": "DAI.permit",
      "offset": [
        7438,
        7492
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2730": {
      "fn": "DAI.permit",
      "offset": [
        7438,
        7492
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2732": {
      "fn": "DAI.permit",
      "offset": [
        7438,
        7492
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2733": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2737": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2739": {
      "op": "SHL"
    },
    "2740": {
      "fn": "DAI.permit",
      "offset": [
        7438,
        7492
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2741": {
      "fn": "DAI.permit",
      "offset": [
        7438,
        7492
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2742": {
      "fn": "DAI.permit",
      "offset": [
        7438,
        7492
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2744": {
      "fn": "DAI.permit",
      "offset": [
        7438,
        7492
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2746": {
      "fn": "DAI.permit",
      "offset": [
        7438,
        7492
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2747": {
      "fn": "DAI.permit",
      "offset": [
        7438,
        7492
      ],
      "op": "ADD",
      "path": "0"
    },
    "2748": {
      "fn": "DAI.permit",
      "offset": [
        7438,
        7492
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2749": {
      "fn": "DAI.permit",
      "offset": [
        7438,
        7492
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x15"
    },
    "2751": {
      "fn": "DAI.permit",
      "offset": [
        7438,
        7492
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "2753": {
      "fn": "DAI.permit",
      "offset": [
        7438,
        7492
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2754": {
      "fn": "DAI.permit",
      "offset": [
        7438,
        7492
      ],
      "op": "ADD",
      "path": "0"
    },
    "2755": {
      "fn": "DAI.permit",
      "offset": [
        7438,
        7492
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2756": {
      "op": "PUSH21",
      "value": "0x4461692F696E76616C69642D616464726573732D3"
    },
    "2778": {
      "op": "PUSH1",
      "value": "0x5C"
    },
    "2780": {
      "op": "SHL"
    },
    "2781": {
      "fn": "DAI.permit",
      "offset": [
        7438,
        7492
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x44"
    },
    "2783": {
      "fn": "DAI.permit",
      "offset": [
        7438,
        7492
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2784": {
      "fn": "DAI.permit",
      "offset": [
        7438,
        7492
      ],
      "op": "ADD",
      "path": "0"
    },
    "2785": {
      "fn": "DAI.permit",
      "offset": [
        7438,
        7492
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2786": {
      "fn": "DAI.permit",
      "offset": [
        7438,
        7492
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x64"
    },
    "2788": {
      "fn": "DAI.permit",
      "offset": [
        7438,
        7492
      ],
      "op": "ADD",
      "path": "0"
    },
    "2789": {
      "fn": "DAI.permit",
      "offset": [
        7438,
        7492
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2791": {
      "fn": "DAI.permit",
      "offset": [
        7438,
        7492
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2792": {
      "fn": "DAI.permit",
      "offset": [
        7438,
        7492
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2793": {
      "fn": "DAI.permit",
      "offset": [
        7438,
        7492
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2794": {
      "fn": "DAI.permit",
      "offset": [
        7438,
        7492
      ],
      "op": "SUB",
      "path": "0"
    },
    "2795": {
      "fn": "DAI.permit",
      "offset": [
        7438,
        7492
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2796": {
      "fn": "DAI.permit",
      "offset": [
        7438,
        7492
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2797": {
      "fn": "DAI.permit",
      "offset": [
        7438,
        7492
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2798": {
      "fn": "DAI.permit",
      "offset": [
        7520,
        7546
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 15,
      "value": "0x1"
    },
    "2800": {
      "fn": "DAI.permit",
      "offset": [
        7530,
        7536
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2801": {
      "fn": "DAI.permit",
      "offset": [
        7538,
        7539
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2802": {
      "fn": "DAI.permit",
      "offset": [
        7541,
        7542
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2803": {
      "fn": "DAI.permit",
      "offset": [
        7544,
        7545
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2804": {
      "fn": "DAI.permit",
      "offset": [
        7520,
        7546
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2806": {
      "fn": "DAI.permit",
      "offset": [
        7520,
        7546
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2807": {
      "fn": "DAI.permit",
      "offset": [
        7520,
        7546
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2809": {
      "fn": "DAI.permit",
      "offset": [
        7520,
        7546
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2810": {
      "fn": "DAI.permit",
      "offset": [
        7520,
        7546
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2811": {
      "fn": "DAI.permit",
      "offset": [
        7520,
        7546
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2813": {
      "fn": "DAI.permit",
      "offset": [
        7520,
        7546
      ],
      "op": "ADD",
      "path": "0"
    },
    "2814": {
      "fn": "DAI.permit",
      "offset": [
        7520,
        7546
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2816": {
      "fn": "DAI.permit",
      "offset": [
        7520,
        7546
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2817": {
      "fn": "DAI.permit",
      "offset": [
        7520,
        7546
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2819": {
      "fn": "DAI.permit",
      "offset": [
        7520,
        7546
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2820": {
      "fn": "DAI.permit",
      "offset": [
        7520,
        7546
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2821": {
      "fn": "DAI.permit",
      "offset": [
        7520,
        7546
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2822": {
      "fn": "DAI.permit",
      "offset": [
        7520,
        7546
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2823": {
      "fn": "DAI.permit",
      "offset": [
        7520,
        7546
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2824": {
      "fn": "DAI.permit",
      "offset": [
        7520,
        7546
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2826": {
      "fn": "DAI.permit",
      "offset": [
        7520,
        7546
      ],
      "op": "ADD",
      "path": "0"
    },
    "2827": {
      "fn": "DAI.permit",
      "offset": [
        7520,
        7546
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2828": {
      "fn": "DAI.permit",
      "offset": [
        7520,
        7546
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "2830": {
      "fn": "DAI.permit",
      "offset": [
        7520,
        7546
      ],
      "op": "AND",
      "path": "0"
    },
    "2831": {
      "fn": "DAI.permit",
      "offset": [
        7520,
        7546
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "2833": {
      "fn": "DAI.permit",
      "offset": [
        7520,
        7546
      ],
      "op": "AND",
      "path": "0"
    },
    "2834": {
      "fn": "DAI.permit",
      "offset": [
        7520,
        7546
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2835": {
      "fn": "DAI.permit",
      "offset": [
        7520,
        7546
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2836": {
      "fn": "DAI.permit",
      "offset": [
        7520,
        7546
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2838": {
      "fn": "DAI.permit",
      "offset": [
        7520,
        7546
      ],
      "op": "ADD",
      "path": "0"
    },
    "2839": {
      "fn": "DAI.permit",
      "offset": [
        7520,
        7546
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2840": {
      "fn": "DAI.permit",
      "offset": [
        7520,
        7546
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2841": {
      "fn": "DAI.permit",
      "offset": [
        7520,
        7546
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2842": {
      "fn": "DAI.permit",
      "offset": [
        7520,
        7546
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2844": {
      "fn": "DAI.permit",
      "offset": [
        7520,
        7546
      ],
      "op": "ADD",
      "path": "0"
    },
    "2845": {
      "fn": "DAI.permit",
      "offset": [
        7520,
        7546
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2846": {
      "fn": "DAI.permit",
      "offset": [
        7520,
        7546
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2847": {
      "fn": "DAI.permit",
      "offset": [
        7520,
        7546
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2848": {
      "fn": "DAI.permit",
      "offset": [
        7520,
        7546
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2850": {
      "fn": "DAI.permit",
      "offset": [
        7520,
        7546
      ],
      "op": "ADD",
      "path": "0"
    },
    "2851": {
      "fn": "DAI.permit",
      "offset": [
        7520,
        7546
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "2852": {
      "fn": "DAI.permit",
      "offset": [
        7520,
        7546
      ],
      "op": "POP",
      "path": "0"
    },
    "2853": {
      "fn": "DAI.permit",
      "offset": [
        7520,
        7546
      ],
      "op": "POP",
      "path": "0"
    },
    "2854": {
      "fn": "DAI.permit",
      "offset": [
        7520,
        7546
      ],
      "op": "POP",
      "path": "0"
    },
    "2855": {
      "fn": "DAI.permit",
      "offset": [
        7520,
        7546
      ],
      "op": "POP",
      "path": "0"
    },
    "2856": {
      "fn": "DAI.permit",
      "offset": [
        7520,
        7546
      ],
      "op": "POP",
      "path": "0"
    },
    "2857": {
      "fn": "DAI.permit",
      "offset": [
        7520,
        7546
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2859": {
      "fn": "DAI.permit",
      "offset": [
        7520,
        7546
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2861": {
      "fn": "DAI.permit",
      "offset": [
        7520,
        7546
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2862": {
      "fn": "DAI.permit",
      "offset": [
        7520,
        7546
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2864": {
      "fn": "DAI.permit",
      "offset": [
        7520,
        7546
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2865": {
      "fn": "DAI.permit",
      "offset": [
        7520,
        7546
      ],
      "op": "SUB",
      "path": "0"
    },
    "2866": {
      "fn": "DAI.permit",
      "offset": [
        7520,
        7546
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2867": {
      "fn": "DAI.permit",
      "offset": [
        7520,
        7546
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2868": {
      "fn": "DAI.permit",
      "offset": [
        7520,
        7546
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2869": {
      "fn": "DAI.permit",
      "offset": [
        7520,
        7546
      ],
      "op": "SUB",
      "path": "0"
    },
    "2870": {
      "fn": "DAI.permit",
      "offset": [
        7520,
        7546
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2871": {
      "fn": "DAI.permit",
      "offset": [
        7520,
        7546
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2872": {
      "fn": "DAI.permit",
      "offset": [
        7520,
        7546
      ],
      "op": "GAS",
      "path": "0"
    },
    "2873": {
      "fn": "DAI.permit",
      "offset": [
        7520,
        7546
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "2874": {
      "fn": "DAI.permit",
      "offset": [
        7520,
        7546
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2875": {
      "op": "DUP1"
    },
    "2876": {
      "op": "ISZERO"
    },
    "2877": {
      "op": "PUSH2",
      "value": "0xB4A"
    },
    "2880": {
      "op": "JUMPI"
    },
    "2881": {
      "op": "RETURNDATASIZE"
    },
    "2882": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2884": {
      "op": "DUP1"
    },
    "2885": {
      "op": "RETURNDATACOPY"
    },
    "2886": {
      "op": "RETURNDATASIZE"
    },
    "2887": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2889": {
      "op": "REVERT"
    },
    "2890": {
      "op": "JUMPDEST"
    },
    "2891": {
      "fn": "DAI.permit",
      "offset": [
        7520,
        7546
      ],
      "op": "POP",
      "path": "0"
    },
    "2892": {
      "fn": "DAI.permit",
      "offset": [
        7520,
        7546
      ],
      "op": "POP",
      "path": "0"
    },
    "2893": {
      "fn": "DAI.permit",
      "offset": [
        7520,
        7546
      ],
      "op": "POP",
      "path": "0"
    },
    "2894": {
      "fn": "DAI.permit",
      "offset": [
        7520,
        7546
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2896": {
      "fn": "DAI.permit",
      "offset": [
        7520,
        7546
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2898": {
      "fn": "DAI.permit",
      "offset": [
        7520,
        7546
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2899": {
      "fn": "DAI.permit",
      "offset": [
        7520,
        7546
      ],
      "op": "SUB",
      "path": "0"
    },
    "2900": {
      "fn": "DAI.permit",
      "offset": [
        7520,
        7546
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2901": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2903": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2905": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2907": {
      "op": "SHL"
    },
    "2908": {
      "op": "SUB"
    },
    "2909": {
      "fn": "DAI.permit",
      "offset": [
        7510,
        7546
      ],
      "op": "AND",
      "path": "0"
    },
    "2910": {
      "fn": "DAI.permit",
      "offset": [
        7510,
        7516
      ],
      "op": "DUP10",
      "path": "0"
    },
    "2911": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2913": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2915": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2917": {
      "op": "SHL"
    },
    "2918": {
      "op": "SUB"
    },
    "2919": {
      "fn": "DAI.permit",
      "offset": [
        7510,
        7546
      ],
      "op": "AND",
      "path": "0"
    },
    "2920": {
      "branch": 38,
      "fn": "DAI.permit",
      "offset": [
        7510,
        7546
      ],
      "op": "EQ",
      "path": "0"
    },
    "2921": {
      "fn": "DAI.permit",
      "offset": [
        7502,
        7569
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBAD"
    },
    "2924": {
      "branch": 38,
      "fn": "DAI.permit",
      "offset": [
        7502,
        7569
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2925": {
      "fn": "DAI.permit",
      "offset": [
        7502,
        7569
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2927": {
      "fn": "DAI.permit",
      "offset": [
        7502,
        7569
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2928": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2932": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2934": {
      "op": "SHL"
    },
    "2935": {
      "fn": "DAI.permit",
      "offset": [
        7502,
        7569
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2936": {
      "fn": "DAI.permit",
      "offset": [
        7502,
        7569
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2937": {
      "fn": "DAI.permit",
      "offset": [
        7502,
        7569
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2939": {
      "fn": "DAI.permit",
      "offset": [
        7502,
        7569
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2941": {
      "fn": "DAI.permit",
      "offset": [
        7502,
        7569
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2942": {
      "fn": "DAI.permit",
      "offset": [
        7502,
        7569
      ],
      "op": "ADD",
      "path": "0"
    },
    "2943": {
      "fn": "DAI.permit",
      "offset": [
        7502,
        7569
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2944": {
      "fn": "DAI.permit",
      "offset": [
        7502,
        7569
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x12"
    },
    "2946": {
      "fn": "DAI.permit",
      "offset": [
        7502,
        7569
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "2948": {
      "fn": "DAI.permit",
      "offset": [
        7502,
        7569
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2949": {
      "fn": "DAI.permit",
      "offset": [
        7502,
        7569
      ],
      "op": "ADD",
      "path": "0"
    },
    "2950": {
      "fn": "DAI.permit",
      "offset": [
        7502,
        7569
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2951": {
      "op": "PUSH18",
      "value": "0x11185A4BDA5B9D985B1A590B5C195C9B5A5D"
    },
    "2970": {
      "op": "PUSH1",
      "value": "0x72"
    },
    "2972": {
      "op": "SHL"
    },
    "2973": {
      "fn": "DAI.permit",
      "offset": [
        7502,
        7569
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x44"
    },
    "2975": {
      "fn": "DAI.permit",
      "offset": [
        7502,
        7569
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2976": {
      "fn": "DAI.permit",
      "offset": [
        7502,
        7569
      ],
      "op": "ADD",
      "path": "0"
    },
    "2977": {
      "fn": "DAI.permit",
      "offset": [
        7502,
        7569
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2978": {
      "fn": "DAI.permit",
      "offset": [
        7502,
        7569
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x64"
    },
    "2980": {
      "fn": "DAI.permit",
      "offset": [
        7502,
        7569
      ],
      "op": "ADD",
      "path": "0"
    },
    "2981": {
      "fn": "DAI.permit",
      "offset": [
        7502,
        7569
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2983": {
      "fn": "DAI.permit",
      "offset": [
        7502,
        7569
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2984": {
      "fn": "DAI.permit",
      "offset": [
        7502,
        7569
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2985": {
      "fn": "DAI.permit",
      "offset": [
        7502,
        7569
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2986": {
      "fn": "DAI.permit",
      "offset": [
        7502,
        7569
      ],
      "op": "SUB",
      "path": "0"
    },
    "2987": {
      "fn": "DAI.permit",
      "offset": [
        7502,
        7569
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2988": {
      "fn": "DAI.permit",
      "offset": [
        7502,
        7569
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2989": {
      "fn": "DAI.permit",
      "offset": [
        7502,
        7569
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2990": {
      "fn": "DAI.permit",
      "offset": [
        7587,
        7598
      ],
      "op": "DUP6",
      "path": "0",
      "statement": 16
    },
    "2991": {
      "fn": "DAI.permit",
      "offset": [
        7587,
        7598
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2992": {
      "branch": 39,
      "fn": "DAI.permit",
      "offset": [
        7587,
        7598
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2993": {
      "fn": "DAI.permit",
      "offset": [
        7587,
        7615
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBBA"
    },
    "2996": {
      "branch": 39,
      "fn": "DAI.permit",
      "offset": [
        7587,
        7615
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2997": {
      "fn": "DAI.permit",
      "offset": [
        7587,
        7615
      ],
      "op": "POP",
      "path": "0"
    },
    "2998": {
      "fn": "DAI.permit",
      "offset": [
        7609,
        7615
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2999": {
      "fn": "DAI.permit",
      "offset": [
        7602,
        7605
      ],
      "op": "TIMESTAMP",
      "path": "0"
    },
    "3000": {
      "fn": "DAI.permit",
      "offset": [
        7602,
        7615
      ],
      "op": "GT",
      "path": "0"
    },
    "3001": {
      "branch": 40,
      "fn": "DAI.permit",
      "offset": [
        7602,
        7615
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3002": {
      "fn": "DAI.permit",
      "offset": [
        7587,
        7615
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3003": {
      "fn": "DAI.permit",
      "offset": [
        7579,
        7638
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBFF"
    },
    "3006": {
      "branch": 40,
      "fn": "DAI.permit",
      "offset": [
        7579,
        7638
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3007": {
      "fn": "DAI.permit",
      "offset": [
        7579,
        7638
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3009": {
      "fn": "DAI.permit",
      "offset": [
        7579,
        7638
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3010": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3014": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3016": {
      "op": "SHL"
    },
    "3017": {
      "fn": "DAI.permit",
      "offset": [
        7579,
        7638
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3018": {
      "fn": "DAI.permit",
      "offset": [
        7579,
        7638
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3019": {
      "fn": "DAI.permit",
      "offset": [
        7579,
        7638
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3021": {
      "fn": "DAI.permit",
      "offset": [
        7579,
        7638
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3023": {
      "fn": "DAI.permit",
      "offset": [
        7579,
        7638
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3024": {
      "fn": "DAI.permit",
      "offset": [
        7579,
        7638
      ],
      "op": "ADD",
      "path": "0"
    },
    "3025": {
      "fn": "DAI.permit",
      "offset": [
        7579,
        7638
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3026": {
      "fn": "DAI.permit",
      "offset": [
        7579,
        7638
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x12"
    },
    "3028": {
      "fn": "DAI.permit",
      "offset": [
        7579,
        7638
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "3030": {
      "fn": "DAI.permit",
      "offset": [
        7579,
        7638
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3031": {
      "fn": "DAI.permit",
      "offset": [
        7579,
        7638
      ],
      "op": "ADD",
      "path": "0"
    },
    "3032": {
      "fn": "DAI.permit",
      "offset": [
        7579,
        7638
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3033": {
      "op": "PUSH18",
      "value": "0x11185A4BDC195C9B5A5D0B595E1C1A5C9959"
    },
    "3052": {
      "op": "PUSH1",
      "value": "0x72"
    },
    "3054": {
      "op": "SHL"
    },
    "3055": {
      "fn": "DAI.permit",
      "offset": [
        7579,
        7638
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x44"
    },
    "3057": {
      "fn": "DAI.permit",
      "offset": [
        7579,
        7638
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3058": {
      "fn": "DAI.permit",
      "offset": [
        7579,
        7638
      ],
      "op": "ADD",
      "path": "0"
    },
    "3059": {
      "fn": "DAI.permit",
      "offset": [
        7579,
        7638
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3060": {
      "fn": "DAI.permit",
      "offset": [
        7579,
        7638
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x64"
    },
    "3062": {
      "fn": "DAI.permit",
      "offset": [
        7579,
        7638
      ],
      "op": "ADD",
      "path": "0"
    },
    "3063": {
      "fn": "DAI.permit",
      "offset": [
        7579,
        7638
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3065": {
      "fn": "DAI.permit",
      "offset": [
        7579,
        7638
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3066": {
      "fn": "DAI.permit",
      "offset": [
        7579,
        7638
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3067": {
      "fn": "DAI.permit",
      "offset": [
        7579,
        7638
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3068": {
      "fn": "DAI.permit",
      "offset": [
        7579,
        7638
      ],
      "op": "SUB",
      "path": "0"
    },
    "3069": {
      "fn": "DAI.permit",
      "offset": [
        7579,
        7638
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3070": {
      "fn": "DAI.permit",
      "offset": [
        7579,
        7638
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3071": {
      "fn": "DAI.permit",
      "offset": [
        7579,
        7638
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3072": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3074": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3076": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3078": {
      "op": "SHL"
    },
    "3079": {
      "op": "SUB"
    },
    "3080": {
      "fn": "DAI.permit",
      "offset": [
        7665,
        7679
      ],
      "op": "DUP10",
      "path": "0",
      "statement": 17
    },
    "3081": {
      "fn": "DAI.permit",
      "offset": [
        7665,
        7679
      ],
      "op": "AND",
      "path": "0"
    },
    "3082": {
      "fn": "DAI.permit",
      "offset": [
        7665,
        7679
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3084": {
      "fn": "DAI.permit",
      "offset": [
        7665,
        7679
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3085": {
      "fn": "DAI.permit",
      "offset": [
        7665,
        7679
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3086": {
      "fn": "DAI.permit",
      "offset": [
        7665,
        7679
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3087": {
      "fn": "DAI.permit",
      "offset": [
        7665,
        7671
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3089": {
      "fn": "DAI.permit",
      "offset": [
        7665,
        7679
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3091": {
      "fn": "DAI.permit",
      "offset": [
        7665,
        7679
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3092": {
      "fn": "DAI.permit",
      "offset": [
        7665,
        7679
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3094": {
      "fn": "DAI.permit",
      "offset": [
        7665,
        7679
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3095": {
      "fn": "DAI.permit",
      "offset": [
        7665,
        7679
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3096": {
      "fn": "DAI.permit",
      "offset": [
        7665,
        7681
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3097": {
      "fn": "DAI.permit",
      "offset": [
        7665,
        7681
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3098": {
      "fn": "DAI.permit",
      "offset": [
        7665,
        7681
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "3100": {
      "fn": "DAI.permit",
      "offset": [
        7665,
        7681
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3101": {
      "fn": "DAI.permit",
      "offset": [
        7665,
        7681
      ],
      "op": "ADD",
      "path": "0"
    },
    "3102": {
      "fn": "DAI.permit",
      "offset": [
        7665,
        7681
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3103": {
      "fn": "DAI.permit",
      "offset": [
        7665,
        7681
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3104": {
      "fn": "DAI.permit",
      "offset": [
        7665,
        7681
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3105": {
      "fn": "DAI.permit",
      "offset": [
        7656,
        7681
      ],
      "op": "DUP8",
      "path": "0"
    },
    "3106": {
      "branch": 41,
      "fn": "DAI.permit",
      "offset": [
        7656,
        7681
      ],
      "op": "EQ",
      "path": "0"
    },
    "3107": {
      "fn": "DAI.permit",
      "offset": [
        7648,
        7703
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC66"
    },
    "3110": {
      "branch": 41,
      "fn": "DAI.permit",
      "offset": [
        7648,
        7703
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3111": {
      "fn": "DAI.permit",
      "offset": [
        7648,
        7703
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3113": {
      "fn": "DAI.permit",
      "offset": [
        7648,
        7703
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3114": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3118": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3120": {
      "op": "SHL"
    },
    "3121": {
      "fn": "DAI.permit",
      "offset": [
        7648,
        7703
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3122": {
      "fn": "DAI.permit",
      "offset": [
        7648,
        7703
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3123": {
      "fn": "DAI.permit",
      "offset": [
        7648,
        7703
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3125": {
      "fn": "DAI.permit",
      "offset": [
        7648,
        7703
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3127": {
      "fn": "DAI.permit",
      "offset": [
        7648,
        7703
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3128": {
      "fn": "DAI.permit",
      "offset": [
        7648,
        7703
      ],
      "op": "ADD",
      "path": "0"
    },
    "3129": {
      "fn": "DAI.permit",
      "offset": [
        7648,
        7703
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3130": {
      "fn": "DAI.permit",
      "offset": [
        7648,
        7703
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x11"
    },
    "3132": {
      "fn": "DAI.permit",
      "offset": [
        7648,
        7703
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "3134": {
      "fn": "DAI.permit",
      "offset": [
        7648,
        7703
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3135": {
      "fn": "DAI.permit",
      "offset": [
        7648,
        7703
      ],
      "op": "ADD",
      "path": "0"
    },
    "3136": {
      "fn": "DAI.permit",
      "offset": [
        7648,
        7703
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3137": {
      "op": "PUSH17",
      "value": "0x4461692F696E76616C69642D6E6F6E6365"
    },
    "3155": {
      "op": "PUSH1",
      "value": "0x78"
    },
    "3157": {
      "op": "SHL"
    },
    "3158": {
      "fn": "DAI.permit",
      "offset": [
        7648,
        7703
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x44"
    },
    "3160": {
      "fn": "DAI.permit",
      "offset": [
        7648,
        7703
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3161": {
      "fn": "DAI.permit",
      "offset": [
        7648,
        7703
      ],
      "op": "ADD",
      "path": "0"
    },
    "3162": {
      "fn": "DAI.permit",
      "offset": [
        7648,
        7703
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3163": {
      "fn": "DAI.permit",
      "offset": [
        7648,
        7703
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x64"
    },
    "3165": {
      "fn": "DAI.permit",
      "offset": [
        7648,
        7703
      ],
      "op": "ADD",
      "path": "0"
    },
    "3166": {
      "fn": "DAI.permit",
      "offset": [
        7648,
        7703
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3168": {
      "fn": "DAI.permit",
      "offset": [
        7648,
        7703
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3169": {
      "fn": "DAI.permit",
      "offset": [
        7648,
        7703
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3170": {
      "fn": "DAI.permit",
      "offset": [
        7648,
        7703
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3171": {
      "fn": "DAI.permit",
      "offset": [
        7648,
        7703
      ],
      "op": "SUB",
      "path": "0"
    },
    "3172": {
      "fn": "DAI.permit",
      "offset": [
        7648,
        7703
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3173": {
      "fn": "DAI.permit",
      "offset": [
        7648,
        7703
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3174": {
      "fn": "DAI.permit",
      "offset": [
        7648,
        7703
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3175": {
      "fn": "DAI.permit",
      "offset": [
        7713,
        7721
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3177": {
      "branch": 42,
      "fn": "DAI.permit",
      "offset": [
        7724,
        7731
      ],
      "op": "DUP6",
      "path": "0"
    },
    "3178": {
      "fn": "DAI.permit",
      "offset": [
        7724,
        7746
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC74"
    },
    "3181": {
      "branch": 42,
      "fn": "DAI.permit",
      "offset": [
        7724,
        7746
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3182": {
      "fn": "DAI.permit",
      "offset": [
        7745,
        7746
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3184": {
      "fn": "DAI.permit",
      "offset": [
        7724,
        7746
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC78"
    },
    "3187": {
      "fn": "DAI.permit",
      "offset": [
        7724,
        7746
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3188": {
      "fn": "DAI.permit",
      "offset": [
        7724,
        7746
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3189": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3191": {
      "op": "NOT"
    },
    "3192": {
      "fn": "DAI.permit",
      "offset": [
        7724,
        7746
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3193": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3195": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3197": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3199": {
      "op": "SHL"
    },
    "3200": {
      "op": "SUB"
    },
    "3201": {
      "fn": "DAI.permit",
      "offset": [
        7756,
        7773
      ],
      "op": "DUP12",
      "path": "0",
      "statement": 18
    },
    "3202": {
      "fn": "DAI.permit",
      "offset": [
        7756,
        7773
      ],
      "op": "AND",
      "path": "0"
    },
    "3203": {
      "fn": "DAI.permit",
      "offset": [
        7756,
        7773
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3205": {
      "fn": "DAI.permit",
      "offset": [
        7756,
        7773
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3206": {
      "fn": "DAI.permit",
      "offset": [
        7756,
        7773
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3207": {
      "fn": "DAI.permit",
      "offset": [
        7756,
        7773
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3208": {
      "fn": "DAI.permit",
      "offset": [
        7756,
        7765
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "3210": {
      "fn": "DAI.permit",
      "offset": [
        7756,
        7773
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3212": {
      "fn": "DAI.permit",
      "offset": [
        7756,
        7773
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3213": {
      "fn": "DAI.permit",
      "offset": [
        7713,
        7746
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3214": {
      "fn": "DAI.permit",
      "offset": [
        7713,
        7746
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3215": {
      "op": "POP"
    },
    "3216": {
      "fn": "DAI.permit",
      "offset": [
        7713,
        7746
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3217": {
      "fn": "DAI.permit",
      "offset": [
        7713,
        7746
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3218": {
      "fn": "DAI.permit",
      "offset": [
        7756,
        7773
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3220": {
      "fn": "DAI.permit",
      "offset": [
        7756,
        7773
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3221": {
      "fn": "DAI.permit",
      "offset": [
        7756,
        7773
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3222": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3224": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3226": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3228": {
      "op": "SHL"
    },
    "3229": {
      "op": "SUB"
    },
    "3230": {
      "fn": "DAI.permit",
      "offset": [
        7756,
        7782
      ],
      "op": "DUP12",
      "path": "0"
    },
    "3231": {
      "fn": "DAI.permit",
      "offset": [
        7756,
        7782
      ],
      "op": "AND",
      "path": "0"
    },
    "3232": {
      "fn": "DAI.permit",
      "offset": [
        7756,
        7782
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3234": {
      "fn": "DAI.permit",
      "offset": [
        7756,
        7782
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3235": {
      "fn": "DAI.permit",
      "offset": [
        7756,
        7782
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3236": {
      "fn": "DAI.permit",
      "offset": [
        7756,
        7782
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3237": {
      "fn": "DAI.permit",
      "offset": [
        7756,
        7782
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3239": {
      "fn": "DAI.permit",
      "offset": [
        7756,
        7782
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3240": {
      "fn": "DAI.permit",
      "offset": [
        7756,
        7782
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3241": {
      "fn": "DAI.permit",
      "offset": [
        7756,
        7782
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3242": {
      "fn": "DAI.permit",
      "offset": [
        7756,
        7782
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3243": {
      "fn": "DAI.permit",
      "offset": [
        7756,
        7782
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3245": {
      "fn": "DAI.permit",
      "offset": [
        7756,
        7782
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3246": {
      "fn": "DAI.permit",
      "offset": [
        7756,
        7782
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3247": {
      "fn": "DAI.permit",
      "offset": [
        7756,
        7788
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3248": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3250": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3252": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3254": {
      "op": "SHL"
    },
    "3255": {
      "op": "SUB"
    },
    "3256": {
      "fn": "DAI.permit",
      "offset": [
        7803,
        7833
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 19
    },
    "3257": {
      "fn": "DAI.permit",
      "offset": [
        7803,
        7833
      ],
      "op": "DUP11",
      "path": "0"
    },
    "3258": {
      "fn": "DAI.permit",
      "offset": [
        7803,
        7833
      ],
      "op": "AND",
      "path": "0"
    },
    "3259": {
      "fn": "DAI.permit",
      "offset": [
        7803,
        7833
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3260": {
      "fn": "DAI.permit",
      "offset": [
        7803,
        7833
      ],
      "op": "DUP12",
      "path": "0"
    },
    "3261": {
      "fn": "DAI.permit",
      "offset": [
        7803,
        7833
      ],
      "op": "AND",
      "path": "0"
    },
    "3262": {
      "fn": "DAI.permit",
      "offset": [
        7803,
        7833
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "3295": {
      "fn": "DAI.permit",
      "offset": [
        7829,
        7832
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3296": {
      "fn": "DAI.permit",
      "offset": [
        7803,
        7833
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3298": {
      "fn": "DAI.permit",
      "offset": [
        7803,
        7833
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3299": {
      "fn": "DAI.permit",
      "offset": [
        7803,
        7833
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3300": {
      "fn": "DAI.permit",
      "offset": [
        7803,
        7833
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3301": {
      "fn": "DAI.permit",
      "offset": [
        7803,
        7833
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3302": {
      "fn": "DAI.permit",
      "offset": [
        7803,
        7833
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3304": {
      "fn": "DAI.permit",
      "offset": [
        7803,
        7833
      ],
      "op": "ADD",
      "path": "0"
    },
    "3305": {
      "fn": "DAI.permit",
      "offset": [
        7803,
        7833
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3307": {
      "fn": "DAI.permit",
      "offset": [
        7803,
        7833
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3308": {
      "fn": "DAI.permit",
      "offset": [
        7803,
        7833
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3309": {
      "fn": "DAI.permit",
      "offset": [
        7803,
        7833
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3310": {
      "fn": "DAI.permit",
      "offset": [
        7803,
        7833
      ],
      "op": "SUB",
      "path": "0"
    },
    "3311": {
      "fn": "DAI.permit",
      "offset": [
        7803,
        7833
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3312": {
      "fn": "DAI.permit",
      "offset": [
        7803,
        7833
      ],
      "op": "LOG3",
      "path": "0"
    },
    "3313": {
      "fn": "DAI.permit",
      "offset": [
        6849,
        7840
      ],
      "op": "POP",
      "path": "0"
    },
    "3314": {
      "fn": "DAI.permit",
      "offset": [
        6849,
        7840
      ],
      "op": "POP",
      "path": "0"
    },
    "3315": {
      "fn": "DAI.permit",
      "offset": [
        6849,
        7840
      ],
      "op": "POP",
      "path": "0"
    },
    "3316": {
      "fn": "DAI.permit",
      "offset": [
        6849,
        7840
      ],
      "op": "POP",
      "path": "0"
    },
    "3317": {
      "fn": "DAI.permit",
      "offset": [
        6849,
        7840
      ],
      "op": "POP",
      "path": "0"
    },
    "3318": {
      "fn": "DAI.permit",
      "offset": [
        6849,
        7840
      ],
      "op": "POP",
      "path": "0"
    },
    "3319": {
      "fn": "DAI.permit",
      "offset": [
        6849,
        7840
      ],
      "op": "POP",
      "path": "0"
    },
    "3320": {
      "fn": "DAI.permit",
      "offset": [
        6849,
        7840
      ],
      "op": "POP",
      "path": "0"
    },
    "3321": {
      "fn": "DAI.permit",
      "offset": [
        6849,
        7840
      ],
      "op": "POP",
      "path": "0"
    },
    "3322": {
      "fn": "DAI.permit",
      "offset": [
        6849,
        7840
      ],
      "op": "POP",
      "path": "0"
    },
    "3323": {
      "fn": "DAI.permit",
      "jump": "o",
      "offset": [
        6849,
        7840
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3324": {
      "offset": [
        3384,
        3424
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3325": {
      "fn": "DAI.permit",
      "offset": [
        3384,
        3424
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3327": {
      "fn": "DAI.permit",
      "offset": [
        3384,
        3424
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3328": {
      "fn": "DAI.permit",
      "offset": [
        3384,
        3424
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3330": {
      "fn": "DAI.permit",
      "offset": [
        3384,
        3424
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3331": {
      "fn": "DAI.permit",
      "offset": [
        3384,
        3424
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3332": {
      "fn": "DAI.permit",
      "offset": [
        3384,
        3424
      ],
      "op": "ADD",
      "path": "0"
    },
    "3333": {
      "fn": "DAI.permit",
      "offset": [
        3384,
        3424
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3334": {
      "fn": "DAI.permit",
      "offset": [
        3384,
        3424
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3335": {
      "fn": "DAI.permit",
      "offset": [
        3384,
        3424
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "3337": {
      "fn": "DAI.permit",
      "offset": [
        3384,
        3424
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3338": {
      "fn": "DAI.permit",
      "offset": [
        3384,
        3424
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3339": {
      "op": "PUSH3",
      "value": "0x444149"
    },
    "3343": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "3345": {
      "op": "SHL"
    },
    "3346": {
      "offset": [
        3384,
        3424
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3348": {
      "fn": "DAI.permit",
      "offset": [
        3384,
        3424
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3349": {
      "fn": "DAI.permit",
      "offset": [
        3384,
        3424
      ],
      "op": "ADD",
      "path": "0"
    },
    "3350": {
      "fn": "DAI.permit",
      "offset": [
        3384,
        3424
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3351": {
      "fn": "DAI.permit",
      "offset": [
        3384,
        3424
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3352": {
      "fn": "DAI.permit",
      "jump": "o",
      "offset": [
        3384,
        3424
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3353": {
      "fn": "DAI.deny",
      "offset": [
        3130,
        3195
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3354": {
      "offset": [
        3238,
        3248
      ],
      "op": "CALLER",
      "path": "0"
    },
    "3355": {
      "offset": [
        3232,
        3237
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3357": {
      "offset": [
        3232,
        3249
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3358": {
      "fn": "DAI.deny",
      "offset": [
        3232,
        3249
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3359": {
      "fn": "DAI.deny",
      "offset": [
        3232,
        3249
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3360": {
      "fn": "DAI.deny",
      "offset": [
        3232,
        3249
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3362": {
      "fn": "DAI.deny",
      "offset": [
        3232,
        3249
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3363": {
      "fn": "DAI.deny",
      "offset": [
        3232,
        3249
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3364": {
      "fn": "DAI.deny",
      "offset": [
        3232,
        3249
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3365": {
      "fn": "DAI.deny",
      "offset": [
        3232,
        3249
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3367": {
      "fn": "DAI.deny",
      "offset": [
        3232,
        3249
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3368": {
      "fn": "DAI.deny",
      "offset": [
        3232,
        3249
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3369": {
      "fn": "DAI.deny",
      "offset": [
        3232,
        3249
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3370": {
      "offset": [
        3253,
        3254
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "3372": {
      "offset": [
        3232,
        3254
      ],
      "op": "EQ",
      "path": "0"
    },
    "3373": {
      "offset": [
        3224,
        3277
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD71"
    },
    "3376": {
      "offset": [
        3224,
        3277
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3377": {
      "fn": "DAI.deny",
      "offset": [
        3224,
        3277
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3379": {
      "fn": "DAI.deny",
      "offset": [
        3224,
        3277
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3380": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3384": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3386": {
      "op": "SHL"
    },
    "3387": {
      "offset": [
        3224,
        3277
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3388": {
      "fn": "DAI.deny",
      "offset": [
        3224,
        3277
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3389": {
      "fn": "DAI.deny",
      "offset": [
        3224,
        3277
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3391": {
      "fn": "DAI.deny",
      "offset": [
        3224,
        3277
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3393": {
      "fn": "DAI.deny",
      "offset": [
        3224,
        3277
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3394": {
      "fn": "DAI.deny",
      "offset": [
        3224,
        3277
      ],
      "op": "ADD",
      "path": "0"
    },
    "3395": {
      "fn": "DAI.deny",
      "offset": [
        3224,
        3277
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3396": {
      "fn": "DAI.deny",
      "offset": [
        3224,
        3277
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x12"
    },
    "3398": {
      "fn": "DAI.deny",
      "offset": [
        3224,
        3277
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "3400": {
      "fn": "DAI.deny",
      "offset": [
        3224,
        3277
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3401": {
      "fn": "DAI.deny",
      "offset": [
        3224,
        3277
      ],
      "op": "ADD",
      "path": "0"
    },
    "3402": {
      "fn": "DAI.deny",
      "offset": [
        3224,
        3277
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3403": {
      "op": "PUSH18",
      "value": "0x11185A4BDB9BDD0B585D5D1A1BDC9A5E9959"
    },
    "3422": {
      "op": "PUSH1",
      "value": "0x72"
    },
    "3424": {
      "op": "SHL"
    },
    "3425": {
      "offset": [
        3224,
        3277
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x44"
    },
    "3427": {
      "fn": "DAI.deny",
      "offset": [
        3224,
        3277
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3428": {
      "fn": "DAI.deny",
      "offset": [
        3224,
        3277
      ],
      "op": "ADD",
      "path": "0"
    },
    "3429": {
      "fn": "DAI.deny",
      "offset": [
        3224,
        3277
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3430": {
      "fn": "DAI.deny",
      "offset": [
        3224,
        3277
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x64"
    },
    "3432": {
      "fn": "DAI.deny",
      "offset": [
        3224,
        3277
      ],
      "op": "ADD",
      "path": "0"
    },
    "3433": {
      "fn": "DAI.deny",
      "offset": [
        3224,
        3277
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3435": {
      "fn": "DAI.deny",
      "offset": [
        3224,
        3277
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3436": {
      "fn": "DAI.deny",
      "offset": [
        3224,
        3277
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3437": {
      "fn": "DAI.deny",
      "offset": [
        3224,
        3277
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3438": {
      "fn": "DAI.deny",
      "offset": [
        3224,
        3277
      ],
      "op": "SUB",
      "path": "0"
    },
    "3439": {
      "fn": "DAI.deny",
      "offset": [
        3224,
        3277
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3440": {
      "fn": "DAI.deny",
      "offset": [
        3224,
        3277
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3441": {
      "fn": "DAI.deny",
      "offset": [
        3224,
        3277
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3442": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3444": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3446": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3448": {
      "op": "SHL"
    },
    "3449": {
      "op": "SUB"
    },
    "3450": {
      "fn": "DAI.deny",
      "offset": [
        3178,
        3188
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 20
    },
    "3451": {
      "fn": "DAI.deny",
      "offset": [
        3178,
        3188
      ],
      "op": "AND",
      "path": "0"
    },
    "3452": {
      "fn": "DAI.deny",
      "offset": [
        3191,
        3192
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3454": {
      "fn": "DAI.deny",
      "offset": [
        3178,
        3188
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3455": {
      "fn": "DAI.deny",
      "offset": [
        3178,
        3188
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3456": {
      "fn": "DAI.deny",
      "offset": [
        3178,
        3188
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3457": {
      "fn": "DAI.deny",
      "offset": [
        3178,
        3188
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3459": {
      "fn": "DAI.deny",
      "offset": [
        3178,
        3188
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3460": {
      "fn": "DAI.deny",
      "offset": [
        3178,
        3188
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3461": {
      "fn": "DAI.deny",
      "offset": [
        3178,
        3188
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3462": {
      "fn": "DAI.deny",
      "offset": [
        3178,
        3188
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3464": {
      "fn": "DAI.deny",
      "offset": [
        3191,
        3192
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3465": {
      "fn": "DAI.deny",
      "offset": [
        3178,
        3188
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3466": {
      "fn": "DAI.deny",
      "offset": [
        3178,
        3192
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3467": {
      "offset": [
        1375,
        1380
      ],
      "op": "MSIZE",
      "path": "0"
    },
    "3468": {
      "offset": [
        1470,
        1473
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x120"
    },
    "3471": {
      "offset": [
        1464,
        1468
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3472": {
      "offset": [
        1460,
        1474
      ],
      "op": "ADD",
      "path": "0"
    },
    "3473": {
      "offset": [
        1454,
        1458
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3475": {
      "offset": [
        1447,
        1475
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3476": {
      "offset": [
        1544,
        1548
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3478": {
      "offset": [
        1538,
        1542
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3479": {
      "offset": [
        1531,
        1549
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3480": {
      "offset": [
        1635,
        1638
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "3482": {
      "offset": [
        1628,
        1632
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3484": {
      "offset": [
        1622,
        1626
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3485": {
      "offset": [
        1618,
        1633
      ],
      "op": "ADD",
      "path": "0"
    },
    "3486": {
      "offset": [
        1611,
        1639
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3487": {
      "offset": [
        1721,
        1724
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "3489": {
      "offset": [
        1718,
        1719
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3491": {
      "offset": [
        1711,
        1715
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3493": {
      "offset": [
        1705,
        1709
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3494": {
      "offset": [
        1701,
        1716
      ],
      "op": "ADD",
      "path": "0"
    },
    "3495": {
      "offset": [
        1688,
        1725
      ],
      "op": "CALLDATACOPY",
      "path": "0"
    },
    "3496": {
      "offset": [
        2038,
        2040
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "3498": {
      "offset": [
        2025,
        2041
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "3499": {
      "offset": [
        1976,
        1977
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3501": {
      "offset": [
        1963,
        1978
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "3502": {
      "offset": [
        1895,
        1901
      ],
      "op": "CALLER",
      "path": "0"
    },
    "3503": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3505": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3507": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3509": {
      "op": "SHL"
    },
    "3510": {
      "op": "SUB"
    },
    "3511": {
      "op": "NOT"
    },
    "3512": {
      "offset": [
        1861,
        1862
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3514": {
      "offset": [
        1848,
        1863
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "3515": {
      "offset": [
        1830,
        1865
      ],
      "op": "AND",
      "path": "0"
    },
    "3516": {
      "offset": [
        1770,
        1773
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x120"
    },
    "3519": {
      "offset": [
        1764,
        1768
      ],
      "op": "DUP6",
      "path": "0"
    },
    "3520": {
      "offset": [
        1759,
        2087
      ],
      "op": "LOG4",
      "path": "0"
    },
    "3521": {
      "offset": [
        1201,
        2097
      ],
      "op": "POP",
      "path": "0"
    },
    "3522": {
      "fn": "DAI.deny",
      "offset": [
        1201,
        2097
      ],
      "op": "POP",
      "path": "0"
    },
    "3523": {
      "fn": "DAI.deny",
      "jump": "o",
      "offset": [
        1201,
        2097
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3524": {
      "fn": "DAI.burn",
      "offset": [
        5774,
        6289
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3525": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3527": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3529": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3531": {
      "op": "SHL"
    },
    "3532": {
      "op": "SUB"
    },
    "3533": {
      "fn": "DAI.burn",
      "offset": [
        5838,
        5852
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 21
    },
    "3534": {
      "fn": "DAI.burn",
      "offset": [
        5838,
        5852
      ],
      "op": "AND",
      "path": "0"
    },
    "3535": {
      "fn": "DAI.burn",
      "offset": [
        5838,
        5852
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3537": {
      "fn": "DAI.burn",
      "offset": [
        5838,
        5852
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3538": {
      "fn": "DAI.burn",
      "offset": [
        5838,
        5852
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3539": {
      "fn": "DAI.burn",
      "offset": [
        5838,
        5852
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3540": {
      "fn": "DAI.burn",
      "offset": [
        5838,
        5847
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "3542": {
      "fn": "DAI.burn",
      "offset": [
        5838,
        5852
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3544": {
      "fn": "DAI.burn",
      "offset": [
        5838,
        5852
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3545": {
      "fn": "DAI.burn",
      "offset": [
        5856,
        5859
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3546": {
      "fn": "DAI.burn",
      "offset": [
        5856,
        5859
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3547": {
      "fn": "DAI.burn",
      "offset": [
        5838,
        5852
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3549": {
      "fn": "DAI.burn",
      "offset": [
        5838,
        5852
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3550": {
      "fn": "DAI.burn",
      "offset": [
        5838,
        5852
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3551": {
      "fn": "DAI.burn",
      "offset": [
        5838,
        5852
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3552": {
      "fn": "DAI.burn",
      "offset": [
        5838,
        5859
      ],
      "op": "LT",
      "path": "0"
    },
    "3553": {
      "branch": 43,
      "fn": "DAI.burn",
      "offset": [
        5838,
        5859
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3554": {
      "fn": "DAI.burn",
      "offset": [
        5830,
        5888
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE2C"
    },
    "3557": {
      "branch": 43,
      "fn": "DAI.burn",
      "offset": [
        5830,
        5888
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3558": {
      "fn": "DAI.burn",
      "offset": [
        5830,
        5888
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3560": {
      "fn": "DAI.burn",
      "offset": [
        5830,
        5888
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3561": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3565": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3567": {
      "op": "SHL"
    },
    "3568": {
      "fn": "DAI.burn",
      "offset": [
        5830,
        5888
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3569": {
      "fn": "DAI.burn",
      "offset": [
        5830,
        5888
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3570": {
      "fn": "DAI.burn",
      "offset": [
        5830,
        5888
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3572": {
      "fn": "DAI.burn",
      "offset": [
        5830,
        5888
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3574": {
      "fn": "DAI.burn",
      "offset": [
        5830,
        5888
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3575": {
      "fn": "DAI.burn",
      "offset": [
        5830,
        5888
      ],
      "op": "ADD",
      "path": "0"
    },
    "3576": {
      "fn": "DAI.burn",
      "offset": [
        5830,
        5888
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3577": {
      "fn": "DAI.burn",
      "offset": [
        5830,
        5888
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x18"
    },
    "3579": {
      "fn": "DAI.burn",
      "offset": [
        5830,
        5888
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "3581": {
      "fn": "DAI.burn",
      "offset": [
        5830,
        5888
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3582": {
      "fn": "DAI.burn",
      "offset": [
        5830,
        5888
      ],
      "op": "ADD",
      "path": "0"
    },
    "3583": {
      "fn": "DAI.burn",
      "offset": [
        5830,
        5888
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3584": {
      "op": "PUSH24",
      "value": "0x4461692F696E73756666696369656E742D62616C616E6365"
    },
    "3609": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3611": {
      "op": "SHL"
    },
    "3612": {
      "fn": "DAI.burn",
      "offset": [
        5830,
        5888
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x44"
    },
    "3614": {
      "fn": "DAI.burn",
      "offset": [
        5830,
        5888
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3615": {
      "fn": "DAI.burn",
      "offset": [
        5830,
        5888
      ],
      "op": "ADD",
      "path": "0"
    },
    "3616": {
      "fn": "DAI.burn",
      "offset": [
        5830,
        5888
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3617": {
      "fn": "DAI.burn",
      "offset": [
        5830,
        5888
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x64"
    },
    "3619": {
      "fn": "DAI.burn",
      "offset": [
        5830,
        5888
      ],
      "op": "ADD",
      "path": "0"
    },
    "3620": {
      "fn": "DAI.burn",
      "offset": [
        5830,
        5888
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3622": {
      "fn": "DAI.burn",
      "offset": [
        5830,
        5888
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3623": {
      "fn": "DAI.burn",
      "offset": [
        5830,
        5888
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3624": {
      "fn": "DAI.burn",
      "offset": [
        5830,
        5888
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3625": {
      "fn": "DAI.burn",
      "offset": [
        5830,
        5888
      ],
      "op": "SUB",
      "path": "0"
    },
    "3626": {
      "fn": "DAI.burn",
      "offset": [
        5830,
        5888
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3627": {
      "fn": "DAI.burn",
      "offset": [
        5830,
        5888
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3628": {
      "fn": "DAI.burn",
      "offset": [
        5830,
        5888
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3629": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3631": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3633": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3635": {
      "op": "SHL"
    },
    "3636": {
      "op": "SUB"
    },
    "3637": {
      "fn": "DAI.burn",
      "offset": [
        5902,
        5919
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3638": {
      "fn": "DAI.burn",
      "offset": [
        5902,
        5919
      ],
      "op": "AND",
      "path": "0"
    },
    "3639": {
      "fn": "DAI.burn",
      "offset": [
        5909,
        5919
      ],
      "op": "CALLER",
      "path": "0"
    },
    "3640": {
      "fn": "DAI.burn",
      "offset": [
        5902,
        5919
      ],
      "op": "EQ",
      "path": "0"
    },
    "3641": {
      "fn": "DAI.burn",
      "offset": [
        5902,
        5919
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3642": {
      "fn": "DAI.burn",
      "offset": [
        5902,
        5919
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3643": {
      "branch": 44,
      "fn": "DAI.burn",
      "offset": [
        5902,
        5919
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3644": {
      "fn": "DAI.burn",
      "offset": [
        5902,
        5961
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE70"
    },
    "3647": {
      "branch": 44,
      "fn": "DAI.burn",
      "offset": [
        5902,
        5961
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3648": {
      "op": "POP"
    },
    "3649": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3651": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3653": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3655": {
      "op": "SHL"
    },
    "3656": {
      "op": "SUB"
    },
    "3657": {
      "fn": "DAI.burn",
      "offset": [
        5923,
        5937
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3658": {
      "fn": "DAI.burn",
      "offset": [
        5923,
        5937
      ],
      "op": "AND",
      "path": "0"
    },
    "3659": {
      "fn": "DAI.burn",
      "offset": [
        5923,
        5937
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3661": {
      "fn": "DAI.burn",
      "offset": [
        5923,
        5937
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3662": {
      "fn": "DAI.burn",
      "offset": [
        5923,
        5937
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3663": {
      "fn": "DAI.burn",
      "offset": [
        5923,
        5937
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3664": {
      "fn": "DAI.burn",
      "offset": [
        5923,
        5932
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "3666": {
      "fn": "DAI.burn",
      "offset": [
        5923,
        5937
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3668": {
      "fn": "DAI.burn",
      "offset": [
        5923,
        5937
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3669": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3671": {
      "op": "NOT"
    },
    "3672": {
      "fn": "DAI.burn",
      "offset": [
        5958,
        5960
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3673": {
      "fn": "DAI.burn",
      "offset": [
        5923,
        5937
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3675": {
      "fn": "DAI.burn",
      "offset": [
        5923,
        5937
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3676": {
      "fn": "DAI.burn",
      "offset": [
        5923,
        5937
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3677": {
      "fn": "DAI.burn",
      "offset": [
        5938,
        5948
      ],
      "op": "CALLER",
      "path": "0"
    },
    "3678": {
      "fn": "DAI.burn",
      "offset": [
        5923,
        5949
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3680": {
      "fn": "DAI.burn",
      "offset": [
        5923,
        5949
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3681": {
      "fn": "DAI.burn",
      "offset": [
        5923,
        5949
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3682": {
      "fn": "DAI.burn",
      "offset": [
        5923,
        5949
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3683": {
      "fn": "DAI.burn",
      "offset": [
        5923,
        5949
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3685": {
      "fn": "DAI.burn",
      "offset": [
        5923,
        5949
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3686": {
      "fn": "DAI.burn",
      "offset": [
        5923,
        5949
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3687": {
      "fn": "DAI.burn",
      "offset": [
        5923,
        5949
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3688": {
      "fn": "DAI.burn",
      "offset": [
        5923,
        5949
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3689": {
      "fn": "DAI.burn",
      "offset": [
        5923,
        5949
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3691": {
      "fn": "DAI.burn",
      "offset": [
        5923,
        5949
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3692": {
      "fn": "DAI.burn",
      "offset": [
        5923,
        5949
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3693": {
      "fn": "DAI.burn",
      "offset": [
        5923,
        5949
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3694": {
      "fn": "DAI.burn",
      "offset": [
        5923,
        5961
      ],
      "op": "EQ",
      "path": "0"
    },
    "3695": {
      "branch": 45,
      "fn": "DAI.burn",
      "offset": [
        5923,
        5961
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3696": {
      "fn": "DAI.burn",
      "offset": [
        5902,
        5961
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3697": {
      "fn": "DAI.burn",
      "offset": [
        5898,
        6139
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3698": {
      "fn": "DAI.burn",
      "offset": [
        5898,
        6139
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF4F"
    },
    "3701": {
      "branch": 45,
      "fn": "DAI.burn",
      "offset": [
        5898,
        6139
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3702": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3704": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3706": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3708": {
      "op": "SHL"
    },
    "3709": {
      "op": "SUB"
    },
    "3710": {
      "fn": "DAI.burn",
      "offset": [
        5985,
        5999
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 22
    },
    "3711": {
      "fn": "DAI.burn",
      "offset": [
        5985,
        5999
      ],
      "op": "AND",
      "path": "0"
    },
    "3712": {
      "fn": "DAI.burn",
      "offset": [
        5985,
        5999
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3714": {
      "fn": "DAI.burn",
      "offset": [
        5985,
        5999
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3715": {
      "fn": "DAI.burn",
      "offset": [
        5985,
        5999
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3716": {
      "fn": "DAI.burn",
      "offset": [
        5985,
        5999
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3717": {
      "fn": "DAI.burn",
      "offset": [
        5985,
        5994
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "3719": {
      "fn": "DAI.burn",
      "offset": [
        5985,
        5999
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3721": {
      "fn": "DAI.burn",
      "offset": [
        5985,
        5999
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3722": {
      "fn": "DAI.burn",
      "offset": [
        6015,
        6018
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3723": {
      "fn": "DAI.burn",
      "offset": [
        6015,
        6018
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3724": {
      "fn": "DAI.burn",
      "offset": [
        5985,
        5999
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3726": {
      "fn": "DAI.burn",
      "offset": [
        5985,
        5999
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3727": {
      "fn": "DAI.burn",
      "offset": [
        5985,
        5999
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3728": {
      "fn": "DAI.burn",
      "offset": [
        6000,
        6010
      ],
      "op": "CALLER",
      "path": "0"
    },
    "3729": {
      "fn": "DAI.burn",
      "offset": [
        5985,
        6011
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3731": {
      "fn": "DAI.burn",
      "offset": [
        5985,
        6011
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3732": {
      "fn": "DAI.burn",
      "offset": [
        5985,
        6011
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3733": {
      "fn": "DAI.burn",
      "offset": [
        5985,
        6011
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3734": {
      "fn": "DAI.burn",
      "offset": [
        5985,
        6011
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3736": {
      "fn": "DAI.burn",
      "offset": [
        5985,
        6011
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3737": {
      "fn": "DAI.burn",
      "offset": [
        5985,
        6011
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3738": {
      "fn": "DAI.burn",
      "offset": [
        5985,
        6011
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3739": {
      "fn": "DAI.burn",
      "offset": [
        5985,
        6011
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3740": {
      "fn": "DAI.burn",
      "offset": [
        5985,
        6011
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3742": {
      "fn": "DAI.burn",
      "offset": [
        5985,
        6011
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3743": {
      "fn": "DAI.burn",
      "offset": [
        5985,
        6011
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3744": {
      "fn": "DAI.burn",
      "offset": [
        5985,
        6011
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3745": {
      "fn": "DAI.burn",
      "offset": [
        5985,
        6018
      ],
      "op": "LT",
      "path": "0"
    },
    "3746": {
      "branch": 46,
      "fn": "DAI.burn",
      "offset": [
        5985,
        6018
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3747": {
      "fn": "DAI.burn",
      "offset": [
        5977,
        6049
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEF2"
    },
    "3750": {
      "branch": 46,
      "fn": "DAI.burn",
      "offset": [
        5977,
        6049
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3751": {
      "fn": "DAI.burn",
      "offset": [
        5977,
        6049
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3753": {
      "fn": "DAI.burn",
      "offset": [
        5977,
        6049
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3754": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3758": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3760": {
      "op": "SHL"
    },
    "3761": {
      "fn": "DAI.burn",
      "offset": [
        5977,
        6049
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3762": {
      "fn": "DAI.burn",
      "offset": [
        5977,
        6049
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3763": {
      "fn": "DAI.burn",
      "offset": [
        5977,
        6049
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3765": {
      "fn": "DAI.burn",
      "offset": [
        5977,
        6049
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3767": {
      "fn": "DAI.burn",
      "offset": [
        5977,
        6049
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3768": {
      "fn": "DAI.burn",
      "offset": [
        5977,
        6049
      ],
      "op": "ADD",
      "path": "0"
    },
    "3769": {
      "fn": "DAI.burn",
      "offset": [
        5977,
        6049
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3770": {
      "fn": "DAI.burn",
      "offset": [
        5977,
        6049
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1A"
    },
    "3772": {
      "fn": "DAI.burn",
      "offset": [
        5977,
        6049
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "3774": {
      "fn": "DAI.burn",
      "offset": [
        5977,
        6049
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3775": {
      "fn": "DAI.burn",
      "offset": [
        5977,
        6049
      ],
      "op": "ADD",
      "path": "0"
    },
    "3776": {
      "fn": "DAI.burn",
      "offset": [
        5977,
        6049
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3777": {
      "fn": "DAI.burn",
      "offset": [
        5977,
        6049
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x4461692F696E73756666696369656E742D616C6C6F77616E6365000000000000"
    },
    "3810": {
      "fn": "DAI.burn",
      "offset": [
        5977,
        6049
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x44"
    },
    "3812": {
      "fn": "DAI.burn",
      "offset": [
        5977,
        6049
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3813": {
      "fn": "DAI.burn",
      "offset": [
        5977,
        6049
      ],
      "op": "ADD",
      "path": "0"
    },
    "3814": {
      "fn": "DAI.burn",
      "offset": [
        5977,
        6049
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3815": {
      "fn": "DAI.burn",
      "offset": [
        5977,
        6049
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x64"
    },
    "3817": {
      "fn": "DAI.burn",
      "offset": [
        5977,
        6049
      ],
      "op": "ADD",
      "path": "0"
    },
    "3818": {
      "fn": "DAI.burn",
      "offset": [
        5977,
        6049
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3820": {
      "fn": "DAI.burn",
      "offset": [
        5977,
        6049
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3821": {
      "fn": "DAI.burn",
      "offset": [
        5977,
        6049
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3822": {
      "fn": "DAI.burn",
      "offset": [
        5977,
        6049
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3823": {
      "fn": "DAI.burn",
      "offset": [
        5977,
        6049
      ],
      "op": "SUB",
      "path": "0"
    },
    "3824": {
      "fn": "DAI.burn",
      "offset": [
        5977,
        6049
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3825": {
      "fn": "DAI.burn",
      "offset": [
        5977,
        6049
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3826": {
      "fn": "DAI.burn",
      "offset": [
        5977,
        6049
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3827": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3829": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3831": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3833": {
      "op": "SHL"
    },
    "3834": {
      "op": "SUB"
    },
    "3835": {
      "fn": "DAI.burn",
      "offset": [
        6096,
        6110
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 23
    },
    "3836": {
      "fn": "DAI.burn",
      "offset": [
        6096,
        6110
      ],
      "op": "AND",
      "path": "0"
    },
    "3837": {
      "fn": "DAI.burn",
      "offset": [
        6096,
        6110
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3839": {
      "fn": "DAI.burn",
      "offset": [
        6096,
        6110
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3840": {
      "fn": "DAI.burn",
      "offset": [
        6096,
        6110
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3841": {
      "fn": "DAI.burn",
      "offset": [
        6096,
        6110
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3842": {
      "fn": "DAI.burn",
      "offset": [
        6096,
        6105
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "3844": {
      "fn": "DAI.burn",
      "offset": [
        6096,
        6110
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3846": {
      "fn": "DAI.burn",
      "offset": [
        6096,
        6110
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3847": {
      "fn": "DAI.burn",
      "offset": [
        6092,
        6128
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF25"
    },
    "3850": {
      "fn": "DAI.burn",
      "offset": [
        6092,
        6128
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3851": {
      "fn": "DAI.burn",
      "offset": [
        6096,
        6110
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3853": {
      "fn": "DAI.burn",
      "offset": [
        6096,
        6110
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3854": {
      "fn": "DAI.burn",
      "offset": [
        6096,
        6110
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3855": {
      "fn": "DAI.burn",
      "offset": [
        6111,
        6121
      ],
      "op": "CALLER",
      "path": "0"
    },
    "3856": {
      "fn": "DAI.burn",
      "offset": [
        6096,
        6122
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3858": {
      "fn": "DAI.burn",
      "offset": [
        6096,
        6122
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3859": {
      "fn": "DAI.burn",
      "offset": [
        6096,
        6122
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3860": {
      "fn": "DAI.burn",
      "offset": [
        6096,
        6122
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3861": {
      "fn": "DAI.burn",
      "offset": [
        6096,
        6122
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3863": {
      "fn": "DAI.burn",
      "offset": [
        6096,
        6122
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3864": {
      "fn": "DAI.burn",
      "offset": [
        6096,
        6122
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3865": {
      "fn": "DAI.burn",
      "offset": [
        6096,
        6122
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3866": {
      "fn": "DAI.burn",
      "offset": [
        6096,
        6122
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3867": {
      "fn": "DAI.burn",
      "offset": [
        6096,
        6122
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3869": {
      "fn": "DAI.burn",
      "offset": [
        6096,
        6122
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3870": {
      "fn": "DAI.burn",
      "offset": [
        6096,
        6122
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3871": {
      "fn": "DAI.burn",
      "offset": [
        6096,
        6122
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3872": {
      "fn": "DAI.burn",
      "offset": [
        6124,
        6127
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3873": {
      "fn": "DAI.burn",
      "offset": [
        6092,
        6095
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1054"
    },
    "3876": {
      "fn": "DAI.burn",
      "jump": "i",
      "offset": [
        6092,
        6128
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3877": {
      "fn": "DAI.burn",
      "offset": [
        6092,
        6128
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3878": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3880": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3882": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3884": {
      "op": "SHL"
    },
    "3885": {
      "op": "SUB"
    },
    "3886": {
      "fn": "DAI.burn",
      "offset": [
        6063,
        6077
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3887": {
      "fn": "DAI.burn",
      "offset": [
        6063,
        6077
      ],
      "op": "AND",
      "path": "0"
    },
    "3888": {
      "fn": "DAI.burn",
      "offset": [
        6063,
        6077
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3890": {
      "fn": "DAI.burn",
      "offset": [
        6063,
        6077
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3891": {
      "fn": "DAI.burn",
      "offset": [
        6063,
        6077
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3892": {
      "fn": "DAI.burn",
      "offset": [
        6063,
        6077
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3893": {
      "fn": "DAI.burn",
      "offset": [
        6063,
        6072
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "3895": {
      "fn": "DAI.burn",
      "offset": [
        6063,
        6077
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3897": {
      "fn": "DAI.burn",
      "offset": [
        6063,
        6077
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3898": {
      "fn": "DAI.burn",
      "offset": [
        6063,
        6077
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3900": {
      "fn": "DAI.burn",
      "offset": [
        6063,
        6077
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3901": {
      "fn": "DAI.burn",
      "offset": [
        6063,
        6077
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3902": {
      "fn": "DAI.burn",
      "offset": [
        6078,
        6088
      ],
      "op": "CALLER",
      "path": "0"
    },
    "3903": {
      "fn": "DAI.burn",
      "offset": [
        6063,
        6089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3905": {
      "fn": "DAI.burn",
      "offset": [
        6063,
        6089
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3906": {
      "fn": "DAI.burn",
      "offset": [
        6063,
        6089
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3907": {
      "fn": "DAI.burn",
      "offset": [
        6063,
        6089
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3908": {
      "fn": "DAI.burn",
      "offset": [
        6063,
        6089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3910": {
      "fn": "DAI.burn",
      "offset": [
        6063,
        6089
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3911": {
      "fn": "DAI.burn",
      "offset": [
        6063,
        6089
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3912": {
      "fn": "DAI.burn",
      "offset": [
        6063,
        6089
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3913": {
      "fn": "DAI.burn",
      "offset": [
        6063,
        6089
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3914": {
      "fn": "DAI.burn",
      "offset": [
        6063,
        6089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3916": {
      "fn": "DAI.burn",
      "offset": [
        6063,
        6089
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3917": {
      "fn": "DAI.burn",
      "offset": [
        6063,
        6089
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3918": {
      "fn": "DAI.burn",
      "offset": [
        6063,
        6128
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3919": {
      "fn": "DAI.burn",
      "offset": [
        5898,
        6139
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3920": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3922": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3924": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3926": {
      "op": "SHL"
    },
    "3927": {
      "op": "SUB"
    },
    "3928": {
      "fn": "DAI.burn",
      "offset": [
        6169,
        6183
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 24
    },
    "3929": {
      "fn": "DAI.burn",
      "offset": [
        6169,
        6183
      ],
      "op": "AND",
      "path": "0"
    },
    "3930": {
      "fn": "DAI.burn",
      "offset": [
        6169,
        6183
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3932": {
      "fn": "DAI.burn",
      "offset": [
        6169,
        6183
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3933": {
      "fn": "DAI.burn",
      "offset": [
        6169,
        6183
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3934": {
      "fn": "DAI.burn",
      "offset": [
        6169,
        6183
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3935": {
      "fn": "DAI.burn",
      "offset": [
        6169,
        6178
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "3937": {
      "fn": "DAI.burn",
      "offset": [
        6169,
        6183
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3939": {
      "fn": "DAI.burn",
      "offset": [
        6169,
        6183
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3940": {
      "fn": "DAI.burn",
      "offset": [
        6165,
        6189
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF72"
    },
    "3943": {
      "fn": "DAI.burn",
      "offset": [
        6165,
        6189
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3944": {
      "fn": "DAI.burn",
      "offset": [
        6169,
        6183
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3946": {
      "fn": "DAI.burn",
      "offset": [
        6169,
        6183
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3947": {
      "fn": "DAI.burn",
      "offset": [
        6169,
        6183
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3948": {
      "fn": "DAI.burn",
      "offset": [
        6169,
        6183
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3949": {
      "fn": "DAI.burn",
      "offset": [
        6185,
        6188
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3950": {
      "fn": "DAI.burn",
      "offset": [
        6165,
        6168
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1054"
    },
    "3953": {
      "fn": "DAI.burn",
      "jump": "i",
      "offset": [
        6165,
        6189
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3954": {
      "fn": "DAI.burn",
      "offset": [
        6165,
        6189
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3955": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3957": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3959": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3961": {
      "op": "SHL"
    },
    "3962": {
      "op": "SUB"
    },
    "3963": {
      "fn": "DAI.burn",
      "offset": [
        6148,
        6162
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3964": {
      "fn": "DAI.burn",
      "offset": [
        6148,
        6162
      ],
      "op": "AND",
      "path": "0"
    },
    "3965": {
      "fn": "DAI.burn",
      "offset": [
        6148,
        6162
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3967": {
      "fn": "DAI.burn",
      "offset": [
        6148,
        6162
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3968": {
      "fn": "DAI.burn",
      "offset": [
        6148,
        6162
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3969": {
      "fn": "DAI.burn",
      "offset": [
        6148,
        6162
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3970": {
      "fn": "DAI.burn",
      "offset": [
        6148,
        6157
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "3972": {
      "fn": "DAI.burn",
      "offset": [
        6148,
        6162
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3974": {
      "fn": "DAI.burn",
      "offset": [
        6148,
        6162
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3975": {
      "fn": "DAI.burn",
      "offset": [
        6148,
        6162
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3977": {
      "fn": "DAI.burn",
      "offset": [
        6148,
        6162
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3978": {
      "fn": "DAI.burn",
      "offset": [
        6148,
        6162
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3979": {
      "fn": "DAI.burn",
      "offset": [
        6148,
        6189
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3980": {
      "fn": "DAI.burn",
      "offset": [
        6220,
        6231
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 25,
      "value": "0x1"
    },
    "3982": {
      "fn": "DAI.burn",
      "offset": [
        6220,
        6231
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3983": {
      "fn": "DAI.burn",
      "offset": [
        6216,
        6237
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF98"
    },
    "3986": {
      "fn": "DAI.burn",
      "offset": [
        6216,
        6237
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3987": {
      "fn": "DAI.burn",
      "offset": [
        6233,
        6236
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3988": {
      "fn": "DAI.burn",
      "offset": [
        6216,
        6219
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1054"
    },
    "3991": {
      "fn": "DAI.burn",
      "jump": "i",
      "offset": [
        6216,
        6237
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3992": {
      "fn": "DAI.burn",
      "offset": [
        6216,
        6237
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3993": {
      "fn": "DAI.burn",
      "offset": [
        6199,
        6210
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "3995": {
      "fn": "DAI.burn",
      "offset": [
        6199,
        6237
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3996": {
      "fn": "DAI.burn",
      "offset": [
        6274,
        6275
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 26,
      "value": "0x0"
    },
    "3998": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4000": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4002": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4004": {
      "op": "SHL"
    },
    "4005": {
      "op": "SUB"
    },
    "4006": {
      "fn": "DAI.burn",
      "offset": [
        6252,
        6282
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4007": {
      "fn": "DAI.burn",
      "offset": [
        6252,
        6282
      ],
      "op": "AND",
      "path": "0"
    },
    "4008": {
      "fn": "DAI.burn",
      "offset": [
        6252,
        6282
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "4041": {
      "fn": "DAI.burn",
      "offset": [
        6278,
        6281
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4042": {
      "fn": "DAI.burn",
      "offset": [
        6252,
        6282
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4044": {
      "fn": "DAI.burn",
      "offset": [
        6252,
        6282
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4045": {
      "fn": "DAI.burn",
      "offset": [
        6252,
        6282
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4046": {
      "fn": "DAI.burn",
      "offset": [
        6252,
        6282
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4047": {
      "fn": "DAI.burn",
      "offset": [
        6252,
        6282
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4048": {
      "fn": "DAI.burn",
      "offset": [
        6252,
        6282
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4050": {
      "fn": "DAI.burn",
      "offset": [
        6252,
        6282
      ],
      "op": "ADD",
      "path": "0"
    },
    "4051": {
      "fn": "DAI.burn",
      "offset": [
        6252,
        6282
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4053": {
      "fn": "DAI.burn",
      "offset": [
        6252,
        6282
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4054": {
      "fn": "DAI.burn",
      "offset": [
        6252,
        6282
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4055": {
      "fn": "DAI.burn",
      "offset": [
        6252,
        6282
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4056": {
      "fn": "DAI.burn",
      "offset": [
        6252,
        6282
      ],
      "op": "SUB",
      "path": "0"
    },
    "4057": {
      "fn": "DAI.burn",
      "offset": [
        6252,
        6282
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4058": {
      "fn": "DAI.burn",
      "offset": [
        6252,
        6282
      ],
      "op": "LOG3",
      "path": "0"
    },
    "4059": {
      "fn": "DAI.burn",
      "offset": [
        5774,
        6289
      ],
      "op": "POP",
      "path": "0"
    },
    "4060": {
      "fn": "DAI.burn",
      "offset": [
        5774,
        6289
      ],
      "op": "POP",
      "path": "0"
    },
    "4061": {
      "fn": "DAI.burn",
      "jump": "o",
      "offset": [
        5774,
        6289
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4062": {
      "fn": "DAI.transfer",
      "offset": [
        4856,
        4979
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4063": {
      "fn": "DAI.transfer",
      "offset": [
        4915,
        4919
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4065": {
      "fn": "DAI.transfer",
      "offset": [
        4938,
        4972
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 27,
      "value": "0xFEB"
    },
    "4068": {
      "fn": "DAI.transfer",
      "offset": [
        4951,
        4961
      ],
      "op": "CALLER",
      "path": "0"
    },
    "4069": {
      "fn": "DAI.transfer",
      "offset": [
        4963,
        4966
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4070": {
      "fn": "DAI.transfer",
      "offset": [
        4968,
        4971
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4071": {
      "fn": "DAI.transfer",
      "offset": [
        4938,
        4950
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x58E"
    },
    "4074": {
      "fn": "DAI.transfer",
      "jump": "i",
      "offset": [
        4938,
        4972
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4075": {
      "fn": "DAI.transfer",
      "offset": [
        4938,
        4972
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4076": {
      "fn": "DAI.transfer",
      "offset": [
        4931,
        4972
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "4077": {
      "fn": "DAI.transfer",
      "offset": [
        4856,
        4979
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4078": {
      "op": "POP"
    },
    "4079": {
      "op": "POP"
    },
    "4080": {
      "op": "POP"
    },
    "4081": {
      "fn": "DAI.transfer",
      "jump": "o",
      "offset": [
        4856,
        4979
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4082": {
      "fn": "DAI.push",
      "offset": [
        6500,
        6597
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4083": {
      "fn": "DAI.push",
      "offset": [
        6556,
        6590
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 28,
      "value": "0xFFD"
    },
    "4086": {
      "fn": "DAI.push",
      "offset": [
        6569,
        6579
      ],
      "op": "CALLER",
      "path": "0"
    },
    "4087": {
      "fn": "DAI.push",
      "offset": [
        6581,
        6584
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4088": {
      "fn": "DAI.push",
      "offset": [
        6586,
        6589
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4089": {
      "fn": "DAI.push",
      "offset": [
        6556,
        6568
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x58E"
    },
    "4092": {
      "fn": "DAI.push",
      "jump": "i",
      "offset": [
        6556,
        6590
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4093": {
      "fn": "DAI.push",
      "offset": [
        6556,
        6590
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4094": {
      "fn": "DAI.push",
      "offset": [
        6556,
        6590
      ],
      "op": "POP",
      "path": "0"
    },
    "4095": {
      "fn": "DAI.push",
      "offset": [
        6500,
        6597
      ],
      "op": "POP",
      "path": "0"
    },
    "4096": {
      "fn": "DAI.push",
      "offset": [
        6500,
        6597
      ],
      "op": "POP",
      "path": "0"
    },
    "4097": {
      "fn": "DAI.push",
      "jump": "o",
      "offset": [
        6500,
        6597
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4098": {
      "fn": "DAI.move",
      "offset": [
        6704,
        6807
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4099": {
      "fn": "DAI.move",
      "offset": [
        6773,
        6800
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 29,
      "value": "0x100D"
    },
    "4102": {
      "fn": "DAI.move",
      "offset": [
        6786,
        6789
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4103": {
      "fn": "DAI.move",
      "offset": [
        6791,
        6794
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4104": {
      "fn": "DAI.move",
      "offset": [
        6796,
        6799
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4105": {
      "fn": "DAI.move",
      "offset": [
        6773,
        6785
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x58E"
    },
    "4108": {
      "fn": "DAI.move",
      "jump": "i",
      "offset": [
        6773,
        6800
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4109": {
      "fn": "DAI.move",
      "offset": [
        6773,
        6800
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4110": {
      "fn": "DAI.move",
      "offset": [
        6773,
        6800
      ],
      "op": "POP",
      "path": "0"
    },
    "4111": {
      "fn": "DAI.move",
      "offset": [
        6704,
        6807
      ],
      "op": "POP",
      "path": "0"
    },
    "4112": {
      "fn": "DAI.move",
      "offset": [
        6704,
        6807
      ],
      "op": "POP",
      "path": "0"
    },
    "4113": {
      "fn": "DAI.move",
      "offset": [
        6704,
        6807
      ],
      "op": "POP",
      "path": "0"
    },
    "4114": {
      "fn": "DAI.move",
      "jump": "o",
      "offset": [
        6704,
        6807
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4115": {
      "offset": [
        3016,
        3054
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4116": {
      "fn": "DAI.move",
      "offset": [
        3016,
        3054
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4118": {
      "fn": "DAI.move",
      "offset": [
        3016,
        3054
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4120": {
      "fn": "DAI.move",
      "offset": [
        3016,
        3054
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4121": {
      "fn": "DAI.move",
      "offset": [
        3016,
        3054
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4122": {
      "fn": "DAI.move",
      "offset": [
        3016,
        3054
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4124": {
      "fn": "DAI.move",
      "offset": [
        3016,
        3054
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4125": {
      "fn": "DAI.move",
      "offset": [
        3016,
        3054
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4127": {
      "fn": "DAI.move",
      "offset": [
        3016,
        3054
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4129": {
      "fn": "DAI.move",
      "offset": [
        3016,
        3054
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4130": {
      "fn": "DAI.move",
      "offset": [
        3016,
        3054
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4131": {
      "fn": "DAI.move",
      "offset": [
        3016,
        3054
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4132": {
      "op": "POP"
    },
    "4133": {
      "offset": [
        3016,
        3054
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4134": {
      "fn": "DAI.move",
      "jump": "o",
      "offset": [
        3016,
        3054
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4135": {
      "offset": [
        3618,
        3681
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4136": {
      "fn": "DAI.move",
      "offset": [
        3618,
        3681
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "4138": {
      "fn": "DAI.move",
      "offset": [
        3618,
        3681
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4140": {
      "fn": "DAI.move",
      "offset": [
        3618,
        3681
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4141": {
      "fn": "DAI.move",
      "offset": [
        3618,
        3681
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4142": {
      "fn": "DAI.move",
      "offset": [
        3618,
        3681
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4144": {
      "fn": "DAI.move",
      "offset": [
        3618,
        3681
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4145": {
      "fn": "DAI.move",
      "offset": [
        3618,
        3681
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4147": {
      "fn": "DAI.move",
      "offset": [
        3618,
        3681
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4149": {
      "fn": "DAI.move",
      "offset": [
        3618,
        3681
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4150": {
      "fn": "DAI.move",
      "offset": [
        3618,
        3681
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4152": {
      "fn": "DAI.move",
      "offset": [
        3618,
        3681
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4153": {
      "fn": "DAI.move",
      "offset": [
        3618,
        3681
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4154": {
      "fn": "DAI.move",
      "offset": [
        3618,
        3681
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4156": {
      "fn": "DAI.move",
      "offset": [
        3618,
        3681
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4157": {
      "fn": "DAI.move",
      "offset": [
        3618,
        3681
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4159": {
      "fn": "DAI.move",
      "offset": [
        3618,
        3681
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4161": {
      "fn": "DAI.move",
      "offset": [
        3618,
        3681
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4162": {
      "fn": "DAI.move",
      "offset": [
        3618,
        3681
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4163": {
      "fn": "DAI.move",
      "offset": [
        3618,
        3681
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4164": {
      "op": "POP"
    },
    "4165": {
      "offset": [
        3618,
        3681
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4166": {
      "fn": "DAI.move",
      "offset": [
        3618,
        3681
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4167": {
      "op": "POP"
    },
    "4168": {
      "jump": "o",
      "offset": [
        3618,
        3681
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4169": {
      "fn": "DAI.pull",
      "offset": [
        6602,
        6699
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4170": {
      "fn": "DAI.pull",
      "offset": [
        6658,
        6692
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 30,
      "value": "0xFFD"
    },
    "4173": {
      "fn": "DAI.pull",
      "offset": [
        6671,
        6674
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4174": {
      "fn": "DAI.pull",
      "offset": [
        6676,
        6686
      ],
      "op": "CALLER",
      "path": "0"
    },
    "4175": {
      "fn": "DAI.pull",
      "offset": [
        6688,
        6691
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4176": {
      "fn": "DAI.pull",
      "offset": [
        6658,
        6670
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x58E"
    },
    "4179": {
      "fn": "DAI.pull",
      "jump": "i",
      "offset": [
        6658,
        6692
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4180": {
      "fn": "DAI.sub",
      "offset": [
        4026,
        4128
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4181": {
      "fn": "DAI.sub",
      "offset": [
        4109,
        4114
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 31
    },
    "4182": {
      "fn": "DAI.sub",
      "offset": [
        4109,
        4114
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4183": {
      "fn": "DAI.sub",
      "offset": [
        4109,
        4114
      ],
      "op": "SUB",
      "path": "0"
    },
    "4184": {
      "fn": "DAI.sub",
      "offset": [
        4104,
        4120
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4185": {
      "fn": "DAI.sub",
      "offset": [
        4104,
        4120
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4186": {
      "fn": "DAI.sub",
      "offset": [
        4104,
        4120
      ],
      "op": "GT",
      "path": "0"
    },
    "4187": {
      "branch": 47,
      "fn": "DAI.sub",
      "offset": [
        4104,
        4120
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4188": {
      "fn": "DAI.sub",
      "offset": [
        4096,
        4121
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x582"
    },
    "4191": {
      "branch": 47,
      "fn": "DAI.sub",
      "offset": [
        4096,
        4121
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4192": {
      "fn": "DAI.sub",
      "offset": [
        4096,
        4121
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4194": {
      "fn": "DAI.sub",
      "offset": [
        4096,
        4121
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4195": {
      "fn": "DAI.sub",
      "offset": [
        4096,
        4121
      ],
      "op": "REVERT",
      "path": "0"
    },
    "4196": {
      "fn": "DAI.add",
      "offset": [
        3919,
        4021
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4197": {
      "fn": "DAI.add",
      "offset": [
        4002,
        4007
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 32
    },
    "4198": {
      "fn": "DAI.add",
      "offset": [
        4002,
        4007
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4199": {
      "fn": "DAI.add",
      "offset": [
        4002,
        4007
      ],
      "op": "ADD",
      "path": "0"
    },
    "4200": {
      "fn": "DAI.add",
      "offset": [
        3997,
        4013
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4201": {
      "fn": "DAI.add",
      "offset": [
        3997,
        4013
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4202": {
      "fn": "DAI.add",
      "offset": [
        3997,
        4013
      ],
      "op": "LT",
      "path": "0"
    },
    "4203": {
      "branch": 48,
      "fn": "DAI.add",
      "offset": [
        3997,
        4013
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4204": {
      "fn": "DAI.add",
      "offset": [
        3989,
        4014
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x582"
    },
    "4207": {
      "branch": 48,
      "fn": "DAI.add",
      "offset": [
        3989,
        4014
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4208": {
      "fn": "DAI.add",
      "offset": [
        3989,
        4014
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4210": {
      "fn": "DAI.add",
      "offset": [
        3989,
        4014
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4211": {
      "fn": "DAI.add",
      "offset": [
        3989,
        4014
      ],
      "op": "REVERT",
      "path": "0"
    }
  },
  "sha1": "e093de273ebd3d31b367422bbf10eae00f7d8b81",
  "source": "/**\n *Submitted for verification at Etherscan.io on 2019-11-14\n*/\n\n// hevm: flattened sources of /nix/store/8xb41r4qd0cjb63wcrxf1qmfg88p0961-dss-6fd7de0/src/dai.sol\npragma solidity =0.5.12;\n\n////// /nix/store/8xb41r4qd0cjb63wcrxf1qmfg88p0961-dss-6fd7de0/src/lib.sol\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n/* pragma solidity 0.5.12; */\n\ncontract LibNote {\n    event LogNote(\n        bytes4   indexed  sig,\n        address  indexed  usr,\n        bytes32  indexed  arg1,\n        bytes32  indexed  arg2,\n        bytes             data\n    ) anonymous;\n\n    modifier note {\n        _;\n        assembly {\n            // log an 'anonymous' event with a constant 6 words of calldata\n            // and four indexed topics: selector, caller, arg1 and arg2\n            let mark := msize                         // end of memory ensures zero\n            mstore(0x40, add(mark, 288))              // update free memory pointer\n            mstore(mark, 0x20)                        // bytes type data offset\n            mstore(add(mark, 0x20), 224)              // bytes size (padded)\n            calldatacopy(add(mark, 0x40), 0, 224)     // bytes payload\n            log4(mark, 288,                           // calldata\n                 shl(224, shr(224, calldataload(0))), // msg.sig\n                 caller,                              // msg.sender\n                 calldataload(4),                     // arg1\n                 calldataload(36)                     // arg2\n                )\n        }\n    }\n}\n\n////// /nix/store/8xb41r4qd0cjb63wcrxf1qmfg88p0961-dss-6fd7de0/src/dai.sol\n// Copyright (C) 2017, 2018, 2019 dbrock, rain, mrchico\n\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n/* pragma solidity 0.5.12; */\n\n/* import \"./lib.sol\"; */\n\ncontract DAI is LibNote {\n    // --- Auth ---\n    mapping (address => uint) public wards;\n    function rely(address guy) external note auth { wards[guy] = 1; }\n    function deny(address guy) external note auth { wards[guy] = 0; }\n    modifier auth {\n        require(wards[msg.sender] == 1, \"Dai/not-authorized\");\n        _;\n    }\n\n    // --- ERC20 Data ---\n    string  public constant name     = \"Dai Stablecoin\";\n    string  public constant symbol   = \"DAI\";\n    string  public constant version  = \"1\";\n    uint8   public constant decimals = 6;\n    uint256 public totalSupply;\n\n    mapping (address => uint)                      public balanceOf;\n    mapping (address => mapping (address => uint)) public allowance;\n    mapping (address => uint)                      public nonces;\n\n    event Approval(address indexed src, address indexed guy, uint wad);\n    event Transfer(address indexed src, address indexed dst, uint wad);\n\n    // --- Math ---\n    function add(uint x, uint y) internal pure returns (uint z) {\n        require((z = x + y) >= x);\n    }\n    function sub(uint x, uint y) internal pure returns (uint z) {\n        require((z = x - y) <= x);\n    }\n\n    // --- EIP712 niceties ---\n    bytes32 public DOMAIN_SEPARATOR;\n    // bytes32 public constant PERMIT_TYPEHASH = keccak256(\"Permit(address holder,address spender,uint256 nonce,uint256 expiry,bool allowed)\");\n    bytes32 public constant PERMIT_TYPEHASH = 0xea2aa0a1be11a07ed86d755c93467f4f82362b452371d1ba94d1715123511acb;\n\n    constructor(uint256 chainId_) public {\n        wards[msg.sender] = 1;\n        DOMAIN_SEPARATOR = keccak256(abi.encode(\n            keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\"),\n            keccak256(bytes(name)),\n            keccak256(bytes(version)),\n            chainId_,\n            address(this)\n        ));\n    }\n\n    // --- Token ---\n    function transfer(address dst, uint wad) external returns (bool) {\n        return transferFrom(msg.sender, dst, wad);\n    }\n    function transferFrom(address src, address dst, uint wad)\n        public returns (bool)\n    {\n        require(balanceOf[src] >= wad, \"Dai/insufficient-balance\");\n        if (src != msg.sender && allowance[src][msg.sender] != uint(-1)) {\n            require(allowance[src][msg.sender] >= wad, \"Dai/insufficient-allowance\");\n            allowance[src][msg.sender] = sub(allowance[src][msg.sender], wad);\n        }\n        balanceOf[src] = sub(balanceOf[src], wad);\n        balanceOf[dst] = add(balanceOf[dst], wad);\n        emit Transfer(src, dst, wad);\n        return true;\n    }\n    function mint(address usr, uint wad) external auth {\n        balanceOf[usr] = add(balanceOf[usr], wad);\n        totalSupply    = add(totalSupply, wad);\n        emit Transfer(address(0), usr, wad);\n    }\n    function burn(address usr, uint wad) external {\n        require(balanceOf[usr] >= wad, \"Dai/insufficient-balance\");\n        if (usr != msg.sender && allowance[usr][msg.sender] != uint(-1)) {\n            require(allowance[usr][msg.sender] >= wad, \"Dai/insufficient-allowance\");\n            allowance[usr][msg.sender] = sub(allowance[usr][msg.sender], wad);\n        }\n        balanceOf[usr] = sub(balanceOf[usr], wad);\n        totalSupply    = sub(totalSupply, wad);\n        emit Transfer(usr, address(0), wad);\n    }\n    function approve(address usr, uint wad) external returns (bool) {\n        allowance[msg.sender][usr] = wad;\n        emit Approval(msg.sender, usr, wad);\n        return true;\n    }\n\n    // --- Alias ---\n    function push(address usr, uint wad) external {\n        transferFrom(msg.sender, usr, wad);\n    }\n    function pull(address usr, uint wad) external {\n        transferFrom(usr, msg.sender, wad);\n    }\n    function move(address src, address dst, uint wad) external {\n        transferFrom(src, dst, wad);\n    }\n\n    // --- Approve by signature ---\n    function permit(address holder, address spender, uint256 nonce, uint256 expiry,\n                    bool allowed, uint8 v, bytes32 r, bytes32 s) external\n    {\n        bytes32 digest =\n            keccak256(abi.encodePacked(\n                \"\\x19\\x01\",\n                DOMAIN_SEPARATOR,\n                keccak256(abi.encode(PERMIT_TYPEHASH,\n                                     holder,\n                                     spender,\n                                     nonce,\n                                     expiry,\n                                     allowed))\n        ));\n\n        require(holder != address(0), \"Dai/invalid-address-0\");\n        require(holder == ecrecover(digest, v, r, s), \"Dai/invalid-permit\");\n        require(expiry == 0 || now <= expiry, \"Dai/permit-expired\");\n        require(nonce == nonces[holder]++, \"Dai/invalid-nonce\");\n        uint wad = allowed ? uint(-1) : 0;\n        allowance[holder][spender] = wad;\n        emit Approval(holder, spender, wad);\n    }\n}",
  "sourceMap": "2966:4876:0:-;;;4461:368;8:9:-1;5:2;;;30:1;27;20:12;5:2;4461:368:0;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4461:368:0;4514:10;4508:5;:17;;;4461:368;4508:17;;;;;;;;4528:1;4508:21;;4592:95;;;;;;;;;;;;;;;;;4717:4;;;;;;;;;;;;;;4753:7;;;;;;;;;;;;;;;4568:253;;;;;;;;;4701:22;4568:253;;;;4737:25;4568:253;;;;;;;;;;;4806:4;4568:253;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;4568:253:0;;;;;;4558:264;;;;;;;;4539:16;:283;-1:-1:-1;2966:4876:0;;;;;;",
  "sourcePath": "contracts/unchecked-returns-3/DAI.sol",
  "type": "contract"
}