{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_doorNumber",
          "type": "uint8"
        },
        {
          "internalType": "bool",
          "name": "_isLocked",
          "type": "bool"
        },
        {
          "internalType": "bytes32",
          "name": "_doorOwnerName",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "_secretSpell",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "isLocked",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_secretSpell",
          "type": "bytes32"
        }
      ],
      "name": "unlockDoor",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/Users/m4ud/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/access/Ownable.sol",
    "1": "/Users/m4ud/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/security/ReentrancyGuard.sol",
    "13": "/Users/m4ud/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/utils/Context.sol",
    "53": "contracts/sensitive-on-chain-data-2/SecretDoor.sol"
  },
  "ast": {
    "absolutePath": "contracts/sensitive-on-chain-data-2/SecretDoor.sol",
    "exportedSymbols": {
      "Context": [
        16761
      ],
      "Ownable": [
        6228
      ],
      "ReentrancyGuard": [
        6115
      ],
      "SecretDoor": [
        4762
      ]
    },
    "id": 4763,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4693,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".13"
        ],
        "nodeType": "PragmaDirective",
        "src": "116:24:53"
      },
      {
        "absolutePath": "/Users/m4ud/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/security/ReentrancyGuard.sol",
        "file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "id": 4694,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4763,
        "sourceUnit": 6116,
        "src": "142:62:53",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/m4ud/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 4695,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4763,
        "sourceUnit": 6229,
        "src": "205:52:53",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 4696,
              "name": "Ownable",
              "nameLocations": [
                "282:7:53"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6228,
              "src": "282:7:53"
            },
            "id": 4697,
            "nodeType": "InheritanceSpecifier",
            "src": "282:7:53"
          },
          {
            "baseName": {
              "id": 4698,
              "name": "ReentrancyGuard",
              "nameLocations": [
                "291:15:53"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6115,
              "src": "291:15:53"
            },
            "id": 4699,
            "nodeType": "InheritanceSpecifier",
            "src": "291:15:53"
          }
        ],
        "canonicalName": "SecretDoor",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 4762,
        "linearizedBaseContracts": [
          4762,
          6115,
          6228,
          16761
        ],
        "name": "SecretDoor",
        "nameLocation": "268:10:53",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "a4e2d634",
            "id": 4701,
            "mutability": "mutable",
            "name": "isLocked",
            "nameLocation": "324:8:53",
            "nodeType": "VariableDeclaration",
            "scope": 4762,
            "src": "312:20:53",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 4700,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "312:4:53",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 4703,
            "mutability": "mutable",
            "name": "doorNumber",
            "nameLocation": "350:10:53",
            "nodeType": "VariableDeclaration",
            "scope": 4762,
            "src": "336:24:53",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 4702,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "336:5:53",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 4705,
            "mutability": "mutable",
            "name": "doorOwnerName",
            "nameLocation": "380:13:53",
            "nodeType": "VariableDeclaration",
            "scope": 4762,
            "src": "364:29:53",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 4704,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "364:7:53",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 4707,
            "mutability": "mutable",
            "name": "secretSpell",
            "nameLocation": "413:11:53",
            "nodeType": "VariableDeclaration",
            "scope": 4762,
            "src": "397:27:53",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 4706,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "397:7:53",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 4734,
              "nodeType": "Block",
              "src": "531:131:53",
              "statements": [
                {
                  "expression": {
                    "id": 4720,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4718,
                      "name": "doorNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4703,
                      "src": "538:10:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4719,
                      "name": "_doorNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4709,
                      "src": "551:11:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "538:24:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 4721,
                  "nodeType": "ExpressionStatement",
                  "src": "538:24:53"
                },
                {
                  "expression": {
                    "id": 4724,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4722,
                      "name": "isLocked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4701,
                      "src": "568:8:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4723,
                      "name": "_isLocked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4711,
                      "src": "579:9:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "568:20:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4725,
                  "nodeType": "ExpressionStatement",
                  "src": "568:20:53"
                },
                {
                  "expression": {
                    "id": 4728,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4726,
                      "name": "doorOwnerName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4705,
                      "src": "595:13:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4727,
                      "name": "_doorOwnerName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4713,
                      "src": "611:14:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "595:30:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 4729,
                  "nodeType": "ExpressionStatement",
                  "src": "595:30:53"
                },
                {
                  "expression": {
                    "id": 4732,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4730,
                      "name": "secretSpell",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4707,
                      "src": "631:11:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4731,
                      "name": "_secretSpell",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4715,
                      "src": "645:12:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "631:26:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 4733,
                  "nodeType": "ExpressionStatement",
                  "src": "631:26:53"
                }
              ]
            },
            "id": 4735,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4716,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4709,
                  "mutability": "mutable",
                  "name": "_doorNumber",
                  "nameLocation": "452:11:53",
                  "nodeType": "VariableDeclaration",
                  "scope": 4735,
                  "src": "446:17:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 4708,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "446:5:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4711,
                  "mutability": "mutable",
                  "name": "_isLocked",
                  "nameLocation": "470:9:53",
                  "nodeType": "VariableDeclaration",
                  "scope": 4735,
                  "src": "465:14:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4710,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "465:4:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4713,
                  "mutability": "mutable",
                  "name": "_doorOwnerName",
                  "nameLocation": "493:14:53",
                  "nodeType": "VariableDeclaration",
                  "scope": 4735,
                  "src": "485:22:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 4712,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "485:7:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4715,
                  "mutability": "mutable",
                  "name": "_secretSpell",
                  "nameLocation": "517:12:53",
                  "nodeType": "VariableDeclaration",
                  "scope": 4735,
                  "src": "509:20:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 4714,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "509:7:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "440:90:53"
            },
            "returnParameters": {
              "id": 4717,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "531:0:53"
            },
            "scope": 4762,
            "src": "429:233:53",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4760,
              "nodeType": "Block",
              "src": "732:136:53",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 4744,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 4742,
                      "name": "secretSpell",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4707,
                      "src": "743:11:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 4743,
                      "name": "_secretSpell",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4737,
                      "src": "758:12:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "743:27:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 4754,
                    "nodeType": "Block",
                    "src": "809:30:53",
                    "statements": [
                      {
                        "expression": {
                          "id": 4752,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 4750,
                            "name": "isLocked",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4701,
                            "src": "817:8:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 4751,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "828:4:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "817:15:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 4753,
                        "nodeType": "ExpressionStatement",
                        "src": "817:15:53"
                      }
                    ]
                  },
                  "id": 4755,
                  "nodeType": "IfStatement",
                  "src": "739:100:53",
                  "trueBody": {
                    "id": 4749,
                    "nodeType": "Block",
                    "src": "772:31:53",
                    "statements": [
                      {
                        "expression": {
                          "id": 4747,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 4745,
                            "name": "isLocked",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4701,
                            "src": "780:8:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 4746,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "791:5:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "780:16:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 4748,
                        "nodeType": "ExpressionStatement",
                        "src": "780:16:53"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 4758,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "852:11:53",
                    "subExpression": {
                      "components": [
                        {
                          "id": 4756,
                          "name": "isLocked",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4701,
                          "src": "854:8:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 4757,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "853:10:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 4741,
                  "id": 4759,
                  "nodeType": "Return",
                  "src": "845:18:53"
                }
              ]
            },
            "functionSelector": "c1ce0d43",
            "id": 4761,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unlockDoor",
            "nameLocation": "675:10:53",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4738,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4737,
                  "mutability": "mutable",
                  "name": "_secretSpell",
                  "nameLocation": "694:12:53",
                  "nodeType": "VariableDeclaration",
                  "scope": 4761,
                  "src": "686:20:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 4736,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "686:7:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "685:22:53"
            },
            "returnParameters": {
              "id": 4741,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4740,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4761,
                  "src": "726:4:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4739,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "726:4:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "725:6:53"
            },
            "scope": 4762,
            "src": "666:202:53",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 4763,
        "src": "259:611:53",
        "usedErrors": []
      }
    ],
    "src": "116:754:53"
  },
  "bytecode": "608060405234801561001057600080fd5b506040516103da3803806103da83398101604081905261002f916100c0565b61003833610070565b600180556002805493151560ff1960ff909616610100029590951661ffff199094169390931793909317909155600355600455610113565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080600080608085870312156100d657600080fd5b845160ff811681146100e757600080fd5b602086015190945080151581146100fd57600080fd5b6040860151606090960151949790965092505050565b6102b8806101226000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063715018a61461005c5780638da5cb5b14610066578063a4e2d63414610086578063c1ce0d43146100a3578063f2fde38b146100b6575b600080fd5b6100646100c9565b005b6000546040516001600160a01b0390911681526020015b60405180910390f35b6002546100939060ff1681565b604051901515815260200161007d565b6100936100b1366004610239565b6100dd565b6100646100c4366004610252565b610111565b6100d161018f565b6100db60006101e9565b565b600081600454036100f7576002805460ff19169055610105565b6002805460ff191660011790555b505060025460ff161590565b61011961018f565b6001600160a01b0381166101835760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b61018c816101e9565b50565b6000546001600160a01b031633146100db5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161017a565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561024b57600080fd5b5035919050565b60006020828403121561026457600080fd5b81356001600160a01b038116811461027b57600080fd5b939250505056fea2646970667358221220bd831acb4dff3ea314e6703e1679abe20d5208368139ab8739484df6aabeecf064736f6c63430008130033",
  "bytecodeSha1": "2d23b37bdeaa3cf745847b544a7bc6ced3a9c2c8",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.19+commit.7dd6d404"
  },
  "contractName": "SecretDoor",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable._checkOwner": {
          "13": [
            1422,
            1445,
            true
          ]
        },
        "Ownable.transferOwnership": {
          "12": [
            2169,
            2191,
            true
          ]
        }
      },
      "1": {},
      "13": {},
      "53": {
        "SecretDoor.unlockDoor": {
          "11": [
            743,
            770,
            false
          ]
        }
      }
    },
    "statements": {
      "0": {
        "Ownable._checkOwner": {
          "8": [
            1414,
            1482
          ]
        },
        "Ownable._transferOwnership": {
          "9": [
            2541,
            2558
          ],
          "10": [
            2568,
            2613
          ]
        },
        "Ownable.owner": {
          "0": [
            1266,
            1279
          ]
        },
        "Ownable.renounceOwnership": {
          "1": [
            1895,
            1925
          ]
        },
        "Ownable.transferOwnership": {
          "5": [
            2161,
            2234
          ],
          "6": [
            2244,
            2272
          ]
        }
      },
      "1": {},
      "13": {
        "Context._msgSender": {
          "7": [
            712,
            729
          ]
        }
      },
      "53": {
        "SecretDoor.unlockDoor": {
          "2": [
            780,
            796
          ],
          "3": [
            817,
            832
          ],
          "4": [
            845,
            863
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.8.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.8.0/Ownable",
    "OpenZeppelin/openzeppelin-contracts@4.8.0/ReentrancyGuard"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100575760003560e01c8063715018a61461005c5780638da5cb5b14610066578063a4e2d63414610086578063c1ce0d43146100a3578063f2fde38b146100b6575b600080fd5b6100646100c9565b005b6000546040516001600160a01b0390911681526020015b60405180910390f35b6002546100939060ff1681565b604051901515815260200161007d565b6100936100b1366004610239565b6100dd565b6100646100c4366004610252565b610111565b6100d161018f565b6100db60006101e9565b565b600081600454036100f7576002805460ff19169055610105565b6002805460ff191660011790555b505060025460ff161590565b61011961018f565b6001600160a01b0381166101835760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b61018c816101e9565b50565b6000546001600160a01b031633146100db5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161017a565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561024b57600080fd5b5035919050565b60006020828403121561026457600080fd5b81356001600160a01b038116811461027b57600080fd5b939250505056fea2646970667358221220bd831acb4dff3ea314e6703e1679abe20d5208368139ab8739484df6aabeecf064736f6c63430008130033",
  "deployedSourceMap": "259:611:53:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1831:101:0;;;:::i;:::-;;1201:85;1247:7;1273:6;1201:85;;-1:-1:-1;;;;;1273:6:0;;;160:51:63;;148:2;133:18;1201:85:0;;;;;;;;312:20:53;;;;;;;;;;;;387:14:63;;380:22;362:41;;350:2;335:18;312:20:53;222:187:63;666:202:53;;;;;;:::i;:::-;;:::i;2081:198:0:-;;;;;;:::i;:::-;;:::i;1831:101::-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;666:202:53:-;726:4;758:12;743:11;;:27;739:100;;780:8;:16;;-1:-1:-1;;780:16:53;;;739:100;;;817:8;:15;;-1:-1:-1;;817:15:53;828:4;817:15;;;739:100;-1:-1:-1;;854:8:53;;;;852:11;;666:202::o;2081:198:0:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:0;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:0;;1092:2:63;2161:73:0::1;::::0;::::1;1074:21:63::0;1131:2;1111:18;;;1104:30;1170:34;1150:18;;;1143:62;-1:-1:-1;;;1221:18:63;;;1214:36;1267:19;;2161:73:0::1;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1359:130::-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;719:10:13;1422:23:0;1414:68;;;;-1:-1:-1;;;1414:68:0;;1499:2:63;1414:68:0;;;1481:21:63;;;1518:18;;;1511:30;1577:34;1557:18;;;1550:62;1629:18;;1414:68:0;1297:356:63;2433:187:0;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;414:180:63:-;473:6;526:2;514:9;505:7;501:23;497:32;494:52;;;542:1;539;532:12;494:52;-1:-1:-1;565:23:63;;414:180;-1:-1:-1;414:180:63:o;599:286::-;658:6;711:2;699:9;690:7;686:23;682:32;679:52;;;727:1;724;717:12;679:52;753:23;;-1:-1:-1;;;;;805:31:63;;795:42;;785:70;;851:1;848;841:12;785:70;874:5;599:286;-1:-1:-1;;;599:286:63:o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "offset": [
    259,
    870
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x66 JUMPI DUP1 PUSH4 0xA4E2D634 EQ PUSH2 0x86 JUMPI DUP1 PUSH4 0xC1CE0D43 EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xB6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0xC9 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x93 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x7D JUMP JUMPDEST PUSH2 0x93 PUSH2 0xB1 CALLDATASIZE PUSH1 0x4 PUSH2 0x239 JUMP JUMPDEST PUSH2 0xDD JUMP JUMPDEST PUSH2 0x64 PUSH2 0xC4 CALLDATASIZE PUSH1 0x4 PUSH2 0x252 JUMP JUMPDEST PUSH2 0x111 JUMP JUMPDEST PUSH2 0xD1 PUSH2 0x18F JUMP JUMPDEST PUSH2 0xDB PUSH1 0x0 PUSH2 0x1E9 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x4 SLOAD SUB PUSH2 0xF7 JUMPI PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH2 0x105 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST POP POP PUSH1 0x2 SLOAD PUSH1 0xFF AND ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x119 PUSH2 0x18F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x183 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x18C DUP2 PUSH2 0x1E9 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xDB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x17A JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x24B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x264 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x27B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBD DUP4 BYTE 0xCB 0x4D SELFDESTRUCT RETURNDATACOPY LOG3 EQ 0xE6 PUSH17 0x3E1679ABE20D5208368139AB8739484DF6 0xAA 0xBE 0xEC CREATE PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        259,
        870
      ],
      "op": "PUSH1",
      "path": "53",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        259,
        870
      ],
      "op": "PUSH1",
      "path": "53",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        259,
        870
      ],
      "op": "MSTORE",
      "path": "53"
    },
    "5": {
      "fn": null,
      "offset": [
        259,
        870
      ],
      "op": "CALLVALUE",
      "path": "53"
    },
    "6": {
      "fn": null,
      "offset": [
        259,
        870
      ],
      "op": "DUP1",
      "path": "53"
    },
    "7": {
      "fn": null,
      "offset": [
        259,
        870
      ],
      "op": "ISZERO",
      "path": "53"
    },
    "8": {
      "fn": null,
      "offset": [
        259,
        870
      ],
      "op": "PUSH2",
      "path": "53",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        259,
        870
      ],
      "op": "JUMPI",
      "path": "53"
    },
    "12": {
      "fn": null,
      "offset": [
        259,
        870
      ],
      "op": "PUSH1",
      "path": "53",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        259,
        870
      ],
      "op": "DUP1",
      "path": "53"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        259,
        870
      ],
      "op": "REVERT",
      "path": "53"
    },
    "16": {
      "fn": null,
      "offset": [
        259,
        870
      ],
      "op": "JUMPDEST",
      "path": "53"
    },
    "17": {
      "fn": null,
      "offset": [
        259,
        870
      ],
      "op": "POP",
      "path": "53"
    },
    "18": {
      "fn": null,
      "offset": [
        259,
        870
      ],
      "op": "PUSH1",
      "path": "53",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        259,
        870
      ],
      "op": "CALLDATASIZE",
      "path": "53"
    },
    "21": {
      "fn": null,
      "offset": [
        259,
        870
      ],
      "op": "LT",
      "path": "53"
    },
    "22": {
      "fn": null,
      "offset": [
        259,
        870
      ],
      "op": "PUSH2",
      "path": "53",
      "value": "0x57"
    },
    "25": {
      "fn": null,
      "offset": [
        259,
        870
      ],
      "op": "JUMPI",
      "path": "53"
    },
    "26": {
      "fn": null,
      "offset": [
        259,
        870
      ],
      "op": "PUSH1",
      "path": "53",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        259,
        870
      ],
      "op": "CALLDATALOAD",
      "path": "53"
    },
    "29": {
      "fn": null,
      "offset": [
        259,
        870
      ],
      "op": "PUSH1",
      "path": "53",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        259,
        870
      ],
      "op": "SHR",
      "path": "53"
    },
    "32": {
      "fn": null,
      "offset": [
        259,
        870
      ],
      "op": "DUP1",
      "path": "53"
    },
    "33": {
      "fn": null,
      "offset": [
        259,
        870
      ],
      "op": "PUSH4",
      "path": "53",
      "value": "0x715018A6"
    },
    "38": {
      "fn": null,
      "offset": [
        259,
        870
      ],
      "op": "EQ",
      "path": "53"
    },
    "39": {
      "fn": null,
      "offset": [
        259,
        870
      ],
      "op": "PUSH2",
      "path": "53",
      "value": "0x5C"
    },
    "42": {
      "fn": null,
      "offset": [
        259,
        870
      ],
      "op": "JUMPI",
      "path": "53"
    },
    "43": {
      "fn": null,
      "offset": [
        259,
        870
      ],
      "op": "DUP1",
      "path": "53"
    },
    "44": {
      "fn": null,
      "offset": [
        259,
        870
      ],
      "op": "PUSH4",
      "path": "53",
      "value": "0x8DA5CB5B"
    },
    "49": {
      "fn": null,
      "offset": [
        259,
        870
      ],
      "op": "EQ",
      "path": "53"
    },
    "50": {
      "fn": null,
      "offset": [
        259,
        870
      ],
      "op": "PUSH2",
      "path": "53",
      "value": "0x66"
    },
    "53": {
      "fn": null,
      "offset": [
        259,
        870
      ],
      "op": "JUMPI",
      "path": "53"
    },
    "54": {
      "fn": null,
      "offset": [
        259,
        870
      ],
      "op": "DUP1",
      "path": "53"
    },
    "55": {
      "fn": null,
      "offset": [
        259,
        870
      ],
      "op": "PUSH4",
      "path": "53",
      "value": "0xA4E2D634"
    },
    "60": {
      "fn": null,
      "offset": [
        259,
        870
      ],
      "op": "EQ",
      "path": "53"
    },
    "61": {
      "fn": null,
      "offset": [
        259,
        870
      ],
      "op": "PUSH2",
      "path": "53",
      "value": "0x86"
    },
    "64": {
      "fn": null,
      "offset": [
        259,
        870
      ],
      "op": "JUMPI",
      "path": "53"
    },
    "65": {
      "fn": null,
      "offset": [
        259,
        870
      ],
      "op": "DUP1",
      "path": "53"
    },
    "66": {
      "fn": null,
      "offset": [
        259,
        870
      ],
      "op": "PUSH4",
      "path": "53",
      "value": "0xC1CE0D43"
    },
    "71": {
      "fn": null,
      "offset": [
        259,
        870
      ],
      "op": "EQ",
      "path": "53"
    },
    "72": {
      "fn": null,
      "offset": [
        259,
        870
      ],
      "op": "PUSH2",
      "path": "53",
      "value": "0xA3"
    },
    "75": {
      "fn": null,
      "offset": [
        259,
        870
      ],
      "op": "JUMPI",
      "path": "53"
    },
    "76": {
      "fn": null,
      "offset": [
        259,
        870
      ],
      "op": "DUP1",
      "path": "53"
    },
    "77": {
      "fn": null,
      "offset": [
        259,
        870
      ],
      "op": "PUSH4",
      "path": "53",
      "value": "0xF2FDE38B"
    },
    "82": {
      "fn": null,
      "offset": [
        259,
        870
      ],
      "op": "EQ",
      "path": "53"
    },
    "83": {
      "fn": null,
      "offset": [
        259,
        870
      ],
      "op": "PUSH2",
      "path": "53",
      "value": "0xB6"
    },
    "86": {
      "fn": null,
      "offset": [
        259,
        870
      ],
      "op": "JUMPI",
      "path": "53"
    },
    "87": {
      "fn": null,
      "offset": [
        259,
        870
      ],
      "op": "JUMPDEST",
      "path": "53"
    },
    "88": {
      "fn": null,
      "offset": [
        259,
        870
      ],
      "op": "PUSH1",
      "path": "53",
      "value": "0x0"
    },
    "90": {
      "fn": null,
      "offset": [
        259,
        870
      ],
      "op": "DUP1",
      "path": "53"
    },
    "91": {
      "first_revert": true,
      "fn": null,
      "offset": [
        259,
        870
      ],
      "op": "REVERT",
      "path": "53"
    },
    "92": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "93": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x64"
    },
    "96": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC9"
    },
    "99": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1831,
        1932
      ],
      "op": "JUMP",
      "path": "0"
    },
    "100": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "101": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "STOP",
      "path": "0"
    },
    "102": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "103": {
      "fn": "Ownable.owner",
      "offset": [
        1247,
        1254
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "105": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "SLOAD",
      "path": "0",
      "statement": 0
    },
    "106": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "108": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "109": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "111": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "113": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "115": {
      "op": "SHL"
    },
    "116": {
      "op": "SUB"
    },
    "117": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "118": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "119": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "AND",
      "path": "0"
    },
    "120": {
      "op": "DUP2"
    },
    "121": {
      "op": "MSTORE"
    },
    "122": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "124": {
      "op": "ADD"
    },
    "125": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "126": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "128": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "129": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "DUP1",
      "path": "0"
    },
    "130": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "131": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "SUB",
      "path": "0"
    },
    "132": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "133": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "RETURN",
      "path": "0"
    },
    "134": {
      "offset": [
        312,
        332
      ],
      "op": "JUMPDEST",
      "path": "53"
    },
    "135": {
      "fn": "Ownable.owner",
      "offset": [
        312,
        332
      ],
      "op": "PUSH1",
      "path": "53",
      "value": "0x2"
    },
    "137": {
      "fn": "Ownable.owner",
      "offset": [
        312,
        332
      ],
      "op": "SLOAD",
      "path": "53"
    },
    "138": {
      "fn": "Ownable.owner",
      "offset": [
        312,
        332
      ],
      "op": "PUSH2",
      "path": "53",
      "value": "0x93"
    },
    "141": {
      "fn": "Ownable.owner",
      "offset": [
        312,
        332
      ],
      "op": "SWAP1",
      "path": "53"
    },
    "142": {
      "fn": "Ownable.owner",
      "offset": [
        312,
        332
      ],
      "op": "PUSH1",
      "path": "53",
      "value": "0xFF"
    },
    "144": {
      "fn": "Ownable.owner",
      "offset": [
        312,
        332
      ],
      "op": "AND",
      "path": "53"
    },
    "145": {
      "fn": "Ownable.owner",
      "offset": [
        312,
        332
      ],
      "op": "DUP2",
      "path": "53"
    },
    "146": {
      "fn": "Ownable.owner",
      "offset": [
        312,
        332
      ],
      "op": "JUMP",
      "path": "53"
    },
    "147": {
      "fn": "Ownable.owner",
      "offset": [
        312,
        332
      ],
      "op": "JUMPDEST",
      "path": "53"
    },
    "148": {
      "fn": "Ownable.owner",
      "offset": [
        312,
        332
      ],
      "op": "PUSH1",
      "path": "53",
      "value": "0x40"
    },
    "150": {
      "fn": "Ownable.owner",
      "offset": [
        312,
        332
      ],
      "op": "MLOAD",
      "path": "53"
    },
    "151": {
      "op": "SWAP1"
    },
    "152": {
      "op": "ISZERO"
    },
    "153": {
      "op": "ISZERO"
    },
    "154": {
      "op": "DUP2"
    },
    "155": {
      "op": "MSTORE"
    },
    "156": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "158": {
      "op": "ADD"
    },
    "159": {
      "offset": [
        312,
        332
      ],
      "op": "PUSH2",
      "path": "53",
      "value": "0x7D"
    },
    "162": {
      "op": "JUMP"
    },
    "163": {
      "fn": "SecretDoor.unlockDoor",
      "offset": [
        666,
        868
      ],
      "op": "JUMPDEST",
      "path": "53"
    },
    "164": {
      "fn": "SecretDoor.unlockDoor",
      "offset": [
        666,
        868
      ],
      "op": "PUSH2",
      "path": "53",
      "value": "0x93"
    },
    "167": {
      "fn": "SecretDoor.unlockDoor",
      "offset": [
        666,
        868
      ],
      "op": "PUSH2",
      "path": "53",
      "value": "0xB1"
    },
    "170": {
      "fn": "SecretDoor.unlockDoor",
      "offset": [
        666,
        868
      ],
      "op": "CALLDATASIZE",
      "path": "53"
    },
    "171": {
      "fn": "SecretDoor.unlockDoor",
      "offset": [
        666,
        868
      ],
      "op": "PUSH1",
      "path": "53",
      "value": "0x4"
    },
    "173": {
      "fn": "SecretDoor.unlockDoor",
      "offset": [
        666,
        868
      ],
      "op": "PUSH2",
      "path": "53",
      "value": "0x239"
    },
    "176": {
      "fn": "SecretDoor.unlockDoor",
      "jump": "i",
      "offset": [
        666,
        868
      ],
      "op": "JUMP",
      "path": "53"
    },
    "177": {
      "fn": "SecretDoor.unlockDoor",
      "offset": [
        666,
        868
      ],
      "op": "JUMPDEST",
      "path": "53"
    },
    "178": {
      "fn": "SecretDoor.unlockDoor",
      "offset": [
        666,
        868
      ],
      "op": "PUSH2",
      "path": "53",
      "value": "0xDD"
    },
    "181": {
      "fn": "SecretDoor.unlockDoor",
      "jump": "i",
      "offset": [
        666,
        868
      ],
      "op": "JUMP",
      "path": "53"
    },
    "182": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "183": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x64"
    },
    "186": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC4"
    },
    "189": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "190": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "192": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x252"
    },
    "195": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMP",
      "path": "0"
    },
    "196": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "197": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x111"
    },
    "200": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMP",
      "path": "0"
    },
    "201": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "202": {
      "offset": [
        1094,
        1107
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD1"
    },
    "205": {
      "offset": [
        1094,
        1105
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x18F"
    },
    "208": {
      "jump": "i",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMP",
      "path": "0"
    },
    "209": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "210": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1895,
        1925
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 1,
      "value": "0xDB"
    },
    "213": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1922,
        1923
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "215": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1895,
        1913
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E9"
    },
    "218": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1895,
        1925
      ],
      "op": "JUMP",
      "path": "0"
    },
    "219": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1895,
        1925
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "220": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1831,
        1932
      ],
      "op": "JUMP",
      "path": "0"
    },
    "221": {
      "fn": "SecretDoor.unlockDoor",
      "offset": [
        666,
        868
      ],
      "op": "JUMPDEST",
      "path": "53"
    },
    "222": {
      "fn": "SecretDoor.unlockDoor",
      "offset": [
        726,
        730
      ],
      "op": "PUSH1",
      "path": "53",
      "value": "0x0"
    },
    "224": {
      "fn": "SecretDoor.unlockDoor",
      "offset": [
        758,
        770
      ],
      "op": "DUP2",
      "path": "53"
    },
    "225": {
      "fn": "SecretDoor.unlockDoor",
      "offset": [
        743,
        754
      ],
      "op": "PUSH1",
      "path": "53",
      "value": "0x4"
    },
    "227": {
      "fn": "SecretDoor.unlockDoor",
      "offset": [
        743,
        754
      ],
      "op": "SLOAD",
      "path": "53"
    },
    "228": {
      "branch": 11,
      "fn": "SecretDoor.unlockDoor",
      "offset": [
        743,
        770
      ],
      "op": "SUB",
      "path": "53"
    },
    "229": {
      "fn": "SecretDoor.unlockDoor",
      "offset": [
        739,
        839
      ],
      "op": "PUSH2",
      "path": "53",
      "value": "0xF7"
    },
    "232": {
      "branch": 11,
      "fn": "SecretDoor.unlockDoor",
      "offset": [
        739,
        839
      ],
      "op": "JUMPI",
      "path": "53"
    },
    "233": {
      "fn": "SecretDoor.unlockDoor",
      "offset": [
        780,
        788
      ],
      "op": "PUSH1",
      "path": "53",
      "statement": 2,
      "value": "0x2"
    },
    "235": {
      "fn": "SecretDoor.unlockDoor",
      "offset": [
        780,
        796
      ],
      "op": "DUP1",
      "path": "53"
    },
    "236": {
      "fn": "SecretDoor.unlockDoor",
      "offset": [
        780,
        796
      ],
      "op": "SLOAD",
      "path": "53"
    },
    "237": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "239": {
      "op": "NOT"
    },
    "240": {
      "fn": "SecretDoor.unlockDoor",
      "offset": [
        780,
        796
      ],
      "op": "AND",
      "path": "53"
    },
    "241": {
      "fn": "SecretDoor.unlockDoor",
      "offset": [
        780,
        796
      ],
      "op": "SWAP1",
      "path": "53"
    },
    "242": {
      "fn": "SecretDoor.unlockDoor",
      "offset": [
        780,
        796
      ],
      "op": "SSTORE",
      "path": "53"
    },
    "243": {
      "fn": "SecretDoor.unlockDoor",
      "offset": [
        739,
        839
      ],
      "op": "PUSH2",
      "path": "53",
      "value": "0x105"
    },
    "246": {
      "fn": "SecretDoor.unlockDoor",
      "offset": [
        739,
        839
      ],
      "op": "JUMP",
      "path": "53"
    },
    "247": {
      "fn": "SecretDoor.unlockDoor",
      "offset": [
        739,
        839
      ],
      "op": "JUMPDEST",
      "path": "53"
    },
    "248": {
      "fn": "SecretDoor.unlockDoor",
      "offset": [
        817,
        825
      ],
      "op": "PUSH1",
      "path": "53",
      "statement": 3,
      "value": "0x2"
    },
    "250": {
      "fn": "SecretDoor.unlockDoor",
      "offset": [
        817,
        832
      ],
      "op": "DUP1",
      "path": "53"
    },
    "251": {
      "fn": "SecretDoor.unlockDoor",
      "offset": [
        817,
        832
      ],
      "op": "SLOAD",
      "path": "53"
    },
    "252": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "254": {
      "op": "NOT"
    },
    "255": {
      "fn": "SecretDoor.unlockDoor",
      "offset": [
        817,
        832
      ],
      "op": "AND",
      "path": "53"
    },
    "256": {
      "fn": "SecretDoor.unlockDoor",
      "offset": [
        828,
        832
      ],
      "op": "PUSH1",
      "path": "53",
      "value": "0x1"
    },
    "258": {
      "fn": "SecretDoor.unlockDoor",
      "offset": [
        817,
        832
      ],
      "op": "OR",
      "path": "53"
    },
    "259": {
      "fn": "SecretDoor.unlockDoor",
      "offset": [
        817,
        832
      ],
      "op": "SWAP1",
      "path": "53"
    },
    "260": {
      "fn": "SecretDoor.unlockDoor",
      "offset": [
        817,
        832
      ],
      "op": "SSTORE",
      "path": "53"
    },
    "261": {
      "fn": "SecretDoor.unlockDoor",
      "offset": [
        739,
        839
      ],
      "op": "JUMPDEST",
      "path": "53"
    },
    "262": {
      "op": "POP"
    },
    "263": {
      "op": "POP"
    },
    "264": {
      "fn": "SecretDoor.unlockDoor",
      "offset": [
        854,
        862
      ],
      "op": "PUSH1",
      "path": "53",
      "statement": 4,
      "value": "0x2"
    },
    "266": {
      "fn": "SecretDoor.unlockDoor",
      "offset": [
        854,
        862
      ],
      "op": "SLOAD",
      "path": "53"
    },
    "267": {
      "fn": "SecretDoor.unlockDoor",
      "offset": [
        854,
        862
      ],
      "op": "PUSH1",
      "path": "53",
      "value": "0xFF"
    },
    "269": {
      "fn": "SecretDoor.unlockDoor",
      "offset": [
        854,
        862
      ],
      "op": "AND",
      "path": "53"
    },
    "270": {
      "fn": "SecretDoor.unlockDoor",
      "offset": [
        852,
        863
      ],
      "op": "ISZERO",
      "path": "53"
    },
    "271": {
      "fn": "SecretDoor.unlockDoor",
      "offset": [
        852,
        863
      ],
      "op": "SWAP1",
      "path": "53"
    },
    "272": {
      "fn": "SecretDoor.unlockDoor",
      "jump": "o",
      "offset": [
        666,
        868
      ],
      "op": "JUMP",
      "path": "53"
    },
    "273": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "274": {
      "offset": [
        1094,
        1107
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x119"
    },
    "277": {
      "offset": [
        1094,
        1105
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x18F"
    },
    "280": {
      "jump": "i",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMP",
      "path": "0"
    },
    "281": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "282": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "284": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "286": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "288": {
      "op": "SHL"
    },
    "289": {
      "op": "SUB"
    },
    "290": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2169,
        2191
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 5
    },
    "291": {
      "branch": 12,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2169,
        2191
      ],
      "op": "AND",
      "path": "0"
    },
    "292": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x183"
    },
    "295": {
      "branch": 12,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "296": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "298": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "299": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "303": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "305": {
      "op": "SHL"
    },
    "306": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "DUP2",
      "path": "0"
    },
    "307": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "308": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "310": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "312": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "DUP3",
      "path": "0"
    },
    "313": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "ADD",
      "path": "0"
    },
    "314": {
      "op": "MSTORE"
    },
    "315": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "317": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "319": {
      "op": "DUP3"
    },
    "320": {
      "op": "ADD"
    },
    "321": {
      "op": "MSTORE"
    },
    "322": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "355": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "357": {
      "op": "DUP3"
    },
    "358": {
      "op": "ADD"
    },
    "359": {
      "op": "MSTORE"
    },
    "360": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "367": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "369": {
      "op": "SHL"
    },
    "370": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "372": {
      "op": "DUP3"
    },
    "373": {
      "op": "ADD"
    },
    "374": {
      "op": "MSTORE"
    },
    "375": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "377": {
      "op": "ADD"
    },
    "378": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "379": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "381": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "382": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "DUP1",
      "path": "0"
    },
    "383": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "384": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "SUB",
      "path": "0"
    },
    "385": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "386": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "387": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "388": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2244,
        2272
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 6,
      "value": "0x18C"
    },
    "391": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2263,
        2271
      ],
      "op": "DUP2",
      "path": "0"
    },
    "392": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2244,
        2262
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E9"
    },
    "395": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2244,
        2272
      ],
      "op": "JUMP",
      "path": "0"
    },
    "396": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2244,
        2272
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "397": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "POP",
      "path": "0"
    },
    "398": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMP",
      "path": "0"
    },
    "399": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1359,
        1489
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "400": {
      "fn": "Ownable.owner",
      "offset": [
        1247,
        1254
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "402": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "403": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "405": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "407": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "409": {
      "op": "SHL"
    },
    "410": {
      "op": "SUB"
    },
    "411": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "AND",
      "path": "0"
    },
    "412": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "13",
      "statement": 7
    },
    "413": {
      "branch": 13,
      "fn": "Ownable._checkOwner",
      "offset": [
        1422,
        1445
      ],
      "op": "EQ",
      "path": "0",
      "statement": 8
    },
    "414": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDB"
    },
    "417": {
      "branch": 13,
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "418": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "420": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "421": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "425": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "427": {
      "op": "SHL"
    },
    "428": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "DUP2",
      "path": "0"
    },
    "429": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "430": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "432": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "434": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "DUP3",
      "path": "0"
    },
    "435": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "ADD",
      "path": "0"
    },
    "436": {
      "op": "DUP2"
    },
    "437": {
      "op": "SWAP1"
    },
    "438": {
      "op": "MSTORE"
    },
    "439": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "441": {
      "op": "DUP3"
    },
    "442": {
      "op": "ADD"
    },
    "443": {
      "op": "MSTORE"
    },
    "444": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "477": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "479": {
      "op": "DUP3"
    },
    "480": {
      "op": "ADD"
    },
    "481": {
      "op": "MSTORE"
    },
    "482": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "484": {
      "op": "ADD"
    },
    "485": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x17A"
    },
    "488": {
      "op": "JUMP"
    },
    "489": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2433,
        2620
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "490": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2506,
        2522
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "492": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "DUP1",
      "path": "0"
    },
    "493": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "494": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "496": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "498": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "500": {
      "op": "SHL"
    },
    "501": {
      "op": "SUB"
    },
    "502": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 9
    },
    "503": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "DUP2",
      "path": "0"
    },
    "504": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "AND",
      "path": "0"
    },
    "505": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "507": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "509": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "511": {
      "op": "SHL"
    },
    "512": {
      "op": "SUB"
    },
    "513": {
      "op": "NOT"
    },
    "514": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "DUP4",
      "path": "0"
    },
    "515": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "AND",
      "path": "0"
    },
    "516": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "DUP2",
      "path": "0"
    },
    "517": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "OR",
      "path": "0"
    },
    "518": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "DUP5",
      "path": "0"
    },
    "519": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "520": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2573,
        2613
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 10,
      "value": "0x40"
    },
    "522": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2573,
        2613
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "523": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "524": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "525": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "526": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "AND",
      "path": "0"
    },
    "527": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "528": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "DUP4",
      "path": "0"
    },
    "529": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "530": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2573,
        2613
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "563": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2573,
        2613
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "564": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2506,
        2522
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "565": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2573,
        2613
      ],
      "op": "LOG3",
      "path": "0"
    },
    "566": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2496,
        2620
      ],
      "op": "POP",
      "path": "0"
    },
    "567": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2433,
        2620
      ],
      "op": "POP",
      "path": "0"
    },
    "568": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        2433,
        2620
      ],
      "op": "JUMP",
      "path": "0"
    },
    "569": {
      "op": "JUMPDEST"
    },
    "570": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "572": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "574": {
      "op": "DUP3"
    },
    "575": {
      "op": "DUP5"
    },
    "576": {
      "op": "SUB"
    },
    "577": {
      "op": "SLT"
    },
    "578": {
      "op": "ISZERO"
    },
    "579": {
      "op": "PUSH2",
      "value": "0x24B"
    },
    "582": {
      "op": "JUMPI"
    },
    "583": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "585": {
      "op": "DUP1"
    },
    "586": {
      "op": "REVERT"
    },
    "587": {
      "op": "JUMPDEST"
    },
    "588": {
      "op": "POP"
    },
    "589": {
      "op": "CALLDATALOAD"
    },
    "590": {
      "op": "SWAP2"
    },
    "591": {
      "op": "SWAP1"
    },
    "592": {
      "op": "POP"
    },
    "593": {
      "jump": "o",
      "op": "JUMP"
    },
    "594": {
      "op": "JUMPDEST"
    },
    "595": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "597": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "599": {
      "op": "DUP3"
    },
    "600": {
      "op": "DUP5"
    },
    "601": {
      "op": "SUB"
    },
    "602": {
      "op": "SLT"
    },
    "603": {
      "op": "ISZERO"
    },
    "604": {
      "op": "PUSH2",
      "value": "0x264"
    },
    "607": {
      "op": "JUMPI"
    },
    "608": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "610": {
      "op": "DUP1"
    },
    "611": {
      "op": "REVERT"
    },
    "612": {
      "op": "JUMPDEST"
    },
    "613": {
      "op": "DUP2"
    },
    "614": {
      "op": "CALLDATALOAD"
    },
    "615": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "617": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "619": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "621": {
      "op": "SHL"
    },
    "622": {
      "op": "SUB"
    },
    "623": {
      "op": "DUP2"
    },
    "624": {
      "op": "AND"
    },
    "625": {
      "op": "DUP2"
    },
    "626": {
      "op": "EQ"
    },
    "627": {
      "op": "PUSH2",
      "value": "0x27B"
    },
    "630": {
      "op": "JUMPI"
    },
    "631": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "633": {
      "op": "DUP1"
    },
    "634": {
      "op": "REVERT"
    },
    "635": {
      "op": "JUMPDEST"
    },
    "636": {
      "op": "SWAP4"
    },
    "637": {
      "op": "SWAP3"
    },
    "638": {
      "op": "POP"
    },
    "639": {
      "op": "POP"
    },
    "640": {
      "op": "POP"
    },
    "641": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "2b2b5918b68787decbf69a059af0c529799cf6be",
  "source": "// SCH Course Copyright Policy (C): DO-NOT-SHARE-WITH-ANYONE\n// https://smartcontractshacking.com/#copyright-policy\npragma solidity ^0.8.13;\n\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract SecretDoor is Ownable, ReentrancyGuard {\n\n  bool public isLocked;\n  uint8 private doorNumber;\n  bytes32 private doorOwnerName;\n  bytes32 private secretSpell;\n\n  constructor(\n    uint8 _doorNumber, bool _isLocked,\n    bytes32 _doorOwnerName, bytes32 _secretSpell) {\n\n    doorNumber = _doorNumber;\n    isLocked = _isLocked;\n\n    doorOwnerName = _doorOwnerName;\n    secretSpell = _secretSpell;\n  }\n\n  function unlockDoor(bytes32 _secretSpell) external returns (bool) {\n\n    if (secretSpell == _secretSpell) {\n      isLocked = false;\n    } else {\n      isLocked = true;\n    }\n\n    return !(isLocked);\n  }\n}",
  "sourceMap": "259:611:53:-:0;;;429:233;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:0;719:10:13;936:18:0;:32::i;:::-;1716:1:1;1821:22;;538:10:53;:24;;568:20;;;-1:-1:-1;;538:24:53;;;;;;568:20;;;;-1:-1:-1;;568:20:53;;;;;;;;;;;;;;595:13;:30;631:11;:26;259:611;;2433:187:0;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;14:558:63:-;106:6;114;122;130;183:3;171:9;162:7;158:23;154:33;151:53;;;200:1;197;190:12;151:53;232:9;226:16;282:4;275:5;271:16;264:5;261:27;251:55;;302:1;299;292:12;251:55;375:2;360:18;;354:25;325:5;;-1:-1:-1;417:15:63;;410:23;398:36;;388:64;;448:1;445;438:12;388:64;518:2;503:18;;497:25;562:2;547:18;;;541:25;14:558;;471:7;;-1:-1:-1;14:558:63;-1:-1:-1;;;14:558:63:o;:::-;259:611:53;;;;;;",
  "sourcePath": "contracts/sensitive-on-chain-data-2/SecretDoor.sol",
  "type": "contract"
}