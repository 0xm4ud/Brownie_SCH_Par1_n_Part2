{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "destAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "encodedCalldata",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "result",
          "type": "bytes"
        }
      ],
      "name": "Executed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "NewOperator",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "OperatorRemoved",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "CALL_OPERATION",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DELEGATECALL_OPERATION",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "addOperator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_destAddress",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_encodedCalldata",
          "type": "bytes"
        },
        {
          "internalType": "uint8",
          "name": "operation",
          "type": "uint8"
        }
      ],
      "name": "execute",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_destAddress",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_encodedCalldata",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "executeWithValue",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_operators",
          "type": "address[]"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initialized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC1155BatchReceived",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC1155Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC721Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "operators",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "removeOperator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "allSourcePaths": {
    "10": "/Users/m4ud/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/token/ERC721/utils/ERC721Holder.sol",
    "13": "/Users/m4ud/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/utils/introspection/ERC165.sol",
    "15": "/Users/m4ud/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/utils/introspection/IERC165.sol",
    "16": "contracts/call-attacks-4/BlockSafe.sol",
    "18": "contracts/call-attacks-4/IBlockSafe.sol",
    "2": "/Users/m4ud/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/security/ReentrancyGuard.sol",
    "3": "/Users/m4ud/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/token/ERC1155/IERC1155Receiver.sol",
    "4": "/Users/m4ud/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/token/ERC1155/utils/ERC1155Holder.sol",
    "5": "/Users/m4ud/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/token/ERC1155/utils/ERC1155Receiver.sol",
    "9": "/Users/m4ud/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/token/ERC721/IERC721Receiver.sol"
  },
  "ast": {
    "absolutePath": "contracts/call-attacks-4/BlockSafe.sol",
    "exportedSymbols": {
      "BlockSafe": [
        347
      ],
      "CallHelpers2": [
        31
      ],
      "ERC1155Holder": [
        2681
      ],
      "ERC1155Receiver": [
        4891
      ],
      "ERC165": [
        2732
      ],
      "ERC721Holder": [
        2708
      ],
      "IBlockSafe": [
        518
      ],
      "IERC1155Receiver": [
        5009
      ],
      "IERC165": [
        4921
      ],
      "IERC721Receiver": [
        4909
      ],
      "ReentrancyGuard": [
        2630
      ]
    },
    "id": 348,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".13"
        ],
        "nodeType": "PragmaDirective",
        "src": "116:24:16"
      },
      {
        "absolutePath": "/Users/m4ud/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/security/ReentrancyGuard.sol",
        "file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 348,
        "sourceUnit": 2631,
        "src": "142:62:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/m4ud/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/utils/introspection/ERC165.sol",
        "file": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 348,
        "sourceUnit": 2733,
        "src": "205:64:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/m4ud/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/token/ERC721/utils/ERC721Holder.sol",
        "file": "@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 348,
        "sourceUnit": 2709,
        "src": "270:69:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/m4ud/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/token/ERC1155/utils/ERC1155Holder.sol",
        "file": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol",
        "id": 5,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 348,
        "sourceUnit": 2682,
        "src": "340:71:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/call-attacks-4/IBlockSafe.sol",
        "file": "./IBlockSafe.sol",
        "id": 6,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 348,
        "sourceUnit": 519,
        "src": "412:26:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "CallHelpers2",
        "contractDependencies": [],
        "contractKind": "library",
        "fullyImplemented": true,
        "id": 31,
        "linearizedBaseContracts": [
          31
        ],
        "name": "CallHelpers2",
        "nameLocation": "448:12:16",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 29,
              "nodeType": "Block",
              "src": "567:214:16",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 16,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 13,
                        "name": "_returnData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8,
                        "src": "581:11:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 14,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "593:6:16",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "581:18:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "3638",
                      "id": 15,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "602:2:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_68_by_1",
                        "typeString": "int_const 68"
                      },
                      "value": "68"
                    },
                    "src": "581:23:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 19,
                  "nodeType": "IfStatement",
                  "src": "577:67:16",
                  "trueBody": {
                    "expression": {
                      "hexValue": "5472616e73616374696f6e2072657665727465642073696c656e746c79",
                      "id": 17,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "613:31:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_d0b1e7612ebe87924453e5d4581b9067879655587bae8a2dfee438433699b890",
                        "typeString": "literal_string \"Transaction reverted silently\""
                      },
                      "value": "Transaction reverted silently"
                    },
                    "functionReturnParameters": 12,
                    "id": 18,
                    "nodeType": "Return",
                    "src": "606:38:16"
                  }
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "664:61:16",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "678:37:16",
                        "value": {
                          "arguments": [
                            {
                              "name": "_returnData",
                              "nodeType": "YulIdentifier",
                              "src": "697:11:16"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "710:4:16",
                              "type": "",
                              "value": "0x04"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "693:3:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "693:22:16"
                        },
                        "variableNames": [
                          {
                            "name": "_returnData",
                            "nodeType": "YulIdentifier",
                            "src": "678:11:16"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 8,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "678:11:16",
                      "valueSize": 1
                    },
                    {
                      "declaration": 8,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "697:11:16",
                      "valueSize": 1
                    }
                  ],
                  "id": 20,
                  "nodeType": "InlineAssembly",
                  "src": "655:70:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 23,
                        "name": "_returnData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8,
                        "src": "752:11:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 25,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "766:6:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                              "typeString": "type(string storage pointer)"
                            },
                            "typeName": {
                              "id": 24,
                              "name": "string",
                              "nodeType": "ElementaryTypeName",
                              "src": "766:6:16",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 26,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "765:8:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                          "typeString": "type(string storage pointer)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                          "typeString": "type(string storage pointer)"
                        }
                      ],
                      "expression": {
                        "id": 21,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "741:3:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 22,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "745:6:16",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "741:10:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 27,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "741:33:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 12,
                  "id": 28,
                  "nodeType": "Return",
                  "src": "734:40:16"
                }
              ]
            },
            "id": 30,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRevertMsg",
            "nameLocation": "476:12:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8,
                  "mutability": "mutable",
                  "name": "_returnData",
                  "nameLocation": "511:11:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 30,
                  "src": "498:24:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 7,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "498:5:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "488:40:16"
            },
            "returnParameters": {
              "id": 12,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 30,
                  "src": "552:13:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 10,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "552:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "551:15:16"
            },
            "scope": 31,
            "src": "467:314:16",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 348,
        "src": "440:343:16",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 32,
              "name": "IBlockSafe",
              "nameLocations": [
                "811:10:16"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 518,
              "src": "811:10:16"
            },
            "id": 33,
            "nodeType": "InheritanceSpecifier",
            "src": "811:10:16"
          },
          {
            "baseName": {
              "id": 34,
              "name": "ERC165",
              "nameLocations": [
                "827:6:16"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2732,
              "src": "827:6:16"
            },
            "id": 35,
            "nodeType": "InheritanceSpecifier",
            "src": "827:6:16"
          },
          {
            "baseName": {
              "id": 36,
              "name": "ERC721Holder",
              "nameLocations": [
                "839:12:16"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2708,
              "src": "839:12:16"
            },
            "id": 37,
            "nodeType": "InheritanceSpecifier",
            "src": "839:12:16"
          },
          {
            "baseName": {
              "id": 38,
              "name": "ERC1155Holder",
              "nameLocations": [
                "857:13:16"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2681,
              "src": "857:13:16"
            },
            "id": 39,
            "nodeType": "InheritanceSpecifier",
            "src": "857:13:16"
          },
          {
            "baseName": {
              "id": 40,
              "name": "ReentrancyGuard",
              "nameLocations": [
                "876:15:16"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2630,
              "src": "876:15:16"
            },
            "id": 41,
            "nodeType": "InheritanceSpecifier",
            "src": "876:15:16"
          }
        ],
        "canonicalName": "BlockSafe",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 347,
        "linearizedBaseContracts": [
          347,
          2630,
          2681,
          4891,
          5009,
          2708,
          2732,
          4921,
          4909,
          518
        ],
        "name": "BlockSafe",
        "nameLocation": "794:9:16",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "global": false,
            "id": 44,
            "libraryName": {
              "id": 42,
              "name": "CallHelpers2",
              "nameLocations": [
                "904:12:16"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 31,
              "src": "904:12:16"
            },
            "nodeType": "UsingForDirective",
            "src": "898:29:16",
            "typeName": {
              "id": 43,
              "name": "bytes",
              "nodeType": "ElementaryTypeName",
              "src": "921:5:16",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes_storage_ptr",
                "typeString": "bytes"
              }
            }
          },
          {
            "constant": true,
            "functionSelector": "d3f43c78",
            "id": 47,
            "mutability": "constant",
            "name": "CALL_OPERATION",
            "nameLocation": "955:14:16",
            "nodeType": "VariableDeclaration",
            "scope": 347,
            "src": "933:40:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 45,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "933:5:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 46,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "972:1:16",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "48f33103",
            "id": 50,
            "mutability": "constant",
            "name": "DELEGATECALL_OPERATION",
            "nameLocation": "1001:22:16",
            "nodeType": "VariableDeclaration",
            "scope": 347,
            "src": "979:48:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 48,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "979:5:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "hexValue": "32",
              "id": 49,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1026:1:16",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2_by_1",
                "typeString": "int_const 2"
              },
              "value": "2"
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "eventSelector": "4e2058815a1087a94d8a92ecdce2f91d1370aa8c270ef97b0f28e0a3c6f68a87",
            "id": 62,
            "name": "Executed",
            "nameLocation": "1040:8:16",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 61,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 52,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "caller",
                  "nameLocation": "1066:6:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 62,
                  "src": "1058:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 51,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1058:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "destAddress",
                  "nameLocation": "1090:11:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 62,
                  "src": "1082:19:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 53,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1082:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "encodedCalldata",
                  "nameLocation": "1117:15:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 62,
                  "src": "1111:21:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 55,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1111:5:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 58,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "1150:5:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 62,
                  "src": "1142:13:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 57,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1142:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "result",
                  "nameLocation": "1171:6:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 62,
                  "src": "1165:12:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 59,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1165:5:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1048:135:16"
            },
            "src": "1034:150:16"
          },
          {
            "anonymous": false,
            "eventSelector": "da12ee837e6978172aaf54b16145ffe08414fd8710092ef033c71b8eb6ec189a",
            "id": 66,
            "name": "NewOperator",
            "nameLocation": "1195:11:16",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 65,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "1215:8:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 66,
                  "src": "1207:16:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 63,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1207:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1206:18:16"
            },
            "src": "1189:36:16"
          },
          {
            "anonymous": false,
            "eventSelector": "80c0b871b97b595b16a7741c1b06fed0c6f6f558639f18ccbce50724325dc40d",
            "id": 70,
            "name": "OperatorRemoved",
            "nameLocation": "1236:15:16",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 69,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 68,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "1260:8:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 70,
                  "src": "1252:16:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 67,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1252:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1251:18:16"
            },
            "src": "1230:40:16"
          },
          {
            "constant": false,
            "functionSelector": "158ef93e",
            "id": 73,
            "mutability": "mutable",
            "name": "initialized",
            "nameLocation": "1288:11:16",
            "nodeType": "VariableDeclaration",
            "scope": 347,
            "src": "1276:31:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 71,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1276:4:16",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "66616c7365",
              "id": 72,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1302:5:16",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "13e7c9d8",
            "id": 77,
            "mutability": "mutable",
            "name": "operators",
            "nameLocation": "1345:9:16",
            "nodeType": "VariableDeclaration",
            "scope": 347,
            "src": "1313:41:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 76,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 74,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1321:7:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1313:24:16",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 75,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1332:4:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 85,
              "nodeType": "Block",
              "src": "1386:67:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 80,
                        "name": "initialized",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73,
                        "src": "1404:11:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420696e697469616c697a6564",
                        "id": 81,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1417:17:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6ae2314e839d4d9cfe442dd3a2386a5c83b76bbc48be45cca60d84c71c4359b2",
                          "typeString": "literal_string \"Not initialized\""
                        },
                        "value": "Not initialized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6ae2314e839d4d9cfe442dd3a2386a5c83b76bbc48be45cca60d84c71c4359b2",
                          "typeString": "literal_string \"Not initialized\""
                        }
                      ],
                      "id": 79,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1396:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 82,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1396:39:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83,
                  "nodeType": "ExpressionStatement",
                  "src": "1396:39:16"
                },
                {
                  "id": 84,
                  "nodeType": "PlaceholderStatement",
                  "src": "1445:1:16"
                }
              ]
            },
            "id": 86,
            "name": "isInitialized",
            "nameLocation": "1370:13:16",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 78,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1383:2:16"
            },
            "src": "1361:92:16",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 98,
              "nodeType": "Block",
              "src": "1499:75:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 91,
                          "name": "operators",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 77,
                          "src": "1517:9:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 93,
                        "indexExpression": {
                          "id": 92,
                          "name": "_account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 88,
                          "src": "1527:8:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1517:19:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420616e206f70657261746f72",
                        "id": 94,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1538:17:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f35fd4a738eebd3d8a43ee8cffeb2e7d69b74cccb38138604c5588639da8e775",
                          "typeString": "literal_string \"Not an operator\""
                        },
                        "value": "Not an operator"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f35fd4a738eebd3d8a43ee8cffeb2e7d69b74cccb38138604c5588639da8e775",
                          "typeString": "literal_string \"Not an operator\""
                        }
                      ],
                      "id": 90,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1509:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 95,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1509:47:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 96,
                  "nodeType": "ExpressionStatement",
                  "src": "1509:47:16"
                },
                {
                  "id": 97,
                  "nodeType": "PlaceholderStatement",
                  "src": "1566:1:16"
                }
              ]
            },
            "id": 99,
            "name": "onlyOperator",
            "nameLocation": "1468:12:16",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 89,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 88,
                  "mutability": "mutable",
                  "name": "_account",
                  "nameLocation": "1489:8:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 99,
                  "src": "1481:16:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 87,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1481:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1480:18:16"
            },
            "src": "1459:115:16",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              485
            ],
            "body": {
              "id": 150,
              "nodeType": "Block",
              "src": "1640:386:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 107,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1659:12:16",
                        "subExpression": {
                          "id": 106,
                          "name": "initialized",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 73,
                          "src": "1660:11:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616e206e6f7420626520696e697469616c697a6564207477696365",
                        "id": 108,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1673:30:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1dccb3fc679fe8c6ca0b719e0414267d723f2b90c0188e143b32e786dbfe0632",
                          "typeString": "literal_string \"Can not be initialized twice\""
                        },
                        "value": "Can not be initialized twice"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1dccb3fc679fe8c6ca0b719e0414267d723f2b90c0188e143b32e786dbfe0632",
                          "typeString": "literal_string \"Can not be initialized twice\""
                        }
                      ],
                      "id": 105,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1651:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1651:53:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 110,
                  "nodeType": "ExpressionStatement",
                  "src": "1651:53:16"
                },
                {
                  "expression": {
                    "id": 113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 111,
                      "name": "initialized",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73,
                      "src": "1723:11:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 112,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1737:4:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1723:18:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 114,
                  "nodeType": "ExpressionStatement",
                  "src": "1723:18:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 119,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 116,
                            "name": "_operators",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 102,
                            "src": "1773:10:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                              "typeString": "address[] calldata"
                            }
                          },
                          "id": 117,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1784:6:16",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "1773:17:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "hexValue": "3130",
                          "id": 118,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1794:2:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "src": "1773:23:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616e277420736574206d6f7265207468616e203130206f70657261746f7273206174206f6e6365",
                        "id": 120,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1810:42:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_930af2e14d276e4fdaf6237148fcf88390d68f7bd0ef2cefea71fb755233159a",
                          "typeString": "literal_string \"Can't set more than 10 operators at once\""
                        },
                        "value": "Can't set more than 10 operators at once"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_930af2e14d276e4fdaf6237148fcf88390d68f7bd0ef2cefea71fb755233159a",
                          "typeString": "literal_string \"Can't set more than 10 operators at once\""
                        }
                      ],
                      "id": 115,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1752:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1752:110:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 122,
                  "nodeType": "ExpressionStatement",
                  "src": "1752:110:16"
                },
                {
                  "body": {
                    "id": 148,
                    "nodeType": "Block",
                    "src": "1919:101:16",
                    "statements": [
                      {
                        "expression": {
                          "id": 140,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 134,
                              "name": "operators",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 77,
                              "src": "1933:9:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 138,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 135,
                                "name": "_operators",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 102,
                                "src": "1943:10:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                  "typeString": "address[] calldata"
                                }
                              },
                              "id": 137,
                              "indexExpression": {
                                "id": 136,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 124,
                                "src": "1954:1:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1943:13:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1933:24:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 139,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1960:4:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "1933:31:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 141,
                        "nodeType": "ExpressionStatement",
                        "src": "1933:31:16"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 143,
                                "name": "_operators",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 102,
                                "src": "1995:10:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                  "typeString": "address[] calldata"
                                }
                              },
                              "id": 145,
                              "indexExpression": {
                                "id": 144,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 124,
                                "src": "2006:1:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1995:13:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 142,
                            "name": "NewOperator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 66,
                            "src": "1983:11:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 146,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1983:26:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 147,
                        "nodeType": "EmitStatement",
                        "src": "1978:31:16"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 127,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 124,
                      "src": "1891:1:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 128,
                        "name": "_operators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102,
                        "src": "1895:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      },
                      "id": 129,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1906:6:16",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1895:17:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1891:21:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 149,
                  "initializationExpression": {
                    "assignments": [
                      124
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 124,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "1884:1:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 149,
                        "src": "1878:7:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 123,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "1878:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 126,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 125,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1888:1:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1878:11:16"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 132,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1914:3:16",
                      "subExpression": {
                        "id": 131,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 124,
                        "src": "1914:1:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "id": 133,
                    "nodeType": "ExpressionStatement",
                    "src": "1914:3:16"
                  },
                  "nodeType": "ForStatement",
                  "src": "1873:147:16"
                }
              ]
            },
            "functionSelector": "a224cee7",
            "id": 151,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initialize",
            "nameLocation": "1589:10:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 103,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 102,
                  "mutability": "mutable",
                  "name": "_operators",
                  "nameLocation": "1619:10:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 151,
                  "src": "1600:29:16",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 100,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1600:7:16",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 101,
                    "nodeType": "ArrayTypeName",
                    "src": "1600:9:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1599:31:16"
            },
            "returnParameters": {
              "id": 104,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1640:0:16"
            },
            "scope": 347,
            "src": "1580:446:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              496
            ],
            "body": {
              "id": 175,
              "nodeType": "Block",
              "src": "2231:78:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 169,
                        "name": "_destAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 153,
                        "src": "2257:12:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 170,
                        "name": "_encodedCalldata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 155,
                        "src": "2271:16:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 171,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2289:1:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 172,
                        "name": "operation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 157,
                        "src": "2292:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "id": 168,
                      "name": "_execute",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 279,
                      "src": "2248:8:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_calldata_ptr_$_t_uint256_$_t_uint8_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (address,bytes calldata,uint256,uint8) returns (bytes memory)"
                      }
                    },
                    "id": 173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2248:54:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "functionReturnParameters": 167,
                  "id": 174,
                  "nodeType": "Return",
                  "src": "2241:61:16"
                }
              ]
            },
            "functionSelector": "a22b6e8b",
            "id": 176,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 160,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 159,
                  "name": "isInitialized",
                  "nameLocations": [
                    "2169:13:16"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 86,
                  "src": "2169:13:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "2169:13:16"
              },
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 162,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "2196:3:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "2200:6:16",
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "2196:10:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 164,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 161,
                  "name": "onlyOperator",
                  "nameLocations": [
                    "2183:12:16"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 99,
                  "src": "2183:12:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "2183:24:16"
              }
            ],
            "name": "execute",
            "nameLocation": "2041:7:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 158,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 153,
                  "mutability": "mutable",
                  "name": "_destAddress",
                  "nameLocation": "2066:12:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 176,
                  "src": "2058:20:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 152,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2058:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 155,
                  "mutability": "mutable",
                  "name": "_encodedCalldata",
                  "nameLocation": "2103:16:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 176,
                  "src": "2088:31:16",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 154,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2088:5:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 157,
                  "mutability": "mutable",
                  "name": "operation",
                  "nameLocation": "2135:9:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 176,
                  "src": "2129:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 156,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2129:5:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2048:102:16"
            },
            "returnParameters": {
              "id": 167,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 166,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 176,
                  "src": "2217:12:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 165,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2217:5:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2216:14:16"
            },
            "scope": 347,
            "src": "2032:277:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              507
            ],
            "body": {
              "id": 200,
              "nodeType": "Block",
              "src": "2533:88:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 194,
                        "name": "_destAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 178,
                        "src": "2559:12:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 195,
                        "name": "_encodedCalldata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 180,
                        "src": "2573:16:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "id": 196,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 182,
                        "src": "2591:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 197,
                        "name": "CALL_OPERATION",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47,
                        "src": "2599:14:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "id": 193,
                      "name": "_execute",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 279,
                      "src": "2550:8:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_calldata_ptr_$_t_uint256_$_t_uint8_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (address,bytes calldata,uint256,uint8) returns (bytes memory)"
                      }
                    },
                    "id": 198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2550:64:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "functionReturnParameters": 192,
                  "id": 199,
                  "nodeType": "Return",
                  "src": "2543:71:16"
                }
              ]
            },
            "functionSelector": "fa4bb79d",
            "id": 201,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 185,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 184,
                  "name": "isInitialized",
                  "nameLocations": [
                    "2467:13:16"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 86,
                  "src": "2467:13:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "2467:13:16"
              },
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 187,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "2494:3:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 188,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "2498:6:16",
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "2494:10:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 189,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 186,
                  "name": "onlyOperator",
                  "nameLocations": [
                    "2481:12:16"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 99,
                  "src": "2481:12:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "2481:24:16"
              }
            ],
            "name": "executeWithValue",
            "nameLocation": "2324:16:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 183,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 178,
                  "mutability": "mutable",
                  "name": "_destAddress",
                  "nameLocation": "2358:12:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 201,
                  "src": "2350:20:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 177,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2350:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 180,
                  "mutability": "mutable",
                  "name": "_encodedCalldata",
                  "nameLocation": "2395:16:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 201,
                  "src": "2380:31:16",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 179,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2380:5:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 182,
                  "mutability": "mutable",
                  "name": "_value",
                  "nameLocation": "2429:6:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 201,
                  "src": "2421:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 181,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2421:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2340:101:16"
            },
            "returnParameters": {
              "id": 192,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 191,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 201,
                  "src": "2515:12:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 190,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2515:5:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2514:14:16"
            },
            "scope": 347,
            "src": "2315:306:16",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 278,
              "nodeType": "Block",
              "src": "2815:673:16",
              "statements": [
                {
                  "assignments": [
                    217
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 217,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "2831:7:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 278,
                      "src": "2826:12:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 216,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2826:4:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 218,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2826:12:16"
                },
                {
                  "assignments": [
                    220
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 220,
                      "mutability": "mutable",
                      "name": "result",
                      "nameLocation": "2861:6:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 278,
                      "src": "2848:19:16",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 219,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "2848:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 221,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2848:19:16"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 222,
                      "name": "operation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 209,
                      "src": "2881:9:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 223,
                      "name": "CALL_OPERATION",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47,
                      "src": "2894:14:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "2881:27:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "id": 239,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 237,
                        "name": "operation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 209,
                        "src": "3045:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "id": 238,
                        "name": "DELEGATECALL_OPERATION",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50,
                        "src": "3058:22:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "src": "3045:35:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "id": 254,
                      "nodeType": "Block",
                      "src": "3176:50:16",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "hexValue": "57726f6e67206f7065726174696f6e",
                                "id": 251,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3197:17:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_db66763b0d1c40159244b11c73b06dcaa801345729de269a44614c445547d0a4",
                                  "typeString": "literal_string \"Wrong operation\""
                                },
                                "value": "Wrong operation"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_db66763b0d1c40159244b11c73b06dcaa801345729de269a44614c445547d0a4",
                                  "typeString": "literal_string \"Wrong operation\""
                                }
                              ],
                              "id": 250,
                              "name": "revert",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                -19,
                                -19
                              ],
                              "referencedDeclaration": -19,
                              "src": "3190:6:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (string memory) pure"
                              }
                            },
                            "id": 252,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3190:25:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 253,
                          "nodeType": "ExpressionStatement",
                          "src": "3190:25:16"
                        }
                      ]
                    },
                    "id": 255,
                    "nodeType": "IfStatement",
                    "src": "3041:185:16",
                    "trueBody": {
                      "id": 249,
                      "nodeType": "Block",
                      "src": "3082:88:16",
                      "statements": [
                        {
                          "expression": {
                            "id": 247,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "components": [
                                {
                                  "id": 240,
                                  "name": "success",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 217,
                                  "src": "3097:7:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                {
                                  "id": 241,
                                  "name": "result",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 220,
                                  "src": "3106:6:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "id": 242,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "nodeType": "TupleExpression",
                              "src": "3096:17:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "tuple(bool,bytes memory)"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "arguments": [
                                {
                                  "id": 245,
                                  "name": "_encodedCalldata",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 205,
                                  "src": "3142:16:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_calldata_ptr",
                                    "typeString": "bytes calldata"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_calldata_ptr",
                                    "typeString": "bytes calldata"
                                  }
                                ],
                                "expression": {
                                  "id": 243,
                                  "name": "_destAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 203,
                                  "src": "3116:12:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "id": 244,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3129:12:16",
                                "memberName": "delegatecall",
                                "nodeType": "MemberAccess",
                                "src": "3116:25:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes memory) returns (bool,bytes memory)"
                                }
                              },
                              "id": 246,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3116:43:16",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "tuple(bool,bytes memory)"
                              }
                            },
                            "src": "3096:63:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 248,
                          "nodeType": "ExpressionStatement",
                          "src": "3096:63:16"
                        }
                      ]
                    }
                  },
                  "id": 256,
                  "nodeType": "IfStatement",
                  "src": "2878:348:16",
                  "trueBody": {
                    "id": 236,
                    "nodeType": "Block",
                    "src": "2910:125:16",
                    "statements": [
                      {
                        "expression": {
                          "id": 234,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "id": 225,
                                "name": "success",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 217,
                                "src": "2925:7:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "id": 226,
                                "name": "result",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 220,
                                "src": "2934:6:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "id": 227,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "2924:17:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "tuple(bool,bytes memory)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 232,
                                "name": "_encodedCalldata",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 205,
                                "src": "2994:16:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_calldata_ptr",
                                  "typeString": "bytes calldata"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_calldata_ptr",
                                  "typeString": "bytes calldata"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_calldata_ptr",
                                    "typeString": "bytes calldata"
                                  }
                                ],
                                "expression": {
                                  "id": 228,
                                  "name": "_destAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 203,
                                  "src": "2944:12:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "id": 229,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2957:4:16",
                                "memberName": "call",
                                "nodeType": "MemberAccess",
                                "src": "2944:17:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                }
                              },
                              "id": 231,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "names": [
                                "value"
                              ],
                              "nodeType": "FunctionCallOptions",
                              "options": [
                                {
                                  "id": 230,
                                  "name": "_value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 207,
                                  "src": "2969:6:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "src": "2944:32:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 233,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2944:80:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "tuple(bool,bytes memory)"
                            }
                          },
                          "src": "2924:100:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 235,
                        "nodeType": "ExpressionStatement",
                        "src": "2924:100:16"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "id": 258,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "3240:8:16",
                    "subExpression": {
                      "id": 257,
                      "name": "success",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 217,
                      "src": "3241:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 266,
                  "nodeType": "IfStatement",
                  "src": "3236:68:16",
                  "trueBody": {
                    "id": 265,
                    "nodeType": "Block",
                    "src": "3250:54:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 260,
                                  "name": "result",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 220,
                                  "src": "3271:6:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                },
                                "id": 261,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3278:12:16",
                                "memberName": "getRevertMsg",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 30,
                                "src": "3271:19:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes memory) pure returns (string memory)"
                                }
                              },
                              "id": 262,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3271:21:16",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 259,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -19,
                              -19
                            ],
                            "referencedDeclaration": -19,
                            "src": "3264:6:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 263,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3264:29:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 264,
                        "nodeType": "ExpressionStatement",
                        "src": "3264:29:16"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 268,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3341:3:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 269,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3345:6:16",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3341:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 270,
                        "name": "_destAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 203,
                        "src": "3365:12:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 271,
                        "name": "_encodedCalldata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 205,
                        "src": "3391:16:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "id": 272,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 207,
                        "src": "3421:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 273,
                        "name": "result",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 220,
                        "src": "3441:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 267,
                      "name": "Executed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62,
                      "src": "3319:8:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,bytes memory,uint256,bytes memory)"
                      }
                    },
                    "id": 274,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3319:138:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 275,
                  "nodeType": "EmitStatement",
                  "src": "3314:143:16"
                },
                {
                  "expression": {
                    "id": 276,
                    "name": "result",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 220,
                    "src": "3475:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "functionReturnParameters": 215,
                  "id": 277,
                  "nodeType": "Return",
                  "src": "3468:13:16"
                }
              ]
            },
            "id": 279,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 212,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 211,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "2779:12:16"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2606,
                  "src": "2779:12:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "2779:12:16"
              }
            ],
            "name": "_execute",
            "nameLocation": "2636:8:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 210,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 203,
                  "mutability": "mutable",
                  "name": "_destAddress",
                  "nameLocation": "2662:12:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 279,
                  "src": "2654:20:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 202,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2654:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 205,
                  "mutability": "mutable",
                  "name": "_encodedCalldata",
                  "nameLocation": "2699:16:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 279,
                  "src": "2684:31:16",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 204,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2684:5:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 207,
                  "mutability": "mutable",
                  "name": "_value",
                  "nameLocation": "2733:6:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 279,
                  "src": "2725:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 206,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2725:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 209,
                  "mutability": "mutable",
                  "name": "operation",
                  "nameLocation": "2755:9:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 279,
                  "src": "2749:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 208,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2749:5:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2644:126:16"
            },
            "returnParameters": {
              "id": 215,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 214,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 279,
                  "src": "2801:12:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 213,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2801:5:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2800:14:16"
            },
            "scope": 347,
            "src": "2627:861:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "baseFunctions": [
              512
            ],
            "body": {
              "id": 298,
              "nodeType": "Block",
              "src": "3567:79:16",
              "statements": [
                {
                  "expression": {
                    "id": 292,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 288,
                        "name": "operators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77,
                        "src": "3577:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 290,
                      "indexExpression": {
                        "id": 289,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 281,
                        "src": "3587:8:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3577:19:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 291,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3599:4:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3577:26:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 293,
                  "nodeType": "ExpressionStatement",
                  "src": "3577:26:16"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 295,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 281,
                        "src": "3630:8:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 294,
                      "name": "NewOperator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66,
                      "src": "3618:11:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 296,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3618:21:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 297,
                  "nodeType": "EmitStatement",
                  "src": "3613:26:16"
                }
              ]
            },
            "functionSelector": "9870d7fe",
            "id": 299,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 284,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "3555:3:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 285,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "3559:6:16",
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "3555:10:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 286,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 283,
                  "name": "onlyOperator",
                  "nameLocations": [
                    "3542:12:16"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 99,
                  "src": "3542:12:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "3542:24:16"
              }
            ],
            "name": "addOperator",
            "nameLocation": "3503:11:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 282,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 281,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "3523:8:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 299,
                  "src": "3515:16:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 280,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3515:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3514:18:16"
            },
            "returnParameters": {
              "id": 287,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3567:0:16"
            },
            "scope": 347,
            "src": "3494:152:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              517
            ],
            "body": {
              "id": 318,
              "nodeType": "Block",
              "src": "3728:84:16",
              "statements": [
                {
                  "expression": {
                    "id": 312,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 308,
                        "name": "operators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77,
                        "src": "3738:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 310,
                      "indexExpression": {
                        "id": 309,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 301,
                        "src": "3748:8:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3738:19:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 311,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3760:5:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "3738:27:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 313,
                  "nodeType": "ExpressionStatement",
                  "src": "3738:27:16"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 315,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 301,
                        "src": "3796:8:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 314,
                      "name": "OperatorRemoved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70,
                      "src": "3780:15:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3780:25:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 317,
                  "nodeType": "EmitStatement",
                  "src": "3775:30:16"
                }
              ]
            },
            "functionSelector": "ac8a584a",
            "id": 319,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 304,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "3716:3:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 305,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "3720:6:16",
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "3716:10:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 306,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 303,
                  "name": "onlyOperator",
                  "nameLocations": [
                    "3703:12:16"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 99,
                  "src": "3703:12:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "3703:24:16"
              }
            ],
            "name": "removeOperator",
            "nameLocation": "3661:14:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 302,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 301,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "3684:8:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 319,
                  "src": "3676:16:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 300,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3676:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3675:18:16"
            },
            "returnParameters": {
              "id": 307,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3728:0:16"
            },
            "scope": 347,
            "src": "3652:160:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              2731,
              4890
            ],
            "body": {
              "id": 341,
              "nodeType": "Block",
              "src": "3978:131:16",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 339,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "id": 334,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 329,
                        "name": "interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 321,
                        "src": "4007:11:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 331,
                              "name": "IBlockSafe",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 518,
                              "src": "4027:10:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IBlockSafe_$518_$",
                                "typeString": "type(contract IBlockSafe)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_contract$_IBlockSafe_$518_$",
                                "typeString": "type(contract IBlockSafe)"
                              }
                            ],
                            "id": 330,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "4022:4:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 332,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4022:16:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_contract$_IBlockSafe_$518",
                            "typeString": "type(contract IBlockSafe)"
                          }
                        },
                        "id": 333,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "4039:11:16",
                        "memberName": "interfaceId",
                        "nodeType": "MemberAccess",
                        "src": "4022:28:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "src": "4007:43:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 337,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 321,
                          "src": "4090:11:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "expression": {
                          "id": 335,
                          "name": "super",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -25,
                          "src": "4066:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_super$_BlockSafe_$347_$",
                            "typeString": "type(contract super BlockSafe)"
                          }
                        },
                        "id": 336,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4072:17:16",
                        "memberName": "supportsInterface",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4890,
                        "src": "4066:23:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                          "typeString": "function (bytes4) view returns (bool)"
                        }
                      },
                      "id": 338,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4066:36:16",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4007:95:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 328,
                  "id": 340,
                  "nodeType": "Return",
                  "src": "3988:114:16"
                }
              ]
            },
            "functionSelector": "01ffc9a7",
            "id": 342,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "3827:17:16",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 325,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 323,
                  "name": "ERC165",
                  "nameLocations": [
                    "3926:6:16"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2732,
                  "src": "3926:6:16"
                },
                {
                  "id": 324,
                  "name": "ERC1155Receiver",
                  "nameLocations": [
                    "3934:15:16"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4891,
                  "src": "3934:15:16"
                }
              ],
              "src": "3917:33:16"
            },
            "parameters": {
              "id": 322,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 321,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "3852:11:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 342,
                  "src": "3845:18:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 320,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "3845:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3844:20:16"
            },
            "returnParameters": {
              "id": 328,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 327,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 342,
                  "src": "3968:4:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 326,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3968:4:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3967:6:16"
            },
            "scope": 347,
            "src": "3818:291:16",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 345,
              "nodeType": "Block",
              "src": "4141:2:16",
              "statements": []
            },
            "id": 346,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 343,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4121:2:16"
            },
            "returnParameters": {
              "id": 344,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4141:0:16"
            },
            "scope": 347,
            "src": "4114:29:16",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 348,
        "src": "785:3360:16",
        "usedErrors": []
      }
    ],
    "src": "116:4030:16"
  },
  "bytecode": "",
  "bytecodeSha1": "5473044bfc674bb8ac1e070a83b97b1d357032e8",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.19+commit.7dd6d404"
  },
  "contractName": "BlockSafe",
  "coverageMap": {
    "branches": {
      "10": {},
      "13": {},
      "15": {},
      "16": {
        "BlockSafe._execute": {
          "30": [
            2881,
            2908,
            false
          ],
          "31": [
            3045,
            3080,
            false
          ],
          "32": [
            3241,
            3248,
            false
          ]
        },
        "BlockSafe.executeWithValue": {
          "28": [
            1404,
            1415,
            true
          ],
          "29": [
            1517,
            1536,
            true
          ]
        },
        "BlockSafe.initialize": {
          "26": [
            1659,
            1671,
            true
          ],
          "27": [
            1773,
            1796,
            true
          ]
        },
        "CallHelpers2.getRevertMsg": {
          "33": [
            581,
            604,
            false
          ]
        }
      },
      "18": {},
      "2": {
        "ReentrancyGuard._nonReentrantBefore": {
          "34": [
            2468,
            2487,
            true
          ]
        }
      },
      "3": {},
      "4": {},
      "5": {},
      "9": {}
    },
    "statements": {
      "10": {},
      "13": {
        "ERC165.supportsInterface": {
          "14": [
            930,
            977
          ]
        }
      },
      "15": {},
      "16": {
        "BlockSafe._execute": {
          "15": [
            2924,
            3024
          ],
          "16": [
            3096,
            3159
          ],
          "17": [
            3190,
            3215
          ],
          "18": [
            3264,
            3293
          ],
          "19": [
            3314,
            3457
          ],
          "20": [
            3468,
            3481
          ]
        },
        "BlockSafe.addOperator": {
          "1": [
            3577,
            3603
          ],
          "2": [
            3613,
            3639
          ]
        },
        "BlockSafe.execute": {
          "9": [
            2241,
            2302
          ]
        },
        "BlockSafe.executeWithValue": {
          "12": [
            2543,
            2614
          ]
        },
        "BlockSafe.initialize": {
          "3": [
            1651,
            1704
          ],
          "4": [
            1723,
            1741
          ],
          "5": [
            1752,
            1862
          ],
          "6": [
            1933,
            1964
          ],
          "7": [
            1978,
            2009
          ],
          "8": [
            1914,
            1917
          ]
        },
        "BlockSafe.removeOperator": {
          "10": [
            3738,
            3765
          ],
          "11": [
            3775,
            3805
          ]
        },
        "BlockSafe.supportsInterface": {
          "0": [
            3988,
            4102
          ]
        },
        "CallHelpers2.getRevertMsg": {
          "24": [
            606,
            644
          ],
          "25": [
            734,
            774
          ]
        }
      },
      "18": {},
      "2": {
        "ReentrancyGuard._nonReentrantAfter": {
          "21": [
            2809,
            2831
          ]
        },
        "ReentrancyGuard._nonReentrantBefore": {
          "22": [
            2460,
            2523
          ],
          "23": [
            2598,
            2616
          ]
        }
      },
      "3": {},
      "4": {},
      "5": {
        "ERC1155Receiver.supportsInterface": {
          "13": [
            505,
            601
          ]
        }
      },
      "9": {}
    }
  },
  "dependencies": [
    "CallHelpers2",
    "OpenZeppelin/openzeppelin-contracts@4.8.0/ERC1155Holder",
    "OpenZeppelin/openzeppelin-contracts@4.8.0/ERC1155Receiver",
    "OpenZeppelin/openzeppelin-contracts@4.8.0/ERC165",
    "OpenZeppelin/openzeppelin-contracts@4.8.0/ERC721Holder",
    "IBlockSafe",
    "OpenZeppelin/openzeppelin-contracts@4.8.0/IERC1155Receiver",
    "OpenZeppelin/openzeppelin-contracts@4.8.0/IERC165",
    "OpenZeppelin/openzeppelin-contracts@4.8.0/IERC721Receiver",
    "OpenZeppelin/openzeppelin-contracts@4.8.0/ReentrancyGuard"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "785:3360:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3818:291;;;;;;;;;;-1:-1:-1;3818:291:16;;;;;:::i;:::-;;:::i;:::-;;;470:14:33;;463:22;445:41;;433:2;418:18;3818:291:16;;;;;;;;1313:41;;;;;;;;;;-1:-1:-1;1313:41:16;;;;;:::i;:::-;;;;;;;;;;;;;;;;588:200:10;;;;;;;;;;-1:-1:-1;588:200:10;;;;;:::i;:::-;-1:-1:-1;;;588:200:10;;;;;;;;;;-1:-1:-1;;;;;;2640:33:33;;;2622:52;;2610:2;2595:18;588:200:10;2478:202:33;1276:31:16;;;;;;;;;;-1:-1:-1;1276:31:16;;;;;;;;979:48;;;;;;;;;;;;1026:1;979:48;;;;;2857:4:33;2845:17;;;2827:36;;2815:2;2800:18;979:48:16;2685:184:33;3494:152:16;;;;;;;;;;-1:-1:-1;3494:152:16;;;;;:::i;:::-;;:::i;:::-;;1580:446;;;;;;;;;;-1:-1:-1;1580:446:16;;;;;:::i;:::-;;:::i;2032:277::-;;;;;;;;;;-1:-1:-1;2032:277:16;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3652:160::-;;;;;;;;;;-1:-1:-1;3652:160:16;;;;;:::i;:::-;;:::i;724:247:4:-;;;;;;;;;;-1:-1:-1;724:247:4;;;;;:::i;:::-;;:::i;933:40:16:-;;;;;;;;;;;;972:1;933:40;;499:219:4;;;;;;;;;;-1:-1:-1;499:219:4;;;;;:::i;:::-;-1:-1:-1;;;499:219:4;;;;;;;;2315:306:16;;;;;;:::i;:::-;;:::i;3818:291::-;3968:4;-1:-1:-1;;;;;;4007:43:16;;-1:-1:-1;;;4007:43:16;;:95;;;4066:36;4090:11;4066:23;:36::i;:::-;3988:114;3818:291;-1:-1:-1;;3818:291:16:o;3494:152::-;3555:10;1517:19;;;;:9;:19;;;;;;;;1509:47;;;;-1:-1:-1;;;1509:47:16;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;3577:19:16;::::1;;::::0;;;:9:::1;:19;::::0;;;;;;;;:26;;-1:-1:-1;;3577:26:16::1;3599:4;3577:26;::::0;;3618:21;;8565:51:33;;;3618:21:16::1;::::0;8538:18:33;3618:21:16::1;;;;;;;;3494:152:::0;;:::o;1580:446::-;1660:11;;;;1659:12;1651:53;;;;-1:-1:-1;;;1651:53:16;;8829:2:33;1651:53:16;;;8811:21:33;8868:2;8848:18;;;8841:30;8907;8887:18;;;8880:58;8955:18;;1651:53:16;8627:352:33;1651:53:16;1737:4;1723:18;;-1:-1:-1;;1723:18:16;;;;;1794:2;1773:23;;;1752:110;;;;-1:-1:-1;;;1752:110:16;;9186:2:33;1752:110:16;;;9168:21:33;9225:2;9205:18;;;9198:30;9264:34;9244:18;;;9237:62;-1:-1:-1;;;9315:18:33;;;9308:38;9363:19;;1752:110:16;8984:404:33;1752:110:16;1878:7;1873:147;1891:21;;;;-1:-1:-1;1873:147:16;;;1960:4;1933:9;:24;1943:10;;1954:1;1943:13;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1933:24:16;;;;;;;;;;;;-1:-1:-1;1933:24:16;:31;;-1:-1:-1;;1933:31:16;;;;;;;;;;1983:26;1995:10;;1933:31;1995:13;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;1983:26;;-1:-1:-1;;;;;8583:32:33;;;8565:51;;8553:2;8538:18;1983:26:16;;;;;;;1914:3;;;;:::i;:::-;;;;1873:147;;;;1580:446;;:::o;2032:277::-;1404:11;;2217:12;;1404:11;;1396:39;;;;-1:-1:-1;;;1396:39:16;;10004:2:33;1396:39:16;;;9986:21:33;10043:2;10023:18;;;10016:30;-1:-1:-1;;;10062:18:33;;;10055:45;10117:18;;1396:39:16;9802:339:33;1396:39:16;2196:10:::1;1517:19;::::0;;;:9:::1;:19;::::0;;;;;::::1;;1509:47;;;;-1:-1:-1::0;;;1509:47:16::1;;;;;;;:::i;:::-;2248:54:::2;2257:12;2271:16;;2289:1;2292:9;2248:8;:54::i;:::-;2241:61:::0;2032:277;-1:-1:-1;;;;;;2032:277:16:o;3652:160::-;3716:10;1517:19;;;;:9;:19;;;;;;;;1509:47;;;;-1:-1:-1;;;1509:47:16;;;;;;;:::i;:::-;-1:-1:-1;;;;;3738:19:16;::::1;3760:5;3738:19:::0;;;:9:::1;:19;::::0;;;;;;;;:27;;-1:-1:-1;;3738:27:16::1;::::0;;3780:25;;8565:51:33;;;3780:25:16::1;::::0;8538:18:33;3780:25:16::1;8419:203:33::0;724:247:4;-1:-1:-1;;;724:247:4;;;;;;;;:::o;2315:306:16:-;1404:11;;2515:12;;1404:11;;1396:39;;;;-1:-1:-1;;;1396:39:16;;10004:2:33;1396:39:16;;;9986:21:33;10043:2;10023:18;;;10016:30;-1:-1:-1;;;10062:18:33;;;10055:45;10117:18;;1396:39:16;9802:339:33;1396:39:16;2494:10:::1;1517:19;::::0;;;:9:::1;:19;::::0;;;;;::::1;;1509:47;;;;-1:-1:-1::0;;;1509:47:16::1;;;;;;;:::i;:::-;2550:64:::2;2559:12;2573:16;;2591:6;972:1;2550:8;:64::i;387:221:5:-:0;489:4;-1:-1:-1;;;;;;512:49:5;;-1:-1:-1;;;512:49:5;;:89;;-1:-1:-1;;;;;;;;;;937:40:13;;;565:36:5;829:155:13;2627:861:16;2801:12;2261:21:2;:19;:21::i;:::-;2826:12:16::1;2848:19;-1:-1:-1::0;;2881:27:16::1;::::0;::::1;::::0;2878:348:::1;;2944:12;-1:-1:-1::0;;;;;2944:17:16::1;2969:6;2994:16;;2944:80;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;2924:100:16;;-1:-1:-1;2924:100:16;-1:-1:-1;2878:348:16::1;;;-1:-1:-1::0;;3045:35:16::1;::::0;::::1;::::0;3041:185:::1;;3116:12;-1:-1:-1::0;;;;;3116:25:16::1;3142:16;;3116:43;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3041:185;3190:25;::::0;-1:-1:-1;;;3190:25:16;;10624:2:33;3190:25:16::1;::::0;::::1;10606:21:33::0;10663:2;10643:18;;;10636:30;-1:-1:-1;;;10682:18:33;;;10675:45;10737:18;;3190:25:16::1;10422:339:33::0;3041:185:16::1;3241:7;3236:68;;3271:21;:6;:19;:21::i;:::-;3264:29;;-1:-1:-1::0;;;3264:29:16::1;;;;;;;;:::i;3236:68::-;3319:138;3341:10;3365:12;3391:16;;3421:6;3441;3319:138;;;;;;;;;;;:::i;:::-;;;;;;;;3475:6:::0;-1:-1:-1;;2303:20:2;1716:1;2809:7;:22;2629:209;2336:287;1759:1;2468:7;;:19;2460:63;;;;-1:-1:-1;;;2460:63:2;;12018:2:33;2460:63:2;;;12000:21:33;12057:2;12037:18;;;12030:30;12096:33;12076:18;;;12069:61;12147:18;;2460:63:2;11816:355:33;2460:63:2;1759:1;2598:7;:18;2336:287::o;467:314:16:-;552:13;602:2;581:11;:18;:23;577:67;;;-1:-1:-1;;606:38:16;;;;;;;;;;;;;;;;;;467:314::o;577:67::-;710:4;697:11;693:22;678:37;;752:11;741:33;;;;;;;;;;;;:::i;14:286:33:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:33;;209:43;;199:71;;266:1;263;256:12;199:71;289:5;14:286;-1:-1:-1;;;14:286:33:o;497:173::-;565:20;;-1:-1:-1;;;;;614:31:33;;604:42;;594:70;;660:1;657;650:12;594:70;497:173;;;:::o;675:186::-;734:6;787:2;775:9;766:7;762:23;758:32;755:52;;;803:1;800;793:12;755:52;826:29;845:9;826:29;:::i;866:127::-;927:10;922:3;918:20;915:1;908:31;958:4;955:1;948:15;982:4;979:1;972:15;998:275;1069:2;1063:9;1134:2;1115:13;;-1:-1:-1;;1111:27:33;1099:40;;1169:18;1154:34;;1190:22;;;1151:62;1148:88;;;1216:18;;:::i;:::-;1252:2;1245:22;998:275;;-1:-1:-1;998:275:33:o;1278:186::-;1326:4;1359:18;1351:6;1348:30;1345:56;;;1381:18;;:::i;:::-;-1:-1:-1;1447:2:33;1426:15;-1:-1:-1;;1422:29:33;1453:4;1418:40;;1278:186::o;1469:462::-;1511:5;1564:3;1557:4;1549:6;1545:17;1541:27;1531:55;;1582:1;1579;1572:12;1531:55;1618:6;1605:20;1649:48;1665:31;1693:2;1665:31;:::i;:::-;1649:48;:::i;:::-;1722:2;1713:7;1706:19;1768:3;1761:4;1756:2;1748:6;1744:15;1740:26;1737:35;1734:55;;;1785:1;1782;1775:12;1734:55;1850:2;1843:4;1835:6;1831:17;1824:4;1815:7;1811:18;1798:55;1898:1;1873:16;;;1891:4;1869:27;1862:38;;;;1877:7;1469:462;-1:-1:-1;;;1469:462:33:o;1936:537::-;2031:6;2039;2047;2055;2108:3;2096:9;2087:7;2083:23;2079:33;2076:53;;;2125:1;2122;2115:12;2076:53;2148:29;2167:9;2148:29;:::i;:::-;2138:39;;2196:38;2230:2;2219:9;2215:18;2196:38;:::i;:::-;2186:48;;2281:2;2270:9;2266:18;2253:32;2243:42;;2336:2;2325:9;2321:18;2308:32;2363:18;2355:6;2352:30;2349:50;;;2395:1;2392;2385:12;2349:50;2418:49;2459:7;2450:6;2439:9;2435:22;2418:49;:::i;:::-;2408:59;;;1936:537;;;;;;;:::o;2874:615::-;2960:6;2968;3021:2;3009:9;3000:7;2996:23;2992:32;2989:52;;;3037:1;3034;3027:12;2989:52;3077:9;3064:23;3106:18;3147:2;3139:6;3136:14;3133:34;;;3163:1;3160;3153:12;3133:34;3201:6;3190:9;3186:22;3176:32;;3246:7;3239:4;3235:2;3231:13;3227:27;3217:55;;3268:1;3265;3258:12;3217:55;3308:2;3295:16;3334:2;3326:6;3323:14;3320:34;;;3350:1;3347;3340:12;3320:34;3403:7;3398:2;3388:6;3385:1;3381:14;3377:2;3373:23;3369:32;3366:45;3363:65;;;3424:1;3421;3414:12;3363:65;3455:2;3447:11;;;;;3477:6;;-1:-1:-1;2874:615:33;;-1:-1:-1;;;;2874:615:33:o;3494:347::-;3545:8;3555:6;3609:3;3602:4;3594:6;3590:17;3586:27;3576:55;;3627:1;3624;3617:12;3576:55;-1:-1:-1;3650:20:33;;3693:18;3682:30;;3679:50;;;3725:1;3722;3715:12;3679:50;3762:4;3754:6;3750:17;3738:29;;3814:3;3807:4;3798:6;3790;3786:19;3782:30;3779:39;3776:59;;;3831:1;3828;3821:12;3776:59;3494:347;;;;;:::o;3846:640::-;3932:6;3940;3948;3956;4009:2;3997:9;3988:7;3984:23;3980:32;3977:52;;;4025:1;4022;4015:12;3977:52;4048:29;4067:9;4048:29;:::i;:::-;4038:39;;4128:2;4117:9;4113:18;4100:32;4155:18;4147:6;4144:30;4141:50;;;4187:1;4184;4177:12;4141:50;4226:58;4276:7;4267:6;4256:9;4252:22;4226:58;:::i;:::-;4303:8;;-1:-1:-1;4200:84:33;-1:-1:-1;;4388:2:33;4373:18;;4360:32;4432:4;4421:16;;4411:27;;4401:55;;4452:1;4449;4442:12;4401:55;3846:640;;;;-1:-1:-1;3846:640:33;;-1:-1:-1;;3846:640:33:o;4491:250::-;4576:1;4586:113;4600:6;4597:1;4594:13;4586:113;;;4676:11;;;4670:18;4657:11;;;4650:39;4622:2;4615:10;4586:113;;;-1:-1:-1;;4733:1:33;4715:16;;4708:27;4491:250::o;4746:270::-;4787:3;4825:5;4819:12;4852:6;4847:3;4840:19;4868:76;4937:6;4930:4;4925:3;4921:14;4914:4;4907:5;4903:16;4868:76;:::i;:::-;4998:2;4977:15;-1:-1:-1;;4973:29:33;4964:39;;;;5005:4;4960:50;;4746:270;-1:-1:-1;;4746:270:33:o;5021:217::-;5168:2;5157:9;5150:21;5131:4;5188:44;5228:2;5217:9;5213:18;5205:6;5188:44;:::i;5243:712::-;5297:5;5350:3;5343:4;5335:6;5331:17;5327:27;5317:55;;5368:1;5365;5358:12;5317:55;5404:6;5391:20;5430:4;5453:18;5449:2;5446:26;5443:52;;;5475:18;;:::i;:::-;5521:2;5518:1;5514:10;5544:28;5568:2;5564;5560:11;5544:28;:::i;:::-;5606:15;;;5676;;;5672:24;;;5637:12;;;;5708:15;;;5705:35;;;5736:1;5733;5726:12;5705:35;5772:2;5764:6;5760:15;5749:26;;5784:142;5800:6;5795:3;5792:15;5784:142;;;5866:17;;5854:30;;5817:12;;;;5904;;;;5784:142;;;5944:5;5243:712;-1:-1:-1;;;;;;;5243:712:33:o;5960:943::-;6114:6;6122;6130;6138;6146;6199:3;6187:9;6178:7;6174:23;6170:33;6167:53;;;6216:1;6213;6206:12;6167:53;6239:29;6258:9;6239:29;:::i;:::-;6229:39;;6287:38;6321:2;6310:9;6306:18;6287:38;:::i;:::-;6277:48;;6376:2;6365:9;6361:18;6348:32;6399:18;6440:2;6432:6;6429:14;6426:34;;;6456:1;6453;6446:12;6426:34;6479:61;6532:7;6523:6;6512:9;6508:22;6479:61;:::i;:::-;6469:71;;6593:2;6582:9;6578:18;6565:32;6549:48;;6622:2;6612:8;6609:16;6606:36;;;6638:1;6635;6628:12;6606:36;6661:63;6716:7;6705:8;6694:9;6690:24;6661:63;:::i;:::-;6651:73;;6777:3;6766:9;6762:19;6749:33;6733:49;;6807:2;6797:8;6794:16;6791:36;;;6823:1;6820;6813:12;6791:36;;6846:51;6889:7;6878:8;6867:9;6863:24;6846:51;:::i;:::-;6836:61;;;5960:943;;;;;;;;:::o;6908:606::-;7012:6;7020;7028;7036;7044;7097:3;7085:9;7076:7;7072:23;7068:33;7065:53;;;7114:1;7111;7104:12;7065:53;7137:29;7156:9;7137:29;:::i;:::-;7127:39;;7185:38;7219:2;7208:9;7204:18;7185:38;:::i;:::-;7175:48;;7270:2;7259:9;7255:18;7242:32;7232:42;;7321:2;7310:9;7306:18;7293:32;7283:42;;7376:3;7365:9;7361:19;7348:33;7404:18;7396:6;7393:30;7390:50;;;7436:1;7433;7426:12;7390:50;7459:49;7500:7;7491:6;7480:9;7476:22;7459:49;:::i;7519:551::-;7607:6;7615;7623;7631;7684:2;7672:9;7663:7;7659:23;7655:32;7652:52;;;7700:1;7697;7690:12;7652:52;7723:29;7742:9;7723:29;:::i;:::-;7713:39;;7803:2;7792:9;7788:18;7775:32;7830:18;7822:6;7819:30;7816:50;;;7862:1;7859;7852:12;7816:50;7901:58;7951:7;7942:6;7931:9;7927:22;7901:58;:::i;:::-;7519:551;;7978:8;;-1:-1:-1;7875:84:33;;8060:2;8045:18;8032:32;;7519:551;-1:-1:-1;;;;7519:551:33:o;8075:339::-;8277:2;8259:21;;;8316:2;8296:18;;;8289:30;-1:-1:-1;;;8350:2:33;8335:18;;8328:45;8405:2;8390:18;;8075:339::o;9393:127::-;9454:10;9449:3;9445:20;9442:1;9435:31;9485:4;9482:1;9475:15;9509:4;9506:1;9499:15;9525:272;9562:3;9606:4;9599:5;9595:16;9635:4;9626:7;9623:17;9620:140;;9682:10;9677:3;9673:20;9670:1;9663:31;9717:4;9714:1;9707:15;9745:4;9742:1;9735:15;9620:140;9789:1;9776:15;;9525:272;-1:-1:-1;;9525:272:33:o;10146:271::-;10329:6;10321;10316:3;10303:33;10285:3;10355:16;;10380:13;;;10355:16;10146:271;-1:-1:-1;10146:271:33:o;10990:821::-;-1:-1:-1;;;;;11315:15:33;;;11297:34;;11367:15;;11362:2;11347:18;;11340:43;11277:3;11414:2;11399:18;;11392:31;;;11439:19;;11432:35;;;11240:4;11460:6;11510;11504:3;11489:19;;11476:49;11575:1;11569:3;11560:6;11549:9;11545:22;11541:32;11534:43;11636:2;11632:7;11627:2;11619:6;11615:15;11611:29;11600:9;11596:45;11677:6;11672:2;11661:9;11657:18;11650:34;11745:3;11733:9;11729:2;11725:18;11721:28;11715:3;11704:9;11700:19;11693:57;11767:38;11800:3;11796:2;11792:12;11784:6;11767:38;:::i;:::-;11759:46;10990:821;-1:-1:-1;;;;;;;;;10990:821:33:o;12176:648::-;12256:6;12309:2;12297:9;12288:7;12284:23;12280:32;12277:52;;;12325:1;12322;12315:12;12277:52;12358:9;12352:16;12391:18;12383:6;12380:30;12377:50;;;12423:1;12420;12413:12;12377:50;12446:22;;12499:4;12491:13;;12487:27;-1:-1:-1;12477:55:33;;12528:1;12525;12518:12;12477:55;12557:2;12551:9;12582:48;12598:31;12626:2;12598:31;:::i;12582:48::-;12653:2;12646:5;12639:17;12693:7;12688:2;12683;12679;12675:11;12671:20;12668:33;12665:53;;;12714:1;12711;12704:12;12665:53;12727:67;12791:2;12786;12779:5;12775:14;12770:2;12766;12762:11;12727:67;:::i",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "onERC721Received(address,address,uint256,bytes)": {
        "details": "See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`."
      }
    },
    "version": 1
  },
  "offset": [
    785,
    4145
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xC6 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA224CEE7 GT PUSH2 0x7F JUMPI DUP1 PUSH4 0xBC197C81 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xBC197C81 EQ PUSH2 0x24B JUMPI DUP1 PUSH4 0xD3F43C78 EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0x280 JUMPI DUP1 PUSH4 0xFA4BB79D EQ PUSH2 0x2AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA224CEE7 EQ PUSH2 0x1DE JUMPI DUP1 PUSH4 0xA22B6E8B EQ PUSH2 0x1FE JUMPI DUP1 PUSH4 0xAC8A584A EQ PUSH2 0x22B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD2 JUMPI DUP1 PUSH4 0x13E7C9D8 EQ PUSH2 0x107 JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x137 JUMPI DUP1 PUSH4 0x158EF93E EQ PUSH2 0x17B JUMPI DUP1 PUSH4 0x48F33103 EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0x9870D7FE EQ PUSH2 0x1BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0xCD JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF2 PUSH2 0xED CALLDATASIZE PUSH1 0x4 PUSH2 0x945 JUMP JUMPDEST PUSH2 0x2BF JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x113 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF2 PUSH2 0x122 CALLDATASIZE PUSH1 0x4 PUSH2 0x992 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x143 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x162 PUSH2 0x152 CALLDATASIZE PUSH1 0x4 PUSH2 0xA72 JUMP JUMPDEST PUSH4 0xA85BD01 PUSH1 0xE1 SHL SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xFE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x187 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0xF2 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AA PUSH1 0x2 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xFE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DC PUSH2 0x1D7 CALLDATASIZE PUSH1 0x4 PUSH2 0x992 JUMP JUMPDEST PUSH2 0x2EA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DC PUSH2 0x1F9 CALLDATASIZE PUSH1 0x4 PUSH2 0xADA JUMP JUMPDEST PUSH2 0x37E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21E PUSH2 0x219 CALLDATASIZE PUSH1 0x4 PUSH2 0xB98 JUMP JUMPDEST PUSH2 0x522 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFE SWAP2 SWAP1 PUSH2 0xC54 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x237 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DC PUSH2 0x246 CALLDATASIZE PUSH1 0x4 PUSH2 0x992 JUMP JUMPDEST PUSH2 0x5B0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x257 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x162 PUSH2 0x266 CALLDATASIZE PUSH1 0x4 PUSH2 0xCE7 JUMP JUMPDEST PUSH2 0x630 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x277 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AA PUSH1 0x1 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x162 PUSH2 0x29B CALLDATASIZE PUSH1 0x4 PUSH2 0xD91 JUMP JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x21E PUSH2 0x2BA CALLDATASIZE PUSH1 0x4 PUSH2 0xDF6 JUMP JUMPDEST PUSH2 0x642 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0xCEBE9845 PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x2E4 JUMPI POP PUSH2 0x2E4 DUP3 PUSH2 0x6C6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x322 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x319 SWAP1 PUSH2 0xE50 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE SWAP1 MLOAD SWAP2 DUP3 MSTORE PUSH32 0xDA12EE837E6978172AAF54B16145FFE08414FD8710092EF033C71B8EB6EC189A SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x3D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E206E6F7420626520696E697469616C697A656420747769636500000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x319 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF NOT AND DUP2 OR SWAP1 SSTORE PUSH1 0xA DUP2 GT ISZERO PUSH2 0x43F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E277420736574206D6F7265207468616E203130206F70657261746F7273 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x206174206F6E6365 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x319 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0xFF DUP2 AND DUP3 GT ISZERO PUSH2 0x51D JUMPI PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 DUP6 DUP6 DUP6 PUSH1 0xFF AND DUP2 DUP2 LT PUSH2 0x468 JUMPI PUSH2 0x468 PUSH2 0xE79 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x47D SWAP2 SWAP1 PUSH2 0x992 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH32 0xDA12EE837E6978172AAF54B16145FFE08414FD8710092EF033C71B8EB6EC189A DUP4 DUP4 PUSH1 0xFF DUP5 AND DUP2 DUP2 LT PUSH2 0x4DB JUMPI PUSH2 0x4DB PUSH2 0xE79 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x4F0 SWAP2 SWAP1 PUSH2 0x992 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP1 PUSH2 0x515 DUP2 PUSH2 0xE8F JUMP JUMPDEST SWAP2 POP POP PUSH2 0x442 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x60 SWAP1 PUSH1 0xFF AND PUSH2 0x569 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x139BDD081A5B9A5D1A585B1A5E9959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x319 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x598 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x319 SWAP1 PUSH2 0xE50 JUMP JUMPDEST PUSH2 0x5A6 DUP7 DUP7 DUP7 PUSH1 0x0 DUP8 PUSH2 0x6FB JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x5DF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x319 SWAP1 PUSH2 0xE50 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE SWAP1 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x80C0B871B97B595B16A7741C1B06FED0C6F6F558639F18CCBCE50724325DC40D SWAP2 ADD PUSH2 0x372 JUMP JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x60 SWAP1 PUSH1 0xFF AND PUSH2 0x689 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x139BDD081A5B9A5D1A585B1A5E9959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x319 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x6B8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x319 SWAP1 PUSH2 0xE50 JUMP JUMPDEST PUSH2 0x5A6 DUP7 DUP7 DUP7 DUP7 PUSH1 0x1 PUSH2 0x6FB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x2711897 PUSH1 0xE5 SHL EQ DUP1 PUSH2 0x2E4 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x2E4 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x705 PUSH2 0x88D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 NOT PUSH1 0xFF DUP6 AND ADD PUSH2 0x77D JUMPI DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH2 0x730 SWAP3 SWAP2 SWAP1 PUSH2 0xEBC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x76D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x772 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x818 JUMP JUMPDEST PUSH1 0x1 NOT PUSH1 0xFF DUP6 AND ADD PUSH2 0x7DE JUMPI DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x7A3 SWAP3 SWAP2 SWAP1 PUSH2 0xEBC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x76D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x772 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x2BB937B7339037B832B930BA34B7B7 PUSH1 0x89 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x319 JUMP JUMPDEST DUP2 PUSH2 0x83F JUMPI PUSH2 0x826 DUP2 PUSH2 0x8E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x319 SWAP2 SWAP1 PUSH2 0xC54 JUMP JUMPDEST PUSH32 0x4E2058815A1087A94D8A92ECDCE2F91D1370AA8C270EF97B0F28E0A3C6F68A87 CALLER DUP10 DUP10 DUP10 DUP10 DUP7 PUSH1 0x40 MLOAD PUSH2 0x878 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xECC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 SWAP2 POP POP PUSH2 0x639 PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD SUB PUSH2 0x8DF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x319 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x44 DUP3 MLOAD LT ISZERO PUSH2 0x92B JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1D DUP2 MSTORE PUSH32 0x5472616E73616374696F6E2072657665727465642073696C656E746C79000000 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP3 ADD SWAP2 POP DUP2 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x2E4 SWAP2 SWAP1 PUSH2 0xF35 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x957 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x96F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x98D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x96F DUP3 PUSH2 0x976 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x9EC JUMPI PUSH2 0x9EC PUSH2 0x9AD JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xA0E JUMPI PUSH2 0xA0E PUSH2 0x9AD JUMP JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xA2D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xA40 PUSH2 0xA3B DUP3 PUSH2 0x9F4 JUMP JUMPDEST PUSH2 0x9C3 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0xA55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xA88 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA91 DUP6 PUSH2 0x976 JUMP JUMPDEST SWAP4 POP PUSH2 0xA9F PUSH1 0x20 DUP7 ADD PUSH2 0x976 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xAC2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xACE DUP8 DUP3 DUP9 ADD PUSH2 0xA1C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xAED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xB05 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xB19 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xB28 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0xB3D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0xB61 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0xB91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xBAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBB7 DUP6 PUSH2 0x976 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xBD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBDF DUP8 DUP3 DUP9 ADD PUSH2 0xB4F JUMP JUMPDEST SWAP1 SWAP5 POP SWAP3 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0xBF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xC1F JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xC07 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xC40 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xC04 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x96F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xC28 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xC78 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xC94 JUMPI PUSH2 0xC94 PUSH2 0x9AD JUMP JUMPDEST DUP2 PUSH1 0x5 SHL PUSH2 0xCA3 DUP3 DUP3 ADD PUSH2 0x9C3 JUMP JUMPDEST SWAP3 DUP4 MSTORE DUP5 DUP2 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP1 DUP8 DUP6 GT ISZERO PUSH2 0xCBD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP8 ADD SWAP3 POP JUMPDEST DUP5 DUP4 LT ISZERO PUSH2 0xCDC JUMPI DUP3 CALLDATALOAD DUP3 MSTORE SWAP2 DUP4 ADD SWAP2 SWAP1 DUP4 ADD SWAP1 PUSH2 0xCC3 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xCFF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD08 DUP7 PUSH2 0x976 JUMP JUMPDEST SWAP5 POP PUSH2 0xD16 PUSH1 0x20 DUP8 ADD PUSH2 0x976 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xD33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD3F DUP10 DUP4 DUP11 ADD PUSH2 0xC67 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xD55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD61 DUP10 DUP4 DUP11 ADD PUSH2 0xC67 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xD77 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD84 DUP9 DUP3 DUP10 ADD PUSH2 0xA1C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xDA9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDB2 DUP7 PUSH2 0x976 JUMP JUMPDEST SWAP5 POP PUSH2 0xDC0 PUSH1 0x20 DUP8 ADD PUSH2 0x976 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xDEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD84 DUP9 DUP3 DUP10 ADD PUSH2 0xA1C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xE0C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE15 DUP6 PUSH2 0x976 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE31 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE3D DUP8 DUP3 DUP9 ADD PUSH2 0xB4F JUMP JUMPDEST SWAP6 SWAP9 SWAP1 SWAP8 POP SWAP5 SWAP6 PUSH1 0x40 ADD CALLDATALOAD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xF SWAP1 DUP3 ADD MSTORE PUSH15 0x2737BA1030B71037B832B930BA37B9 PUSH1 0x89 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP2 SUB PUSH2 0xEB3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 DUP4 DUP3 CALLDATACOPY PUSH1 0x0 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND DUP3 MSTORE DUP7 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x0 DUP5 DUP7 PUSH1 0xC0 DUP5 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0xC0 DUP7 DUP5 ADD ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP7 ADD AND DUP3 ADD DUP5 PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0xC0 DUP4 DUP3 SUB ADD PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0xF28 PUSH1 0xC0 DUP3 ADD DUP6 PUSH2 0xC28 JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF47 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xF5E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0xF6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH2 0xF7D PUSH2 0xA3B DUP3 PUSH2 0x9F4 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP6 PUSH1 0x20 DUP4 DUP6 ADD ADD GT ISZERO PUSH2 0xF92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x639 DUP3 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xC04 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE1 PC MUL 0x4E PUSH31 0x3B6CAE30AAAEACD543C4A4B4F0D1B3A56C5A31A113DFFCB1FFBE7A64736F6C PUSH4 0x43000813 STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        785,
        4145
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        785,
        4145
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        785,
        4145
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5": {
      "fn": null,
      "offset": [
        785,
        4145
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        785,
        4145
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "8": {
      "fn": null,
      "offset": [
        785,
        4145
      ],
      "op": "LT",
      "path": "16"
    },
    "9": {
      "fn": null,
      "offset": [
        785,
        4145
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xC6"
    },
    "12": {
      "fn": null,
      "offset": [
        785,
        4145
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "13": {
      "fn": null,
      "offset": [
        785,
        4145
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        785,
        4145
      ],
      "op": "CALLDATALOAD",
      "path": "16"
    },
    "16": {
      "fn": null,
      "offset": [
        785,
        4145
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        785,
        4145
      ],
      "op": "SHR",
      "path": "16"
    },
    "19": {
      "fn": null,
      "offset": [
        785,
        4145
      ],
      "op": "DUP1",
      "path": "16"
    },
    "20": {
      "fn": null,
      "offset": [
        785,
        4145
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xA224CEE7"
    },
    "25": {
      "fn": null,
      "offset": [
        785,
        4145
      ],
      "op": "GT",
      "path": "16"
    },
    "26": {
      "fn": null,
      "offset": [
        785,
        4145
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x7F"
    },
    "29": {
      "fn": null,
      "offset": [
        785,
        4145
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "30": {
      "fn": null,
      "offset": [
        785,
        4145
      ],
      "op": "DUP1",
      "path": "16"
    },
    "31": {
      "fn": null,
      "offset": [
        785,
        4145
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xBC197C81"
    },
    "36": {
      "fn": null,
      "offset": [
        785,
        4145
      ],
      "op": "GT",
      "path": "16"
    },
    "37": {
      "fn": null,
      "offset": [
        785,
        4145
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x59"
    },
    "40": {
      "fn": null,
      "offset": [
        785,
        4145
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "41": {
      "fn": null,
      "offset": [
        785,
        4145
      ],
      "op": "DUP1",
      "path": "16"
    },
    "42": {
      "fn": null,
      "offset": [
        785,
        4145
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xBC197C81"
    },
    "47": {
      "fn": null,
      "offset": [
        785,
        4145
      ],
      "op": "EQ",
      "path": "16"
    },
    "48": {
      "fn": null,
      "offset": [
        785,
        4145
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x24B"
    },
    "51": {
      "fn": null,
      "offset": [
        785,
        4145
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "52": {
      "fn": null,
      "offset": [
        785,
        4145
      ],
      "op": "DUP1",
      "path": "16"
    },
    "53": {
      "fn": null,
      "offset": [
        785,
        4145
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xD3F43C78"
    },
    "58": {
      "fn": null,
      "offset": [
        785,
        4145
      ],
      "op": "EQ",
      "path": "16"
    },
    "59": {
      "fn": null,
      "offset": [
        785,
        4145
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x26B"
    },
    "62": {
      "fn": null,
      "offset": [
        785,
        4145
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "63": {
      "fn": null,
      "offset": [
        785,
        4145
      ],
      "op": "DUP1",
      "path": "16"
    },
    "64": {
      "fn": null,
      "offset": [
        785,
        4145
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xF23A6E61"
    },
    "69": {
      "fn": null,
      "offset": [
        785,
        4145
      ],
      "op": "EQ",
      "path": "16"
    },
    "70": {
      "fn": null,
      "offset": [
        785,
        4145
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x280"
    },
    "73": {
      "fn": null,
      "offset": [
        785,
        4145
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "74": {
      "fn": null,
      "offset": [
        785,
        4145
      ],
      "op": "DUP1",
      "path": "16"
    },
    "75": {
      "fn": null,
      "offset": [
        785,
        4145
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xFA4BB79D"
    },
    "80": {
      "fn": null,
      "offset": [
        785,
        4145
      ],
      "op": "EQ",
      "path": "16"
    },
    "81": {
      "fn": null,
      "offset": [
        785,
        4145
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2AC"
    },
    "84": {
      "fn": null,
      "offset": [
        785,
        4145
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "85": {
      "fn": null,
      "offset": [
        785,
        4145
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "87": {
      "fn": null,
      "offset": [
        785,
        4145
      ],
      "op": "DUP1",
      "path": "16"
    },
    "88": {
      "fn": null,
      "offset": [
        785,
        4145
      ],
      "op": "REVERT",
      "path": "16"
    },
    "89": {
      "fn": null,
      "offset": [
        785,
        4145
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "90": {
      "fn": null,
      "offset": [
        785,
        4145
      ],
      "op": "DUP1",
      "path": "16"
    },
    "91": {
      "fn": null,
      "offset": [
        785,
        4145
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xA224CEE7"
    },
    "96": {
      "fn": null,
      "offset": [
        785,
        4145
      ],
      "op": "EQ",
      "path": "16"
    },
    "97": {
      "fn": null,
      "offset": [
        785,
        4145
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1DE"
    },
    "100": {
      "fn": null,
      "offset": [
        785,
        4145
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "101": {
      "fn": null,
      "offset": [
        785,
        4145
      ],
      "op": "DUP1",
      "path": "16"
    },
    "102": {
      "fn": null,
      "offset": [
        785,
        4145
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xA22B6E8B"
    },
    "107": {
      "fn": null,
      "offset": [
        785,
        4145
      ],
      "op": "EQ",
      "path": "16"
    },
    "108": {
      "fn": null,
      "offset": [
        785,
        4145
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1FE"
    },
    "111": {
      "fn": null,
      "offset": [
        785,
        4145
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "112": {
      "fn": null,
      "offset": [
        785,
        4145
      ],
      "op": "DUP1",
      "path": "16"
    },
    "113": {
      "fn": null,
      "offset": [
        785,
        4145
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xAC8A584A"
    },
    "118": {
      "fn": null,
      "offset": [
        785,
        4145
      ],
      "op": "EQ",
      "path": "16"
    },
    "119": {
      "fn": null,
      "offset": [
        785,
        4145
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x22B"
    },
    "122": {
      "fn": null,
      "offset": [
        785,
        4145
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "123": {
      "fn": null,
      "offset": [
        785,
        4145
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "125": {
      "fn": null,
      "offset": [
        785,
        4145
      ],
      "op": "DUP1",
      "path": "16"
    },
    "126": {
      "fn": null,
      "offset": [
        785,
        4145
      ],
      "op": "REVERT",
      "path": "16"
    },
    "127": {
      "fn": null,
      "offset": [
        785,
        4145
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "128": {
      "fn": null,
      "offset": [
        785,
        4145
      ],
      "op": "DUP1",
      "path": "16"
    },
    "129": {
      "fn": null,
      "offset": [
        785,
        4145
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x1FFC9A7"
    },
    "134": {
      "fn": null,
      "offset": [
        785,
        4145
      ],
      "op": "EQ",
      "path": "16"
    },
    "135": {
      "fn": null,
      "offset": [
        785,
        4145
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xD2"
    },
    "138": {
      "fn": null,
      "offset": [
        785,
        4145
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "139": {
      "fn": null,
      "offset": [
        785,
        4145
      ],
      "op": "DUP1",
      "path": "16"
    },
    "140": {
      "fn": null,
      "offset": [
        785,
        4145
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x13E7C9D8"
    },
    "145": {
      "fn": null,
      "offset": [
        785,
        4145
      ],
      "op": "EQ",
      "path": "16"
    },
    "146": {
      "fn": null,
      "offset": [
        785,
        4145
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x107"
    },
    "149": {
      "fn": null,
      "offset": [
        785,
        4145
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "150": {
      "fn": null,
      "offset": [
        785,
        4145
      ],
      "op": "DUP1",
      "path": "16"
    },
    "151": {
      "fn": null,
      "offset": [
        785,
        4145
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x150B7A02"
    },
    "156": {
      "fn": null,
      "offset": [
        785,
        4145
      ],
      "op": "EQ",
      "path": "16"
    },
    "157": {
      "fn": null,
      "offset": [
        785,
        4145
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x137"
    },
    "160": {
      "fn": null,
      "offset": [
        785,
        4145
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "161": {
      "fn": null,
      "offset": [
        785,
        4145
      ],
      "op": "DUP1",
      "path": "16"
    },
    "162": {
      "fn": null,
      "offset": [
        785,
        4145
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x158EF93E"
    },
    "167": {
      "fn": null,
      "offset": [
        785,
        4145
      ],
      "op": "EQ",
      "path": "16"
    },
    "168": {
      "fn": null,
      "offset": [
        785,
        4145
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x17B"
    },
    "171": {
      "fn": null,
      "offset": [
        785,
        4145
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "172": {
      "fn": null,
      "offset": [
        785,
        4145
      ],
      "op": "DUP1",
      "path": "16"
    },
    "173": {
      "fn": null,
      "offset": [
        785,
        4145
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x48F33103"
    },
    "178": {
      "fn": null,
      "offset": [
        785,
        4145
      ],
      "op": "EQ",
      "path": "16"
    },
    "179": {
      "fn": null,
      "offset": [
        785,
        4145
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x195"
    },
    "182": {
      "fn": null,
      "offset": [
        785,
        4145
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "183": {
      "fn": null,
      "offset": [
        785,
        4145
      ],
      "op": "DUP1",
      "path": "16"
    },
    "184": {
      "fn": null,
      "offset": [
        785,
        4145
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x9870D7FE"
    },
    "189": {
      "fn": null,
      "offset": [
        785,
        4145
      ],
      "op": "EQ",
      "path": "16"
    },
    "190": {
      "fn": null,
      "offset": [
        785,
        4145
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1BC"
    },
    "193": {
      "fn": null,
      "offset": [
        785,
        4145
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "194": {
      "fn": null,
      "offset": [
        785,
        4145
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "196": {
      "fn": null,
      "offset": [
        785,
        4145
      ],
      "op": "DUP1",
      "path": "16"
    },
    "197": {
      "fn": null,
      "offset": [
        785,
        4145
      ],
      "op": "REVERT",
      "path": "16"
    },
    "198": {
      "fn": null,
      "offset": [
        785,
        4145
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "199": {
      "fn": null,
      "offset": [
        785,
        4145
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "200": {
      "fn": null,
      "offset": [
        785,
        4145
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xCD"
    },
    "203": {
      "fn": null,
      "offset": [
        785,
        4145
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "204": {
      "fn": null,
      "offset": [
        785,
        4145
      ],
      "op": "STOP",
      "path": "16"
    },
    "205": {
      "fn": null,
      "offset": [
        785,
        4145
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "206": {
      "fn": null,
      "offset": [
        785,
        4145
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "208": {
      "fn": null,
      "offset": [
        785,
        4145
      ],
      "op": "DUP1",
      "path": "16"
    },
    "209": {
      "first_revert": true,
      "fn": null,
      "offset": [
        785,
        4145
      ],
      "op": "REVERT",
      "path": "16"
    },
    "210": {
      "fn": "BlockSafe.supportsInterface",
      "offset": [
        3818,
        4109
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "211": {
      "fn": "BlockSafe.supportsInterface",
      "offset": [
        3818,
        4109
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "212": {
      "fn": "BlockSafe.supportsInterface",
      "offset": [
        3818,
        4109
      ],
      "op": "DUP1",
      "path": "16"
    },
    "213": {
      "fn": "BlockSafe.supportsInterface",
      "offset": [
        3818,
        4109
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "214": {
      "fn": "BlockSafe.supportsInterface",
      "offset": [
        3818,
        4109
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xDE"
    },
    "217": {
      "fn": "BlockSafe.supportsInterface",
      "offset": [
        3818,
        4109
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "218": {
      "fn": "BlockSafe.supportsInterface",
      "offset": [
        3818,
        4109
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "220": {
      "fn": "BlockSafe.supportsInterface",
      "offset": [
        3818,
        4109
      ],
      "op": "DUP1",
      "path": "16"
    },
    "221": {
      "fn": "BlockSafe.supportsInterface",
      "offset": [
        3818,
        4109
      ],
      "op": "REVERT",
      "path": "16"
    },
    "222": {
      "fn": "BlockSafe.supportsInterface",
      "offset": [
        3818,
        4109
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "223": {
      "op": "POP"
    },
    "224": {
      "fn": "BlockSafe.supportsInterface",
      "offset": [
        3818,
        4109
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xF2"
    },
    "227": {
      "fn": "BlockSafe.supportsInterface",
      "offset": [
        3818,
        4109
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xED"
    },
    "230": {
      "fn": "BlockSafe.supportsInterface",
      "offset": [
        3818,
        4109
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "231": {
      "fn": "BlockSafe.supportsInterface",
      "offset": [
        3818,
        4109
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "233": {
      "fn": "BlockSafe.supportsInterface",
      "offset": [
        3818,
        4109
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x945"
    },
    "236": {
      "fn": "BlockSafe.supportsInterface",
      "jump": "i",
      "offset": [
        3818,
        4109
      ],
      "op": "JUMP",
      "path": "16"
    },
    "237": {
      "fn": "BlockSafe.supportsInterface",
      "offset": [
        3818,
        4109
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "238": {
      "fn": "BlockSafe.supportsInterface",
      "offset": [
        3818,
        4109
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2BF"
    },
    "241": {
      "fn": "BlockSafe.supportsInterface",
      "jump": "i",
      "offset": [
        3818,
        4109
      ],
      "op": "JUMP",
      "path": "16"
    },
    "242": {
      "fn": "BlockSafe.supportsInterface",
      "offset": [
        3818,
        4109
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "243": {
      "fn": "BlockSafe.supportsInterface",
      "offset": [
        3818,
        4109
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "245": {
      "fn": "BlockSafe.supportsInterface",
      "offset": [
        3818,
        4109
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "246": {
      "op": "SWAP1"
    },
    "247": {
      "op": "ISZERO"
    },
    "248": {
      "op": "ISZERO"
    },
    "249": {
      "op": "DUP2"
    },
    "250": {
      "op": "MSTORE"
    },
    "251": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "253": {
      "op": "ADD"
    },
    "254": {
      "fn": "BlockSafe.supportsInterface",
      "offset": [
        3818,
        4109
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "255": {
      "fn": "BlockSafe.supportsInterface",
      "offset": [
        3818,
        4109
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "257": {
      "fn": "BlockSafe.supportsInterface",
      "offset": [
        3818,
        4109
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "258": {
      "fn": "BlockSafe.supportsInterface",
      "offset": [
        3818,
        4109
      ],
      "op": "DUP1",
      "path": "16"
    },
    "259": {
      "fn": "BlockSafe.supportsInterface",
      "offset": [
        3818,
        4109
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "260": {
      "fn": "BlockSafe.supportsInterface",
      "offset": [
        3818,
        4109
      ],
      "op": "SUB",
      "path": "16"
    },
    "261": {
      "fn": "BlockSafe.supportsInterface",
      "offset": [
        3818,
        4109
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "262": {
      "fn": "BlockSafe.supportsInterface",
      "offset": [
        3818,
        4109
      ],
      "op": "RETURN",
      "path": "16"
    },
    "263": {
      "offset": [
        1313,
        1354
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "264": {
      "fn": "BlockSafe.supportsInterface",
      "offset": [
        1313,
        1354
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "265": {
      "fn": "BlockSafe.supportsInterface",
      "offset": [
        1313,
        1354
      ],
      "op": "DUP1",
      "path": "16"
    },
    "266": {
      "fn": "BlockSafe.supportsInterface",
      "offset": [
        1313,
        1354
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "267": {
      "fn": "BlockSafe.supportsInterface",
      "offset": [
        1313,
        1354
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x113"
    },
    "270": {
      "fn": "BlockSafe.supportsInterface",
      "offset": [
        1313,
        1354
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "271": {
      "fn": "BlockSafe.supportsInterface",
      "offset": [
        1313,
        1354
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "273": {
      "fn": "BlockSafe.supportsInterface",
      "offset": [
        1313,
        1354
      ],
      "op": "DUP1",
      "path": "16"
    },
    "274": {
      "fn": "BlockSafe.supportsInterface",
      "offset": [
        1313,
        1354
      ],
      "op": "REVERT",
      "path": "16"
    },
    "275": {
      "fn": "BlockSafe.supportsInterface",
      "offset": [
        1313,
        1354
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "276": {
      "op": "POP"
    },
    "277": {
      "offset": [
        1313,
        1354
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xF2"
    },
    "280": {
      "fn": "BlockSafe.supportsInterface",
      "offset": [
        1313,
        1354
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x122"
    },
    "283": {
      "fn": "BlockSafe.supportsInterface",
      "offset": [
        1313,
        1354
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "284": {
      "fn": "BlockSafe.supportsInterface",
      "offset": [
        1313,
        1354
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "286": {
      "fn": "BlockSafe.supportsInterface",
      "offset": [
        1313,
        1354
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x992"
    },
    "289": {
      "fn": "BlockSafe.supportsInterface",
      "jump": "i",
      "offset": [
        1313,
        1354
      ],
      "op": "JUMP",
      "path": "16"
    },
    "290": {
      "fn": "BlockSafe.supportsInterface",
      "offset": [
        1313,
        1354
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "291": {
      "fn": "BlockSafe.supportsInterface",
      "offset": [
        1313,
        1354
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x2"
    },
    "293": {
      "fn": "BlockSafe.supportsInterface",
      "offset": [
        1313,
        1354
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "295": {
      "fn": "BlockSafe.supportsInterface",
      "offset": [
        1313,
        1354
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "296": {
      "fn": "BlockSafe.supportsInterface",
      "offset": [
        1313,
        1354
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "298": {
      "fn": "BlockSafe.supportsInterface",
      "offset": [
        1313,
        1354
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "299": {
      "fn": "BlockSafe.supportsInterface",
      "offset": [
        1313,
        1354
      ],
      "op": "DUP2",
      "path": "16"
    },
    "300": {
      "fn": "BlockSafe.supportsInterface",
      "offset": [
        1313,
        1354
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "301": {
      "fn": "BlockSafe.supportsInterface",
      "offset": [
        1313,
        1354
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "303": {
      "fn": "BlockSafe.supportsInterface",
      "offset": [
        1313,
        1354
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "304": {
      "fn": "BlockSafe.supportsInterface",
      "offset": [
        1313,
        1354
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "305": {
      "fn": "BlockSafe.supportsInterface",
      "offset": [
        1313,
        1354
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "306": {
      "fn": "BlockSafe.supportsInterface",
      "offset": [
        1313,
        1354
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "308": {
      "fn": "BlockSafe.supportsInterface",
      "offset": [
        1313,
        1354
      ],
      "op": "AND",
      "path": "16"
    },
    "309": {
      "fn": "BlockSafe.supportsInterface",
      "offset": [
        1313,
        1354
      ],
      "op": "DUP2",
      "path": "16"
    },
    "310": {
      "fn": "BlockSafe.supportsInterface",
      "offset": [
        1313,
        1354
      ],
      "op": "JUMP",
      "path": "16"
    },
    "311": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        588,
        788
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "312": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        588,
        788
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "313": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        588,
        788
      ],
      "op": "DUP1",
      "path": "10"
    },
    "314": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        588,
        788
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "315": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        588,
        788
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x143"
    },
    "318": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        588,
        788
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "319": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        588,
        788
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "321": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        588,
        788
      ],
      "op": "DUP1",
      "path": "10"
    },
    "322": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        588,
        788
      ],
      "op": "REVERT",
      "path": "10"
    },
    "323": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        588,
        788
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "324": {
      "op": "POP"
    },
    "325": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        588,
        788
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x162"
    },
    "328": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        588,
        788
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x152"
    },
    "331": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        588,
        788
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "332": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        588,
        788
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "334": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        588,
        788
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA72"
    },
    "337": {
      "fn": "ERC721Holder.onERC721Received",
      "jump": "i",
      "offset": [
        588,
        788
      ],
      "op": "JUMP",
      "path": "10"
    },
    "338": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        588,
        788
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "339": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "344": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "346": {
      "op": "SHL"
    },
    "347": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        588,
        788
      ],
      "op": "SWAP5",
      "path": "10"
    },
    "348": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        588,
        788
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "349": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        588,
        788
      ],
      "op": "POP",
      "path": "10"
    },
    "350": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        588,
        788
      ],
      "op": "POP",
      "path": "10"
    },
    "351": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        588,
        788
      ],
      "op": "POP",
      "path": "10"
    },
    "352": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        588,
        788
      ],
      "op": "POP",
      "path": "10"
    },
    "353": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        588,
        788
      ],
      "op": "JUMP",
      "path": "10"
    },
    "354": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        588,
        788
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "355": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        588,
        788
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "357": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        588,
        788
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "358": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "360": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "362": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "364": {
      "op": "SHL"
    },
    "365": {
      "op": "SUB"
    },
    "366": {
      "op": "NOT"
    },
    "367": {
      "op": "SWAP1"
    },
    "368": {
      "op": "SWAP2"
    },
    "369": {
      "op": "AND"
    },
    "370": {
      "op": "DUP2"
    },
    "371": {
      "op": "MSTORE"
    },
    "372": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "374": {
      "op": "ADD"
    },
    "375": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        588,
        788
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xFE"
    },
    "378": {
      "op": "JUMP"
    },
    "379": {
      "offset": [
        1276,
        1307
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "380": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        1276,
        1307
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "381": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        1276,
        1307
      ],
      "op": "DUP1",
      "path": "16"
    },
    "382": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        1276,
        1307
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "383": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        1276,
        1307
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x187"
    },
    "386": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        1276,
        1307
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "387": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        1276,
        1307
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "389": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        1276,
        1307
      ],
      "op": "DUP1",
      "path": "16"
    },
    "390": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        1276,
        1307
      ],
      "op": "REVERT",
      "path": "16"
    },
    "391": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        1276,
        1307
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "392": {
      "op": "POP"
    },
    "393": {
      "offset": [
        1276,
        1307
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "395": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        1276,
        1307
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "396": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        1276,
        1307
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xF2"
    },
    "399": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        1276,
        1307
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "400": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        1276,
        1307
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "402": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        1276,
        1307
      ],
      "op": "AND",
      "path": "16"
    },
    "403": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        1276,
        1307
      ],
      "op": "DUP2",
      "path": "16"
    },
    "404": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        1276,
        1307
      ],
      "op": "JUMP",
      "path": "16"
    },
    "405": {
      "offset": [
        979,
        1027
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "406": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        979,
        1027
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "407": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        979,
        1027
      ],
      "op": "DUP1",
      "path": "16"
    },
    "408": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        979,
        1027
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "409": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        979,
        1027
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1A1"
    },
    "412": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        979,
        1027
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "413": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        979,
        1027
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "415": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        979,
        1027
      ],
      "op": "DUP1",
      "path": "16"
    },
    "416": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        979,
        1027
      ],
      "op": "REVERT",
      "path": "16"
    },
    "417": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        979,
        1027
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "418": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        979,
        1027
      ],
      "op": "POP",
      "path": "16"
    },
    "419": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        979,
        1027
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1AA"
    },
    "422": {
      "offset": [
        1026,
        1027
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x2"
    },
    "424": {
      "offset": [
        979,
        1027
      ],
      "op": "DUP2",
      "path": "16"
    },
    "425": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        979,
        1027
      ],
      "op": "JUMP",
      "path": "16"
    },
    "426": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        979,
        1027
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "427": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        979,
        1027
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "429": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        979,
        1027
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "430": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "432": {
      "op": "SWAP1"
    },
    "433": {
      "op": "SWAP2"
    },
    "434": {
      "op": "AND"
    },
    "435": {
      "op": "DUP2"
    },
    "436": {
      "op": "MSTORE"
    },
    "437": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "439": {
      "op": "ADD"
    },
    "440": {
      "offset": [
        979,
        1027
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xFE"
    },
    "443": {
      "op": "JUMP"
    },
    "444": {
      "fn": "BlockSafe.addOperator",
      "offset": [
        3494,
        3646
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "445": {
      "fn": "BlockSafe.addOperator",
      "offset": [
        3494,
        3646
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "446": {
      "fn": "BlockSafe.addOperator",
      "offset": [
        3494,
        3646
      ],
      "op": "DUP1",
      "path": "16"
    },
    "447": {
      "fn": "BlockSafe.addOperator",
      "offset": [
        3494,
        3646
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "448": {
      "fn": "BlockSafe.addOperator",
      "offset": [
        3494,
        3646
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1C8"
    },
    "451": {
      "fn": "BlockSafe.addOperator",
      "offset": [
        3494,
        3646
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "452": {
      "fn": "BlockSafe.addOperator",
      "offset": [
        3494,
        3646
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "454": {
      "fn": "BlockSafe.addOperator",
      "offset": [
        3494,
        3646
      ],
      "op": "DUP1",
      "path": "16"
    },
    "455": {
      "fn": "BlockSafe.addOperator",
      "offset": [
        3494,
        3646
      ],
      "op": "REVERT",
      "path": "16"
    },
    "456": {
      "fn": "BlockSafe.addOperator",
      "offset": [
        3494,
        3646
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "457": {
      "op": "POP"
    },
    "458": {
      "fn": "BlockSafe.addOperator",
      "offset": [
        3494,
        3646
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1DC"
    },
    "461": {
      "fn": "BlockSafe.addOperator",
      "offset": [
        3494,
        3646
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1D7"
    },
    "464": {
      "fn": "BlockSafe.addOperator",
      "offset": [
        3494,
        3646
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "465": {
      "fn": "BlockSafe.addOperator",
      "offset": [
        3494,
        3646
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "467": {
      "fn": "BlockSafe.addOperator",
      "offset": [
        3494,
        3646
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x992"
    },
    "470": {
      "fn": "BlockSafe.addOperator",
      "jump": "i",
      "offset": [
        3494,
        3646
      ],
      "op": "JUMP",
      "path": "16"
    },
    "471": {
      "fn": "BlockSafe.addOperator",
      "offset": [
        3494,
        3646
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "472": {
      "fn": "BlockSafe.addOperator",
      "offset": [
        3494,
        3646
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2EA"
    },
    "475": {
      "fn": "BlockSafe.addOperator",
      "jump": "i",
      "offset": [
        3494,
        3646
      ],
      "op": "JUMP",
      "path": "16"
    },
    "476": {
      "fn": "BlockSafe.addOperator",
      "offset": [
        3494,
        3646
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "477": {
      "fn": "BlockSafe.addOperator",
      "offset": [
        3494,
        3646
      ],
      "op": "STOP",
      "path": "16"
    },
    "478": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1580,
        2026
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "479": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1580,
        2026
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "480": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1580,
        2026
      ],
      "op": "DUP1",
      "path": "16"
    },
    "481": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1580,
        2026
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "482": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1580,
        2026
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1EA"
    },
    "485": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1580,
        2026
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "486": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1580,
        2026
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "488": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1580,
        2026
      ],
      "op": "DUP1",
      "path": "16"
    },
    "489": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1580,
        2026
      ],
      "op": "REVERT",
      "path": "16"
    },
    "490": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1580,
        2026
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "491": {
      "op": "POP"
    },
    "492": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1580,
        2026
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1DC"
    },
    "495": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1580,
        2026
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1F9"
    },
    "498": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1580,
        2026
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "499": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1580,
        2026
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "501": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1580,
        2026
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xADA"
    },
    "504": {
      "fn": "BlockSafe.initialize",
      "jump": "i",
      "offset": [
        1580,
        2026
      ],
      "op": "JUMP",
      "path": "16"
    },
    "505": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1580,
        2026
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "506": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1580,
        2026
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x37E"
    },
    "509": {
      "fn": "BlockSafe.initialize",
      "jump": "i",
      "offset": [
        1580,
        2026
      ],
      "op": "JUMP",
      "path": "16"
    },
    "510": {
      "fn": "BlockSafe.execute",
      "offset": [
        2032,
        2309
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "511": {
      "fn": "BlockSafe.execute",
      "offset": [
        2032,
        2309
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "512": {
      "fn": "BlockSafe.execute",
      "offset": [
        2032,
        2309
      ],
      "op": "DUP1",
      "path": "16"
    },
    "513": {
      "fn": "BlockSafe.execute",
      "offset": [
        2032,
        2309
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "514": {
      "fn": "BlockSafe.execute",
      "offset": [
        2032,
        2309
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x20A"
    },
    "517": {
      "fn": "BlockSafe.execute",
      "offset": [
        2032,
        2309
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "518": {
      "fn": "BlockSafe.execute",
      "offset": [
        2032,
        2309
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "520": {
      "fn": "BlockSafe.execute",
      "offset": [
        2032,
        2309
      ],
      "op": "DUP1",
      "path": "16"
    },
    "521": {
      "fn": "BlockSafe.execute",
      "offset": [
        2032,
        2309
      ],
      "op": "REVERT",
      "path": "16"
    },
    "522": {
      "fn": "BlockSafe.execute",
      "offset": [
        2032,
        2309
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "523": {
      "op": "POP"
    },
    "524": {
      "fn": "BlockSafe.execute",
      "offset": [
        2032,
        2309
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x21E"
    },
    "527": {
      "fn": "BlockSafe.execute",
      "offset": [
        2032,
        2309
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x219"
    },
    "530": {
      "fn": "BlockSafe.execute",
      "offset": [
        2032,
        2309
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "531": {
      "fn": "BlockSafe.execute",
      "offset": [
        2032,
        2309
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "533": {
      "fn": "BlockSafe.execute",
      "offset": [
        2032,
        2309
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB98"
    },
    "536": {
      "fn": "BlockSafe.execute",
      "jump": "i",
      "offset": [
        2032,
        2309
      ],
      "op": "JUMP",
      "path": "16"
    },
    "537": {
      "fn": "BlockSafe.execute",
      "offset": [
        2032,
        2309
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "538": {
      "fn": "BlockSafe.execute",
      "offset": [
        2032,
        2309
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x522"
    },
    "541": {
      "fn": "BlockSafe.execute",
      "jump": "i",
      "offset": [
        2032,
        2309
      ],
      "op": "JUMP",
      "path": "16"
    },
    "542": {
      "fn": "BlockSafe.execute",
      "offset": [
        2032,
        2309
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "543": {
      "fn": "BlockSafe.execute",
      "offset": [
        2032,
        2309
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "545": {
      "fn": "BlockSafe.execute",
      "offset": [
        2032,
        2309
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "546": {
      "fn": "BlockSafe.execute",
      "offset": [
        2032,
        2309
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xFE"
    },
    "549": {
      "fn": "BlockSafe.execute",
      "offset": [
        2032,
        2309
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "550": {
      "fn": "BlockSafe.execute",
      "offset": [
        2032,
        2309
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "551": {
      "fn": "BlockSafe.execute",
      "offset": [
        2032,
        2309
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xC54"
    },
    "554": {
      "fn": "BlockSafe.execute",
      "jump": "i",
      "offset": [
        2032,
        2309
      ],
      "op": "JUMP",
      "path": "16"
    },
    "555": {
      "fn": "BlockSafe.removeOperator",
      "offset": [
        3652,
        3812
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "556": {
      "fn": "BlockSafe.removeOperator",
      "offset": [
        3652,
        3812
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "557": {
      "fn": "BlockSafe.removeOperator",
      "offset": [
        3652,
        3812
      ],
      "op": "DUP1",
      "path": "16"
    },
    "558": {
      "fn": "BlockSafe.removeOperator",
      "offset": [
        3652,
        3812
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "559": {
      "fn": "BlockSafe.removeOperator",
      "offset": [
        3652,
        3812
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x237"
    },
    "562": {
      "fn": "BlockSafe.removeOperator",
      "offset": [
        3652,
        3812
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "563": {
      "fn": "BlockSafe.removeOperator",
      "offset": [
        3652,
        3812
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "565": {
      "fn": "BlockSafe.removeOperator",
      "offset": [
        3652,
        3812
      ],
      "op": "DUP1",
      "path": "16"
    },
    "566": {
      "fn": "BlockSafe.removeOperator",
      "offset": [
        3652,
        3812
      ],
      "op": "REVERT",
      "path": "16"
    },
    "567": {
      "fn": "BlockSafe.removeOperator",
      "offset": [
        3652,
        3812
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "568": {
      "op": "POP"
    },
    "569": {
      "fn": "BlockSafe.removeOperator",
      "offset": [
        3652,
        3812
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1DC"
    },
    "572": {
      "fn": "BlockSafe.removeOperator",
      "offset": [
        3652,
        3812
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x246"
    },
    "575": {
      "fn": "BlockSafe.removeOperator",
      "offset": [
        3652,
        3812
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "576": {
      "fn": "BlockSafe.removeOperator",
      "offset": [
        3652,
        3812
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "578": {
      "fn": "BlockSafe.removeOperator",
      "offset": [
        3652,
        3812
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x992"
    },
    "581": {
      "fn": "BlockSafe.removeOperator",
      "jump": "i",
      "offset": [
        3652,
        3812
      ],
      "op": "JUMP",
      "path": "16"
    },
    "582": {
      "fn": "BlockSafe.removeOperator",
      "offset": [
        3652,
        3812
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "583": {
      "fn": "BlockSafe.removeOperator",
      "offset": [
        3652,
        3812
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x5B0"
    },
    "586": {
      "fn": "BlockSafe.removeOperator",
      "jump": "i",
      "offset": [
        3652,
        3812
      ],
      "op": "JUMP",
      "path": "16"
    },
    "587": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        724,
        971
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "588": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        724,
        971
      ],
      "op": "CALLVALUE",
      "path": "4"
    },
    "589": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        724,
        971
      ],
      "op": "DUP1",
      "path": "4"
    },
    "590": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        724,
        971
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "591": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        724,
        971
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x257"
    },
    "594": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        724,
        971
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "595": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        724,
        971
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "597": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        724,
        971
      ],
      "op": "DUP1",
      "path": "4"
    },
    "598": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        724,
        971
      ],
      "op": "REVERT",
      "path": "4"
    },
    "599": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        724,
        971
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "600": {
      "op": "POP"
    },
    "601": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        724,
        971
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x162"
    },
    "604": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        724,
        971
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x266"
    },
    "607": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        724,
        971
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "608": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        724,
        971
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "610": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        724,
        971
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xCE7"
    },
    "613": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "jump": "i",
      "offset": [
        724,
        971
      ],
      "op": "JUMP",
      "path": "4"
    },
    "614": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        724,
        971
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "615": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        724,
        971
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x630"
    },
    "618": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "jump": "i",
      "offset": [
        724,
        971
      ],
      "op": "JUMP",
      "path": "4"
    },
    "619": {
      "offset": [
        933,
        973
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "620": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        933,
        973
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "621": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        933,
        973
      ],
      "op": "DUP1",
      "path": "16"
    },
    "622": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        933,
        973
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "623": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        933,
        973
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x277"
    },
    "626": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        933,
        973
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "627": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        933,
        973
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "629": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        933,
        973
      ],
      "op": "DUP1",
      "path": "16"
    },
    "630": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        933,
        973
      ],
      "op": "REVERT",
      "path": "16"
    },
    "631": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        933,
        973
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "632": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        933,
        973
      ],
      "op": "POP",
      "path": "16"
    },
    "633": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        933,
        973
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1AA"
    },
    "636": {
      "offset": [
        972,
        973
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "638": {
      "offset": [
        933,
        973
      ],
      "op": "DUP2",
      "path": "16"
    },
    "639": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        933,
        973
      ],
      "op": "JUMP",
      "path": "16"
    },
    "640": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        499,
        718
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "641": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        499,
        718
      ],
      "op": "CALLVALUE",
      "path": "4"
    },
    "642": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        499,
        718
      ],
      "op": "DUP1",
      "path": "4"
    },
    "643": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        499,
        718
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "644": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        499,
        718
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x28C"
    },
    "647": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        499,
        718
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "648": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        499,
        718
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "650": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        499,
        718
      ],
      "op": "DUP1",
      "path": "4"
    },
    "651": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        499,
        718
      ],
      "op": "REVERT",
      "path": "4"
    },
    "652": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        499,
        718
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "653": {
      "op": "POP"
    },
    "654": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        499,
        718
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x162"
    },
    "657": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        499,
        718
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x29B"
    },
    "660": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        499,
        718
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "661": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        499,
        718
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "663": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        499,
        718
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xD91"
    },
    "666": {
      "fn": "ERC1155Holder.onERC1155Received",
      "jump": "i",
      "offset": [
        499,
        718
      ],
      "op": "JUMP",
      "path": "4"
    },
    "667": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        499,
        718
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "668": {
      "op": "PUSH4",
      "value": "0xF23A6E61"
    },
    "673": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "675": {
      "op": "SHL"
    },
    "676": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        499,
        718
      ],
      "op": "SWAP6",
      "path": "4"
    },
    "677": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        499,
        718
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "678": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        499,
        718
      ],
      "op": "POP",
      "path": "4"
    },
    "679": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        499,
        718
      ],
      "op": "POP",
      "path": "4"
    },
    "680": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        499,
        718
      ],
      "op": "POP",
      "path": "4"
    },
    "681": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        499,
        718
      ],
      "op": "POP",
      "path": "4"
    },
    "682": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        499,
        718
      ],
      "op": "POP",
      "path": "4"
    },
    "683": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        499,
        718
      ],
      "op": "JUMP",
      "path": "4"
    },
    "684": {
      "fn": "BlockSafe.executeWithValue",
      "offset": [
        2315,
        2621
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "685": {
      "fn": "BlockSafe.executeWithValue",
      "offset": [
        2315,
        2621
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x21E"
    },
    "688": {
      "fn": "BlockSafe.executeWithValue",
      "offset": [
        2315,
        2621
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2BA"
    },
    "691": {
      "fn": "BlockSafe.executeWithValue",
      "offset": [
        2315,
        2621
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "692": {
      "fn": "BlockSafe.executeWithValue",
      "offset": [
        2315,
        2621
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "694": {
      "fn": "BlockSafe.executeWithValue",
      "offset": [
        2315,
        2621
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xDF6"
    },
    "697": {
      "fn": "BlockSafe.executeWithValue",
      "jump": "i",
      "offset": [
        2315,
        2621
      ],
      "op": "JUMP",
      "path": "16"
    },
    "698": {
      "fn": "BlockSafe.executeWithValue",
      "offset": [
        2315,
        2621
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "699": {
      "fn": "BlockSafe.executeWithValue",
      "offset": [
        2315,
        2621
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x642"
    },
    "702": {
      "fn": "BlockSafe.executeWithValue",
      "jump": "i",
      "offset": [
        2315,
        2621
      ],
      "op": "JUMP",
      "path": "16"
    },
    "703": {
      "fn": "BlockSafe.supportsInterface",
      "offset": [
        3818,
        4109
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "704": {
      "fn": "BlockSafe.supportsInterface",
      "offset": [
        3968,
        3972
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "706": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "708": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "710": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "712": {
      "op": "SHL"
    },
    "713": {
      "op": "SUB"
    },
    "714": {
      "op": "NOT"
    },
    "715": {
      "fn": "BlockSafe.supportsInterface",
      "offset": [
        4007,
        4050
      ],
      "op": "DUP3",
      "path": "16",
      "statement": 0
    },
    "716": {
      "fn": "BlockSafe.supportsInterface",
      "offset": [
        4007,
        4050
      ],
      "op": "AND",
      "path": "16"
    },
    "717": {
      "op": "PUSH4",
      "value": "0xCEBE9845"
    },
    "722": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "724": {
      "op": "SHL"
    },
    "725": {
      "fn": "BlockSafe.supportsInterface",
      "offset": [
        4007,
        4050
      ],
      "op": "EQ",
      "path": "16"
    },
    "726": {
      "fn": "BlockSafe.supportsInterface",
      "offset": [
        4007,
        4050
      ],
      "op": "DUP1",
      "path": "16"
    },
    "727": {
      "fn": "BlockSafe.supportsInterface",
      "offset": [
        4007,
        4102
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2E4"
    },
    "730": {
      "fn": "BlockSafe.supportsInterface",
      "offset": [
        4007,
        4102
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "731": {
      "fn": "BlockSafe.supportsInterface",
      "offset": [
        4007,
        4102
      ],
      "op": "POP",
      "path": "16"
    },
    "732": {
      "fn": "BlockSafe.supportsInterface",
      "offset": [
        4066,
        4102
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2E4"
    },
    "735": {
      "fn": "BlockSafe.supportsInterface",
      "offset": [
        4090,
        4101
      ],
      "op": "DUP3",
      "path": "16"
    },
    "736": {
      "fn": "BlockSafe.supportsInterface",
      "offset": [
        4066,
        4089
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x6C6"
    },
    "739": {
      "fn": "BlockSafe.supportsInterface",
      "jump": "i",
      "offset": [
        4066,
        4102
      ],
      "op": "JUMP",
      "path": "16"
    },
    "740": {
      "fn": "BlockSafe.supportsInterface",
      "offset": [
        4066,
        4102
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "741": {
      "fn": "BlockSafe.supportsInterface",
      "offset": [
        3988,
        4102
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "742": {
      "fn": "BlockSafe.supportsInterface",
      "offset": [
        3818,
        4109
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "743": {
      "op": "POP"
    },
    "744": {
      "op": "POP"
    },
    "745": {
      "fn": "BlockSafe.supportsInterface",
      "jump": "o",
      "offset": [
        3818,
        4109
      ],
      "op": "JUMP",
      "path": "16"
    },
    "746": {
      "fn": "BlockSafe.addOperator",
      "offset": [
        3494,
        3646
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "747": {
      "fn": "BlockSafe.addOperator",
      "offset": [
        3555,
        3565
      ],
      "op": "CALLER",
      "path": "16"
    },
    "748": {
      "offset": [
        1517,
        1536
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "750": {
      "fn": "BlockSafe.addOperator",
      "offset": [
        1517,
        1536
      ],
      "op": "DUP2",
      "path": "16"
    },
    "751": {
      "fn": "BlockSafe.addOperator",
      "offset": [
        1517,
        1536
      ],
      "op": "DUP2",
      "path": "16"
    },
    "752": {
      "fn": "BlockSafe.addOperator",
      "offset": [
        1517,
        1536
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "753": {
      "offset": [
        1517,
        1526
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x2"
    },
    "755": {
      "offset": [
        1517,
        1536
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "757": {
      "fn": "BlockSafe.addOperator",
      "offset": [
        1517,
        1536
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "758": {
      "fn": "BlockSafe.addOperator",
      "offset": [
        1517,
        1536
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "760": {
      "fn": "BlockSafe.addOperator",
      "offset": [
        1517,
        1536
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "761": {
      "fn": "BlockSafe.addOperator",
      "offset": [
        1517,
        1536
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "762": {
      "fn": "BlockSafe.addOperator",
      "offset": [
        1517,
        1536
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "763": {
      "fn": "BlockSafe.addOperator",
      "offset": [
        1517,
        1536
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "765": {
      "fn": "BlockSafe.addOperator",
      "offset": [
        1517,
        1536
      ],
      "op": "AND",
      "path": "16"
    },
    "766": {
      "offset": [
        1509,
        1556
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x322"
    },
    "769": {
      "offset": [
        1509,
        1556
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "770": {
      "fn": "BlockSafe.addOperator",
      "offset": [
        1509,
        1556
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "772": {
      "fn": "BlockSafe.addOperator",
      "offset": [
        1509,
        1556
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "773": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "777": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "779": {
      "op": "SHL"
    },
    "780": {
      "offset": [
        1509,
        1556
      ],
      "op": "DUP2",
      "path": "16"
    },
    "781": {
      "fn": "BlockSafe.addOperator",
      "offset": [
        1509,
        1556
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "782": {
      "fn": "BlockSafe.addOperator",
      "offset": [
        1509,
        1556
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "784": {
      "fn": "BlockSafe.addOperator",
      "offset": [
        1509,
        1556
      ],
      "op": "ADD",
      "path": "16"
    },
    "785": {
      "fn": "BlockSafe.addOperator",
      "offset": [
        1509,
        1556
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x319"
    },
    "788": {
      "fn": "BlockSafe.addOperator",
      "offset": [
        1509,
        1556
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "789": {
      "fn": "BlockSafe.addOperator",
      "offset": [
        1509,
        1556
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xE50"
    },
    "792": {
      "fn": "BlockSafe.addOperator",
      "jump": "i",
      "offset": [
        1509,
        1556
      ],
      "op": "JUMP",
      "path": "16"
    },
    "793": {
      "fn": "BlockSafe.addOperator",
      "offset": [
        1509,
        1556
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "794": {
      "fn": "BlockSafe.addOperator",
      "offset": [
        1509,
        1556
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "796": {
      "fn": "BlockSafe.addOperator",
      "offset": [
        1509,
        1556
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "797": {
      "fn": "BlockSafe.addOperator",
      "offset": [
        1509,
        1556
      ],
      "op": "DUP1",
      "path": "16"
    },
    "798": {
      "fn": "BlockSafe.addOperator",
      "offset": [
        1509,
        1556
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "799": {
      "fn": "BlockSafe.addOperator",
      "offset": [
        1509,
        1556
      ],
      "op": "SUB",
      "path": "16"
    },
    "800": {
      "fn": "BlockSafe.addOperator",
      "offset": [
        1509,
        1556
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "801": {
      "fn": "BlockSafe.addOperator",
      "offset": [
        1509,
        1556
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "16"
    },
    "802": {
      "fn": "BlockSafe.addOperator",
      "offset": [
        1509,
        1556
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "803": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "805": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "807": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "809": {
      "op": "SHL"
    },
    "810": {
      "op": "SUB"
    },
    "811": {
      "fn": "BlockSafe.addOperator",
      "offset": [
        3577,
        3596
      ],
      "op": "DUP3",
      "path": "16",
      "statement": 1
    },
    "812": {
      "fn": "BlockSafe.addOperator",
      "offset": [
        3577,
        3596
      ],
      "op": "AND",
      "path": "16"
    },
    "813": {
      "fn": "BlockSafe.addOperator",
      "offset": [
        3577,
        3596
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "815": {
      "fn": "BlockSafe.addOperator",
      "offset": [
        3577,
        3596
      ],
      "op": "DUP2",
      "path": "16"
    },
    "816": {
      "fn": "BlockSafe.addOperator",
      "offset": [
        3577,
        3596
      ],
      "op": "DUP2",
      "path": "16"
    },
    "817": {
      "fn": "BlockSafe.addOperator",
      "offset": [
        3577,
        3596
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "818": {
      "fn": "BlockSafe.addOperator",
      "offset": [
        3577,
        3586
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x2"
    },
    "820": {
      "fn": "BlockSafe.addOperator",
      "offset": [
        3577,
        3596
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "822": {
      "fn": "BlockSafe.addOperator",
      "offset": [
        3577,
        3596
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "823": {
      "fn": "BlockSafe.addOperator",
      "offset": [
        3577,
        3596
      ],
      "op": "DUP2",
      "path": "16"
    },
    "824": {
      "fn": "BlockSafe.addOperator",
      "offset": [
        3577,
        3596
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "825": {
      "fn": "BlockSafe.addOperator",
      "offset": [
        3577,
        3596
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "827": {
      "fn": "BlockSafe.addOperator",
      "offset": [
        3577,
        3596
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "828": {
      "fn": "BlockSafe.addOperator",
      "offset": [
        3577,
        3596
      ],
      "op": "DUP3",
      "path": "16"
    },
    "829": {
      "fn": "BlockSafe.addOperator",
      "offset": [
        3577,
        3596
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "830": {
      "fn": "BlockSafe.addOperator",
      "offset": [
        3577,
        3596
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "831": {
      "fn": "BlockSafe.addOperator",
      "offset": [
        3577,
        3603
      ],
      "op": "DUP1",
      "path": "16"
    },
    "832": {
      "fn": "BlockSafe.addOperator",
      "offset": [
        3577,
        3603
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "833": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "835": {
      "op": "NOT"
    },
    "836": {
      "fn": "BlockSafe.addOperator",
      "offset": [
        3577,
        3603
      ],
      "op": "AND",
      "path": "16"
    },
    "837": {
      "fn": "BlockSafe.addOperator",
      "offset": [
        3599,
        3603
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "839": {
      "fn": "BlockSafe.addOperator",
      "offset": [
        3577,
        3603
      ],
      "op": "OR",
      "path": "16"
    },
    "840": {
      "fn": "BlockSafe.addOperator",
      "offset": [
        3577,
        3603
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "841": {
      "fn": "BlockSafe.addOperator",
      "offset": [
        3577,
        3603
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "842": {
      "fn": "BlockSafe.addOperator",
      "offset": [
        3618,
        3639
      ],
      "op": "SWAP1",
      "path": "16",
      "statement": 2
    },
    "843": {
      "fn": "BlockSafe.addOperator",
      "offset": [
        3618,
        3639
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "844": {
      "op": "SWAP2"
    },
    "845": {
      "op": "DUP3"
    },
    "846": {
      "op": "MSTORE"
    },
    "847": {
      "fn": "BlockSafe.addOperator",
      "offset": [
        3618,
        3639
      ],
      "op": "PUSH32",
      "path": "16",
      "value": "0xDA12EE837E6978172AAF54B16145FFE08414FD8710092EF033C71B8EB6EC189A"
    },
    "880": {
      "fn": "BlockSafe.addOperator",
      "offset": [
        3618,
        3639
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "881": {
      "op": "ADD"
    },
    "882": {
      "fn": "BlockSafe.addOperator",
      "offset": [
        3618,
        3639
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "883": {
      "fn": "BlockSafe.addOperator",
      "offset": [
        3618,
        3639
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "885": {
      "fn": "BlockSafe.addOperator",
      "offset": [
        3618,
        3639
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "886": {
      "fn": "BlockSafe.addOperator",
      "offset": [
        3618,
        3639
      ],
      "op": "DUP1",
      "path": "16"
    },
    "887": {
      "fn": "BlockSafe.addOperator",
      "offset": [
        3618,
        3639
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "888": {
      "fn": "BlockSafe.addOperator",
      "offset": [
        3618,
        3639
      ],
      "op": "SUB",
      "path": "16"
    },
    "889": {
      "fn": "BlockSafe.addOperator",
      "offset": [
        3618,
        3639
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "890": {
      "fn": "BlockSafe.addOperator",
      "offset": [
        3618,
        3639
      ],
      "op": "LOG1",
      "path": "16"
    },
    "891": {
      "fn": "BlockSafe.addOperator",
      "offset": [
        3494,
        3646
      ],
      "op": "POP",
      "path": "16"
    },
    "892": {
      "fn": "BlockSafe.addOperator",
      "offset": [
        3494,
        3646
      ],
      "op": "POP",
      "path": "16"
    },
    "893": {
      "fn": "BlockSafe.addOperator",
      "jump": "o",
      "offset": [
        3494,
        3646
      ],
      "op": "JUMP",
      "path": "16"
    },
    "894": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1580,
        2026
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "895": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1660,
        1671
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 3,
      "value": "0x1"
    },
    "897": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1660,
        1671
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "898": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1660,
        1671
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "900": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1660,
        1671
      ],
      "op": "AND",
      "path": "16"
    },
    "901": {
      "branch": 26,
      "fn": "BlockSafe.initialize",
      "offset": [
        1659,
        1671
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "902": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1651,
        1704
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3D1"
    },
    "905": {
      "branch": 26,
      "fn": "BlockSafe.initialize",
      "offset": [
        1651,
        1704
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "906": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1651,
        1704
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "908": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1651,
        1704
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "909": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "913": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "915": {
      "op": "SHL"
    },
    "916": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1651,
        1704
      ],
      "op": "DUP2",
      "path": "16"
    },
    "917": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1651,
        1704
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "918": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "920": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1651,
        1704
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "922": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1651,
        1704
      ],
      "op": "DUP3",
      "path": "16"
    },
    "923": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1651,
        1704
      ],
      "op": "ADD",
      "path": "16"
    },
    "924": {
      "op": "MSTORE"
    },
    "925": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "927": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "929": {
      "op": "DUP3"
    },
    "930": {
      "op": "ADD"
    },
    "931": {
      "op": "MSTORE"
    },
    "932": {
      "op": "PUSH32",
      "value": "0x43616E206E6F7420626520696E697469616C697A656420747769636500000000"
    },
    "965": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "967": {
      "op": "DUP3"
    },
    "968": {
      "op": "ADD"
    },
    "969": {
      "op": "MSTORE"
    },
    "970": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "972": {
      "op": "ADD"
    },
    "973": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1651,
        1704
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x319"
    },
    "976": {
      "op": "JUMP"
    },
    "977": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1651,
        1704
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "978": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1737,
        1741
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 4,
      "value": "0x1"
    },
    "980": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1723,
        1741
      ],
      "op": "DUP1",
      "path": "16"
    },
    "981": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1723,
        1741
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "982": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "984": {
      "op": "NOT"
    },
    "985": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1723,
        1741
      ],
      "op": "AND",
      "path": "16"
    },
    "986": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1723,
        1741
      ],
      "op": "DUP2",
      "path": "16"
    },
    "987": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1723,
        1741
      ],
      "op": "OR",
      "path": "16"
    },
    "988": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1723,
        1741
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "989": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1723,
        1741
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "990": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1794,
        1796
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 5,
      "value": "0xA"
    },
    "992": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1773,
        1796
      ],
      "op": "DUP2",
      "path": "16"
    },
    "993": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1773,
        1796
      ],
      "op": "GT",
      "path": "16"
    },
    "994": {
      "branch": 27,
      "fn": "BlockSafe.initialize",
      "offset": [
        1773,
        1796
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "995": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1752,
        1862
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x43F"
    },
    "998": {
      "branch": 27,
      "fn": "BlockSafe.initialize",
      "offset": [
        1752,
        1862
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "999": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1752,
        1862
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1001": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1752,
        1862
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1002": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1006": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1008": {
      "op": "SHL"
    },
    "1009": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1752,
        1862
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1010": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1752,
        1862
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1011": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1013": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1752,
        1862
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1015": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1752,
        1862
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1016": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1752,
        1862
      ],
      "op": "ADD",
      "path": "16"
    },
    "1017": {
      "op": "MSTORE"
    },
    "1018": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "1020": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1022": {
      "op": "DUP3"
    },
    "1023": {
      "op": "ADD"
    },
    "1024": {
      "op": "MSTORE"
    },
    "1025": {
      "op": "PUSH32",
      "value": "0x43616E277420736574206D6F7265207468616E203130206F70657261746F7273"
    },
    "1058": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1060": {
      "op": "DUP3"
    },
    "1061": {
      "op": "ADD"
    },
    "1062": {
      "op": "MSTORE"
    },
    "1063": {
      "op": "PUSH8",
      "value": "0x206174206F6E6365"
    },
    "1072": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "1074": {
      "op": "SHL"
    },
    "1075": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1077": {
      "op": "DUP3"
    },
    "1078": {
      "op": "ADD"
    },
    "1079": {
      "op": "MSTORE"
    },
    "1080": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1082": {
      "op": "ADD"
    },
    "1083": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1752,
        1862
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x319"
    },
    "1086": {
      "op": "JUMP"
    },
    "1087": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1752,
        1862
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1088": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1878,
        1885
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1090": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1873,
        2020
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1091": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1891,
        1912
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "1093": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1891,
        1912
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1094": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1891,
        1912
      ],
      "op": "AND",
      "path": "16"
    },
    "1095": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1891,
        1912
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1096": {
      "op": "GT"
    },
    "1097": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1873,
        2020
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1098": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1873,
        2020
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x51D"
    },
    "1101": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1873,
        2020
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1102": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1960,
        1964
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 6,
      "value": "0x1"
    },
    "1104": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1933,
        1942
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x2"
    },
    "1106": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1933,
        1957
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1108": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1943,
        1953
      ],
      "op": "DUP6",
      "path": "16"
    },
    "1109": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1943,
        1953
      ],
      "op": "DUP6",
      "path": "16"
    },
    "1110": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1954,
        1955
      ],
      "op": "DUP6",
      "path": "16"
    },
    "1111": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1943,
        1956
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "1113": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1943,
        1956
      ],
      "op": "AND",
      "path": "16"
    },
    "1114": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1943,
        1956
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1115": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1943,
        1956
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1116": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1943,
        1956
      ],
      "op": "LT",
      "path": "16"
    },
    "1117": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1943,
        1956
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x468"
    },
    "1120": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1943,
        1956
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1121": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1943,
        1956
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x468"
    },
    "1124": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1943,
        1956
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xE79"
    },
    "1127": {
      "fn": "BlockSafe.initialize",
      "jump": "i",
      "offset": [
        1943,
        1956
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1128": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1943,
        1956
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1129": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1943,
        1956
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1130": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1943,
        1956
      ],
      "op": "POP",
      "path": "16"
    },
    "1131": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1943,
        1956
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1133": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1943,
        1956
      ],
      "op": "MUL",
      "path": "16"
    },
    "1134": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1943,
        1956
      ],
      "op": "ADD",
      "path": "16"
    },
    "1135": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1943,
        1956
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1137": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1943,
        1956
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1138": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1943,
        1956
      ],
      "op": "ADD",
      "path": "16"
    },
    "1139": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1943,
        1956
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1140": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1943,
        1956
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x47D"
    },
    "1143": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1943,
        1956
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1144": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1943,
        1956
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1145": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1943,
        1956
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x992"
    },
    "1148": {
      "fn": "BlockSafe.initialize",
      "jump": "i",
      "offset": [
        1943,
        1956
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1149": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1943,
        1956
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1150": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1152": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1154": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1156": {
      "op": "SHL"
    },
    "1157": {
      "op": "SUB"
    },
    "1158": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1933,
        1957
      ],
      "op": "AND",
      "path": "16"
    },
    "1159": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1933,
        1957
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1160": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1933,
        1957
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1161": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1933,
        1957
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1163": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1933,
        1957
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1164": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1933,
        1957
      ],
      "op": "ADD",
      "path": "16"
    },
    "1165": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1933,
        1957
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1166": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1933,
        1957
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1167": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1933,
        1957
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1168": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1933,
        1957
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1169": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1933,
        1957
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1171": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1933,
        1957
      ],
      "op": "ADD",
      "path": "16"
    },
    "1172": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1174": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1933,
        1957
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "1175": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1933,
        1964
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1176": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1933,
        1964
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1177": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1179": {
      "op": "NOT"
    },
    "1180": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1933,
        1964
      ],
      "op": "AND",
      "path": "16"
    },
    "1181": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1933,
        1964
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1182": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1933,
        1964
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1183": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1933,
        1964
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1184": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1933,
        1964
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1185": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1933,
        1964
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1186": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1933,
        1964
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1187": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1933,
        1964
      ],
      "op": "OR",
      "path": "16"
    },
    "1188": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1933,
        1964
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1189": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1933,
        1964
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "1190": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1983,
        2009
      ],
      "op": "PUSH32",
      "path": "16",
      "statement": 7,
      "value": "0xDA12EE837E6978172AAF54B16145FFE08414FD8710092EF033C71B8EB6EC189A"
    },
    "1223": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1995,
        2005
      ],
      "op": "DUP4",
      "path": "16"
    },
    "1224": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1995,
        2005
      ],
      "op": "DUP4",
      "path": "16"
    },
    "1225": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1933,
        1964
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "1227": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1995,
        2008
      ],
      "op": "DUP5",
      "path": "16"
    },
    "1228": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1995,
        2008
      ],
      "op": "AND",
      "path": "16"
    },
    "1229": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1995,
        2008
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1230": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1995,
        2008
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1231": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1995,
        2008
      ],
      "op": "LT",
      "path": "16"
    },
    "1232": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1995,
        2008
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x4DB"
    },
    "1235": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1995,
        2008
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1236": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1995,
        2008
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x4DB"
    },
    "1239": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1995,
        2008
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xE79"
    },
    "1242": {
      "fn": "BlockSafe.initialize",
      "jump": "i",
      "offset": [
        1995,
        2008
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1243": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1995,
        2008
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1244": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1995,
        2008
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1245": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1995,
        2008
      ],
      "op": "POP",
      "path": "16"
    },
    "1246": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1995,
        2008
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1248": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1995,
        2008
      ],
      "op": "MUL",
      "path": "16"
    },
    "1249": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1995,
        2008
      ],
      "op": "ADD",
      "path": "16"
    },
    "1250": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1995,
        2008
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1252": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1995,
        2008
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1253": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1995,
        2008
      ],
      "op": "ADD",
      "path": "16"
    },
    "1254": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1995,
        2008
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1255": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1995,
        2008
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x4F0"
    },
    "1258": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1995,
        2008
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1259": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1995,
        2008
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1260": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1995,
        2008
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x992"
    },
    "1263": {
      "fn": "BlockSafe.initialize",
      "jump": "i",
      "offset": [
        1995,
        2008
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1264": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1995,
        2008
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1265": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1983,
        2009
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1267": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1983,
        2009
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1268": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1270": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1272": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1274": {
      "op": "SHL"
    },
    "1275": {
      "op": "SUB"
    },
    "1276": {
      "op": "SWAP1"
    },
    "1277": {
      "op": "SWAP2"
    },
    "1278": {
      "op": "AND"
    },
    "1279": {
      "op": "DUP2"
    },
    "1280": {
      "op": "MSTORE"
    },
    "1281": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1283": {
      "op": "ADD"
    },
    "1284": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1983,
        2009
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1286": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1983,
        2009
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1287": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1983,
        2009
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1288": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1983,
        2009
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1289": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1983,
        2009
      ],
      "op": "SUB",
      "path": "16"
    },
    "1290": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1983,
        2009
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1291": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1983,
        2009
      ],
      "op": "LOG1",
      "path": "16"
    },
    "1292": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1914,
        1917
      ],
      "op": "DUP1",
      "path": "16",
      "statement": 8
    },
    "1293": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1914,
        1917
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x515"
    },
    "1296": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1914,
        1917
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1297": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1914,
        1917
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xE8F"
    },
    "1300": {
      "fn": "BlockSafe.initialize",
      "jump": "i",
      "offset": [
        1914,
        1917
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1301": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1914,
        1917
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1302": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1914,
        1917
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1303": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1914,
        1917
      ],
      "op": "POP",
      "path": "16"
    },
    "1304": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1914,
        1917
      ],
      "op": "POP",
      "path": "16"
    },
    "1305": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1873,
        2020
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x442"
    },
    "1308": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1873,
        2020
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1309": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1873,
        2020
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1310": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1873,
        2020
      ],
      "op": "POP",
      "path": "16"
    },
    "1311": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1580,
        2026
      ],
      "op": "POP",
      "path": "16"
    },
    "1312": {
      "fn": "BlockSafe.initialize",
      "offset": [
        1580,
        2026
      ],
      "op": "POP",
      "path": "16"
    },
    "1313": {
      "fn": "BlockSafe.initialize",
      "jump": "o",
      "offset": [
        1580,
        2026
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1314": {
      "fn": "BlockSafe.execute",
      "offset": [
        2032,
        2309
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1315": {
      "offset": [
        1404,
        1415
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "1317": {
      "fn": "BlockSafe.execute",
      "offset": [
        1404,
        1415
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1318": {
      "fn": "BlockSafe.execute",
      "offset": [
        2217,
        2229
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x60"
    },
    "1320": {
      "fn": "BlockSafe.execute",
      "offset": [
        2217,
        2229
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1321": {
      "offset": [
        1404,
        1415
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "1323": {
      "fn": "BlockSafe.execute",
      "offset": [
        1404,
        1415
      ],
      "op": "AND",
      "path": "16"
    },
    "1324": {
      "offset": [
        1396,
        1435
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x569"
    },
    "1327": {
      "offset": [
        1396,
        1435
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1328": {
      "fn": "BlockSafe.execute",
      "offset": [
        1396,
        1435
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1330": {
      "fn": "BlockSafe.execute",
      "offset": [
        1396,
        1435
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1331": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1335": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1337": {
      "op": "SHL"
    },
    "1338": {
      "offset": [
        1396,
        1435
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1339": {
      "fn": "BlockSafe.execute",
      "offset": [
        1396,
        1435
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1340": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1342": {
      "offset": [
        1396,
        1435
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1344": {
      "fn": "BlockSafe.execute",
      "offset": [
        1396,
        1435
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1345": {
      "fn": "BlockSafe.execute",
      "offset": [
        1396,
        1435
      ],
      "op": "ADD",
      "path": "16"
    },
    "1346": {
      "op": "MSTORE"
    },
    "1347": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "1349": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1351": {
      "op": "DUP3"
    },
    "1352": {
      "op": "ADD"
    },
    "1353": {
      "op": "MSTORE"
    },
    "1354": {
      "op": "PUSH15",
      "value": "0x139BDD081A5B9A5D1A585B1A5E9959"
    },
    "1370": {
      "op": "PUSH1",
      "value": "0x8A"
    },
    "1372": {
      "op": "SHL"
    },
    "1373": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1375": {
      "op": "DUP3"
    },
    "1376": {
      "op": "ADD"
    },
    "1377": {
      "op": "MSTORE"
    },
    "1378": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1380": {
      "op": "ADD"
    },
    "1381": {
      "offset": [
        1396,
        1435
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x319"
    },
    "1384": {
      "op": "JUMP"
    },
    "1385": {
      "offset": [
        1396,
        1435
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1386": {
      "fn": "BlockSafe.execute",
      "offset": [
        2196,
        2206
      ],
      "op": "CALLER",
      "path": "16"
    },
    "1387": {
      "offset": [
        1517,
        1536
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1389": {
      "fn": "BlockSafe.execute",
      "offset": [
        1517,
        1536
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1390": {
      "fn": "BlockSafe.execute",
      "offset": [
        1517,
        1536
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1391": {
      "fn": "BlockSafe.execute",
      "offset": [
        1517,
        1536
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1392": {
      "offset": [
        1517,
        1526
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x2"
    },
    "1394": {
      "offset": [
        1517,
        1536
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1396": {
      "fn": "BlockSafe.execute",
      "offset": [
        1517,
        1536
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1397": {
      "fn": "BlockSafe.execute",
      "offset": [
        1517,
        1536
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1399": {
      "fn": "BlockSafe.execute",
      "offset": [
        1517,
        1536
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1400": {
      "fn": "BlockSafe.execute",
      "offset": [
        1517,
        1536
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "1401": {
      "fn": "BlockSafe.execute",
      "offset": [
        1517,
        1536
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1402": {
      "fn": "BlockSafe.execute",
      "offset": [
        1517,
        1536
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "1404": {
      "fn": "BlockSafe.execute",
      "offset": [
        1517,
        1536
      ],
      "op": "AND",
      "path": "16"
    },
    "1405": {
      "offset": [
        1509,
        1556
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x598"
    },
    "1408": {
      "offset": [
        1509,
        1556
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1409": {
      "fn": "BlockSafe.execute",
      "offset": [
        1509,
        1556
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1411": {
      "fn": "BlockSafe.execute",
      "offset": [
        1509,
        1556
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1412": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1416": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1418": {
      "op": "SHL"
    },
    "1419": {
      "offset": [
        1509,
        1556
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1420": {
      "fn": "BlockSafe.execute",
      "offset": [
        1509,
        1556
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1421": {
      "fn": "BlockSafe.execute",
      "offset": [
        1509,
        1556
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1423": {
      "fn": "BlockSafe.execute",
      "offset": [
        1509,
        1556
      ],
      "op": "ADD",
      "path": "16"
    },
    "1424": {
      "fn": "BlockSafe.execute",
      "offset": [
        1509,
        1556
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x319"
    },
    "1427": {
      "fn": "BlockSafe.execute",
      "offset": [
        1509,
        1556
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1428": {
      "fn": "BlockSafe.execute",
      "offset": [
        1509,
        1556
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xE50"
    },
    "1431": {
      "fn": "BlockSafe.execute",
      "jump": "i",
      "offset": [
        1509,
        1556
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1432": {
      "fn": "BlockSafe.execute",
      "offset": [
        1509,
        1556
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1433": {
      "fn": "BlockSafe.execute",
      "offset": [
        2248,
        2302
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 9,
      "value": "0x5A6"
    },
    "1436": {
      "fn": "BlockSafe.execute",
      "offset": [
        2257,
        2269
      ],
      "op": "DUP7",
      "path": "16"
    },
    "1437": {
      "fn": "BlockSafe.execute",
      "offset": [
        2271,
        2287
      ],
      "op": "DUP7",
      "path": "16"
    },
    "1438": {
      "fn": "BlockSafe.execute",
      "offset": [
        2271,
        2287
      ],
      "op": "DUP7",
      "path": "16"
    },
    "1439": {
      "fn": "BlockSafe.execute",
      "offset": [
        2289,
        2290
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1441": {
      "fn": "BlockSafe.execute",
      "offset": [
        2292,
        2301
      ],
      "op": "DUP8",
      "path": "16"
    },
    "1442": {
      "fn": "BlockSafe.execute",
      "offset": [
        2248,
        2256
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x6FB"
    },
    "1445": {
      "fn": "BlockSafe.execute",
      "jump": "i",
      "offset": [
        2248,
        2302
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1446": {
      "fn": "BlockSafe.execute",
      "offset": [
        2248,
        2302
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1447": {
      "fn": "BlockSafe.execute",
      "offset": [
        2241,
        2302
      ],
      "op": "SWAP7",
      "path": "16"
    },
    "1448": {
      "fn": "BlockSafe.execute",
      "offset": [
        2032,
        2309
      ],
      "op": "SWAP6",
      "path": "16"
    },
    "1449": {
      "op": "POP"
    },
    "1450": {
      "op": "POP"
    },
    "1451": {
      "op": "POP"
    },
    "1452": {
      "op": "POP"
    },
    "1453": {
      "op": "POP"
    },
    "1454": {
      "op": "POP"
    },
    "1455": {
      "fn": "BlockSafe.execute",
      "jump": "o",
      "offset": [
        2032,
        2309
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1456": {
      "fn": "BlockSafe.removeOperator",
      "offset": [
        3652,
        3812
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1457": {
      "fn": "BlockSafe.removeOperator",
      "offset": [
        3716,
        3726
      ],
      "op": "CALLER",
      "path": "16"
    },
    "1458": {
      "offset": [
        1517,
        1536
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1460": {
      "fn": "BlockSafe.removeOperator",
      "offset": [
        1517,
        1536
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1461": {
      "fn": "BlockSafe.removeOperator",
      "offset": [
        1517,
        1536
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1462": {
      "fn": "BlockSafe.removeOperator",
      "offset": [
        1517,
        1536
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1463": {
      "offset": [
        1517,
        1526
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x2"
    },
    "1465": {
      "offset": [
        1517,
        1536
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1467": {
      "fn": "BlockSafe.removeOperator",
      "offset": [
        1517,
        1536
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1468": {
      "fn": "BlockSafe.removeOperator",
      "offset": [
        1517,
        1536
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1470": {
      "fn": "BlockSafe.removeOperator",
      "offset": [
        1517,
        1536
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1471": {
      "fn": "BlockSafe.removeOperator",
      "offset": [
        1517,
        1536
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "1472": {
      "fn": "BlockSafe.removeOperator",
      "offset": [
        1517,
        1536
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1473": {
      "fn": "BlockSafe.removeOperator",
      "offset": [
        1517,
        1536
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "1475": {
      "fn": "BlockSafe.removeOperator",
      "offset": [
        1517,
        1536
      ],
      "op": "AND",
      "path": "16"
    },
    "1476": {
      "offset": [
        1509,
        1556
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x5DF"
    },
    "1479": {
      "offset": [
        1509,
        1556
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1480": {
      "fn": "BlockSafe.removeOperator",
      "offset": [
        1509,
        1556
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1482": {
      "fn": "BlockSafe.removeOperator",
      "offset": [
        1509,
        1556
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1483": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1487": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1489": {
      "op": "SHL"
    },
    "1490": {
      "offset": [
        1509,
        1556
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1491": {
      "fn": "BlockSafe.removeOperator",
      "offset": [
        1509,
        1556
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1492": {
      "fn": "BlockSafe.removeOperator",
      "offset": [
        1509,
        1556
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1494": {
      "fn": "BlockSafe.removeOperator",
      "offset": [
        1509,
        1556
      ],
      "op": "ADD",
      "path": "16"
    },
    "1495": {
      "fn": "BlockSafe.removeOperator",
      "offset": [
        1509,
        1556
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x319"
    },
    "1498": {
      "fn": "BlockSafe.removeOperator",
      "offset": [
        1509,
        1556
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1499": {
      "fn": "BlockSafe.removeOperator",
      "offset": [
        1509,
        1556
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xE50"
    },
    "1502": {
      "fn": "BlockSafe.removeOperator",
      "jump": "i",
      "offset": [
        1509,
        1556
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1503": {
      "fn": "BlockSafe.removeOperator",
      "offset": [
        1509,
        1556
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1504": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1506": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1508": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1510": {
      "op": "SHL"
    },
    "1511": {
      "op": "SUB"
    },
    "1512": {
      "fn": "BlockSafe.removeOperator",
      "offset": [
        3738,
        3757
      ],
      "op": "DUP3",
      "path": "16",
      "statement": 10
    },
    "1513": {
      "fn": "BlockSafe.removeOperator",
      "offset": [
        3738,
        3757
      ],
      "op": "AND",
      "path": "16"
    },
    "1514": {
      "fn": "BlockSafe.removeOperator",
      "offset": [
        3760,
        3765
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1516": {
      "fn": "BlockSafe.removeOperator",
      "offset": [
        3738,
        3757
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1517": {
      "fn": "BlockSafe.removeOperator",
      "offset": [
        3738,
        3757
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1518": {
      "fn": "BlockSafe.removeOperator",
      "offset": [
        3738,
        3757
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1519": {
      "fn": "BlockSafe.removeOperator",
      "offset": [
        3738,
        3747
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x2"
    },
    "1521": {
      "fn": "BlockSafe.removeOperator",
      "offset": [
        3738,
        3757
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1523": {
      "fn": "BlockSafe.removeOperator",
      "offset": [
        3738,
        3757
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1524": {
      "fn": "BlockSafe.removeOperator",
      "offset": [
        3738,
        3757
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1525": {
      "fn": "BlockSafe.removeOperator",
      "offset": [
        3738,
        3757
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1526": {
      "fn": "BlockSafe.removeOperator",
      "offset": [
        3738,
        3757
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1528": {
      "fn": "BlockSafe.removeOperator",
      "offset": [
        3738,
        3757
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1529": {
      "fn": "BlockSafe.removeOperator",
      "offset": [
        3738,
        3757
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1530": {
      "fn": "BlockSafe.removeOperator",
      "offset": [
        3738,
        3757
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1531": {
      "fn": "BlockSafe.removeOperator",
      "offset": [
        3738,
        3757
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "1532": {
      "fn": "BlockSafe.removeOperator",
      "offset": [
        3738,
        3765
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1533": {
      "fn": "BlockSafe.removeOperator",
      "offset": [
        3738,
        3765
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1534": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1536": {
      "op": "NOT"
    },
    "1537": {
      "fn": "BlockSafe.removeOperator",
      "offset": [
        3738,
        3765
      ],
      "op": "AND",
      "path": "16"
    },
    "1538": {
      "fn": "BlockSafe.removeOperator",
      "offset": [
        3738,
        3765
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1539": {
      "fn": "BlockSafe.removeOperator",
      "offset": [
        3738,
        3765
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "1540": {
      "fn": "BlockSafe.removeOperator",
      "offset": [
        3780,
        3805
      ],
      "op": "SWAP1",
      "path": "16",
      "statement": 11
    },
    "1541": {
      "fn": "BlockSafe.removeOperator",
      "offset": [
        3780,
        3805
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1542": {
      "op": "SWAP2"
    },
    "1543": {
      "op": "DUP3"
    },
    "1544": {
      "op": "MSTORE"
    },
    "1545": {
      "fn": "BlockSafe.removeOperator",
      "offset": [
        3780,
        3805
      ],
      "op": "PUSH32",
      "path": "16",
      "value": "0x80C0B871B97B595B16A7741C1B06FED0C6F6F558639F18CCBCE50724325DC40D"
    },
    "1578": {
      "fn": "BlockSafe.removeOperator",
      "offset": [
        3780,
        3805
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1579": {
      "op": "ADD"
    },
    "1580": {
      "fn": "BlockSafe.removeOperator",
      "offset": [
        3780,
        3805
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x372"
    },
    "1583": {
      "op": "JUMP"
    },
    "1584": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        724,
        971
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1585": {
      "op": "PUSH4",
      "value": "0xBC197C81"
    },
    "1590": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1592": {
      "op": "SHL"
    },
    "1593": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        724,
        971
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1594": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        724,
        971
      ],
      "op": "SWAP6",
      "path": "4"
    },
    "1595": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        724,
        971
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "1596": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        724,
        971
      ],
      "op": "POP",
      "path": "4"
    },
    "1597": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        724,
        971
      ],
      "op": "POP",
      "path": "4"
    },
    "1598": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        724,
        971
      ],
      "op": "POP",
      "path": "4"
    },
    "1599": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        724,
        971
      ],
      "op": "POP",
      "path": "4"
    },
    "1600": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        724,
        971
      ],
      "op": "POP",
      "path": "4"
    },
    "1601": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "jump": "o",
      "offset": [
        724,
        971
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1602": {
      "fn": "BlockSafe.executeWithValue",
      "offset": [
        2315,
        2621
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1603": {
      "offset": [
        1404,
        1415
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "1605": {
      "fn": "BlockSafe.executeWithValue",
      "offset": [
        1404,
        1415
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1606": {
      "fn": "BlockSafe.executeWithValue",
      "offset": [
        2515,
        2527
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x60"
    },
    "1608": {
      "fn": "BlockSafe.executeWithValue",
      "offset": [
        2515,
        2527
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1609": {
      "offset": [
        1404,
        1415
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "1611": {
      "branch": 28,
      "fn": "BlockSafe.executeWithValue",
      "offset": [
        1404,
        1415
      ],
      "op": "AND",
      "path": "16"
    },
    "1612": {
      "offset": [
        1396,
        1435
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x689"
    },
    "1615": {
      "branch": 28,
      "offset": [
        1396,
        1435
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1616": {
      "fn": "BlockSafe.executeWithValue",
      "offset": [
        1396,
        1435
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1618": {
      "fn": "BlockSafe.executeWithValue",
      "offset": [
        1396,
        1435
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1619": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1623": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1625": {
      "op": "SHL"
    },
    "1626": {
      "offset": [
        1396,
        1435
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1627": {
      "fn": "BlockSafe.executeWithValue",
      "offset": [
        1396,
        1435
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1628": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1630": {
      "offset": [
        1396,
        1435
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1632": {
      "fn": "BlockSafe.executeWithValue",
      "offset": [
        1396,
        1435
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1633": {
      "fn": "BlockSafe.executeWithValue",
      "offset": [
        1396,
        1435
      ],
      "op": "ADD",
      "path": "16"
    },
    "1634": {
      "op": "MSTORE"
    },
    "1635": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "1637": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1639": {
      "op": "DUP3"
    },
    "1640": {
      "op": "ADD"
    },
    "1641": {
      "op": "MSTORE"
    },
    "1642": {
      "op": "PUSH15",
      "value": "0x139BDD081A5B9A5D1A585B1A5E9959"
    },
    "1658": {
      "op": "PUSH1",
      "value": "0x8A"
    },
    "1660": {
      "op": "SHL"
    },
    "1661": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1663": {
      "op": "DUP3"
    },
    "1664": {
      "op": "ADD"
    },
    "1665": {
      "op": "MSTORE"
    },
    "1666": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1668": {
      "op": "ADD"
    },
    "1669": {
      "offset": [
        1396,
        1435
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x319"
    },
    "1672": {
      "op": "JUMP"
    },
    "1673": {
      "offset": [
        1396,
        1435
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1674": {
      "fn": "BlockSafe.executeWithValue",
      "offset": [
        2494,
        2504
      ],
      "op": "CALLER",
      "path": "16"
    },
    "1675": {
      "offset": [
        1517,
        1536
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1677": {
      "fn": "BlockSafe.executeWithValue",
      "offset": [
        1517,
        1536
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1678": {
      "fn": "BlockSafe.executeWithValue",
      "offset": [
        1517,
        1536
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1679": {
      "fn": "BlockSafe.executeWithValue",
      "offset": [
        1517,
        1536
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1680": {
      "offset": [
        1517,
        1526
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x2"
    },
    "1682": {
      "offset": [
        1517,
        1536
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1684": {
      "fn": "BlockSafe.executeWithValue",
      "offset": [
        1517,
        1536
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1685": {
      "fn": "BlockSafe.executeWithValue",
      "offset": [
        1517,
        1536
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1687": {
      "fn": "BlockSafe.executeWithValue",
      "offset": [
        1517,
        1536
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1688": {
      "fn": "BlockSafe.executeWithValue",
      "offset": [
        1517,
        1536
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "1689": {
      "fn": "BlockSafe.executeWithValue",
      "offset": [
        1517,
        1536
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1690": {
      "fn": "BlockSafe.executeWithValue",
      "offset": [
        1517,
        1536
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "1692": {
      "branch": 29,
      "fn": "BlockSafe.executeWithValue",
      "offset": [
        1517,
        1536
      ],
      "op": "AND",
      "path": "16"
    },
    "1693": {
      "offset": [
        1509,
        1556
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x6B8"
    },
    "1696": {
      "branch": 29,
      "offset": [
        1509,
        1556
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1697": {
      "fn": "BlockSafe.executeWithValue",
      "offset": [
        1509,
        1556
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1699": {
      "fn": "BlockSafe.executeWithValue",
      "offset": [
        1509,
        1556
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1700": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1704": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1706": {
      "op": "SHL"
    },
    "1707": {
      "offset": [
        1509,
        1556
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1708": {
      "fn": "BlockSafe.executeWithValue",
      "offset": [
        1509,
        1556
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1709": {
      "fn": "BlockSafe.executeWithValue",
      "offset": [
        1509,
        1556
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1711": {
      "fn": "BlockSafe.executeWithValue",
      "offset": [
        1509,
        1556
      ],
      "op": "ADD",
      "path": "16"
    },
    "1712": {
      "fn": "BlockSafe.executeWithValue",
      "offset": [
        1509,
        1556
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x319"
    },
    "1715": {
      "fn": "BlockSafe.executeWithValue",
      "offset": [
        1509,
        1556
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1716": {
      "fn": "BlockSafe.executeWithValue",
      "offset": [
        1509,
        1556
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xE50"
    },
    "1719": {
      "fn": "BlockSafe.executeWithValue",
      "jump": "i",
      "offset": [
        1509,
        1556
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1720": {
      "fn": "BlockSafe.executeWithValue",
      "offset": [
        1509,
        1556
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1721": {
      "fn": "BlockSafe.executeWithValue",
      "offset": [
        2550,
        2614
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 12,
      "value": "0x5A6"
    },
    "1724": {
      "fn": "BlockSafe.executeWithValue",
      "offset": [
        2559,
        2571
      ],
      "op": "DUP7",
      "path": "16"
    },
    "1725": {
      "fn": "BlockSafe.executeWithValue",
      "offset": [
        2573,
        2589
      ],
      "op": "DUP7",
      "path": "16"
    },
    "1726": {
      "fn": "BlockSafe.executeWithValue",
      "offset": [
        2573,
        2589
      ],
      "op": "DUP7",
      "path": "16"
    },
    "1727": {
      "fn": "BlockSafe.executeWithValue",
      "offset": [
        2591,
        2597
      ],
      "op": "DUP7",
      "path": "16"
    },
    "1728": {
      "offset": [
        972,
        973
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "1730": {
      "fn": "BlockSafe.executeWithValue",
      "offset": [
        2550,
        2558
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x6FB"
    },
    "1733": {
      "fn": "BlockSafe.executeWithValue",
      "jump": "i",
      "offset": [
        2550,
        2614
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1734": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        387,
        608
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1735": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        489,
        493
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1737": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1739": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1741": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1743": {
      "op": "SHL"
    },
    "1744": {
      "op": "SUB"
    },
    "1745": {
      "op": "NOT"
    },
    "1746": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        512,
        561
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 13
    },
    "1747": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        512,
        561
      ],
      "op": "AND",
      "path": "5"
    },
    "1748": {
      "op": "PUSH4",
      "value": "0x2711897"
    },
    "1753": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1755": {
      "op": "SHL"
    },
    "1756": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        512,
        561
      ],
      "op": "EQ",
      "path": "5"
    },
    "1757": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        512,
        561
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1758": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        512,
        601
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2E4"
    },
    "1761": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        512,
        601
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1762": {
      "op": "POP"
    },
    "1763": {
      "op": "PUSH4",
      "value": "0x1FFC9A7"
    },
    "1768": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1770": {
      "op": "SHL"
    },
    "1771": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1773": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1775": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1777": {
      "op": "SHL"
    },
    "1778": {
      "op": "SUB"
    },
    "1779": {
      "op": "NOT"
    },
    "1780": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        937,
        977
      ],
      "op": "DUP4",
      "path": "13",
      "statement": 14
    },
    "1781": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        937,
        977
      ],
      "op": "AND",
      "path": "13"
    },
    "1782": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        937,
        977
      ],
      "op": "EQ",
      "path": "13"
    },
    "1783": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        565,
        601
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2E4"
    },
    "1786": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        829,
        984
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1787": {
      "fn": "BlockSafe._execute",
      "offset": [
        2627,
        3488
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1788": {
      "fn": "BlockSafe._execute",
      "offset": [
        2801,
        2813
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x60"
    },
    "1790": {
      "offset": [
        2261,
        2282
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x705"
    },
    "1793": {
      "offset": [
        2261,
        2280
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x88D"
    },
    "1796": {
      "jump": "i",
      "offset": [
        2261,
        2282
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1797": {
      "fn": "BlockSafe._execute",
      "offset": [
        2261,
        2282
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1798": {
      "fn": "BlockSafe._execute",
      "offset": [
        2826,
        2838
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1800": {
      "fn": "BlockSafe._execute",
      "offset": [
        2848,
        2867
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x60"
    },
    "1802": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1804": {
      "op": "NOT"
    },
    "1805": {
      "fn": "BlockSafe._execute",
      "offset": [
        2881,
        2908
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "1807": {
      "fn": "BlockSafe._execute",
      "offset": [
        2881,
        2908
      ],
      "op": "DUP6",
      "path": "16"
    },
    "1808": {
      "fn": "BlockSafe._execute",
      "offset": [
        2881,
        2908
      ],
      "op": "AND",
      "path": "16"
    },
    "1809": {
      "branch": 30,
      "fn": "BlockSafe._execute",
      "offset": [
        2881,
        2908
      ],
      "op": "ADD",
      "path": "16"
    },
    "1810": {
      "fn": "BlockSafe._execute",
      "offset": [
        2878,
        3226
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x77D"
    },
    "1813": {
      "branch": 30,
      "fn": "BlockSafe._execute",
      "offset": [
        2878,
        3226
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1814": {
      "fn": "BlockSafe._execute",
      "offset": [
        2944,
        2956
      ],
      "op": "DUP8",
      "path": "16",
      "statement": 15
    },
    "1815": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1817": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1819": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1821": {
      "op": "SHL"
    },
    "1822": {
      "op": "SUB"
    },
    "1823": {
      "fn": "BlockSafe._execute",
      "offset": [
        2944,
        2961
      ],
      "op": "AND",
      "path": "16"
    },
    "1824": {
      "fn": "BlockSafe._execute",
      "offset": [
        2969,
        2975
      ],
      "op": "DUP6",
      "path": "16"
    },
    "1825": {
      "fn": "BlockSafe._execute",
      "offset": [
        2994,
        3010
      ],
      "op": "DUP9",
      "path": "16"
    },
    "1826": {
      "fn": "BlockSafe._execute",
      "offset": [
        2994,
        3010
      ],
      "op": "DUP9",
      "path": "16"
    },
    "1827": {
      "fn": "BlockSafe._execute",
      "offset": [
        2944,
        3024
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1829": {
      "fn": "BlockSafe._execute",
      "offset": [
        2944,
        3024
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1830": {
      "fn": "BlockSafe._execute",
      "offset": [
        2944,
        3024
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x730"
    },
    "1833": {
      "fn": "BlockSafe._execute",
      "offset": [
        2944,
        3024
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "1834": {
      "fn": "BlockSafe._execute",
      "offset": [
        2944,
        3024
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1835": {
      "fn": "BlockSafe._execute",
      "offset": [
        2944,
        3024
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1836": {
      "fn": "BlockSafe._execute",
      "offset": [
        2944,
        3024
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xEBC"
    },
    "1839": {
      "fn": "BlockSafe._execute",
      "jump": "i",
      "offset": [
        2944,
        3024
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1840": {
      "fn": "BlockSafe._execute",
      "offset": [
        2944,
        3024
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1841": {
      "fn": "BlockSafe._execute",
      "offset": [
        2944,
        3024
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1843": {
      "fn": "BlockSafe._execute",
      "offset": [
        2944,
        3024
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1845": {
      "fn": "BlockSafe._execute",
      "offset": [
        2944,
        3024
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1846": {
      "fn": "BlockSafe._execute",
      "offset": [
        2944,
        3024
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1847": {
      "fn": "BlockSafe._execute",
      "offset": [
        2944,
        3024
      ],
      "op": "DUP4",
      "path": "16"
    },
    "1848": {
      "fn": "BlockSafe._execute",
      "offset": [
        2944,
        3024
      ],
      "op": "SUB",
      "path": "16"
    },
    "1849": {
      "fn": "BlockSafe._execute",
      "offset": [
        2944,
        3024
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1850": {
      "fn": "BlockSafe._execute",
      "offset": [
        2944,
        3024
      ],
      "op": "DUP6",
      "path": "16"
    },
    "1851": {
      "fn": "BlockSafe._execute",
      "offset": [
        2944,
        3024
      ],
      "op": "DUP8",
      "path": "16"
    },
    "1852": {
      "fn": "BlockSafe._execute",
      "offset": [
        2944,
        3024
      ],
      "op": "GAS",
      "path": "16"
    },
    "1853": {
      "fn": "BlockSafe._execute",
      "offset": [
        2944,
        3024
      ],
      "op": "CALL",
      "path": "16"
    },
    "1854": {
      "fn": "BlockSafe._execute",
      "offset": [
        2944,
        3024
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "1855": {
      "fn": "BlockSafe._execute",
      "offset": [
        2944,
        3024
      ],
      "op": "POP",
      "path": "16"
    },
    "1856": {
      "fn": "BlockSafe._execute",
      "offset": [
        2944,
        3024
      ],
      "op": "POP",
      "path": "16"
    },
    "1857": {
      "fn": "BlockSafe._execute",
      "offset": [
        2944,
        3024
      ],
      "op": "POP",
      "path": "16"
    },
    "1858": {
      "fn": "BlockSafe._execute",
      "offset": [
        2944,
        3024
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "1859": {
      "fn": "BlockSafe._execute",
      "offset": [
        2944,
        3024
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1860": {
      "fn": "BlockSafe._execute",
      "offset": [
        2944,
        3024
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1862": {
      "fn": "BlockSafe._execute",
      "offset": [
        2944,
        3024
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1863": {
      "fn": "BlockSafe._execute",
      "offset": [
        2944,
        3024
      ],
      "op": "EQ",
      "path": "16"
    },
    "1864": {
      "fn": "BlockSafe._execute",
      "offset": [
        2944,
        3024
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x76D"
    },
    "1867": {
      "fn": "BlockSafe._execute",
      "offset": [
        2944,
        3024
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1868": {
      "fn": "BlockSafe._execute",
      "offset": [
        2944,
        3024
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1870": {
      "fn": "BlockSafe._execute",
      "offset": [
        2944,
        3024
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1871": {
      "fn": "BlockSafe._execute",
      "offset": [
        2944,
        3024
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1872": {
      "fn": "BlockSafe._execute",
      "offset": [
        2944,
        3024
      ],
      "op": "POP",
      "path": "16"
    },
    "1873": {
      "fn": "BlockSafe._execute",
      "offset": [
        2944,
        3024
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "1875": {
      "fn": "BlockSafe._execute",
      "offset": [
        2944,
        3024
      ],
      "op": "NOT",
      "path": "16"
    },
    "1876": {
      "fn": "BlockSafe._execute",
      "offset": [
        2944,
        3024
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x3F"
    },
    "1878": {
      "fn": "BlockSafe._execute",
      "offset": [
        2944,
        3024
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "1879": {
      "fn": "BlockSafe._execute",
      "offset": [
        2944,
        3024
      ],
      "op": "ADD",
      "path": "16"
    },
    "1880": {
      "fn": "BlockSafe._execute",
      "offset": [
        2944,
        3024
      ],
      "op": "AND",
      "path": "16"
    },
    "1881": {
      "fn": "BlockSafe._execute",
      "offset": [
        2944,
        3024
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1882": {
      "fn": "BlockSafe._execute",
      "offset": [
        2944,
        3024
      ],
      "op": "ADD",
      "path": "16"
    },
    "1883": {
      "fn": "BlockSafe._execute",
      "offset": [
        2944,
        3024
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1885": {
      "fn": "BlockSafe._execute",
      "offset": [
        2944,
        3024
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1886": {
      "fn": "BlockSafe._execute",
      "offset": [
        2944,
        3024
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "1887": {
      "fn": "BlockSafe._execute",
      "offset": [
        2944,
        3024
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1888": {
      "fn": "BlockSafe._execute",
      "offset": [
        2944,
        3024
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1889": {
      "fn": "BlockSafe._execute",
      "offset": [
        2944,
        3024
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "1890": {
      "fn": "BlockSafe._execute",
      "offset": [
        2944,
        3024
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1892": {
      "fn": "BlockSafe._execute",
      "offset": [
        2944,
        3024
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1894": {
      "fn": "BlockSafe._execute",
      "offset": [
        2944,
        3024
      ],
      "op": "DUP5",
      "path": "16"
    },
    "1895": {
      "fn": "BlockSafe._execute",
      "offset": [
        2944,
        3024
      ],
      "op": "ADD",
      "path": "16"
    },
    "1896": {
      "fn": "BlockSafe._execute",
      "offset": [
        2944,
        3024
      ],
      "op": "RETURNDATACOPY",
      "path": "16"
    },
    "1897": {
      "fn": "BlockSafe._execute",
      "offset": [
        2944,
        3024
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x772"
    },
    "1900": {
      "fn": "BlockSafe._execute",
      "offset": [
        2944,
        3024
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1901": {
      "fn": "BlockSafe._execute",
      "offset": [
        2944,
        3024
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1902": {
      "fn": "BlockSafe._execute",
      "offset": [
        2944,
        3024
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x60"
    },
    "1904": {
      "fn": "BlockSafe._execute",
      "offset": [
        2944,
        3024
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1905": {
      "fn": "BlockSafe._execute",
      "offset": [
        2944,
        3024
      ],
      "op": "POP",
      "path": "16"
    },
    "1906": {
      "fn": "BlockSafe._execute",
      "offset": [
        2944,
        3024
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1907": {
      "op": "POP"
    },
    "1908": {
      "fn": "BlockSafe._execute",
      "offset": [
        2924,
        3024
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1909": {
      "fn": "BlockSafe._execute",
      "offset": [
        2924,
        3024
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "1910": {
      "op": "POP"
    },
    "1911": {
      "fn": "BlockSafe._execute",
      "offset": [
        2924,
        3024
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1912": {
      "op": "POP"
    },
    "1913": {
      "fn": "BlockSafe._execute",
      "offset": [
        2878,
        3226
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x818"
    },
    "1916": {
      "fn": "BlockSafe._execute",
      "offset": [
        2878,
        3226
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1917": {
      "fn": "BlockSafe._execute",
      "offset": [
        2878,
        3226
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1918": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1920": {
      "op": "NOT"
    },
    "1921": {
      "fn": "BlockSafe._execute",
      "offset": [
        3045,
        3080
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "1923": {
      "fn": "BlockSafe._execute",
      "offset": [
        3045,
        3080
      ],
      "op": "DUP6",
      "path": "16"
    },
    "1924": {
      "fn": "BlockSafe._execute",
      "offset": [
        3045,
        3080
      ],
      "op": "AND",
      "path": "16"
    },
    "1925": {
      "branch": 31,
      "fn": "BlockSafe._execute",
      "offset": [
        3045,
        3080
      ],
      "op": "ADD",
      "path": "16"
    },
    "1926": {
      "fn": "BlockSafe._execute",
      "offset": [
        3041,
        3226
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x7DE"
    },
    "1929": {
      "branch": 31,
      "fn": "BlockSafe._execute",
      "offset": [
        3041,
        3226
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1930": {
      "fn": "BlockSafe._execute",
      "offset": [
        3116,
        3128
      ],
      "op": "DUP8",
      "path": "16",
      "statement": 16
    },
    "1931": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1933": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1935": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1937": {
      "op": "SHL"
    },
    "1938": {
      "op": "SUB"
    },
    "1939": {
      "fn": "BlockSafe._execute",
      "offset": [
        3116,
        3141
      ],
      "op": "AND",
      "path": "16"
    },
    "1940": {
      "fn": "BlockSafe._execute",
      "offset": [
        3142,
        3158
      ],
      "op": "DUP8",
      "path": "16"
    },
    "1941": {
      "fn": "BlockSafe._execute",
      "offset": [
        3142,
        3158
      ],
      "op": "DUP8",
      "path": "16"
    },
    "1942": {
      "fn": "BlockSafe._execute",
      "offset": [
        3116,
        3159
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1944": {
      "fn": "BlockSafe._execute",
      "offset": [
        3116,
        3159
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1945": {
      "fn": "BlockSafe._execute",
      "offset": [
        3116,
        3159
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x7A3"
    },
    "1948": {
      "fn": "BlockSafe._execute",
      "offset": [
        3116,
        3159
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "1949": {
      "fn": "BlockSafe._execute",
      "offset": [
        3116,
        3159
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1950": {
      "fn": "BlockSafe._execute",
      "offset": [
        3116,
        3159
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1951": {
      "fn": "BlockSafe._execute",
      "offset": [
        3116,
        3159
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xEBC"
    },
    "1954": {
      "fn": "BlockSafe._execute",
      "jump": "i",
      "offset": [
        3116,
        3159
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1955": {
      "fn": "BlockSafe._execute",
      "offset": [
        3116,
        3159
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1956": {
      "fn": "BlockSafe._execute",
      "offset": [
        3116,
        3159
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1958": {
      "fn": "BlockSafe._execute",
      "offset": [
        3116,
        3159
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1960": {
      "fn": "BlockSafe._execute",
      "offset": [
        3116,
        3159
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1961": {
      "fn": "BlockSafe._execute",
      "offset": [
        3116,
        3159
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1962": {
      "fn": "BlockSafe._execute",
      "offset": [
        3116,
        3159
      ],
      "op": "DUP4",
      "path": "16"
    },
    "1963": {
      "fn": "BlockSafe._execute",
      "offset": [
        3116,
        3159
      ],
      "op": "SUB",
      "path": "16"
    },
    "1964": {
      "fn": "BlockSafe._execute",
      "offset": [
        3116,
        3159
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1965": {
      "fn": "BlockSafe._execute",
      "offset": [
        3116,
        3159
      ],
      "op": "DUP6",
      "path": "16"
    },
    "1966": {
      "fn": "BlockSafe._execute",
      "offset": [
        3116,
        3159
      ],
      "op": "GAS",
      "path": "16"
    },
    "1967": {
      "fn": "BlockSafe._execute",
      "offset": [
        3116,
        3159
      ],
      "op": "DELEGATECALL",
      "path": "16"
    },
    "1968": {
      "fn": "BlockSafe._execute",
      "offset": [
        3116,
        3159
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1969": {
      "fn": "BlockSafe._execute",
      "offset": [
        3116,
        3159
      ],
      "op": "POP",
      "path": "16"
    },
    "1970": {
      "fn": "BlockSafe._execute",
      "offset": [
        3116,
        3159
      ],
      "op": "POP",
      "path": "16"
    },
    "1971": {
      "fn": "BlockSafe._execute",
      "offset": [
        3116,
        3159
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "1972": {
      "fn": "BlockSafe._execute",
      "offset": [
        3116,
        3159
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1973": {
      "fn": "BlockSafe._execute",
      "offset": [
        3116,
        3159
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1975": {
      "fn": "BlockSafe._execute",
      "offset": [
        3116,
        3159
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1976": {
      "fn": "BlockSafe._execute",
      "offset": [
        3116,
        3159
      ],
      "op": "EQ",
      "path": "16"
    },
    "1977": {
      "fn": "BlockSafe._execute",
      "offset": [
        3116,
        3159
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x76D"
    },
    "1980": {
      "fn": "BlockSafe._execute",
      "offset": [
        3116,
        3159
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1981": {
      "fn": "BlockSafe._execute",
      "offset": [
        3116,
        3159
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1983": {
      "fn": "BlockSafe._execute",
      "offset": [
        3116,
        3159
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1984": {
      "fn": "BlockSafe._execute",
      "offset": [
        3116,
        3159
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1985": {
      "fn": "BlockSafe._execute",
      "offset": [
        3116,
        3159
      ],
      "op": "POP",
      "path": "16"
    },
    "1986": {
      "fn": "BlockSafe._execute",
      "offset": [
        3116,
        3159
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "1988": {
      "fn": "BlockSafe._execute",
      "offset": [
        3116,
        3159
      ],
      "op": "NOT",
      "path": "16"
    },
    "1989": {
      "fn": "BlockSafe._execute",
      "offset": [
        3116,
        3159
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x3F"
    },
    "1991": {
      "fn": "BlockSafe._execute",
      "offset": [
        3116,
        3159
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "1992": {
      "fn": "BlockSafe._execute",
      "offset": [
        3116,
        3159
      ],
      "op": "ADD",
      "path": "16"
    },
    "1993": {
      "fn": "BlockSafe._execute",
      "offset": [
        3116,
        3159
      ],
      "op": "AND",
      "path": "16"
    },
    "1994": {
      "fn": "BlockSafe._execute",
      "offset": [
        3116,
        3159
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1995": {
      "fn": "BlockSafe._execute",
      "offset": [
        3116,
        3159
      ],
      "op": "ADD",
      "path": "16"
    },
    "1996": {
      "fn": "BlockSafe._execute",
      "offset": [
        3116,
        3159
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1998": {
      "fn": "BlockSafe._execute",
      "offset": [
        3116,
        3159
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1999": {
      "fn": "BlockSafe._execute",
      "offset": [
        3116,
        3159
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "2000": {
      "fn": "BlockSafe._execute",
      "offset": [
        3116,
        3159
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2001": {
      "fn": "BlockSafe._execute",
      "offset": [
        3116,
        3159
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2002": {
      "fn": "BlockSafe._execute",
      "offset": [
        3116,
        3159
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "2003": {
      "fn": "BlockSafe._execute",
      "offset": [
        3116,
        3159
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2005": {
      "fn": "BlockSafe._execute",
      "offset": [
        3116,
        3159
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "2007": {
      "fn": "BlockSafe._execute",
      "offset": [
        3116,
        3159
      ],
      "op": "DUP5",
      "path": "16"
    },
    "2008": {
      "fn": "BlockSafe._execute",
      "offset": [
        3116,
        3159
      ],
      "op": "ADD",
      "path": "16"
    },
    "2009": {
      "fn": "BlockSafe._execute",
      "offset": [
        3116,
        3159
      ],
      "op": "RETURNDATACOPY",
      "path": "16"
    },
    "2010": {
      "fn": "BlockSafe._execute",
      "offset": [
        3116,
        3159
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x772"
    },
    "2013": {
      "fn": "BlockSafe._execute",
      "offset": [
        3116,
        3159
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2014": {
      "fn": "BlockSafe._execute",
      "offset": [
        3041,
        3226
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2015": {
      "fn": "BlockSafe._execute",
      "offset": [
        3190,
        3215
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 17,
      "value": "0x40"
    },
    "2017": {
      "fn": "BlockSafe._execute",
      "offset": [
        3190,
        3215
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2018": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2022": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2024": {
      "op": "SHL"
    },
    "2025": {
      "fn": "BlockSafe._execute",
      "offset": [
        3190,
        3215
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2026": {
      "fn": "BlockSafe._execute",
      "offset": [
        3190,
        3215
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2027": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2029": {
      "fn": "BlockSafe._execute",
      "offset": [
        3190,
        3215
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "2031": {
      "fn": "BlockSafe._execute",
      "offset": [
        3190,
        3215
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2032": {
      "fn": "BlockSafe._execute",
      "offset": [
        3190,
        3215
      ],
      "op": "ADD",
      "path": "16"
    },
    "2033": {
      "op": "MSTORE"
    },
    "2034": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "2036": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2038": {
      "op": "DUP3"
    },
    "2039": {
      "op": "ADD"
    },
    "2040": {
      "op": "MSTORE"
    },
    "2041": {
      "op": "PUSH15",
      "value": "0x2BB937B7339037B832B930BA34B7B7"
    },
    "2057": {
      "op": "PUSH1",
      "value": "0x89"
    },
    "2059": {
      "op": "SHL"
    },
    "2060": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2062": {
      "op": "DUP3"
    },
    "2063": {
      "op": "ADD"
    },
    "2064": {
      "op": "MSTORE"
    },
    "2065": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2067": {
      "op": "ADD"
    },
    "2068": {
      "fn": "BlockSafe._execute",
      "offset": [
        3190,
        3215
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x319"
    },
    "2071": {
      "op": "JUMP"
    },
    "2072": {
      "fn": "BlockSafe._execute",
      "offset": [
        3041,
        3226
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2073": {
      "branch": 32,
      "fn": "BlockSafe._execute",
      "offset": [
        3241,
        3248
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2074": {
      "fn": "BlockSafe._execute",
      "offset": [
        3236,
        3304
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x83F"
    },
    "2077": {
      "branch": 32,
      "fn": "BlockSafe._execute",
      "offset": [
        3236,
        3304
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2078": {
      "fn": "BlockSafe._execute",
      "offset": [
        3271,
        3292
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 18,
      "value": "0x826"
    },
    "2081": {
      "fn": "BlockSafe._execute",
      "offset": [
        3271,
        3277
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2082": {
      "fn": "BlockSafe._execute",
      "offset": [
        3271,
        3290
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x8E6"
    },
    "2085": {
      "fn": "BlockSafe._execute",
      "jump": "i",
      "offset": [
        3271,
        3292
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2086": {
      "fn": "BlockSafe._execute",
      "offset": [
        3271,
        3292
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2087": {
      "fn": "BlockSafe._execute",
      "offset": [
        3264,
        3293
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2089": {
      "fn": "BlockSafe._execute",
      "offset": [
        3264,
        3293
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2090": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2094": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2096": {
      "op": "SHL"
    },
    "2097": {
      "fn": "BlockSafe._execute",
      "offset": [
        3264,
        3293
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2098": {
      "fn": "BlockSafe._execute",
      "offset": [
        3264,
        3293
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2099": {
      "fn": "BlockSafe._execute",
      "offset": [
        3264,
        3293
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "2101": {
      "fn": "BlockSafe._execute",
      "offset": [
        3264,
        3293
      ],
      "op": "ADD",
      "path": "16"
    },
    "2102": {
      "fn": "BlockSafe._execute",
      "offset": [
        3264,
        3293
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x319"
    },
    "2105": {
      "fn": "BlockSafe._execute",
      "offset": [
        3264,
        3293
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2106": {
      "fn": "BlockSafe._execute",
      "offset": [
        3264,
        3293
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2107": {
      "fn": "BlockSafe._execute",
      "offset": [
        3264,
        3293
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xC54"
    },
    "2110": {
      "fn": "BlockSafe._execute",
      "jump": "i",
      "offset": [
        3264,
        3293
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2111": {
      "fn": "BlockSafe._execute",
      "offset": [
        3236,
        3304
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2112": {
      "fn": "BlockSafe._execute",
      "offset": [
        3319,
        3457
      ],
      "op": "PUSH32",
      "path": "16",
      "statement": 19,
      "value": "0x4E2058815A1087A94D8A92ECDCE2F91D1370AA8C270EF97B0F28E0A3C6F68A87"
    },
    "2145": {
      "fn": "BlockSafe._execute",
      "offset": [
        3341,
        3351
      ],
      "op": "CALLER",
      "path": "16"
    },
    "2146": {
      "fn": "BlockSafe._execute",
      "offset": [
        3365,
        3377
      ],
      "op": "DUP10",
      "path": "16"
    },
    "2147": {
      "fn": "BlockSafe._execute",
      "offset": [
        3391,
        3407
      ],
      "op": "DUP10",
      "path": "16"
    },
    "2148": {
      "fn": "BlockSafe._execute",
      "offset": [
        3391,
        3407
      ],
      "op": "DUP10",
      "path": "16"
    },
    "2149": {
      "fn": "BlockSafe._execute",
      "offset": [
        3421,
        3427
      ],
      "op": "DUP10",
      "path": "16"
    },
    "2150": {
      "fn": "BlockSafe._execute",
      "offset": [
        3441,
        3447
      ],
      "op": "DUP7",
      "path": "16"
    },
    "2151": {
      "fn": "BlockSafe._execute",
      "offset": [
        3319,
        3457
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2153": {
      "fn": "BlockSafe._execute",
      "offset": [
        3319,
        3457
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2154": {
      "fn": "BlockSafe._execute",
      "offset": [
        3319,
        3457
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x878"
    },
    "2157": {
      "fn": "BlockSafe._execute",
      "offset": [
        3319,
        3457
      ],
      "op": "SWAP7",
      "path": "16"
    },
    "2158": {
      "fn": "BlockSafe._execute",
      "offset": [
        3319,
        3457
      ],
      "op": "SWAP6",
      "path": "16"
    },
    "2159": {
      "fn": "BlockSafe._execute",
      "offset": [
        3319,
        3457
      ],
      "op": "SWAP5",
      "path": "16"
    },
    "2160": {
      "fn": "BlockSafe._execute",
      "offset": [
        3319,
        3457
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "2161": {
      "fn": "BlockSafe._execute",
      "offset": [
        3319,
        3457
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "2162": {
      "fn": "BlockSafe._execute",
      "offset": [
        3319,
        3457
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2163": {
      "fn": "BlockSafe._execute",
      "offset": [
        3319,
        3457
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2164": {
      "fn": "BlockSafe._execute",
      "offset": [
        3319,
        3457
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xECC"
    },
    "2167": {
      "fn": "BlockSafe._execute",
      "jump": "i",
      "offset": [
        3319,
        3457
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2168": {
      "fn": "BlockSafe._execute",
      "offset": [
        3319,
        3457
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2169": {
      "fn": "BlockSafe._execute",
      "offset": [
        3319,
        3457
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2171": {
      "fn": "BlockSafe._execute",
      "offset": [
        3319,
        3457
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2172": {
      "fn": "BlockSafe._execute",
      "offset": [
        3319,
        3457
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2173": {
      "fn": "BlockSafe._execute",
      "offset": [
        3319,
        3457
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2174": {
      "fn": "BlockSafe._execute",
      "offset": [
        3319,
        3457
      ],
      "op": "SUB",
      "path": "16"
    },
    "2175": {
      "fn": "BlockSafe._execute",
      "offset": [
        3319,
        3457
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2176": {
      "fn": "BlockSafe._execute",
      "offset": [
        3319,
        3457
      ],
      "op": "LOG1",
      "path": "16"
    },
    "2177": {
      "fn": "BlockSafe._execute",
      "offset": [
        3475,
        3481
      ],
      "op": "SWAP2",
      "path": "16",
      "statement": 20
    },
    "2178": {
      "op": "POP"
    },
    "2179": {
      "op": "POP"
    },
    "2180": {
      "offset": [
        2303,
        2323
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x639"
    },
    "2183": {
      "offset": [
        1716,
        1717
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "2185": {
      "fn": "ReentrancyGuard._nonReentrantAfter",
      "offset": [
        2809,
        2816
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 21,
      "value": "0x0"
    },
    "2187": {
      "fn": "ReentrancyGuard._nonReentrantAfter",
      "offset": [
        2809,
        2831
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "2188": {
      "fn": "ReentrancyGuard._nonReentrantAfter",
      "offset": [
        2629,
        2838
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2189": {
      "fn": "ReentrancyGuard._nonReentrantBefore",
      "offset": [
        2336,
        2623
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2190": {
      "offset": [
        1759,
        1760
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "2192": {
      "fn": "ReentrancyGuard._nonReentrantBefore",
      "offset": [
        2468,
        2475
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 22,
      "value": "0x0"
    },
    "2194": {
      "fn": "ReentrancyGuard._nonReentrantBefore",
      "offset": [
        2468,
        2475
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2195": {
      "branch": 34,
      "fn": "ReentrancyGuard._nonReentrantBefore",
      "offset": [
        2468,
        2487
      ],
      "op": "SUB",
      "path": "2"
    },
    "2196": {
      "fn": "ReentrancyGuard._nonReentrantBefore",
      "offset": [
        2460,
        2523
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8DF"
    },
    "2199": {
      "branch": 34,
      "fn": "ReentrancyGuard._nonReentrantBefore",
      "offset": [
        2460,
        2523
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2200": {
      "fn": "ReentrancyGuard._nonReentrantBefore",
      "offset": [
        2460,
        2523
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2202": {
      "fn": "ReentrancyGuard._nonReentrantBefore",
      "offset": [
        2460,
        2523
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2203": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2207": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2209": {
      "op": "SHL"
    },
    "2210": {
      "fn": "ReentrancyGuard._nonReentrantBefore",
      "offset": [
        2460,
        2523
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2211": {
      "fn": "ReentrancyGuard._nonReentrantBefore",
      "offset": [
        2460,
        2523
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2212": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2214": {
      "fn": "ReentrancyGuard._nonReentrantBefore",
      "offset": [
        2460,
        2523
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2216": {
      "fn": "ReentrancyGuard._nonReentrantBefore",
      "offset": [
        2460,
        2523
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2217": {
      "fn": "ReentrancyGuard._nonReentrantBefore",
      "offset": [
        2460,
        2523
      ],
      "op": "ADD",
      "path": "2"
    },
    "2218": {
      "op": "MSTORE"
    },
    "2219": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2221": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2223": {
      "op": "DUP3"
    },
    "2224": {
      "op": "ADD"
    },
    "2225": {
      "op": "MSTORE"
    },
    "2226": {
      "op": "PUSH32",
      "value": "0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
    },
    "2259": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2261": {
      "op": "DUP3"
    },
    "2262": {
      "op": "ADD"
    },
    "2263": {
      "op": "MSTORE"
    },
    "2264": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2266": {
      "op": "ADD"
    },
    "2267": {
      "fn": "ReentrancyGuard._nonReentrantBefore",
      "offset": [
        2460,
        2523
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x319"
    },
    "2270": {
      "op": "JUMP"
    },
    "2271": {
      "fn": "ReentrancyGuard._nonReentrantBefore",
      "offset": [
        2460,
        2523
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2272": {
      "offset": [
        1759,
        1760
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "2274": {
      "fn": "ReentrancyGuard._nonReentrantBefore",
      "offset": [
        2598,
        2605
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 23,
      "value": "0x0"
    },
    "2276": {
      "fn": "ReentrancyGuard._nonReentrantBefore",
      "offset": [
        2598,
        2616
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "2277": {
      "fn": "ReentrancyGuard._nonReentrantBefore",
      "jump": "o",
      "offset": [
        2336,
        2623
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2278": {
      "fn": "CallHelpers2.getRevertMsg",
      "offset": [
        467,
        781
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2279": {
      "fn": "CallHelpers2.getRevertMsg",
      "offset": [
        552,
        565
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x60"
    },
    "2281": {
      "fn": "CallHelpers2.getRevertMsg",
      "offset": [
        602,
        604
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x44"
    },
    "2283": {
      "fn": "CallHelpers2.getRevertMsg",
      "offset": [
        581,
        592
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2284": {
      "fn": "CallHelpers2.getRevertMsg",
      "offset": [
        581,
        599
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2285": {
      "branch": 33,
      "fn": "CallHelpers2.getRevertMsg",
      "offset": [
        581,
        604
      ],
      "op": "LT",
      "path": "16"
    },
    "2286": {
      "fn": "CallHelpers2.getRevertMsg",
      "offset": [
        577,
        644
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2287": {
      "fn": "CallHelpers2.getRevertMsg",
      "offset": [
        577,
        644
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x92B"
    },
    "2290": {
      "branch": 33,
      "fn": "CallHelpers2.getRevertMsg",
      "offset": [
        577,
        644
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2291": {
      "op": "POP"
    },
    "2292": {
      "op": "POP"
    },
    "2293": {
      "fn": "CallHelpers2.getRevertMsg",
      "offset": [
        606,
        644
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 24,
      "value": "0x40"
    },
    "2295": {
      "fn": "CallHelpers2.getRevertMsg",
      "offset": [
        606,
        644
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2296": {
      "fn": "CallHelpers2.getRevertMsg",
      "offset": [
        606,
        644
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2297": {
      "fn": "CallHelpers2.getRevertMsg",
      "offset": [
        606,
        644
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2298": {
      "fn": "CallHelpers2.getRevertMsg",
      "offset": [
        606,
        644
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2299": {
      "fn": "CallHelpers2.getRevertMsg",
      "offset": [
        606,
        644
      ],
      "op": "ADD",
      "path": "16"
    },
    "2300": {
      "fn": "CallHelpers2.getRevertMsg",
      "offset": [
        606,
        644
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2301": {
      "fn": "CallHelpers2.getRevertMsg",
      "offset": [
        606,
        644
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2302": {
      "fn": "CallHelpers2.getRevertMsg",
      "offset": [
        606,
        644
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2303": {
      "fn": "CallHelpers2.getRevertMsg",
      "offset": [
        606,
        644
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1D"
    },
    "2305": {
      "fn": "CallHelpers2.getRevertMsg",
      "offset": [
        606,
        644
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2306": {
      "fn": "CallHelpers2.getRevertMsg",
      "offset": [
        606,
        644
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2307": {
      "fn": "CallHelpers2.getRevertMsg",
      "offset": [
        606,
        644
      ],
      "op": "PUSH32",
      "path": "16",
      "value": "0x5472616E73616374696F6E2072657665727465642073696C656E746C79000000"
    },
    "2340": {
      "fn": "CallHelpers2.getRevertMsg",
      "offset": [
        606,
        644
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "2342": {
      "fn": "CallHelpers2.getRevertMsg",
      "offset": [
        606,
        644
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2343": {
      "fn": "CallHelpers2.getRevertMsg",
      "offset": [
        606,
        644
      ],
      "op": "ADD",
      "path": "16"
    },
    "2344": {
      "fn": "CallHelpers2.getRevertMsg",
      "offset": [
        606,
        644
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2345": {
      "fn": "CallHelpers2.getRevertMsg",
      "offset": [
        606,
        644
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2346": {
      "fn": "CallHelpers2.getRevertMsg",
      "jump": "o",
      "offset": [
        467,
        781
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2347": {
      "fn": "CallHelpers2.getRevertMsg",
      "offset": [
        577,
        644
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2348": {
      "fn": "CallHelpers2.getRevertMsg",
      "offset": [
        710,
        714
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "2350": {
      "fn": "CallHelpers2.getRevertMsg",
      "offset": [
        697,
        708
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2351": {
      "fn": "CallHelpers2.getRevertMsg",
      "offset": [
        693,
        715
      ],
      "op": "ADD",
      "path": "16"
    },
    "2352": {
      "fn": "CallHelpers2.getRevertMsg",
      "offset": [
        678,
        715
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2353": {
      "fn": "CallHelpers2.getRevertMsg",
      "offset": [
        678,
        715
      ],
      "op": "POP",
      "path": "16"
    },
    "2354": {
      "fn": "CallHelpers2.getRevertMsg",
      "offset": [
        752,
        763
      ],
      "op": "DUP2",
      "path": "16",
      "statement": 25
    },
    "2355": {
      "fn": "CallHelpers2.getRevertMsg",
      "offset": [
        741,
        774
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2356": {
      "fn": "CallHelpers2.getRevertMsg",
      "offset": [
        741,
        774
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "2358": {
      "fn": "CallHelpers2.getRevertMsg",
      "offset": [
        741,
        774
      ],
      "op": "ADD",
      "path": "16"
    },
    "2359": {
      "fn": "CallHelpers2.getRevertMsg",
      "offset": [
        741,
        774
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2360": {
      "fn": "CallHelpers2.getRevertMsg",
      "offset": [
        741,
        774
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2361": {
      "fn": "CallHelpers2.getRevertMsg",
      "offset": [
        741,
        774
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2362": {
      "fn": "CallHelpers2.getRevertMsg",
      "offset": [
        741,
        774
      ],
      "op": "ADD",
      "path": "16"
    },
    "2363": {
      "fn": "CallHelpers2.getRevertMsg",
      "offset": [
        741,
        774
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2364": {
      "fn": "CallHelpers2.getRevertMsg",
      "offset": [
        741,
        774
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2E4"
    },
    "2367": {
      "fn": "CallHelpers2.getRevertMsg",
      "offset": [
        741,
        774
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2368": {
      "fn": "CallHelpers2.getRevertMsg",
      "offset": [
        741,
        774
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2369": {
      "fn": "CallHelpers2.getRevertMsg",
      "offset": [
        741,
        774
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xF35"
    },
    "2372": {
      "fn": "CallHelpers2.getRevertMsg",
      "jump": "i",
      "offset": [
        741,
        774
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2373": {
      "op": "JUMPDEST"
    },
    "2374": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2376": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2378": {
      "op": "DUP3"
    },
    "2379": {
      "op": "DUP5"
    },
    "2380": {
      "op": "SUB"
    },
    "2381": {
      "op": "SLT"
    },
    "2382": {
      "op": "ISZERO"
    },
    "2383": {
      "op": "PUSH2",
      "value": "0x957"
    },
    "2386": {
      "op": "JUMPI"
    },
    "2387": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2389": {
      "op": "DUP1"
    },
    "2390": {
      "op": "REVERT"
    },
    "2391": {
      "op": "JUMPDEST"
    },
    "2392": {
      "op": "DUP2"
    },
    "2393": {
      "op": "CALLDATALOAD"
    },
    "2394": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2396": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2398": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2400": {
      "op": "SHL"
    },
    "2401": {
      "op": "SUB"
    },
    "2402": {
      "op": "NOT"
    },
    "2403": {
      "op": "DUP2"
    },
    "2404": {
      "op": "AND"
    },
    "2405": {
      "op": "DUP2"
    },
    "2406": {
      "op": "EQ"
    },
    "2407": {
      "op": "PUSH2",
      "value": "0x96F"
    },
    "2410": {
      "op": "JUMPI"
    },
    "2411": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2413": {
      "op": "DUP1"
    },
    "2414": {
      "op": "REVERT"
    },
    "2415": {
      "op": "JUMPDEST"
    },
    "2416": {
      "op": "SWAP4"
    },
    "2417": {
      "op": "SWAP3"
    },
    "2418": {
      "op": "POP"
    },
    "2419": {
      "op": "POP"
    },
    "2420": {
      "op": "POP"
    },
    "2421": {
      "jump": "o",
      "op": "JUMP"
    },
    "2422": {
      "op": "JUMPDEST"
    },
    "2423": {
      "op": "DUP1"
    },
    "2424": {
      "op": "CALLDATALOAD"
    },
    "2425": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2427": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2429": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2431": {
      "op": "SHL"
    },
    "2432": {
      "op": "SUB"
    },
    "2433": {
      "op": "DUP2"
    },
    "2434": {
      "op": "AND"
    },
    "2435": {
      "op": "DUP2"
    },
    "2436": {
      "op": "EQ"
    },
    "2437": {
      "op": "PUSH2",
      "value": "0x98D"
    },
    "2440": {
      "op": "JUMPI"
    },
    "2441": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2443": {
      "op": "DUP1"
    },
    "2444": {
      "op": "REVERT"
    },
    "2445": {
      "op": "JUMPDEST"
    },
    "2446": {
      "op": "SWAP2"
    },
    "2447": {
      "op": "SWAP1"
    },
    "2448": {
      "op": "POP"
    },
    "2449": {
      "jump": "o",
      "op": "JUMP"
    },
    "2450": {
      "op": "JUMPDEST"
    },
    "2451": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2453": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2455": {
      "op": "DUP3"
    },
    "2456": {
      "op": "DUP5"
    },
    "2457": {
      "op": "SUB"
    },
    "2458": {
      "op": "SLT"
    },
    "2459": {
      "op": "ISZERO"
    },
    "2460": {
      "op": "PUSH2",
      "value": "0x9A4"
    },
    "2463": {
      "op": "JUMPI"
    },
    "2464": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2466": {
      "op": "DUP1"
    },
    "2467": {
      "op": "REVERT"
    },
    "2468": {
      "op": "JUMPDEST"
    },
    "2469": {
      "op": "PUSH2",
      "value": "0x96F"
    },
    "2472": {
      "op": "DUP3"
    },
    "2473": {
      "op": "PUSH2",
      "value": "0x976"
    },
    "2476": {
      "jump": "i",
      "op": "JUMP"
    },
    "2477": {
      "op": "JUMPDEST"
    },
    "2478": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2483": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2485": {
      "op": "SHL"
    },
    "2486": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2488": {
      "op": "MSTORE"
    },
    "2489": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "2491": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2493": {
      "op": "MSTORE"
    },
    "2494": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2496": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2498": {
      "op": "REVERT"
    },
    "2499": {
      "op": "JUMPDEST"
    },
    "2500": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2502": {
      "op": "MLOAD"
    },
    "2503": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2505": {
      "op": "DUP3"
    },
    "2506": {
      "op": "ADD"
    },
    "2507": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2509": {
      "op": "NOT"
    },
    "2510": {
      "op": "AND"
    },
    "2511": {
      "op": "DUP2"
    },
    "2512": {
      "op": "ADD"
    },
    "2513": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2522": {
      "op": "DUP2"
    },
    "2523": {
      "op": "GT"
    },
    "2524": {
      "op": "DUP3"
    },
    "2525": {
      "op": "DUP3"
    },
    "2526": {
      "op": "LT"
    },
    "2527": {
      "op": "OR"
    },
    "2528": {
      "op": "ISZERO"
    },
    "2529": {
      "op": "PUSH2",
      "value": "0x9EC"
    },
    "2532": {
      "op": "JUMPI"
    },
    "2533": {
      "op": "PUSH2",
      "value": "0x9EC"
    },
    "2536": {
      "op": "PUSH2",
      "value": "0x9AD"
    },
    "2539": {
      "jump": "i",
      "op": "JUMP"
    },
    "2540": {
      "op": "JUMPDEST"
    },
    "2541": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2543": {
      "op": "MSTORE"
    },
    "2544": {
      "op": "SWAP2"
    },
    "2545": {
      "op": "SWAP1"
    },
    "2546": {
      "op": "POP"
    },
    "2547": {
      "jump": "o",
      "op": "JUMP"
    },
    "2548": {
      "op": "JUMPDEST"
    },
    "2549": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2551": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2560": {
      "op": "DUP3"
    },
    "2561": {
      "op": "GT"
    },
    "2562": {
      "op": "ISZERO"
    },
    "2563": {
      "op": "PUSH2",
      "value": "0xA0E"
    },
    "2566": {
      "op": "JUMPI"
    },
    "2567": {
      "op": "PUSH2",
      "value": "0xA0E"
    },
    "2570": {
      "op": "PUSH2",
      "value": "0x9AD"
    },
    "2573": {
      "jump": "i",
      "op": "JUMP"
    },
    "2574": {
      "op": "JUMPDEST"
    },
    "2575": {
      "op": "POP"
    },
    "2576": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2578": {
      "op": "ADD"
    },
    "2579": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2581": {
      "op": "NOT"
    },
    "2582": {
      "op": "AND"
    },
    "2583": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2585": {
      "op": "ADD"
    },
    "2586": {
      "op": "SWAP1"
    },
    "2587": {
      "jump": "o",
      "op": "JUMP"
    },
    "2588": {
      "op": "JUMPDEST"
    },
    "2589": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2591": {
      "op": "DUP3"
    },
    "2592": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2594": {
      "op": "DUP4"
    },
    "2595": {
      "op": "ADD"
    },
    "2596": {
      "op": "SLT"
    },
    "2597": {
      "op": "PUSH2",
      "value": "0xA2D"
    },
    "2600": {
      "op": "JUMPI"
    },
    "2601": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2603": {
      "op": "DUP1"
    },
    "2604": {
      "op": "REVERT"
    },
    "2605": {
      "op": "JUMPDEST"
    },
    "2606": {
      "op": "DUP2"
    },
    "2607": {
      "op": "CALLDATALOAD"
    },
    "2608": {
      "op": "PUSH2",
      "value": "0xA40"
    },
    "2611": {
      "op": "PUSH2",
      "value": "0xA3B"
    },
    "2614": {
      "op": "DUP3"
    },
    "2615": {
      "op": "PUSH2",
      "value": "0x9F4"
    },
    "2618": {
      "jump": "i",
      "op": "JUMP"
    },
    "2619": {
      "op": "JUMPDEST"
    },
    "2620": {
      "op": "PUSH2",
      "value": "0x9C3"
    },
    "2623": {
      "jump": "i",
      "op": "JUMP"
    },
    "2624": {
      "op": "JUMPDEST"
    },
    "2625": {
      "op": "DUP2"
    },
    "2626": {
      "op": "DUP2"
    },
    "2627": {
      "op": "MSTORE"
    },
    "2628": {
      "op": "DUP5"
    },
    "2629": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2631": {
      "op": "DUP4"
    },
    "2632": {
      "op": "DUP7"
    },
    "2633": {
      "op": "ADD"
    },
    "2634": {
      "op": "ADD"
    },
    "2635": {
      "op": "GT"
    },
    "2636": {
      "op": "ISZERO"
    },
    "2637": {
      "op": "PUSH2",
      "value": "0xA55"
    },
    "2640": {
      "op": "JUMPI"
    },
    "2641": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2643": {
      "op": "DUP1"
    },
    "2644": {
      "op": "REVERT"
    },
    "2645": {
      "op": "JUMPDEST"
    },
    "2646": {
      "op": "DUP2"
    },
    "2647": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2649": {
      "op": "DUP6"
    },
    "2650": {
      "op": "ADD"
    },
    "2651": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2653": {
      "op": "DUP4"
    },
    "2654": {
      "op": "ADD"
    },
    "2655": {
      "op": "CALLDATACOPY"
    },
    "2656": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2658": {
      "op": "SWAP2"
    },
    "2659": {
      "op": "DUP2"
    },
    "2660": {
      "op": "ADD"
    },
    "2661": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2663": {
      "op": "ADD"
    },
    "2664": {
      "op": "SWAP2"
    },
    "2665": {
      "op": "SWAP1"
    },
    "2666": {
      "op": "SWAP2"
    },
    "2667": {
      "op": "MSTORE"
    },
    "2668": {
      "op": "SWAP4"
    },
    "2669": {
      "op": "SWAP3"
    },
    "2670": {
      "op": "POP"
    },
    "2671": {
      "op": "POP"
    },
    "2672": {
      "op": "POP"
    },
    "2673": {
      "jump": "o",
      "op": "JUMP"
    },
    "2674": {
      "op": "JUMPDEST"
    },
    "2675": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2677": {
      "op": "DUP1"
    },
    "2678": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2680": {
      "op": "DUP1"
    },
    "2681": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2683": {
      "op": "DUP6"
    },
    "2684": {
      "op": "DUP8"
    },
    "2685": {
      "op": "SUB"
    },
    "2686": {
      "op": "SLT"
    },
    "2687": {
      "op": "ISZERO"
    },
    "2688": {
      "op": "PUSH2",
      "value": "0xA88"
    },
    "2691": {
      "op": "JUMPI"
    },
    "2692": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2694": {
      "op": "DUP1"
    },
    "2695": {
      "op": "REVERT"
    },
    "2696": {
      "op": "JUMPDEST"
    },
    "2697": {
      "op": "PUSH2",
      "value": "0xA91"
    },
    "2700": {
      "op": "DUP6"
    },
    "2701": {
      "op": "PUSH2",
      "value": "0x976"
    },
    "2704": {
      "jump": "i",
      "op": "JUMP"
    },
    "2705": {
      "op": "JUMPDEST"
    },
    "2706": {
      "op": "SWAP4"
    },
    "2707": {
      "op": "POP"
    },
    "2708": {
      "op": "PUSH2",
      "value": "0xA9F"
    },
    "2711": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2713": {
      "op": "DUP7"
    },
    "2714": {
      "op": "ADD"
    },
    "2715": {
      "op": "PUSH2",
      "value": "0x976"
    },
    "2718": {
      "jump": "i",
      "op": "JUMP"
    },
    "2719": {
      "op": "JUMPDEST"
    },
    "2720": {
      "op": "SWAP3"
    },
    "2721": {
      "op": "POP"
    },
    "2722": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2724": {
      "op": "DUP6"
    },
    "2725": {
      "op": "ADD"
    },
    "2726": {
      "op": "CALLDATALOAD"
    },
    "2727": {
      "op": "SWAP2"
    },
    "2728": {
      "op": "POP"
    },
    "2729": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2731": {
      "op": "DUP6"
    },
    "2732": {
      "op": "ADD"
    },
    "2733": {
      "op": "CALLDATALOAD"
    },
    "2734": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2743": {
      "op": "DUP2"
    },
    "2744": {
      "op": "GT"
    },
    "2745": {
      "op": "ISZERO"
    },
    "2746": {
      "op": "PUSH2",
      "value": "0xAC2"
    },
    "2749": {
      "op": "JUMPI"
    },
    "2750": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2752": {
      "op": "DUP1"
    },
    "2753": {
      "op": "REVERT"
    },
    "2754": {
      "op": "JUMPDEST"
    },
    "2755": {
      "op": "PUSH2",
      "value": "0xACE"
    },
    "2758": {
      "op": "DUP8"
    },
    "2759": {
      "op": "DUP3"
    },
    "2760": {
      "op": "DUP9"
    },
    "2761": {
      "op": "ADD"
    },
    "2762": {
      "op": "PUSH2",
      "value": "0xA1C"
    },
    "2765": {
      "jump": "i",
      "op": "JUMP"
    },
    "2766": {
      "op": "JUMPDEST"
    },
    "2767": {
      "op": "SWAP2"
    },
    "2768": {
      "op": "POP"
    },
    "2769": {
      "op": "POP"
    },
    "2770": {
      "op": "SWAP3"
    },
    "2771": {
      "op": "SWAP6"
    },
    "2772": {
      "op": "SWAP2"
    },
    "2773": {
      "op": "SWAP5"
    },
    "2774": {
      "op": "POP"
    },
    "2775": {
      "op": "SWAP3"
    },
    "2776": {
      "op": "POP"
    },
    "2777": {
      "jump": "o",
      "op": "JUMP"
    },
    "2778": {
      "op": "JUMPDEST"
    },
    "2779": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2781": {
      "op": "DUP1"
    },
    "2782": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2784": {
      "op": "DUP4"
    },
    "2785": {
      "op": "DUP6"
    },
    "2786": {
      "op": "SUB"
    },
    "2787": {
      "op": "SLT"
    },
    "2788": {
      "op": "ISZERO"
    },
    "2789": {
      "op": "PUSH2",
      "value": "0xAED"
    },
    "2792": {
      "op": "JUMPI"
    },
    "2793": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2795": {
      "op": "DUP1"
    },
    "2796": {
      "op": "REVERT"
    },
    "2797": {
      "op": "JUMPDEST"
    },
    "2798": {
      "op": "DUP3"
    },
    "2799": {
      "op": "CALLDATALOAD"
    },
    "2800": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2809": {
      "op": "DUP1"
    },
    "2810": {
      "op": "DUP3"
    },
    "2811": {
      "op": "GT"
    },
    "2812": {
      "op": "ISZERO"
    },
    "2813": {
      "op": "PUSH2",
      "value": "0xB05"
    },
    "2816": {
      "op": "JUMPI"
    },
    "2817": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2819": {
      "op": "DUP1"
    },
    "2820": {
      "op": "REVERT"
    },
    "2821": {
      "op": "JUMPDEST"
    },
    "2822": {
      "op": "DUP2"
    },
    "2823": {
      "op": "DUP6"
    },
    "2824": {
      "op": "ADD"
    },
    "2825": {
      "op": "SWAP2"
    },
    "2826": {
      "op": "POP"
    },
    "2827": {
      "op": "DUP6"
    },
    "2828": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2830": {
      "op": "DUP4"
    },
    "2831": {
      "op": "ADD"
    },
    "2832": {
      "op": "SLT"
    },
    "2833": {
      "op": "PUSH2",
      "value": "0xB19"
    },
    "2836": {
      "op": "JUMPI"
    },
    "2837": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2839": {
      "op": "DUP1"
    },
    "2840": {
      "op": "REVERT"
    },
    "2841": {
      "op": "JUMPDEST"
    },
    "2842": {
      "op": "DUP2"
    },
    "2843": {
      "op": "CALLDATALOAD"
    },
    "2844": {
      "op": "DUP2"
    },
    "2845": {
      "op": "DUP2"
    },
    "2846": {
      "op": "GT"
    },
    "2847": {
      "op": "ISZERO"
    },
    "2848": {
      "op": "PUSH2",
      "value": "0xB28"
    },
    "2851": {
      "op": "JUMPI"
    },
    "2852": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2854": {
      "op": "DUP1"
    },
    "2855": {
      "op": "REVERT"
    },
    "2856": {
      "op": "JUMPDEST"
    },
    "2857": {
      "op": "DUP7"
    },
    "2858": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2860": {
      "op": "DUP3"
    },
    "2861": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "2863": {
      "op": "SHL"
    },
    "2864": {
      "op": "DUP6"
    },
    "2865": {
      "op": "ADD"
    },
    "2866": {
      "op": "ADD"
    },
    "2867": {
      "op": "GT"
    },
    "2868": {
      "op": "ISZERO"
    },
    "2869": {
      "op": "PUSH2",
      "value": "0xB3D"
    },
    "2872": {
      "op": "JUMPI"
    },
    "2873": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2875": {
      "op": "DUP1"
    },
    "2876": {
      "op": "REVERT"
    },
    "2877": {
      "op": "JUMPDEST"
    },
    "2878": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2880": {
      "op": "SWAP3"
    },
    "2881": {
      "op": "SWAP1"
    },
    "2882": {
      "op": "SWAP3"
    },
    "2883": {
      "op": "ADD"
    },
    "2884": {
      "op": "SWAP7"
    },
    "2885": {
      "op": "SWAP2"
    },
    "2886": {
      "op": "SWAP6"
    },
    "2887": {
      "op": "POP"
    },
    "2888": {
      "op": "SWAP1"
    },
    "2889": {
      "op": "SWAP4"
    },
    "2890": {
      "op": "POP"
    },
    "2891": {
      "op": "POP"
    },
    "2892": {
      "op": "POP"
    },
    "2893": {
      "op": "POP"
    },
    "2894": {
      "jump": "o",
      "op": "JUMP"
    },
    "2895": {
      "op": "JUMPDEST"
    },
    "2896": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2898": {
      "op": "DUP1"
    },
    "2899": {
      "op": "DUP4"
    },
    "2900": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2902": {
      "op": "DUP5"
    },
    "2903": {
      "op": "ADD"
    },
    "2904": {
      "op": "SLT"
    },
    "2905": {
      "op": "PUSH2",
      "value": "0xB61"
    },
    "2908": {
      "op": "JUMPI"
    },
    "2909": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2911": {
      "op": "DUP1"
    },
    "2912": {
      "op": "REVERT"
    },
    "2913": {
      "op": "JUMPDEST"
    },
    "2914": {
      "op": "POP"
    },
    "2915": {
      "op": "DUP2"
    },
    "2916": {
      "op": "CALLDATALOAD"
    },
    "2917": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2926": {
      "op": "DUP2"
    },
    "2927": {
      "op": "GT"
    },
    "2928": {
      "op": "ISZERO"
    },
    "2929": {
      "op": "PUSH2",
      "value": "0xB79"
    },
    "2932": {
      "op": "JUMPI"
    },
    "2933": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2935": {
      "op": "DUP1"
    },
    "2936": {
      "op": "REVERT"
    },
    "2937": {
      "op": "JUMPDEST"
    },
    "2938": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2940": {
      "op": "DUP4"
    },
    "2941": {
      "op": "ADD"
    },
    "2942": {
      "op": "SWAP2"
    },
    "2943": {
      "op": "POP"
    },
    "2944": {
      "op": "DUP4"
    },
    "2945": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2947": {
      "op": "DUP3"
    },
    "2948": {
      "op": "DUP6"
    },
    "2949": {
      "op": "ADD"
    },
    "2950": {
      "op": "ADD"
    },
    "2951": {
      "op": "GT"
    },
    "2952": {
      "op": "ISZERO"
    },
    "2953": {
      "op": "PUSH2",
      "value": "0xB91"
    },
    "2956": {
      "op": "JUMPI"
    },
    "2957": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2959": {
      "op": "DUP1"
    },
    "2960": {
      "op": "REVERT"
    },
    "2961": {
      "op": "JUMPDEST"
    },
    "2962": {
      "op": "SWAP3"
    },
    "2963": {
      "op": "POP"
    },
    "2964": {
      "op": "SWAP3"
    },
    "2965": {
      "op": "SWAP1"
    },
    "2966": {
      "op": "POP"
    },
    "2967": {
      "jump": "o",
      "op": "JUMP"
    },
    "2968": {
      "op": "JUMPDEST"
    },
    "2969": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2971": {
      "op": "DUP1"
    },
    "2972": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2974": {
      "op": "DUP1"
    },
    "2975": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2977": {
      "op": "DUP6"
    },
    "2978": {
      "op": "DUP8"
    },
    "2979": {
      "op": "SUB"
    },
    "2980": {
      "op": "SLT"
    },
    "2981": {
      "op": "ISZERO"
    },
    "2982": {
      "op": "PUSH2",
      "value": "0xBAE"
    },
    "2985": {
      "op": "JUMPI"
    },
    "2986": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2988": {
      "op": "DUP1"
    },
    "2989": {
      "op": "REVERT"
    },
    "2990": {
      "op": "JUMPDEST"
    },
    "2991": {
      "op": "PUSH2",
      "value": "0xBB7"
    },
    "2994": {
      "op": "DUP6"
    },
    "2995": {
      "op": "PUSH2",
      "value": "0x976"
    },
    "2998": {
      "jump": "i",
      "op": "JUMP"
    },
    "2999": {
      "op": "JUMPDEST"
    },
    "3000": {
      "op": "SWAP4"
    },
    "3001": {
      "op": "POP"
    },
    "3002": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3004": {
      "op": "DUP6"
    },
    "3005": {
      "op": "ADD"
    },
    "3006": {
      "op": "CALLDATALOAD"
    },
    "3007": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3016": {
      "op": "DUP2"
    },
    "3017": {
      "op": "GT"
    },
    "3018": {
      "op": "ISZERO"
    },
    "3019": {
      "op": "PUSH2",
      "value": "0xBD3"
    },
    "3022": {
      "op": "JUMPI"
    },
    "3023": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3025": {
      "op": "DUP1"
    },
    "3026": {
      "op": "REVERT"
    },
    "3027": {
      "op": "JUMPDEST"
    },
    "3028": {
      "op": "PUSH2",
      "value": "0xBDF"
    },
    "3031": {
      "op": "DUP8"
    },
    "3032": {
      "op": "DUP3"
    },
    "3033": {
      "op": "DUP9"
    },
    "3034": {
      "op": "ADD"
    },
    "3035": {
      "op": "PUSH2",
      "value": "0xB4F"
    },
    "3038": {
      "jump": "i",
      "op": "JUMP"
    },
    "3039": {
      "op": "JUMPDEST"
    },
    "3040": {
      "op": "SWAP1"
    },
    "3041": {
      "op": "SWAP5"
    },
    "3042": {
      "op": "POP"
    },
    "3043": {
      "op": "SWAP3"
    },
    "3044": {
      "op": "POP"
    },
    "3045": {
      "op": "POP"
    },
    "3046": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3048": {
      "op": "DUP6"
    },
    "3049": {
      "op": "ADD"
    },
    "3050": {
      "op": "CALLDATALOAD"
    },
    "3051": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3053": {
      "op": "DUP2"
    },
    "3054": {
      "op": "AND"
    },
    "3055": {
      "op": "DUP2"
    },
    "3056": {
      "op": "EQ"
    },
    "3057": {
      "op": "PUSH2",
      "value": "0xBF9"
    },
    "3060": {
      "op": "JUMPI"
    },
    "3061": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3063": {
      "op": "DUP1"
    },
    "3064": {
      "op": "REVERT"
    },
    "3065": {
      "op": "JUMPDEST"
    },
    "3066": {
      "op": "SWAP4"
    },
    "3067": {
      "op": "SWAP7"
    },
    "3068": {
      "op": "SWAP3"
    },
    "3069": {
      "op": "SWAP6"
    },
    "3070": {
      "op": "POP"
    },
    "3071": {
      "op": "SWAP1"
    },
    "3072": {
      "op": "SWAP4"
    },
    "3073": {
      "op": "POP"
    },
    "3074": {
      "op": "POP"
    },
    "3075": {
      "jump": "o",
      "op": "JUMP"
    },
    "3076": {
      "op": "JUMPDEST"
    },
    "3077": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3079": {
      "op": "JUMPDEST"
    },
    "3080": {
      "op": "DUP4"
    },
    "3081": {
      "op": "DUP2"
    },
    "3082": {
      "op": "LT"
    },
    "3083": {
      "op": "ISZERO"
    },
    "3084": {
      "op": "PUSH2",
      "value": "0xC1F"
    },
    "3087": {
      "op": "JUMPI"
    },
    "3088": {
      "op": "DUP2"
    },
    "3089": {
      "op": "DUP2"
    },
    "3090": {
      "op": "ADD"
    },
    "3091": {
      "op": "MLOAD"
    },
    "3092": {
      "op": "DUP4"
    },
    "3093": {
      "op": "DUP3"
    },
    "3094": {
      "op": "ADD"
    },
    "3095": {
      "op": "MSTORE"
    },
    "3096": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3098": {
      "op": "ADD"
    },
    "3099": {
      "op": "PUSH2",
      "value": "0xC07"
    },
    "3102": {
      "op": "JUMP"
    },
    "3103": {
      "op": "JUMPDEST"
    },
    "3104": {
      "op": "POP"
    },
    "3105": {
      "op": "POP"
    },
    "3106": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3108": {
      "op": "SWAP2"
    },
    "3109": {
      "op": "ADD"
    },
    "3110": {
      "op": "MSTORE"
    },
    "3111": {
      "jump": "o",
      "op": "JUMP"
    },
    "3112": {
      "op": "JUMPDEST"
    },
    "3113": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3115": {
      "op": "DUP2"
    },
    "3116": {
      "op": "MLOAD"
    },
    "3117": {
      "op": "DUP1"
    },
    "3118": {
      "op": "DUP5"
    },
    "3119": {
      "op": "MSTORE"
    },
    "3120": {
      "op": "PUSH2",
      "value": "0xC40"
    },
    "3123": {
      "op": "DUP2"
    },
    "3124": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3126": {
      "op": "DUP7"
    },
    "3127": {
      "op": "ADD"
    },
    "3128": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3130": {
      "op": "DUP7"
    },
    "3131": {
      "op": "ADD"
    },
    "3132": {
      "op": "PUSH2",
      "value": "0xC04"
    },
    "3135": {
      "jump": "i",
      "op": "JUMP"
    },
    "3136": {
      "op": "JUMPDEST"
    },
    "3137": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3139": {
      "op": "ADD"
    },
    "3140": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3142": {
      "op": "NOT"
    },
    "3143": {
      "op": "AND"
    },
    "3144": {
      "op": "SWAP3"
    },
    "3145": {
      "op": "SWAP1"
    },
    "3146": {
      "op": "SWAP3"
    },
    "3147": {
      "op": "ADD"
    },
    "3148": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3150": {
      "op": "ADD"
    },
    "3151": {
      "op": "SWAP3"
    },
    "3152": {
      "op": "SWAP2"
    },
    "3153": {
      "op": "POP"
    },
    "3154": {
      "op": "POP"
    },
    "3155": {
      "jump": "o",
      "op": "JUMP"
    },
    "3156": {
      "op": "JUMPDEST"
    },
    "3157": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3159": {
      "op": "DUP2"
    },
    "3160": {
      "op": "MSTORE"
    },
    "3161": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3163": {
      "op": "PUSH2",
      "value": "0x96F"
    },
    "3166": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3168": {
      "op": "DUP4"
    },
    "3169": {
      "op": "ADD"
    },
    "3170": {
      "op": "DUP5"
    },
    "3171": {
      "op": "PUSH2",
      "value": "0xC28"
    },
    "3174": {
      "jump": "i",
      "op": "JUMP"
    },
    "3175": {
      "op": "JUMPDEST"
    },
    "3176": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3178": {
      "op": "DUP3"
    },
    "3179": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3181": {
      "op": "DUP4"
    },
    "3182": {
      "op": "ADD"
    },
    "3183": {
      "op": "SLT"
    },
    "3184": {
      "op": "PUSH2",
      "value": "0xC78"
    },
    "3187": {
      "op": "JUMPI"
    },
    "3188": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3190": {
      "op": "DUP1"
    },
    "3191": {
      "op": "REVERT"
    },
    "3192": {
      "op": "JUMPDEST"
    },
    "3193": {
      "op": "DUP2"
    },
    "3194": {
      "op": "CALLDATALOAD"
    },
    "3195": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3197": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3206": {
      "op": "DUP3"
    },
    "3207": {
      "op": "GT"
    },
    "3208": {
      "op": "ISZERO"
    },
    "3209": {
      "op": "PUSH2",
      "value": "0xC94"
    },
    "3212": {
      "op": "JUMPI"
    },
    "3213": {
      "op": "PUSH2",
      "value": "0xC94"
    },
    "3216": {
      "op": "PUSH2",
      "value": "0x9AD"
    },
    "3219": {
      "jump": "i",
      "op": "JUMP"
    },
    "3220": {
      "op": "JUMPDEST"
    },
    "3221": {
      "op": "DUP2"
    },
    "3222": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "3224": {
      "op": "SHL"
    },
    "3225": {
      "op": "PUSH2",
      "value": "0xCA3"
    },
    "3228": {
      "op": "DUP3"
    },
    "3229": {
      "op": "DUP3"
    },
    "3230": {
      "op": "ADD"
    },
    "3231": {
      "op": "PUSH2",
      "value": "0x9C3"
    },
    "3234": {
      "jump": "i",
      "op": "JUMP"
    },
    "3235": {
      "op": "JUMPDEST"
    },
    "3236": {
      "op": "SWAP3"
    },
    "3237": {
      "op": "DUP4"
    },
    "3238": {
      "op": "MSTORE"
    },
    "3239": {
      "op": "DUP5"
    },
    "3240": {
      "op": "DUP2"
    },
    "3241": {
      "op": "ADD"
    },
    "3242": {
      "op": "DUP3"
    },
    "3243": {
      "op": "ADD"
    },
    "3244": {
      "op": "SWAP3"
    },
    "3245": {
      "op": "DUP3"
    },
    "3246": {
      "op": "DUP2"
    },
    "3247": {
      "op": "ADD"
    },
    "3248": {
      "op": "SWAP1"
    },
    "3249": {
      "op": "DUP8"
    },
    "3250": {
      "op": "DUP6"
    },
    "3251": {
      "op": "GT"
    },
    "3252": {
      "op": "ISZERO"
    },
    "3253": {
      "op": "PUSH2",
      "value": "0xCBD"
    },
    "3256": {
      "op": "JUMPI"
    },
    "3257": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3259": {
      "op": "DUP1"
    },
    "3260": {
      "op": "REVERT"
    },
    "3261": {
      "op": "JUMPDEST"
    },
    "3262": {
      "op": "DUP4"
    },
    "3263": {
      "op": "DUP8"
    },
    "3264": {
      "op": "ADD"
    },
    "3265": {
      "op": "SWAP3"
    },
    "3266": {
      "op": "POP"
    },
    "3267": {
      "op": "JUMPDEST"
    },
    "3268": {
      "op": "DUP5"
    },
    "3269": {
      "op": "DUP4"
    },
    "3270": {
      "op": "LT"
    },
    "3271": {
      "op": "ISZERO"
    },
    "3272": {
      "op": "PUSH2",
      "value": "0xCDC"
    },
    "3275": {
      "op": "JUMPI"
    },
    "3276": {
      "op": "DUP3"
    },
    "3277": {
      "op": "CALLDATALOAD"
    },
    "3278": {
      "op": "DUP3"
    },
    "3279": {
      "op": "MSTORE"
    },
    "3280": {
      "op": "SWAP2"
    },
    "3281": {
      "op": "DUP4"
    },
    "3282": {
      "op": "ADD"
    },
    "3283": {
      "op": "SWAP2"
    },
    "3284": {
      "op": "SWAP1"
    },
    "3285": {
      "op": "DUP4"
    },
    "3286": {
      "op": "ADD"
    },
    "3287": {
      "op": "SWAP1"
    },
    "3288": {
      "op": "PUSH2",
      "value": "0xCC3"
    },
    "3291": {
      "op": "JUMP"
    },
    "3292": {
      "op": "JUMPDEST"
    },
    "3293": {
      "op": "SWAP8"
    },
    "3294": {
      "op": "SWAP7"
    },
    "3295": {
      "op": "POP"
    },
    "3296": {
      "op": "POP"
    },
    "3297": {
      "op": "POP"
    },
    "3298": {
      "op": "POP"
    },
    "3299": {
      "op": "POP"
    },
    "3300": {
      "op": "POP"
    },
    "3301": {
      "op": "POP"
    },
    "3302": {
      "jump": "o",
      "op": "JUMP"
    },
    "3303": {
      "op": "JUMPDEST"
    },
    "3304": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3306": {
      "op": "DUP1"
    },
    "3307": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3309": {
      "op": "DUP1"
    },
    "3310": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3312": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3314": {
      "op": "DUP7"
    },
    "3315": {
      "op": "DUP9"
    },
    "3316": {
      "op": "SUB"
    },
    "3317": {
      "op": "SLT"
    },
    "3318": {
      "op": "ISZERO"
    },
    "3319": {
      "op": "PUSH2",
      "value": "0xCFF"
    },
    "3322": {
      "op": "JUMPI"
    },
    "3323": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3325": {
      "op": "DUP1"
    },
    "3326": {
      "op": "REVERT"
    },
    "3327": {
      "op": "JUMPDEST"
    },
    "3328": {
      "op": "PUSH2",
      "value": "0xD08"
    },
    "3331": {
      "op": "DUP7"
    },
    "3332": {
      "op": "PUSH2",
      "value": "0x976"
    },
    "3335": {
      "jump": "i",
      "op": "JUMP"
    },
    "3336": {
      "op": "JUMPDEST"
    },
    "3337": {
      "op": "SWAP5"
    },
    "3338": {
      "op": "POP"
    },
    "3339": {
      "op": "PUSH2",
      "value": "0xD16"
    },
    "3342": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3344": {
      "op": "DUP8"
    },
    "3345": {
      "op": "ADD"
    },
    "3346": {
      "op": "PUSH2",
      "value": "0x976"
    },
    "3349": {
      "jump": "i",
      "op": "JUMP"
    },
    "3350": {
      "op": "JUMPDEST"
    },
    "3351": {
      "op": "SWAP4"
    },
    "3352": {
      "op": "POP"
    },
    "3353": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3355": {
      "op": "DUP7"
    },
    "3356": {
      "op": "ADD"
    },
    "3357": {
      "op": "CALLDATALOAD"
    },
    "3358": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3367": {
      "op": "DUP1"
    },
    "3368": {
      "op": "DUP3"
    },
    "3369": {
      "op": "GT"
    },
    "3370": {
      "op": "ISZERO"
    },
    "3371": {
      "op": "PUSH2",
      "value": "0xD33"
    },
    "3374": {
      "op": "JUMPI"
    },
    "3375": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3377": {
      "op": "DUP1"
    },
    "3378": {
      "op": "REVERT"
    },
    "3379": {
      "op": "JUMPDEST"
    },
    "3380": {
      "op": "PUSH2",
      "value": "0xD3F"
    },
    "3383": {
      "op": "DUP10"
    },
    "3384": {
      "op": "DUP4"
    },
    "3385": {
      "op": "DUP11"
    },
    "3386": {
      "op": "ADD"
    },
    "3387": {
      "op": "PUSH2",
      "value": "0xC67"
    },
    "3390": {
      "jump": "i",
      "op": "JUMP"
    },
    "3391": {
      "op": "JUMPDEST"
    },
    "3392": {
      "op": "SWAP5"
    },
    "3393": {
      "op": "POP"
    },
    "3394": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3396": {
      "op": "DUP9"
    },
    "3397": {
      "op": "ADD"
    },
    "3398": {
      "op": "CALLDATALOAD"
    },
    "3399": {
      "op": "SWAP2"
    },
    "3400": {
      "op": "POP"
    },
    "3401": {
      "op": "DUP1"
    },
    "3402": {
      "op": "DUP3"
    },
    "3403": {
      "op": "GT"
    },
    "3404": {
      "op": "ISZERO"
    },
    "3405": {
      "op": "PUSH2",
      "value": "0xD55"
    },
    "3408": {
      "op": "JUMPI"
    },
    "3409": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3411": {
      "op": "DUP1"
    },
    "3412": {
      "op": "REVERT"
    },
    "3413": {
      "op": "JUMPDEST"
    },
    "3414": {
      "op": "PUSH2",
      "value": "0xD61"
    },
    "3417": {
      "op": "DUP10"
    },
    "3418": {
      "op": "DUP4"
    },
    "3419": {
      "op": "DUP11"
    },
    "3420": {
      "op": "ADD"
    },
    "3421": {
      "op": "PUSH2",
      "value": "0xC67"
    },
    "3424": {
      "jump": "i",
      "op": "JUMP"
    },
    "3425": {
      "op": "JUMPDEST"
    },
    "3426": {
      "op": "SWAP4"
    },
    "3427": {
      "op": "POP"
    },
    "3428": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3430": {
      "op": "DUP9"
    },
    "3431": {
      "op": "ADD"
    },
    "3432": {
      "op": "CALLDATALOAD"
    },
    "3433": {
      "op": "SWAP2"
    },
    "3434": {
      "op": "POP"
    },
    "3435": {
      "op": "DUP1"
    },
    "3436": {
      "op": "DUP3"
    },
    "3437": {
      "op": "GT"
    },
    "3438": {
      "op": "ISZERO"
    },
    "3439": {
      "op": "PUSH2",
      "value": "0xD77"
    },
    "3442": {
      "op": "JUMPI"
    },
    "3443": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3445": {
      "op": "DUP1"
    },
    "3446": {
      "op": "REVERT"
    },
    "3447": {
      "op": "JUMPDEST"
    },
    "3448": {
      "op": "POP"
    },
    "3449": {
      "op": "PUSH2",
      "value": "0xD84"
    },
    "3452": {
      "op": "DUP9"
    },
    "3453": {
      "op": "DUP3"
    },
    "3454": {
      "op": "DUP10"
    },
    "3455": {
      "op": "ADD"
    },
    "3456": {
      "op": "PUSH2",
      "value": "0xA1C"
    },
    "3459": {
      "jump": "i",
      "op": "JUMP"
    },
    "3460": {
      "op": "JUMPDEST"
    },
    "3461": {
      "op": "SWAP2"
    },
    "3462": {
      "op": "POP"
    },
    "3463": {
      "op": "POP"
    },
    "3464": {
      "op": "SWAP3"
    },
    "3465": {
      "op": "SWAP6"
    },
    "3466": {
      "op": "POP"
    },
    "3467": {
      "op": "SWAP3"
    },
    "3468": {
      "op": "SWAP6"
    },
    "3469": {
      "op": "SWAP1"
    },
    "3470": {
      "op": "SWAP4"
    },
    "3471": {
      "op": "POP"
    },
    "3472": {
      "jump": "o",
      "op": "JUMP"
    },
    "3473": {
      "op": "JUMPDEST"
    },
    "3474": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3476": {
      "op": "DUP1"
    },
    "3477": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3479": {
      "op": "DUP1"
    },
    "3480": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3482": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3484": {
      "op": "DUP7"
    },
    "3485": {
      "op": "DUP9"
    },
    "3486": {
      "op": "SUB"
    },
    "3487": {
      "op": "SLT"
    },
    "3488": {
      "op": "ISZERO"
    },
    "3489": {
      "op": "PUSH2",
      "value": "0xDA9"
    },
    "3492": {
      "op": "JUMPI"
    },
    "3493": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3495": {
      "op": "DUP1"
    },
    "3496": {
      "op": "REVERT"
    },
    "3497": {
      "op": "JUMPDEST"
    },
    "3498": {
      "op": "PUSH2",
      "value": "0xDB2"
    },
    "3501": {
      "op": "DUP7"
    },
    "3502": {
      "op": "PUSH2",
      "value": "0x976"
    },
    "3505": {
      "jump": "i",
      "op": "JUMP"
    },
    "3506": {
      "op": "JUMPDEST"
    },
    "3507": {
      "op": "SWAP5"
    },
    "3508": {
      "op": "POP"
    },
    "3509": {
      "op": "PUSH2",
      "value": "0xDC0"
    },
    "3512": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3514": {
      "op": "DUP8"
    },
    "3515": {
      "op": "ADD"
    },
    "3516": {
      "op": "PUSH2",
      "value": "0x976"
    },
    "3519": {
      "jump": "i",
      "op": "JUMP"
    },
    "3520": {
      "op": "JUMPDEST"
    },
    "3521": {
      "op": "SWAP4"
    },
    "3522": {
      "op": "POP"
    },
    "3523": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3525": {
      "op": "DUP7"
    },
    "3526": {
      "op": "ADD"
    },
    "3527": {
      "op": "CALLDATALOAD"
    },
    "3528": {
      "op": "SWAP3"
    },
    "3529": {
      "op": "POP"
    },
    "3530": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3532": {
      "op": "DUP7"
    },
    "3533": {
      "op": "ADD"
    },
    "3534": {
      "op": "CALLDATALOAD"
    },
    "3535": {
      "op": "SWAP2"
    },
    "3536": {
      "op": "POP"
    },
    "3537": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3539": {
      "op": "DUP7"
    },
    "3540": {
      "op": "ADD"
    },
    "3541": {
      "op": "CALLDATALOAD"
    },
    "3542": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3551": {
      "op": "DUP2"
    },
    "3552": {
      "op": "GT"
    },
    "3553": {
      "op": "ISZERO"
    },
    "3554": {
      "op": "PUSH2",
      "value": "0xDEA"
    },
    "3557": {
      "op": "JUMPI"
    },
    "3558": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3560": {
      "op": "DUP1"
    },
    "3561": {
      "op": "REVERT"
    },
    "3562": {
      "op": "JUMPDEST"
    },
    "3563": {
      "op": "PUSH2",
      "value": "0xD84"
    },
    "3566": {
      "op": "DUP9"
    },
    "3567": {
      "op": "DUP3"
    },
    "3568": {
      "op": "DUP10"
    },
    "3569": {
      "op": "ADD"
    },
    "3570": {
      "op": "PUSH2",
      "value": "0xA1C"
    },
    "3573": {
      "jump": "i",
      "op": "JUMP"
    },
    "3574": {
      "op": "JUMPDEST"
    },
    "3575": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3577": {
      "op": "DUP1"
    },
    "3578": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3580": {
      "op": "DUP1"
    },
    "3581": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3583": {
      "op": "DUP6"
    },
    "3584": {
      "op": "DUP8"
    },
    "3585": {
      "op": "SUB"
    },
    "3586": {
      "op": "SLT"
    },
    "3587": {
      "op": "ISZERO"
    },
    "3588": {
      "op": "PUSH2",
      "value": "0xE0C"
    },
    "3591": {
      "op": "JUMPI"
    },
    "3592": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3594": {
      "op": "DUP1"
    },
    "3595": {
      "op": "REVERT"
    },
    "3596": {
      "op": "JUMPDEST"
    },
    "3597": {
      "op": "PUSH2",
      "value": "0xE15"
    },
    "3600": {
      "op": "DUP6"
    },
    "3601": {
      "op": "PUSH2",
      "value": "0x976"
    },
    "3604": {
      "jump": "i",
      "op": "JUMP"
    },
    "3605": {
      "op": "JUMPDEST"
    },
    "3606": {
      "op": "SWAP4"
    },
    "3607": {
      "op": "POP"
    },
    "3608": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3610": {
      "op": "DUP6"
    },
    "3611": {
      "op": "ADD"
    },
    "3612": {
      "op": "CALLDATALOAD"
    },
    "3613": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3622": {
      "op": "DUP2"
    },
    "3623": {
      "op": "GT"
    },
    "3624": {
      "op": "ISZERO"
    },
    "3625": {
      "op": "PUSH2",
      "value": "0xE31"
    },
    "3628": {
      "op": "JUMPI"
    },
    "3629": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3631": {
      "op": "DUP1"
    },
    "3632": {
      "op": "REVERT"
    },
    "3633": {
      "op": "JUMPDEST"
    },
    "3634": {
      "op": "PUSH2",
      "value": "0xE3D"
    },
    "3637": {
      "op": "DUP8"
    },
    "3638": {
      "op": "DUP3"
    },
    "3639": {
      "op": "DUP9"
    },
    "3640": {
      "op": "ADD"
    },
    "3641": {
      "op": "PUSH2",
      "value": "0xB4F"
    },
    "3644": {
      "jump": "i",
      "op": "JUMP"
    },
    "3645": {
      "op": "JUMPDEST"
    },
    "3646": {
      "op": "SWAP6"
    },
    "3647": {
      "op": "SWAP9"
    },
    "3648": {
      "op": "SWAP1"
    },
    "3649": {
      "op": "SWAP8"
    },
    "3650": {
      "op": "POP"
    },
    "3651": {
      "op": "SWAP5"
    },
    "3652": {
      "op": "SWAP6"
    },
    "3653": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3655": {
      "op": "ADD"
    },
    "3656": {
      "op": "CALLDATALOAD"
    },
    "3657": {
      "op": "SWAP5"
    },
    "3658": {
      "op": "SWAP4"
    },
    "3659": {
      "op": "POP"
    },
    "3660": {
      "op": "POP"
    },
    "3661": {
      "op": "POP"
    },
    "3662": {
      "op": "POP"
    },
    "3663": {
      "jump": "o",
      "op": "JUMP"
    },
    "3664": {
      "op": "JUMPDEST"
    },
    "3665": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3667": {
      "op": "DUP1"
    },
    "3668": {
      "op": "DUP3"
    },
    "3669": {
      "op": "MSTORE"
    },
    "3670": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "3672": {
      "op": "SWAP1"
    },
    "3673": {
      "op": "DUP3"
    },
    "3674": {
      "op": "ADD"
    },
    "3675": {
      "op": "MSTORE"
    },
    "3676": {
      "op": "PUSH15",
      "value": "0x2737BA1030B71037B832B930BA37B9"
    },
    "3692": {
      "op": "PUSH1",
      "value": "0x89"
    },
    "3694": {
      "op": "SHL"
    },
    "3695": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3697": {
      "op": "DUP3"
    },
    "3698": {
      "op": "ADD"
    },
    "3699": {
      "op": "MSTORE"
    },
    "3700": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3702": {
      "op": "ADD"
    },
    "3703": {
      "op": "SWAP1"
    },
    "3704": {
      "jump": "o",
      "op": "JUMP"
    },
    "3705": {
      "op": "JUMPDEST"
    },
    "3706": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3711": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3713": {
      "op": "SHL"
    },
    "3714": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3716": {
      "op": "MSTORE"
    },
    "3717": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "3719": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3721": {
      "op": "MSTORE"
    },
    "3722": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3724": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3726": {
      "op": "REVERT"
    },
    "3727": {
      "op": "JUMPDEST"
    },
    "3728": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3730": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3732": {
      "op": "DUP3"
    },
    "3733": {
      "op": "AND"
    },
    "3734": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3736": {
      "op": "DUP2"
    },
    "3737": {
      "op": "SUB"
    },
    "3738": {
      "op": "PUSH2",
      "value": "0xEB3"
    },
    "3741": {
      "op": "JUMPI"
    },
    "3742": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3747": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3749": {
      "op": "SHL"
    },
    "3750": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3752": {
      "op": "MSTORE"
    },
    "3753": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "3755": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3757": {
      "op": "MSTORE"
    },
    "3758": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3760": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3762": {
      "op": "REVERT"
    },
    "3763": {
      "op": "JUMPDEST"
    },
    "3764": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3766": {
      "op": "ADD"
    },
    "3767": {
      "op": "SWAP3"
    },
    "3768": {
      "op": "SWAP2"
    },
    "3769": {
      "op": "POP"
    },
    "3770": {
      "op": "POP"
    },
    "3771": {
      "jump": "o",
      "op": "JUMP"
    },
    "3772": {
      "op": "JUMPDEST"
    },
    "3773": {
      "op": "DUP2"
    },
    "3774": {
      "op": "DUP4"
    },
    "3775": {
      "op": "DUP3"
    },
    "3776": {
      "op": "CALLDATACOPY"
    },
    "3777": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3779": {
      "op": "SWAP2"
    },
    "3780": {
      "op": "ADD"
    },
    "3781": {
      "op": "SWAP1"
    },
    "3782": {
      "op": "DUP2"
    },
    "3783": {
      "op": "MSTORE"
    },
    "3784": {
      "op": "SWAP2"
    },
    "3785": {
      "op": "SWAP1"
    },
    "3786": {
      "op": "POP"
    },
    "3787": {
      "jump": "o",
      "op": "JUMP"
    },
    "3788": {
      "op": "JUMPDEST"
    },
    "3789": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3791": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3793": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3795": {
      "op": "SHL"
    },
    "3796": {
      "op": "SUB"
    },
    "3797": {
      "op": "DUP8"
    },
    "3798": {
      "op": "DUP2"
    },
    "3799": {
      "op": "AND"
    },
    "3800": {
      "op": "DUP3"
    },
    "3801": {
      "op": "MSTORE"
    },
    "3802": {
      "op": "DUP7"
    },
    "3803": {
      "op": "AND"
    },
    "3804": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3806": {
      "op": "DUP3"
    },
    "3807": {
      "op": "ADD"
    },
    "3808": {
      "op": "MSTORE"
    },
    "3809": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3811": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3813": {
      "op": "DUP3"
    },
    "3814": {
      "op": "ADD"
    },
    "3815": {
      "op": "DUP2"
    },
    "3816": {
      "op": "SWAP1"
    },
    "3817": {
      "op": "MSTORE"
    },
    "3818": {
      "op": "DUP2"
    },
    "3819": {
      "op": "ADD"
    },
    "3820": {
      "op": "DUP5"
    },
    "3821": {
      "op": "SWAP1"
    },
    "3822": {
      "op": "MSTORE"
    },
    "3823": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3825": {
      "op": "DUP5"
    },
    "3826": {
      "op": "DUP7"
    },
    "3827": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "3829": {
      "op": "DUP5"
    },
    "3830": {
      "op": "ADD"
    },
    "3831": {
      "op": "CALLDATACOPY"
    },
    "3832": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3834": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "3836": {
      "op": "DUP7"
    },
    "3837": {
      "op": "DUP5"
    },
    "3838": {
      "op": "ADD"
    },
    "3839": {
      "op": "ADD"
    },
    "3840": {
      "op": "MSTORE"
    },
    "3841": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3843": {
      "op": "NOT"
    },
    "3844": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3846": {
      "op": "DUP7"
    },
    "3847": {
      "op": "ADD"
    },
    "3848": {
      "op": "AND"
    },
    "3849": {
      "op": "DUP3"
    },
    "3850": {
      "op": "ADD"
    },
    "3851": {
      "op": "DUP5"
    },
    "3852": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3854": {
      "op": "DUP5"
    },
    "3855": {
      "op": "ADD"
    },
    "3856": {
      "op": "MSTORE"
    },
    "3857": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "3859": {
      "op": "DUP4"
    },
    "3860": {
      "op": "DUP3"
    },
    "3861": {
      "op": "SUB"
    },
    "3862": {
      "op": "ADD"
    },
    "3863": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3865": {
      "op": "DUP5"
    },
    "3866": {
      "op": "ADD"
    },
    "3867": {
      "op": "MSTORE"
    },
    "3868": {
      "op": "PUSH2",
      "value": "0xF28"
    },
    "3871": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "3873": {
      "op": "DUP3"
    },
    "3874": {
      "op": "ADD"
    },
    "3875": {
      "op": "DUP6"
    },
    "3876": {
      "op": "PUSH2",
      "value": "0xC28"
    },
    "3879": {
      "jump": "i",
      "op": "JUMP"
    },
    "3880": {
      "op": "JUMPDEST"
    },
    "3881": {
      "op": "SWAP10"
    },
    "3882": {
      "op": "SWAP9"
    },
    "3883": {
      "op": "POP"
    },
    "3884": {
      "op": "POP"
    },
    "3885": {
      "op": "POP"
    },
    "3886": {
      "op": "POP"
    },
    "3887": {
      "op": "POP"
    },
    "3888": {
      "op": "POP"
    },
    "3889": {
      "op": "POP"
    },
    "3890": {
      "op": "POP"
    },
    "3891": {
      "op": "POP"
    },
    "3892": {
      "jump": "o",
      "op": "JUMP"
    },
    "3893": {
      "op": "JUMPDEST"
    },
    "3894": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3896": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3898": {
      "op": "DUP3"
    },
    "3899": {
      "op": "DUP5"
    },
    "3900": {
      "op": "SUB"
    },
    "3901": {
      "op": "SLT"
    },
    "3902": {
      "op": "ISZERO"
    },
    "3903": {
      "op": "PUSH2",
      "value": "0xF47"
    },
    "3906": {
      "op": "JUMPI"
    },
    "3907": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3909": {
      "op": "DUP1"
    },
    "3910": {
      "op": "REVERT"
    },
    "3911": {
      "op": "JUMPDEST"
    },
    "3912": {
      "op": "DUP2"
    },
    "3913": {
      "op": "MLOAD"
    },
    "3914": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3923": {
      "op": "DUP2"
    },
    "3924": {
      "op": "GT"
    },
    "3925": {
      "op": "ISZERO"
    },
    "3926": {
      "op": "PUSH2",
      "value": "0xF5E"
    },
    "3929": {
      "op": "JUMPI"
    },
    "3930": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3932": {
      "op": "DUP1"
    },
    "3933": {
      "op": "REVERT"
    },
    "3934": {
      "op": "JUMPDEST"
    },
    "3935": {
      "op": "DUP3"
    },
    "3936": {
      "op": "ADD"
    },
    "3937": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3939": {
      "op": "DUP2"
    },
    "3940": {
      "op": "ADD"
    },
    "3941": {
      "op": "DUP5"
    },
    "3942": {
      "op": "SGT"
    },
    "3943": {
      "op": "PUSH2",
      "value": "0xF6F"
    },
    "3946": {
      "op": "JUMPI"
    },
    "3947": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3949": {
      "op": "DUP1"
    },
    "3950": {
      "op": "REVERT"
    },
    "3951": {
      "op": "JUMPDEST"
    },
    "3952": {
      "op": "DUP1"
    },
    "3953": {
      "op": "MLOAD"
    },
    "3954": {
      "op": "PUSH2",
      "value": "0xF7D"
    },
    "3957": {
      "op": "PUSH2",
      "value": "0xA3B"
    },
    "3960": {
      "op": "DUP3"
    },
    "3961": {
      "op": "PUSH2",
      "value": "0x9F4"
    },
    "3964": {
      "jump": "i",
      "op": "JUMP"
    },
    "3965": {
      "op": "JUMPDEST"
    },
    "3966": {
      "op": "DUP2"
    },
    "3967": {
      "op": "DUP2"
    },
    "3968": {
      "op": "MSTORE"
    },
    "3969": {
      "op": "DUP6"
    },
    "3970": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3972": {
      "op": "DUP4"
    },
    "3973": {
      "op": "DUP6"
    },
    "3974": {
      "op": "ADD"
    },
    "3975": {
      "op": "ADD"
    },
    "3976": {
      "op": "GT"
    },
    "3977": {
      "op": "ISZERO"
    },
    "3978": {
      "op": "PUSH2",
      "value": "0xF92"
    },
    "3981": {
      "op": "JUMPI"
    },
    "3982": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3984": {
      "op": "DUP1"
    },
    "3985": {
      "op": "REVERT"
    },
    "3986": {
      "op": "JUMPDEST"
    },
    "3987": {
      "op": "PUSH2",
      "value": "0x639"
    },
    "3990": {
      "op": "DUP3"
    },
    "3991": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3993": {
      "op": "DUP4"
    },
    "3994": {
      "op": "ADD"
    },
    "3995": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3997": {
      "op": "DUP7"
    },
    "3998": {
      "op": "ADD"
    },
    "3999": {
      "op": "PUSH2",
      "value": "0xC04"
    },
    "4002": {
      "jump": "i",
      "op": "JUMP"
    }
  },
  "sha1": "f73ef5e8d51bf5e6afc950d1f19a7fe6bda58d61",
  "source": "// SCH Course Copyright Policy (C): DO-NOT-SHARE-WITH-ANYONE\n// https://smartcontractshacking.com/#copyright-policy\npragma solidity ^0.8.13;\n\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/utils/introspection/ERC165.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\";\nimport \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\";\nimport \"./IBlockSafe.sol\";\n\nlibrary CallHelpers2 {\n    function getRevertMsg(\n        bytes memory _returnData\n    ) internal pure returns (string memory) {\n        if (_returnData.length < 68) return \"Transaction reverted silently\";\n\n        assembly {\n            _returnData := add(_returnData, 0x04)\n        }\n        return abi.decode(_returnData, (string));\n    }\n}\n\ncontract BlockSafe is\n    IBlockSafe,\n    ERC165,\n    ERC721Holder,\n    ERC1155Holder,\n    ReentrancyGuard\n{\n    using CallHelpers2 for bytes;\n\n    uint8 constant public CALL_OPERATION = 1;\n    uint8 constant public DELEGATECALL_OPERATION = 2;\n\n    event Executed(\n        address caller,\n        address destAddress,\n        bytes encodedCalldata,\n        uint256 value,\n        bytes result\n    );\n    event NewOperator(address operator);\n    event OperatorRemoved(address operator);\n\n    bool public initialized = false;\n    mapping(address => bool) public operators;\n\n    modifier isInitialized() {\n        require(initialized, \"Not initialized\");\n        _;\n    }\n\n    modifier onlyOperator(address _account) {\n        require(operators[_account], \"Not an operator\");\n        _;\n    }\n\n    function initialize(address[] calldata _operators) external {\n\n        require(!initialized, \"Can not be initialized twice\");\n        \n        initialized = true;\n\n        require(\n            _operators.length <= 10,\n            \"Can't set more than 10 operators at once\"\n        );\n\n        for (uint8 i = 0; i < _operators.length; i++) {\n            operators[_operators[i]] = true;\n            emit NewOperator(_operators[i]);\n        }\n    }\n\n    function execute(\n        address _destAddress,\n        bytes calldata _encodedCalldata,\n        uint8 operation\n    ) \n        external isInitialized onlyOperator(msg.sender) returns (bytes memory) {\n        return _execute(_destAddress, _encodedCalldata, 0, operation);\n    }\n\n    function executeWithValue(\n        address _destAddress,\n        bytes calldata _encodedCalldata,\n        uint256 _value\n    )\n        external payable isInitialized onlyOperator(msg.sender) returns (bytes memory)\n    {\n        return _execute(_destAddress, _encodedCalldata, _value, CALL_OPERATION);\n    }\n\n    function _execute(\n        address _destAddress,\n        bytes calldata _encodedCalldata,\n        uint256 _value,\n        uint8 operation\n    ) private nonReentrant returns (bytes memory) {\n\n        bool success;\n        bytes memory result;\n\n        if(operation == CALL_OPERATION) {\n            (success, result) = _destAddress.call{value: _value}(\n                _encodedCalldata\n            );\n        } else if (operation == DELEGATECALL_OPERATION) {\n            (success, result) = _destAddress.delegatecall(_encodedCalldata);\n        } else {\n            revert(\"Wrong operation\");\n        }\n\n        if (!success) {\n            revert(result.getRevertMsg());\n        }\n\n        emit Executed(\n            msg.sender,\n            _destAddress,\n            _encodedCalldata,\n            _value,\n            result\n        );\n\n        return result;\n    }\n\n    function addOperator(address _address) external onlyOperator(msg.sender) {\n        operators[_address] = true;\n        emit NewOperator(_address);\n    }\n\n    function removeOperator(address _address) external onlyOperator(msg.sender) {\n        operators[_address] = false;\n        emit OperatorRemoved(_address);\n    }\n\n    function supportsInterface(bytes4 interfaceId)\n        public\n        view\n        virtual\n        override(ERC165, ERC1155Receiver)\n        returns (bool)\n    {\n        return\n            interfaceId == type(IBlockSafe).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n    receive() external payable {}\n}\n",
  "sourceMap": "785:3360:16:-:0;;;1276:31;;;-1:-1:-1;;1276:31:16;;;785:3360;;;;;;;;;-1:-1:-1;1716:1:2;1821:7;:22;785:3360:16;;;;;;",
  "sourcePath": "contracts/call-attacks-4/BlockSafe.sol",
  "type": "contract"
}