{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_referrer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "_hash",
          "type": "bytes32"
        }
      ],
      "name": "ReferralCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_referredTrader",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "_hash",
          "type": "bytes32"
        }
      ],
      "name": "Referred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_hash",
          "type": "bytes32"
        }
      ],
      "name": "createReferralCode",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_hash",
          "type": "bytes32"
        }
      ],
      "name": "getReferral",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_trader",
          "type": "address"
        }
      ],
      "name": "getReferred",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_codeOwners",
          "type": "address[]"
        },
        {
          "internalType": "bytes32[]",
          "name": "_ownedCodes",
          "type": "bytes32[]"
        },
        {
          "internalType": "address[]",
          "name": "_referredA",
          "type": "address[]"
        },
        {
          "internalType": "bytes32[]",
          "name": "_referredTo",
          "type": "bytes32[]"
        }
      ],
      "name": "initRefs",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "protocol",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_protocol",
          "type": "address"
        }
      ],
      "name": "setProtocol",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_referredTrader",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "_hash",
          "type": "bytes32"
        }
      ],
      "name": "setReferred",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/Users/m4ud/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/access/Ownable.sol",
    "13": "/Users/m4ud/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/utils/Context.sol",
    "38": "contracts/frontrunning-2/Referrals.sol"
  },
  "ast": {
    "absolutePath": "contracts/frontrunning-2/Referrals.sol",
    "exportedSymbols": {
      "Context": [
        16761
      ],
      "Ownable": [
        6228
      ],
      "Referrals": [
        2128
      ]
    },
    "id": 2129,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1893,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".13"
        ],
        "nodeType": "PragmaDirective",
        "src": "116:24:38"
      },
      {
        "absolutePath": "/Users/m4ud/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 1894,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2129,
        "sourceUnit": 6229,
        "src": "142:52:38",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1896,
              "name": "Ownable",
              "nameLocations": [
                "304:7:38"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6228,
              "src": "304:7:38"
            },
            "id": 1897,
            "nodeType": "InheritanceSpecifier",
            "src": "304:7:38"
          }
        ],
        "canonicalName": "Referrals",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 1895,
          "nodeType": "StructuredDocumentation",
          "src": "196:85:38",
          "text": " @title Referrals\n @author JohnnyTime (https://smartcontractshacking.com)"
        },
        "fullyImplemented": true,
        "id": 2128,
        "linearizedBaseContracts": [
          2128,
          6228,
          16761
        ],
        "name": "Referrals",
        "nameLocation": "291:9:38",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1899,
            "mutability": "mutable",
            "name": "isInit",
            "nameLocation": "331:6:38",
            "nodeType": "VariableDeclaration",
            "scope": 2128,
            "src": "318:19:38",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 1898,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "318:4:38",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "8ce74426",
            "id": 1901,
            "mutability": "mutable",
            "name": "protocol",
            "nameLocation": "359:8:38",
            "nodeType": "VariableDeclaration",
            "scope": 2128,
            "src": "344:23:38",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1900,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "344:7:38",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1905,
            "mutability": "mutable",
            "name": "_referral",
            "nameLocation": "410:9:38",
            "nodeType": "VariableDeclaration",
            "scope": 2128,
            "src": "374:45:38",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
              "typeString": "mapping(bytes32 => address)"
            },
            "typeName": {
              "id": 1904,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 1902,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "382:7:38",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "374:27:38",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                "typeString": "mapping(bytes32 => address)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 1903,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "393:7:38",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1909,
            "mutability": "mutable",
            "name": "_referred",
            "nameLocation": "461:9:38",
            "nodeType": "VariableDeclaration",
            "scope": 2128,
            "src": "425:45:38",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
              "typeString": "mapping(address => bytes32)"
            },
            "typeName": {
              "id": 1908,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 1906,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "433:7:38",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "425:27:38",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
                "typeString": "mapping(address => bytes32)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 1907,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "444:7:38",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 1940,
              "nodeType": "Block",
              "src": "645:180:38",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1923,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 1916,
                            "name": "_referral",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1905,
                            "src": "663:9:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                              "typeString": "mapping(bytes32 => address)"
                            }
                          },
                          "id": 1918,
                          "indexExpression": {
                            "id": 1917,
                            "name": "_hash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1912,
                            "src": "673:5:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "663:16:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1921,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "691:1:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1920,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "683:7:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1919,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "683:7:38",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1922,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "683:10:38",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "663:30:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526566657272616c20636f646520616c726561647920657869737473",
                        "id": 1924,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "695:30:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ea29b08cba5154334c0e00e4087043c4f943a1b7f6d86d5c161a911ffef7cebd",
                          "typeString": "literal_string \"Referral code already exists\""
                        },
                        "value": "Referral code already exists"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ea29b08cba5154334c0e00e4087043c4f943a1b7f6d86d5c161a911ffef7cebd",
                          "typeString": "literal_string \"Referral code already exists\""
                        }
                      ],
                      "id": 1915,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "655:7:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1925,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "655:71:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1926,
                  "nodeType": "ExpressionStatement",
                  "src": "655:71:38"
                },
                {
                  "expression": {
                    "id": 1932,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1927,
                        "name": "_referral",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1905,
                        "src": "736:9:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                          "typeString": "mapping(bytes32 => address)"
                        }
                      },
                      "id": 1929,
                      "indexExpression": {
                        "id": 1928,
                        "name": "_hash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1912,
                        "src": "746:5:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "736:16:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 1930,
                        "name": "_msgSender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16751,
                        "src": "755:10:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 1931,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "755:12:38",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "736:31:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1933,
                  "nodeType": "ExpressionStatement",
                  "src": "736:31:38"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1935,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16751,
                          "src": "798:10:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 1936,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "798:12:38",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1937,
                        "name": "_hash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1912,
                        "src": "812:5:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 1934,
                      "name": "ReferralCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2121,
                      "src": "782:15:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,bytes32)"
                      }
                    },
                    "id": 1938,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "782:36:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1939,
                  "nodeType": "EmitStatement",
                  "src": "777:41:38"
                }
              ]
            },
            "documentation": {
              "id": 1910,
              "nodeType": "StructuredDocumentation",
              "src": "477:111:38",
              "text": " @notice used by any address to create a ref code\n @param _hash hash of the string code"
            },
            "functionSelector": "30330615",
            "id": 1941,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createReferralCode",
            "nameLocation": "602:18:38",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1913,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1912,
                  "mutability": "mutable",
                  "name": "_hash",
                  "nameLocation": "629:5:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 1941,
                  "src": "621:13:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1911,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "621:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "620:15:38"
            },
            "returnParameters": {
              "id": 1914,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "645:0:38"
            },
            "scope": 2128,
            "src": "593:232:38",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1981,
              "nodeType": "Block",
              "src": "1100:265:38",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 1958,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 1951,
                        "name": "_referred",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1909,
                        "src": "1114:9:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
                          "typeString": "mapping(address => bytes32)"
                        }
                      },
                      "id": 1953,
                      "indexExpression": {
                        "id": 1952,
                        "name": "_referredTrader",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1944,
                        "src": "1124:15:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1114:26:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 1956,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1152:1:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 1955,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1144:7:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes32_$",
                          "typeString": "type(bytes32)"
                        },
                        "typeName": {
                          "id": 1954,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1144:7:38",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1957,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1144:10:38",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "1114:40:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1961,
                  "nodeType": "IfStatement",
                  "src": "1110:77:38",
                  "trueBody": {
                    "id": 1960,
                    "nodeType": "Block",
                    "src": "1156:31:38",
                    "statements": [
                      {
                        "functionReturnParameters": 1950,
                        "id": 1959,
                        "nodeType": "Return",
                        "src": "1170:7:38"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1966,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1962,
                      "name": "_referredTrader",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1944,
                      "src": "1200:15:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "baseExpression": {
                        "id": 1963,
                        "name": "_referral",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1905,
                        "src": "1219:9:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                          "typeString": "mapping(bytes32 => address)"
                        }
                      },
                      "id": 1965,
                      "indexExpression": {
                        "id": 1964,
                        "name": "_hash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1946,
                        "src": "1229:5:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1219:16:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1200:35:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1969,
                  "nodeType": "IfStatement",
                  "src": "1196:72:38",
                  "trueBody": {
                    "id": 1968,
                    "nodeType": "Block",
                    "src": "1237:31:38",
                    "statements": [
                      {
                        "functionReturnParameters": 1950,
                        "id": 1967,
                        "nodeType": "Return",
                        "src": "1251:7:38"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 1974,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1970,
                        "name": "_referred",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1909,
                        "src": "1277:9:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
                          "typeString": "mapping(address => bytes32)"
                        }
                      },
                      "id": 1972,
                      "indexExpression": {
                        "id": 1971,
                        "name": "_referredTrader",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1944,
                        "src": "1287:15:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1277:26:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1973,
                      "name": "_hash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1946,
                      "src": "1306:5:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "1277:34:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 1975,
                  "nodeType": "ExpressionStatement",
                  "src": "1277:34:38"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1977,
                        "name": "_referredTrader",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1944,
                        "src": "1335:15:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1978,
                        "name": "_hash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1946,
                        "src": "1352:5:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 1976,
                      "name": "Referred",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2127,
                      "src": "1326:8:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,bytes32)"
                      }
                    },
                    "id": 1979,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1326:32:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1980,
                  "nodeType": "EmitStatement",
                  "src": "1321:37:38"
                }
              ]
            },
            "documentation": {
              "id": 1942,
              "nodeType": "StructuredDocumentation",
              "src": "831:161:38",
              "text": " @notice set the ref data\n @dev only callable by trading\n @param _referredTrader address of the trader\n @param _hash ref hash"
            },
            "functionSelector": "e20c8548",
            "id": 1982,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1949,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1948,
                  "name": "onlyProtocol",
                  "nameLocations": [
                    "1083:12:38"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2115,
                  "src": "1083:12:38"
                },
                "nodeType": "ModifierInvocation",
                "src": "1083:12:38"
              }
            ],
            "name": "setReferred",
            "nameLocation": "1006:11:38",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1947,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1944,
                  "mutability": "mutable",
                  "name": "_referredTrader",
                  "nameLocation": "1026:15:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 1982,
                  "src": "1018:23:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1943,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1018:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1946,
                  "mutability": "mutable",
                  "name": "_hash",
                  "nameLocation": "1051:5:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 1982,
                  "src": "1043:13:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1945,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1043:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1017:40:38"
            },
            "returnParameters": {
              "id": 1950,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1100:0:38"
            },
            "scope": 2128,
            "src": "997:368:38",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1993,
              "nodeType": "Block",
              "src": "1441:42:38",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 1989,
                      "name": "_referred",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1909,
                      "src": "1458:9:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
                        "typeString": "mapping(address => bytes32)"
                      }
                    },
                    "id": 1991,
                    "indexExpression": {
                      "id": 1990,
                      "name": "_trader",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1984,
                      "src": "1468:7:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1458:18:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 1988,
                  "id": 1992,
                  "nodeType": "Return",
                  "src": "1451:25:38"
                }
              ]
            },
            "functionSelector": "d113f04c",
            "id": 1994,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getReferred",
            "nameLocation": "1380:11:38",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1985,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1984,
                  "mutability": "mutable",
                  "name": "_trader",
                  "nameLocation": "1400:7:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 1994,
                  "src": "1392:15:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1983,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1392:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1391:17:38"
            },
            "returnParameters": {
              "id": 1988,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1987,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1994,
                  "src": "1432:7:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1986,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1432:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1431:9:38"
            },
            "scope": 2128,
            "src": "1371:112:38",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2005,
              "nodeType": "Block",
              "src": "1557:40:38",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 2001,
                      "name": "_referral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1905,
                      "src": "1574:9:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                        "typeString": "mapping(bytes32 => address)"
                      }
                    },
                    "id": 2003,
                    "indexExpression": {
                      "id": 2002,
                      "name": "_hash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1996,
                      "src": "1584:5:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1574:16:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 2000,
                  "id": 2004,
                  "nodeType": "Return",
                  "src": "1567:23:38"
                }
              ]
            },
            "functionSelector": "82e58d51",
            "id": 2006,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getReferral",
            "nameLocation": "1498:11:38",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1997,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1996,
                  "mutability": "mutable",
                  "name": "_hash",
                  "nameLocation": "1518:5:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 2006,
                  "src": "1510:13:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1995,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1510:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1509:15:38"
            },
            "returnParameters": {
              "id": 2000,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1999,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2006,
                  "src": "1548:7:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1998,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1548:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1547:9:38"
            },
            "scope": 2128,
            "src": "1489:108:38",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2017,
              "nodeType": "Block",
              "src": "1675:37:38",
              "statements": [
                {
                  "expression": {
                    "id": 2015,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2013,
                      "name": "protocol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1901,
                      "src": "1685:8:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2014,
                      "name": "_protocol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2008,
                      "src": "1696:9:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1685:20:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2016,
                  "nodeType": "ExpressionStatement",
                  "src": "1685:20:38"
                }
              ]
            },
            "functionSelector": "0a9d793d",
            "id": 2018,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2011,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2010,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "1665:9:38"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6147,
                  "src": "1665:9:38"
                },
                "nodeType": "ModifierInvocation",
                "src": "1665:9:38"
              }
            ],
            "name": "setProtocol",
            "nameLocation": "1625:11:38",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2009,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2008,
                  "mutability": "mutable",
                  "name": "_protocol",
                  "nameLocation": "1645:9:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 2018,
                  "src": "1637:17:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2007,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1637:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1636:19:38"
            },
            "returnParameters": {
              "id": 2012,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1675:0:38"
            },
            "scope": 2128,
            "src": "1616:96:38",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2099,
              "nodeType": "Block",
              "src": "1954:392:38",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2038,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1972:7:38",
                        "subExpression": {
                          "id": 2037,
                          "name": "isInit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1899,
                          "src": "1973:6:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2036,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1964:7:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2039,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1964:16:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2040,
                  "nodeType": "ExpressionStatement",
                  "src": "1964:16:38"
                },
                {
                  "expression": {
                    "id": 2043,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2041,
                      "name": "isInit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1899,
                      "src": "1990:6:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 2042,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1999:4:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1990:13:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2044,
                  "nodeType": "ExpressionStatement",
                  "src": "1990:13:38"
                },
                {
                  "assignments": [
                    2046
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2046,
                      "mutability": "mutable",
                      "name": "_codeOwnersL",
                      "nameLocation": "2021:12:38",
                      "nodeType": "VariableDeclaration",
                      "scope": 2099,
                      "src": "2013:20:38",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2045,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2013:7:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2049,
                  "initialValue": {
                    "expression": {
                      "id": 2047,
                      "name": "_codeOwners",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2022,
                      "src": "2036:11:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "id": 2048,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "2048:6:38",
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "2036:18:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2013:41:38"
                },
                {
                  "assignments": [
                    2051
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2051,
                      "mutability": "mutable",
                      "name": "_referredAL",
                      "nameLocation": "2072:11:38",
                      "nodeType": "VariableDeclaration",
                      "scope": 2099,
                      "src": "2064:19:38",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2050,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2064:7:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2054,
                  "initialValue": {
                    "expression": {
                      "id": 2052,
                      "name": "_referredA",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2028,
                      "src": "2086:10:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "id": 2053,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "2097:6:38",
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "2086:17:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2064:39:38"
                },
                {
                  "body": {
                    "id": 2075,
                    "nodeType": "Block",
                    "src": "2156:67:38",
                    "statements": [
                      {
                        "expression": {
                          "id": 2073,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 2065,
                              "name": "_referral",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1905,
                              "src": "2170:9:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                                "typeString": "mapping(bytes32 => address)"
                              }
                            },
                            "id": 2069,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 2066,
                                "name": "_ownedCodes",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2025,
                                "src": "2180:11:38",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                  "typeString": "bytes32[] memory"
                                }
                              },
                              "id": 2068,
                              "indexExpression": {
                                "id": 2067,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2056,
                                "src": "2192:1:38",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2180:14:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2170:25:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 2070,
                              "name": "_codeOwners",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2022,
                              "src": "2198:11:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 2072,
                            "indexExpression": {
                              "id": 2071,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2056,
                              "src": "2210:1:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2198:14:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2170:42:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2074,
                        "nodeType": "ExpressionStatement",
                        "src": "2170:42:38"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2061,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2059,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2056,
                      "src": "2133:1:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 2060,
                      "name": "_codeOwnersL",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2046,
                      "src": "2137:12:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2133:16:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2076,
                  "initializationExpression": {
                    "assignments": [
                      2056
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2056,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2126:1:38",
                        "nodeType": "VariableDeclaration",
                        "scope": 2076,
                        "src": "2118:9:38",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2055,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2118:7:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 2058,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 2057,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2130:1:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2118:13:38"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 2063,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2151:3:38",
                      "subExpression": {
                        "id": 2062,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2056,
                        "src": "2151:1:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2064,
                    "nodeType": "ExpressionStatement",
                    "src": "2151:3:38"
                  },
                  "nodeType": "ForStatement",
                  "src": "2113:110:38"
                },
                {
                  "body": {
                    "id": 2097,
                    "nodeType": "Block",
                    "src": "2274:66:38",
                    "statements": [
                      {
                        "expression": {
                          "id": 2095,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 2087,
                              "name": "_referred",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1909,
                              "src": "2288:9:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
                                "typeString": "mapping(address => bytes32)"
                              }
                            },
                            "id": 2091,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 2088,
                                "name": "_referredA",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2028,
                                "src": "2298:10:38",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 2090,
                              "indexExpression": {
                                "id": 2089,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2078,
                                "src": "2309:1:38",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2298:13:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2288:24:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 2092,
                              "name": "_referredTo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2031,
                              "src": "2315:11:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                "typeString": "bytes32[] memory"
                              }
                            },
                            "id": 2094,
                            "indexExpression": {
                              "id": 2093,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2078,
                              "src": "2327:1:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2315:14:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "2288:41:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 2096,
                        "nodeType": "ExpressionStatement",
                        "src": "2288:41:38"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2083,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2081,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2078,
                      "src": "2252:1:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 2082,
                      "name": "_referredAL",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2051,
                      "src": "2256:11:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2252:15:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2098,
                  "initializationExpression": {
                    "assignments": [
                      2078
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2078,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2245:1:38",
                        "nodeType": "VariableDeclaration",
                        "scope": 2098,
                        "src": "2237:9:38",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2077,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2237:7:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 2080,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 2079,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2249:1:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2237:13:38"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 2085,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2269:3:38",
                      "subExpression": {
                        "id": 2084,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2078,
                        "src": "2269:1:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2086,
                    "nodeType": "ExpressionStatement",
                    "src": "2269:3:38"
                  },
                  "nodeType": "ForStatement",
                  "src": "2232:108:38"
                }
              ]
            },
            "documentation": {
              "id": 2019,
              "nodeType": "StructuredDocumentation",
              "src": "1718:37:38",
              "text": " @notice deprecated"
            },
            "functionSelector": "888cda9d",
            "id": 2100,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2034,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2033,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "1944:9:38"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6147,
                  "src": "1944:9:38"
                },
                "nodeType": "ModifierInvocation",
                "src": "1944:9:38"
              }
            ],
            "name": "initRefs",
            "nameLocation": "1769:8:38",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2032,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2022,
                  "mutability": "mutable",
                  "name": "_codeOwners",
                  "nameLocation": "1804:11:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 2100,
                  "src": "1787:28:38",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2020,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1787:7:38",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 2021,
                    "nodeType": "ArrayTypeName",
                    "src": "1787:9:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2025,
                  "mutability": "mutable",
                  "name": "_ownedCodes",
                  "nameLocation": "1842:11:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 2100,
                  "src": "1825:28:38",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2023,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "1825:7:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 2024,
                    "nodeType": "ArrayTypeName",
                    "src": "1825:9:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2028,
                  "mutability": "mutable",
                  "name": "_referredA",
                  "nameLocation": "1880:10:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 2100,
                  "src": "1863:27:38",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2026,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1863:7:38",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 2027,
                    "nodeType": "ArrayTypeName",
                    "src": "1863:9:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2031,
                  "mutability": "mutable",
                  "name": "_referredTo",
                  "nameLocation": "1917:11:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 2100,
                  "src": "1900:28:38",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2029,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "1900:7:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 2030,
                    "nodeType": "ArrayTypeName",
                    "src": "1900:9:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1777:157:38"
            },
            "returnParameters": {
              "id": 2035,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1954:0:38"
            },
            "scope": 2128,
            "src": "1760:586:38",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2114,
              "nodeType": "Block",
              "src": "2394:83:38",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2109,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2103,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16751,
                            "src": "2412:10:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 2104,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2412:12:38",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 2107,
                              "name": "protocol",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1901,
                              "src": "2436:8:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 2106,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2428:7:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2105,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2428:7:38",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2108,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2428:17:38",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2412:33:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "2150726f746f636f6c",
                        "id": 2110,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2447:11:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5ece7d97425bd7205b74e6e0c45dcaeebc4aab6b6e15e520c3e61af86d5aa40d",
                          "typeString": "literal_string \"!Protocol\""
                        },
                        "value": "!Protocol"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5ece7d97425bd7205b74e6e0c45dcaeebc4aab6b6e15e520c3e61af86d5aa40d",
                          "typeString": "literal_string \"!Protocol\""
                        }
                      ],
                      "id": 2102,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2404:7:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2404:55:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2112,
                  "nodeType": "ExpressionStatement",
                  "src": "2404:55:38"
                },
                {
                  "id": 2113,
                  "nodeType": "PlaceholderStatement",
                  "src": "2469:1:38"
                }
              ]
            },
            "id": 2115,
            "name": "onlyProtocol",
            "nameLocation": "2379:12:38",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 2101,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2391:2:38"
            },
            "src": "2370:107:38",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "eventSelector": "5a56e3c54cb51afda5c8ffe89dae0adf7d78e99319eaeadd2539e2ec00cdf043",
            "id": 2121,
            "name": "ReferralCreated",
            "nameLocation": "2489:15:38",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2120,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2117,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_referrer",
                  "nameLocation": "2513:9:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 2121,
                  "src": "2505:17:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2116,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2505:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2119,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_hash",
                  "nameLocation": "2532:5:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 2121,
                  "src": "2524:13:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2118,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2524:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2504:34:38"
            },
            "src": "2483:56:38"
          },
          {
            "anonymous": false,
            "eventSelector": "37c9ec64695b190bd0f33ba0a1eba4006268223654349489b4a8b5cb13ffcd89",
            "id": 2127,
            "name": "Referred",
            "nameLocation": "2550:8:38",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2126,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2123,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_referredTrader",
                  "nameLocation": "2567:15:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 2127,
                  "src": "2559:23:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2122,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2559:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2125,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_hash",
                  "nameLocation": "2592:5:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 2127,
                  "src": "2584:13:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2124,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2584:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2558:40:38"
            },
            "src": "2544:55:38"
          }
        ],
        "scope": 2129,
        "src": "282:2319:38",
        "usedErrors": []
      }
    ],
    "src": "116:2486:38"
  },
  "bytecode": "608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6108d98061007e6000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80638ce74426116100665780638ce744261461012c5780638da5cb5b1461013f578063d113f04c14610150578063e20c854814610187578063f2fde38b1461019a57600080fd5b80630a9d793d146100a357806330330615146100b8578063715018a6146100cb57806382e58d51146100d3578063888cda9d14610119575b600080fd5b6100b66100b136600461061c565b6101ad565b005b6100b66100c636600461063e565b6101d7565b6100b66102a1565b6100fc6100e136600461063e565b6000908152600260205260409020546001600160a01b031690565b6040516001600160a01b0390911681526020015b60405180910390f35b6100b661012736600461078f565b6102b5565b6001546100fc906001600160a01b031681565b6000546001600160a01b03166100fc565b61017961015e36600461061c565b6001600160a01b031660009081526003602052604090205490565b604051908152602001610110565b6100b661019536600461083c565b6103f7565b6100b66101a836600461061c565b6104dd565b6101b5610556565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6000818152600260205260409020546001600160a01b0316156102415760405162461bcd60e51b815260206004820152601c60248201527f526566657272616c20636f646520616c7265616479206578697374730000000060448201526064015b60405180910390fd5b60008181526002602090815260409182902080546001600160a01b03191633908117909155825190815290810183905281517f5a56e3c54cb51afda5c8ffe89dae0adf7d78e99319eaeadd2539e2ec00cdf043929181900390910190a150565b6102a9610556565b6102b360006105b0565b565b6102bd610556565b600054600160a01b900460ff16156102d457600080fd5b6000805460ff60a01b1916600160a01b1781558451835190915b828110156103735786818151811061030857610308610866565b60200260200101516002600088848151811061032657610326610866565b6020026020010151815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b03160217905550808061036b9061087c565b9150506102ee565b5060005b818110156103ee5783818151811061039157610391610866565b6020026020010151600360008784815181106103af576103af610866565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000208190555080806103e69061087c565b915050610377565b50505050505050565b6001546001600160a01b0316336001600160a01b0316146104465760405162461bcd60e51b815260206004820152600960248201526808541c9bdd1bd8dbdb60ba1b6044820152606401610238565b6001600160a01b0382166000908152600360205260409020546104d9576000818152600260205260409020546001600160a01b038381169116146104d9576001600160a01b038216600081815260036020908152604091829020849055815192835282018390527f37c9ec64695b190bd0f33ba0a1eba4006268223654349489b4a8b5cb13ffcd89910160405180910390a15b5050565b6104e5610556565b6001600160a01b03811661054a5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610238565b610553816105b0565b50565b6000546001600160a01b031633146102b35760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610238565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b038116811461061757600080fd5b919050565b60006020828403121561062e57600080fd5b61063782610600565b9392505050565b60006020828403121561065057600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561069657610696610657565b604052919050565b600067ffffffffffffffff8211156106b8576106b8610657565b5060051b60200190565b600082601f8301126106d357600080fd5b813560206106e86106e38361069e565b61066d565b82815260059290921b8401810191818101908684111561070757600080fd5b8286015b848110156107295761071c81610600565b835291830191830161070b565b509695505050505050565b600082601f83011261074557600080fd5b813560206107556106e38361069e565b82815260059290921b8401810191818101908684111561077457600080fd5b8286015b848110156107295780358352918301918301610778565b600080600080608085870312156107a557600080fd5b843567ffffffffffffffff808211156107bd57600080fd5b6107c9888389016106c2565b955060208701359150808211156107df57600080fd5b6107eb88838901610734565b9450604087013591508082111561080157600080fd5b61080d888389016106c2565b9350606087013591508082111561082357600080fd5b5061083087828801610734565b91505092959194509250565b6000806040838503121561084f57600080fd5b61085883610600565b946020939093013593505050565b634e487b7160e01b600052603260045260246000fd5b60006001820161089c57634e487b7160e01b600052601160045260246000fd5b506001019056fea2646970667358221220cea3a78c79623a70ee287127180c6ac427ccf4c2fb3bb53311b8dd74eebb908564736f6c63430008130033",
  "bytecodeSha1": "8c0640c476d98afcaf7d9509b7d3754e64da99f6",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.19+commit.7dd6d404"
  },
  "contractName": "Referrals",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable._checkOwner": {
          "29": [
            1422,
            1445,
            true
          ]
        },
        "Ownable.transferOwnership": {
          "28": [
            2169,
            2191,
            true
          ]
        }
      },
      "13": {},
      "38": {
        "Context._msgSender": {
          "26": [
            2412,
            2445,
            true
          ]
        },
        "Referrals.createReferralCode": {
          "24": [
            663,
            693,
            true
          ]
        },
        "Referrals.initRefs": {
          "25": [
            1972,
            1979,
            true
          ]
        },
        "Referrals.setReferred": {
          "27": [
            1200,
            1235,
            false
          ]
        }
      }
    },
    "statements": {
      "0": {
        "Ownable._checkOwner": {
          "21": [
            1414,
            1482
          ]
        },
        "Ownable._transferOwnership": {
          "22": [
            2541,
            2558
          ],
          "23": [
            2568,
            2613
          ]
        },
        "Ownable.owner": {
          "1": [
            1266,
            1279
          ]
        },
        "Ownable.renounceOwnership": {
          "8": [
            1895,
            1925
          ]
        },
        "Ownable.transferOwnership": {
          "19": [
            2161,
            2234
          ],
          "20": [
            2244,
            2272
          ]
        }
      },
      "13": {
        "Context._msgSender": {
          "6": [
            712,
            729
          ]
        }
      },
      "38": {
        "Referrals.createReferralCode": {
          "4": [
            655,
            726
          ],
          "5": [
            736,
            767
          ],
          "7": [
            777,
            818
          ]
        },
        "Referrals.getReferral": {
          "0": [
            1567,
            1590
          ]
        },
        "Referrals.getReferred": {
          "2": [
            1451,
            1476
          ]
        },
        "Referrals.initRefs": {
          "9": [
            1964,
            1980
          ],
          "10": [
            1990,
            2003
          ],
          "11": [
            2170,
            2212
          ],
          "12": [
            2151,
            2154
          ],
          "13": [
            2288,
            2329
          ],
          "14": [
            2269,
            2272
          ]
        },
        "Referrals.setProtocol": {
          "3": [
            1685,
            1705
          ]
        },
        "Referrals.setReferred": {
          "15": [
            1170,
            1177
          ],
          "16": [
            1251,
            1258
          ],
          "17": [
            1277,
            1311
          ],
          "18": [
            1321,
            1358
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.8.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.8.0/Ownable"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b506004361061009e5760003560e01c80638ce74426116100665780638ce744261461012c5780638da5cb5b1461013f578063d113f04c14610150578063e20c854814610187578063f2fde38b1461019a57600080fd5b80630a9d793d146100a357806330330615146100b8578063715018a6146100cb57806382e58d51146100d3578063888cda9d14610119575b600080fd5b6100b66100b136600461061c565b6101ad565b005b6100b66100c636600461063e565b6101d7565b6100b66102a1565b6100fc6100e136600461063e565b6000908152600260205260409020546001600160a01b031690565b6040516001600160a01b0390911681526020015b60405180910390f35b6100b661012736600461078f565b6102b5565b6001546100fc906001600160a01b031681565b6000546001600160a01b03166100fc565b61017961015e36600461061c565b6001600160a01b031660009081526003602052604090205490565b604051908152602001610110565b6100b661019536600461083c565b6103f7565b6100b66101a836600461061c565b6104dd565b6101b5610556565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6000818152600260205260409020546001600160a01b0316156102415760405162461bcd60e51b815260206004820152601c60248201527f526566657272616c20636f646520616c7265616479206578697374730000000060448201526064015b60405180910390fd5b60008181526002602090815260409182902080546001600160a01b03191633908117909155825190815290810183905281517f5a56e3c54cb51afda5c8ffe89dae0adf7d78e99319eaeadd2539e2ec00cdf043929181900390910190a150565b6102a9610556565b6102b360006105b0565b565b6102bd610556565b600054600160a01b900460ff16156102d457600080fd5b6000805460ff60a01b1916600160a01b1781558451835190915b828110156103735786818151811061030857610308610866565b60200260200101516002600088848151811061032657610326610866565b6020026020010151815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b03160217905550808061036b9061087c565b9150506102ee565b5060005b818110156103ee5783818151811061039157610391610866565b6020026020010151600360008784815181106103af576103af610866565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000208190555080806103e69061087c565b915050610377565b50505050505050565b6001546001600160a01b0316336001600160a01b0316146104465760405162461bcd60e51b815260206004820152600960248201526808541c9bdd1bd8dbdb60ba1b6044820152606401610238565b6001600160a01b0382166000908152600360205260409020546104d9576000818152600260205260409020546001600160a01b038381169116146104d9576001600160a01b038216600081815260036020908152604091829020849055815192835282018390527f37c9ec64695b190bd0f33ba0a1eba4006268223654349489b4a8b5cb13ffcd89910160405180910390a15b5050565b6104e5610556565b6001600160a01b03811661054a5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610238565b610553816105b0565b50565b6000546001600160a01b031633146102b35760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610238565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b038116811461061757600080fd5b919050565b60006020828403121561062e57600080fd5b61063782610600565b9392505050565b60006020828403121561065057600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561069657610696610657565b604052919050565b600067ffffffffffffffff8211156106b8576106b8610657565b5060051b60200190565b600082601f8301126106d357600080fd5b813560206106e86106e38361069e565b61066d565b82815260059290921b8401810191818101908684111561070757600080fd5b8286015b848110156107295761071c81610600565b835291830191830161070b565b509695505050505050565b600082601f83011261074557600080fd5b813560206107556106e38361069e565b82815260059290921b8401810191818101908684111561077457600080fd5b8286015b848110156107295780358352918301918301610778565b600080600080608085870312156107a557600080fd5b843567ffffffffffffffff808211156107bd57600080fd5b6107c9888389016106c2565b955060208701359150808211156107df57600080fd5b6107eb88838901610734565b9450604087013591508082111561080157600080fd5b61080d888389016106c2565b9350606087013591508082111561082357600080fd5b5061083087828801610734565b91505092959194509250565b6000806040838503121561084f57600080fd5b61085883610600565b946020939093013593505050565b634e487b7160e01b600052603260045260246000fd5b60006001820161089c57634e487b7160e01b600052601160045260246000fd5b506001019056fea2646970667358221220cea3a78c79623a70ee287127180c6ac427ccf4c2fb3bb53311b8dd74eebb908564736f6c63430008130033",
  "deployedSourceMap": "282:2319:38:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1616:96;;;;;;:::i;:::-;;:::i;:::-;;593:232;;;;;;:::i;:::-;;:::i;1831:101:0:-;;;:::i;1489:108:38:-;;;;;;:::i;:::-;1548:7;1574:16;;;:9;:16;;;;;;-1:-1:-1;;;;;1574:16:38;;1489:108;;;;-1:-1:-1;;;;;732:32:63;;;714:51;;702:2;687:18;1489:108:38;;;;;;;;1760:586;;;;;;:::i;:::-;;:::i;344:23::-;;;;;-1:-1:-1;;;;;344:23:38;;;1201:85:0;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;1201:85;;1371:112:38;;;;;;:::i;:::-;-1:-1:-1;;;;;1458:18:38;1432:7;1458:18;;;:9;:18;;;;;;;1371:112;;;;3915:25:63;;;3903:2;3888:18;1371:112:38;3769:177:63;997:368:38;;;;;;:::i;:::-;;:::i;2081:198:0:-;;;;;;:::i;:::-;;:::i;1616:96:38:-;1094:13:0;:11;:13::i;:::-;1685:8:38::1;:20:::0;;-1:-1:-1;;;;;;1685:20:38::1;-1:-1:-1::0;;;;;1685:20:38;;;::::1;::::0;;;::::1;::::0;;1616:96::o;593:232::-;691:1;663:16;;;:9;:16;;;;;;-1:-1:-1;;;;;663:16:38;:30;655:71;;;;-1:-1:-1;;;655:71:38;;4412:2:63;655:71:38;;;4394:21:63;4451:2;4431:18;;;4424:30;4490;4470:18;;;4463:58;4538:18;;655:71:38;;;;;;;;;736:16;;;;:9;:16;;;;;;;;;:31;;-1:-1:-1;;;;;;736:31:38;719:10:13;736:31:38;;;;;;782:36;;4741:51:63;;;4808:18;;;4801:34;;;782:36:38;;;;;;;;;;;;;593:232;:::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;1760:586:38:-;1094:13:0;:11;:13::i;:::-;1973:6:38::1;::::0;-1:-1:-1;;;1973:6:38;::::1;;;1972:7;1964:16;;;::::0;::::1;;1990:6;:13:::0;;-1:-1:-1;;;;1990:13:38::1;-1:-1:-1::0;;;1990:13:38::1;::::0;;2036:18;;2086:17;;2036:18;;2113:110:::1;2137:12;2133:1;:16;2113:110;;;2198:11;2210:1;2198:14;;;;;;;;:::i;:::-;;;;;;;2170:9;:25;2180:11;2192:1;2180:14;;;;;;;;:::i;:::-;;;;;;;2170:25;;;;;;;;;;;;:42;;;;;-1:-1:-1::0;;;;;2170:42:38::1;;;;;-1:-1:-1::0;;;;;2170:42:38::1;;;;;;2151:3;;;;;:::i;:::-;;;;2113:110;;;;2237:9;2232:108;2256:11;2252:1;:15;2232:108;;;2315:11;2327:1;2315:14;;;;;;;;:::i;:::-;;;;;;;2288:9;:24;2298:10;2309:1;2298:13;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1::0;;;;;2288:24:38::1;-1:-1:-1::0;;;;;2288:24:38::1;;;;;;;;;;;;:41;;;;2269:3;;;;;:::i;:::-;;;;2232:108;;;;1954:392;;1760:586:::0;;;;:::o;997:368::-;2436:8;;-1:-1:-1;;;;;2436:8:38;719:10:13;-1:-1:-1;;;;;2412:33:38;;2404:55;;;;-1:-1:-1;;;2404:55:38;;5417:2:63;2404:55:38;;;5399:21:63;5456:1;5436:18;;;5429:29;-1:-1:-1;;;5474:18:63;;;5467:39;5523:18;;2404:55:38;5215:332:63;2404:55:38;-1:-1:-1;;;;;1114:26:38;::::1;1152:1;1114:26:::0;;;:9:::1;:26;::::0;;;;;1170:7:::1;1110:77;1219:16;::::0;;;:9:::1;:16;::::0;;;;;-1:-1:-1;;;;;1200:35:38;;::::1;1219:16:::0;::::1;1196:72:::0;1251:7:::1;1196:72;-1:-1:-1::0;;;;;1277:26:38;::::1;;::::0;;;:9:::1;:26;::::0;;;;;;;;:34;;;1326:32;;4741:51:63;;;4808:18;;4801:34;;;1326:32:38::1;::::0;4714:18:63;1326:32:38::1;;;;;;;2469:1;997:368:::0;;:::o;2081:198:0:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:0;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:0;;5754:2:63;2161:73:0::1;::::0;::::1;5736:21:63::0;5793:2;5773:18;;;5766:30;5832:34;5812:18;;;5805:62;-1:-1:-1;;;5883:18:63;;;5876:36;5929:19;;2161:73:0::1;5552:402:63::0;2161:73:0::1;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1359:130::-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;719:10:13;1422:23:0;1414:68;;;;-1:-1:-1;;;1414:68:0;;6161:2:63;1414:68:0;;;6143:21:63;;;6180:18;;;6173:30;6239:34;6219:18;;;6212:62;6291:18;;1414:68:0;5959:356:63;2433:187:0;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;14:173:63:-;82:20;;-1:-1:-1;;;;;131:31:63;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;:::-;333:39;192:186;-1:-1:-1;;;192:186:63:o;383:180::-;442:6;495:2;483:9;474:7;470:23;466:32;463:52;;;511:1;508;501:12;463:52;-1:-1:-1;534:23:63;;383:180;-1:-1:-1;383:180:63:o;776:127::-;837:10;832:3;828:20;825:1;818:31;868:4;865:1;858:15;892:4;889:1;882:15;908:275;979:2;973:9;1044:2;1025:13;;-1:-1:-1;;1021:27:63;1009:40;;1079:18;1064:34;;1100:22;;;1061:62;1058:88;;;1126:18;;:::i;:::-;1162:2;1155:22;908:275;;-1:-1:-1;908:275:63:o;1188:183::-;1248:4;1281:18;1273:6;1270:30;1267:56;;;1303:18;;:::i;:::-;-1:-1:-1;1348:1:63;1344:14;1360:4;1340:25;;1188:183::o;1376:668::-;1430:5;1483:3;1476:4;1468:6;1464:17;1460:27;1450:55;;1501:1;1498;1491:12;1450:55;1537:6;1524:20;1563:4;1587:60;1603:43;1643:2;1603:43;:::i;:::-;1587:60;:::i;:::-;1681:15;;;1767:1;1763:10;;;;1751:23;;1747:32;;;1712:12;;;;1791:15;;;1788:35;;;1819:1;1816;1809:12;1788:35;1855:2;1847:6;1843:15;1867:148;1883:6;1878:3;1875:15;1867:148;;;1949:23;1968:3;1949:23;:::i;:::-;1937:36;;1993:12;;;;1900;;1867:148;;;-1:-1:-1;2033:5:63;1376:668;-1:-1:-1;;;;;;1376:668:63:o;2049:662::-;2103:5;2156:3;2149:4;2141:6;2137:17;2133:27;2123:55;;2174:1;2171;2164:12;2123:55;2210:6;2197:20;2236:4;2260:60;2276:43;2316:2;2276:43;:::i;2260:60::-;2354:15;;;2440:1;2436:10;;;;2424:23;;2420:32;;;2385:12;;;;2464:15;;;2461:35;;;2492:1;2489;2482:12;2461:35;2528:2;2520:6;2516:15;2540:142;2556:6;2551:3;2548:15;2540:142;;;2622:17;;2610:30;;2660:12;;;;2573;;2540:142;;2716:1048;2902:6;2910;2918;2926;2979:3;2967:9;2958:7;2954:23;2950:33;2947:53;;;2996:1;2993;2986:12;2947:53;3036:9;3023:23;3065:18;3106:2;3098:6;3095:14;3092:34;;;3122:1;3119;3112:12;3092:34;3145:61;3198:7;3189:6;3178:9;3174:22;3145:61;:::i;:::-;3135:71;;3259:2;3248:9;3244:18;3231:32;3215:48;;3288:2;3278:8;3275:16;3272:36;;;3304:1;3301;3294:12;3272:36;3327:63;3382:7;3371:8;3360:9;3356:24;3327:63;:::i;:::-;3317:73;;3443:2;3432:9;3428:18;3415:32;3399:48;;3472:2;3462:8;3459:16;3456:36;;;3488:1;3485;3478:12;3456:36;3511:63;3566:7;3555:8;3544:9;3540:24;3511:63;:::i;:::-;3501:73;;3627:2;3616:9;3612:18;3599:32;3583:48;;3656:2;3646:8;3643:16;3640:36;;;3672:1;3669;3662:12;3640:36;;3695:63;3750:7;3739:8;3728:9;3724:24;3695:63;:::i;:::-;3685:73;;;2716:1048;;;;;;;:::o;3951:254::-;4019:6;4027;4080:2;4068:9;4059:7;4055:23;4051:32;4048:52;;;4096:1;4093;4086:12;4048:52;4119:29;4138:9;4119:29;:::i;:::-;4109:39;4195:2;4180:18;;;;4167:32;;-1:-1:-1;;;3951:254:63:o;4846:127::-;4907:10;4902:3;4898:20;4895:1;4888:31;4938:4;4935:1;4928:15;4962:4;4959:1;4952:15;4978:232;5017:3;5038:17;;;5035:140;;5097:10;5092:3;5088:20;5085:1;5078:31;5132:4;5129:1;5122:15;5160:4;5157:1;5150:15;5035:140;-1:-1:-1;5202:1:63;5191:13;;4978:232::o",
  "language": "Solidity",
  "natspec": {
    "author": "JohnnyTime (https://smartcontractshacking.com)",
    "kind": "dev",
    "methods": {
      "createReferralCode(bytes32)": {
        "notice": "used by any address to create a ref code",
        "params": {
          "_hash": "hash of the string code"
        }
      },
      "initRefs(address[],bytes32[],address[],bytes32[])": {
        "notice": "deprecated"
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setReferred(address,bytes32)": {
        "details": "only callable by trading",
        "notice": "set the ref data",
        "params": {
          "_hash": "ref hash",
          "_referredTrader": "address of the trader"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "Referrals",
    "version": 1
  },
  "offset": [
    282,
    2601
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8CE74426 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x8CE74426 EQ PUSH2 0x12C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x13F JUMPI DUP1 PUSH4 0xD113F04C EQ PUSH2 0x150 JUMPI DUP1 PUSH4 0xE20C8548 EQ PUSH2 0x187 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x19A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA9D793D EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x30330615 EQ PUSH2 0xB8 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xCB JUMPI DUP1 PUSH4 0x82E58D51 EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0x888CDA9D EQ PUSH2 0x119 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0xB1 CALLDATASIZE PUSH1 0x4 PUSH2 0x61C JUMP JUMPDEST PUSH2 0x1AD JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB6 PUSH2 0xC6 CALLDATASIZE PUSH1 0x4 PUSH2 0x63E JUMP JUMPDEST PUSH2 0x1D7 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x2A1 JUMP JUMPDEST PUSH2 0xFC PUSH2 0xE1 CALLDATASIZE PUSH1 0x4 PUSH2 0x63E JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB6 PUSH2 0x127 CALLDATASIZE PUSH1 0x4 PUSH2 0x78F JUMP JUMPDEST PUSH2 0x2B5 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0xFC SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xFC JUMP JUMPDEST PUSH2 0x179 PUSH2 0x15E CALLDATASIZE PUSH1 0x4 PUSH2 0x61C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x110 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x195 CALLDATASIZE PUSH1 0x4 PUSH2 0x83C JUMP JUMPDEST PUSH2 0x3F7 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x1A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x61C JUMP JUMPDEST PUSH2 0x4DD JUMP JUMPDEST PUSH2 0x1B5 PUSH2 0x556 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x241 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526566657272616C20636F646520616C72656164792065786973747300000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP3 MLOAD SWAP1 DUP2 MSTORE SWAP1 DUP2 ADD DUP4 SWAP1 MSTORE DUP2 MLOAD PUSH32 0x5A56E3C54CB51AFDA5C8FFE89DAE0ADF7D78E99319EAEADD2539E2EC00CDF043 SWAP3 SWAP2 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x2A9 PUSH2 0x556 JUMP JUMPDEST PUSH2 0x2B3 PUSH1 0x0 PUSH2 0x5B0 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x2BD PUSH2 0x556 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x2D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR DUP2 SSTORE DUP5 MLOAD DUP4 MLOAD SWAP1 SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x373 JUMPI DUP7 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x308 JUMPI PUSH2 0x308 PUSH2 0x866 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x2 PUSH1 0x0 DUP9 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x326 JUMPI PUSH2 0x326 PUSH2 0x866 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP DUP1 DUP1 PUSH2 0x36B SWAP1 PUSH2 0x87C JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2EE JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3EE JUMPI DUP4 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x391 JUMPI PUSH2 0x391 PUSH2 0x866 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x3 PUSH1 0x0 DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x3AF JUMPI PUSH2 0x3AF PUSH2 0x866 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 DUP1 PUSH2 0x3E6 SWAP1 PUSH2 0x87C JUMP JUMPDEST SWAP2 POP POP PUSH2 0x377 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x446 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x8541C9BDD1BD8DBDB PUSH1 0xBA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x238 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x4D9 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ PUSH2 0x4D9 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE DUP2 MLOAD SWAP3 DUP4 MSTORE DUP3 ADD DUP4 SWAP1 MSTORE PUSH32 0x37C9EC64695B190BD0F33BA0A1EBA4006268223654349489B4A8B5CB13FFCD89 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x4E5 PUSH2 0x556 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x54A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x238 JUMP JUMPDEST PUSH2 0x553 DUP2 PUSH2 0x5B0 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2B3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x238 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x617 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x62E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x637 DUP3 PUSH2 0x600 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x650 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x696 JUMPI PUSH2 0x696 PUSH2 0x657 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x6B8 JUMPI PUSH2 0x6B8 PUSH2 0x657 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x6D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x6E8 PUSH2 0x6E3 DUP4 PUSH2 0x69E JUMP JUMPDEST PUSH2 0x66D JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x707 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x729 JUMPI PUSH2 0x71C DUP2 PUSH2 0x600 JUMP JUMPDEST DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x70B JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x745 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x755 PUSH2 0x6E3 DUP4 PUSH2 0x69E JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x774 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x729 JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x778 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x7A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x7BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7C9 DUP9 DUP4 DUP10 ADD PUSH2 0x6C2 JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x7DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7EB DUP9 DUP4 DUP10 ADD PUSH2 0x734 JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x801 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x80D DUP9 DUP4 DUP10 ADD PUSH2 0x6C2 JUMP JUMPDEST SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x823 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x830 DUP8 DUP3 DUP9 ADD PUSH2 0x734 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x84F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x858 DUP4 PUSH2 0x600 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x89C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCE LOG3 0xA7 DUP13 PUSH26 0x623A70EE287127180C6AC427CCF4C2FB3BB53311B8DD74EEBB90 DUP6 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        282,
        2601
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        282,
        2601
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        282,
        2601
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "5": {
      "fn": null,
      "offset": [
        282,
        2601
      ],
      "op": "CALLVALUE",
      "path": "38"
    },
    "6": {
      "fn": null,
      "offset": [
        282,
        2601
      ],
      "op": "DUP1",
      "path": "38"
    },
    "7": {
      "fn": null,
      "offset": [
        282,
        2601
      ],
      "op": "ISZERO",
      "path": "38"
    },
    "8": {
      "fn": null,
      "offset": [
        282,
        2601
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        282,
        2601
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "12": {
      "fn": null,
      "offset": [
        282,
        2601
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        282,
        2601
      ],
      "op": "DUP1",
      "path": "38"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        282,
        2601
      ],
      "op": "REVERT",
      "path": "38"
    },
    "16": {
      "fn": null,
      "offset": [
        282,
        2601
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "17": {
      "fn": null,
      "offset": [
        282,
        2601
      ],
      "op": "POP",
      "path": "38"
    },
    "18": {
      "fn": null,
      "offset": [
        282,
        2601
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        282,
        2601
      ],
      "op": "CALLDATASIZE",
      "path": "38"
    },
    "21": {
      "fn": null,
      "offset": [
        282,
        2601
      ],
      "op": "LT",
      "path": "38"
    },
    "22": {
      "fn": null,
      "offset": [
        282,
        2601
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x9E"
    },
    "25": {
      "fn": null,
      "offset": [
        282,
        2601
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "26": {
      "fn": null,
      "offset": [
        282,
        2601
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        282,
        2601
      ],
      "op": "CALLDATALOAD",
      "path": "38"
    },
    "29": {
      "fn": null,
      "offset": [
        282,
        2601
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        282,
        2601
      ],
      "op": "SHR",
      "path": "38"
    },
    "32": {
      "fn": null,
      "offset": [
        282,
        2601
      ],
      "op": "DUP1",
      "path": "38"
    },
    "33": {
      "fn": null,
      "offset": [
        282,
        2601
      ],
      "op": "PUSH4",
      "path": "38",
      "value": "0x8CE74426"
    },
    "38": {
      "fn": null,
      "offset": [
        282,
        2601
      ],
      "op": "GT",
      "path": "38"
    },
    "39": {
      "fn": null,
      "offset": [
        282,
        2601
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x66"
    },
    "42": {
      "fn": null,
      "offset": [
        282,
        2601
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "43": {
      "fn": null,
      "offset": [
        282,
        2601
      ],
      "op": "DUP1",
      "path": "38"
    },
    "44": {
      "fn": null,
      "offset": [
        282,
        2601
      ],
      "op": "PUSH4",
      "path": "38",
      "value": "0x8CE74426"
    },
    "49": {
      "fn": null,
      "offset": [
        282,
        2601
      ],
      "op": "EQ",
      "path": "38"
    },
    "50": {
      "fn": null,
      "offset": [
        282,
        2601
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x12C"
    },
    "53": {
      "fn": null,
      "offset": [
        282,
        2601
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "54": {
      "fn": null,
      "offset": [
        282,
        2601
      ],
      "op": "DUP1",
      "path": "38"
    },
    "55": {
      "fn": null,
      "offset": [
        282,
        2601
      ],
      "op": "PUSH4",
      "path": "38",
      "value": "0x8DA5CB5B"
    },
    "60": {
      "fn": null,
      "offset": [
        282,
        2601
      ],
      "op": "EQ",
      "path": "38"
    },
    "61": {
      "fn": null,
      "offset": [
        282,
        2601
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x13F"
    },
    "64": {
      "fn": null,
      "offset": [
        282,
        2601
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "65": {
      "fn": null,
      "offset": [
        282,
        2601
      ],
      "op": "DUP1",
      "path": "38"
    },
    "66": {
      "fn": null,
      "offset": [
        282,
        2601
      ],
      "op": "PUSH4",
      "path": "38",
      "value": "0xD113F04C"
    },
    "71": {
      "fn": null,
      "offset": [
        282,
        2601
      ],
      "op": "EQ",
      "path": "38"
    },
    "72": {
      "fn": null,
      "offset": [
        282,
        2601
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x150"
    },
    "75": {
      "fn": null,
      "offset": [
        282,
        2601
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "76": {
      "fn": null,
      "offset": [
        282,
        2601
      ],
      "op": "DUP1",
      "path": "38"
    },
    "77": {
      "fn": null,
      "offset": [
        282,
        2601
      ],
      "op": "PUSH4",
      "path": "38",
      "value": "0xE20C8548"
    },
    "82": {
      "fn": null,
      "offset": [
        282,
        2601
      ],
      "op": "EQ",
      "path": "38"
    },
    "83": {
      "fn": null,
      "offset": [
        282,
        2601
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x187"
    },
    "86": {
      "fn": null,
      "offset": [
        282,
        2601
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "87": {
      "fn": null,
      "offset": [
        282,
        2601
      ],
      "op": "DUP1",
      "path": "38"
    },
    "88": {
      "fn": null,
      "offset": [
        282,
        2601
      ],
      "op": "PUSH4",
      "path": "38",
      "value": "0xF2FDE38B"
    },
    "93": {
      "fn": null,
      "offset": [
        282,
        2601
      ],
      "op": "EQ",
      "path": "38"
    },
    "94": {
      "fn": null,
      "offset": [
        282,
        2601
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x19A"
    },
    "97": {
      "fn": null,
      "offset": [
        282,
        2601
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "98": {
      "fn": null,
      "offset": [
        282,
        2601
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x0"
    },
    "100": {
      "fn": null,
      "offset": [
        282,
        2601
      ],
      "op": "DUP1",
      "path": "38"
    },
    "101": {
      "fn": null,
      "offset": [
        282,
        2601
      ],
      "op": "REVERT",
      "path": "38"
    },
    "102": {
      "fn": null,
      "offset": [
        282,
        2601
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "103": {
      "fn": null,
      "offset": [
        282,
        2601
      ],
      "op": "DUP1",
      "path": "38"
    },
    "104": {
      "fn": null,
      "offset": [
        282,
        2601
      ],
      "op": "PUSH4",
      "path": "38",
      "value": "0xA9D793D"
    },
    "109": {
      "fn": null,
      "offset": [
        282,
        2601
      ],
      "op": "EQ",
      "path": "38"
    },
    "110": {
      "fn": null,
      "offset": [
        282,
        2601
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0xA3"
    },
    "113": {
      "fn": null,
      "offset": [
        282,
        2601
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "114": {
      "fn": null,
      "offset": [
        282,
        2601
      ],
      "op": "DUP1",
      "path": "38"
    },
    "115": {
      "fn": null,
      "offset": [
        282,
        2601
      ],
      "op": "PUSH4",
      "path": "38",
      "value": "0x30330615"
    },
    "120": {
      "fn": null,
      "offset": [
        282,
        2601
      ],
      "op": "EQ",
      "path": "38"
    },
    "121": {
      "fn": null,
      "offset": [
        282,
        2601
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0xB8"
    },
    "124": {
      "fn": null,
      "offset": [
        282,
        2601
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "125": {
      "fn": null,
      "offset": [
        282,
        2601
      ],
      "op": "DUP1",
      "path": "38"
    },
    "126": {
      "fn": null,
      "offset": [
        282,
        2601
      ],
      "op": "PUSH4",
      "path": "38",
      "value": "0x715018A6"
    },
    "131": {
      "fn": null,
      "offset": [
        282,
        2601
      ],
      "op": "EQ",
      "path": "38"
    },
    "132": {
      "fn": null,
      "offset": [
        282,
        2601
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0xCB"
    },
    "135": {
      "fn": null,
      "offset": [
        282,
        2601
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "136": {
      "fn": null,
      "offset": [
        282,
        2601
      ],
      "op": "DUP1",
      "path": "38"
    },
    "137": {
      "fn": null,
      "offset": [
        282,
        2601
      ],
      "op": "PUSH4",
      "path": "38",
      "value": "0x82E58D51"
    },
    "142": {
      "fn": null,
      "offset": [
        282,
        2601
      ],
      "op": "EQ",
      "path": "38"
    },
    "143": {
      "fn": null,
      "offset": [
        282,
        2601
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0xD3"
    },
    "146": {
      "fn": null,
      "offset": [
        282,
        2601
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "147": {
      "fn": null,
      "offset": [
        282,
        2601
      ],
      "op": "DUP1",
      "path": "38"
    },
    "148": {
      "fn": null,
      "offset": [
        282,
        2601
      ],
      "op": "PUSH4",
      "path": "38",
      "value": "0x888CDA9D"
    },
    "153": {
      "fn": null,
      "offset": [
        282,
        2601
      ],
      "op": "EQ",
      "path": "38"
    },
    "154": {
      "fn": null,
      "offset": [
        282,
        2601
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x119"
    },
    "157": {
      "fn": null,
      "offset": [
        282,
        2601
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "158": {
      "fn": null,
      "offset": [
        282,
        2601
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "159": {
      "fn": null,
      "offset": [
        282,
        2601
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x0"
    },
    "161": {
      "fn": null,
      "offset": [
        282,
        2601
      ],
      "op": "DUP1",
      "path": "38"
    },
    "162": {
      "first_revert": true,
      "fn": null,
      "offset": [
        282,
        2601
      ],
      "op": "REVERT",
      "path": "38"
    },
    "163": {
      "fn": "Referrals.setProtocol",
      "offset": [
        1616,
        1712
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "164": {
      "fn": "Referrals.setProtocol",
      "offset": [
        1616,
        1712
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0xB6"
    },
    "167": {
      "fn": "Referrals.setProtocol",
      "offset": [
        1616,
        1712
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0xB1"
    },
    "170": {
      "fn": "Referrals.setProtocol",
      "offset": [
        1616,
        1712
      ],
      "op": "CALLDATASIZE",
      "path": "38"
    },
    "171": {
      "fn": "Referrals.setProtocol",
      "offset": [
        1616,
        1712
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x4"
    },
    "173": {
      "fn": "Referrals.setProtocol",
      "offset": [
        1616,
        1712
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x61C"
    },
    "176": {
      "fn": "Referrals.setProtocol",
      "jump": "i",
      "offset": [
        1616,
        1712
      ],
      "op": "JUMP",
      "path": "38"
    },
    "177": {
      "fn": "Referrals.setProtocol",
      "offset": [
        1616,
        1712
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "178": {
      "fn": "Referrals.setProtocol",
      "offset": [
        1616,
        1712
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x1AD"
    },
    "181": {
      "fn": "Referrals.setProtocol",
      "jump": "i",
      "offset": [
        1616,
        1712
      ],
      "op": "JUMP",
      "path": "38"
    },
    "182": {
      "fn": "Referrals.setProtocol",
      "offset": [
        1616,
        1712
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "183": {
      "fn": "Referrals.setProtocol",
      "offset": [
        1616,
        1712
      ],
      "op": "STOP",
      "path": "38"
    },
    "184": {
      "fn": "Referrals.createReferralCode",
      "offset": [
        593,
        825
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "185": {
      "fn": "Referrals.createReferralCode",
      "offset": [
        593,
        825
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0xB6"
    },
    "188": {
      "fn": "Referrals.createReferralCode",
      "offset": [
        593,
        825
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0xC6"
    },
    "191": {
      "fn": "Referrals.createReferralCode",
      "offset": [
        593,
        825
      ],
      "op": "CALLDATASIZE",
      "path": "38"
    },
    "192": {
      "fn": "Referrals.createReferralCode",
      "offset": [
        593,
        825
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x4"
    },
    "194": {
      "fn": "Referrals.createReferralCode",
      "offset": [
        593,
        825
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x63E"
    },
    "197": {
      "fn": "Referrals.createReferralCode",
      "jump": "i",
      "offset": [
        593,
        825
      ],
      "op": "JUMP",
      "path": "38"
    },
    "198": {
      "fn": "Referrals.createReferralCode",
      "offset": [
        593,
        825
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "199": {
      "fn": "Referrals.createReferralCode",
      "offset": [
        593,
        825
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x1D7"
    },
    "202": {
      "fn": "Referrals.createReferralCode",
      "jump": "i",
      "offset": [
        593,
        825
      ],
      "op": "JUMP",
      "path": "38"
    },
    "203": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "204": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB6"
    },
    "207": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A1"
    },
    "210": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1831,
        1932
      ],
      "op": "JUMP",
      "path": "0"
    },
    "211": {
      "fn": "Referrals.getReferral",
      "offset": [
        1489,
        1597
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "212": {
      "fn": "Referrals.getReferral",
      "offset": [
        1489,
        1597
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0xFC"
    },
    "215": {
      "fn": "Referrals.getReferral",
      "offset": [
        1489,
        1597
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0xE1"
    },
    "218": {
      "fn": "Referrals.getReferral",
      "offset": [
        1489,
        1597
      ],
      "op": "CALLDATASIZE",
      "path": "38"
    },
    "219": {
      "fn": "Referrals.getReferral",
      "offset": [
        1489,
        1597
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x4"
    },
    "221": {
      "fn": "Referrals.getReferral",
      "offset": [
        1489,
        1597
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x63E"
    },
    "224": {
      "fn": "Referrals.getReferral",
      "jump": "i",
      "offset": [
        1489,
        1597
      ],
      "op": "JUMP",
      "path": "38"
    },
    "225": {
      "fn": "Referrals.getReferral",
      "offset": [
        1489,
        1597
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "226": {
      "fn": "Referrals.getReferral",
      "offset": [
        1548,
        1555
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x0"
    },
    "228": {
      "fn": "Referrals.getReferral",
      "offset": [
        1574,
        1590
      ],
      "op": "SWAP1",
      "path": "38",
      "statement": 0
    },
    "229": {
      "fn": "Referrals.getReferral",
      "offset": [
        1574,
        1590
      ],
      "op": "DUP2",
      "path": "38"
    },
    "230": {
      "fn": "Referrals.getReferral",
      "offset": [
        1574,
        1590
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "231": {
      "fn": "Referrals.getReferral",
      "offset": [
        1574,
        1583
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x2"
    },
    "233": {
      "fn": "Referrals.getReferral",
      "offset": [
        1574,
        1590
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x20"
    },
    "235": {
      "fn": "Referrals.getReferral",
      "offset": [
        1574,
        1590
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "236": {
      "fn": "Referrals.getReferral",
      "offset": [
        1574,
        1590
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "238": {
      "fn": "Referrals.getReferral",
      "offset": [
        1574,
        1590
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "239": {
      "fn": "Referrals.getReferral",
      "offset": [
        1574,
        1590
      ],
      "op": "KECCAK256",
      "path": "38"
    },
    "240": {
      "fn": "Referrals.getReferral",
      "offset": [
        1574,
        1590
      ],
      "op": "SLOAD",
      "path": "38"
    },
    "241": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "243": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "245": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "247": {
      "op": "SHL"
    },
    "248": {
      "op": "SUB"
    },
    "249": {
      "fn": "Referrals.getReferral",
      "offset": [
        1574,
        1590
      ],
      "op": "AND",
      "path": "38"
    },
    "250": {
      "fn": "Referrals.getReferral",
      "offset": [
        1574,
        1590
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "251": {
      "fn": "Referrals.getReferral",
      "offset": [
        1489,
        1597
      ],
      "op": "JUMP",
      "path": "38"
    },
    "252": {
      "fn": "Referrals.getReferral",
      "offset": [
        1489,
        1597
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "253": {
      "fn": "Referrals.getReferral",
      "offset": [
        1489,
        1597
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "255": {
      "fn": "Referrals.getReferral",
      "offset": [
        1489,
        1597
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "256": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "258": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "260": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "262": {
      "op": "SHL"
    },
    "263": {
      "op": "SUB"
    },
    "264": {
      "op": "SWAP1"
    },
    "265": {
      "op": "SWAP2"
    },
    "266": {
      "op": "AND"
    },
    "267": {
      "op": "DUP2"
    },
    "268": {
      "op": "MSTORE"
    },
    "269": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "271": {
      "op": "ADD"
    },
    "272": {
      "fn": "Referrals.getReferral",
      "offset": [
        1489,
        1597
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "273": {
      "fn": "Referrals.getReferral",
      "offset": [
        1489,
        1597
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "275": {
      "fn": "Referrals.getReferral",
      "offset": [
        1489,
        1597
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "276": {
      "fn": "Referrals.getReferral",
      "offset": [
        1489,
        1597
      ],
      "op": "DUP1",
      "path": "38"
    },
    "277": {
      "fn": "Referrals.getReferral",
      "offset": [
        1489,
        1597
      ],
      "op": "SWAP2",
      "path": "38"
    },
    "278": {
      "fn": "Referrals.getReferral",
      "offset": [
        1489,
        1597
      ],
      "op": "SUB",
      "path": "38"
    },
    "279": {
      "fn": "Referrals.getReferral",
      "offset": [
        1489,
        1597
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "280": {
      "fn": "Referrals.getReferral",
      "offset": [
        1489,
        1597
      ],
      "op": "RETURN",
      "path": "38"
    },
    "281": {
      "fn": "Referrals.initRefs",
      "offset": [
        1760,
        2346
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "282": {
      "fn": "Referrals.initRefs",
      "offset": [
        1760,
        2346
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0xB6"
    },
    "285": {
      "fn": "Referrals.initRefs",
      "offset": [
        1760,
        2346
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x127"
    },
    "288": {
      "fn": "Referrals.initRefs",
      "offset": [
        1760,
        2346
      ],
      "op": "CALLDATASIZE",
      "path": "38"
    },
    "289": {
      "fn": "Referrals.initRefs",
      "offset": [
        1760,
        2346
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x4"
    },
    "291": {
      "fn": "Referrals.initRefs",
      "offset": [
        1760,
        2346
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x78F"
    },
    "294": {
      "fn": "Referrals.initRefs",
      "jump": "i",
      "offset": [
        1760,
        2346
      ],
      "op": "JUMP",
      "path": "38"
    },
    "295": {
      "fn": "Referrals.initRefs",
      "offset": [
        1760,
        2346
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "296": {
      "fn": "Referrals.initRefs",
      "offset": [
        1760,
        2346
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x2B5"
    },
    "299": {
      "fn": "Referrals.initRefs",
      "jump": "i",
      "offset": [
        1760,
        2346
      ],
      "op": "JUMP",
      "path": "38"
    },
    "300": {
      "offset": [
        344,
        367
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "301": {
      "fn": "Referrals.initRefs",
      "offset": [
        344,
        367
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x1"
    },
    "303": {
      "fn": "Referrals.initRefs",
      "offset": [
        344,
        367
      ],
      "op": "SLOAD",
      "path": "38"
    },
    "304": {
      "fn": "Referrals.initRefs",
      "offset": [
        344,
        367
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0xFC"
    },
    "307": {
      "fn": "Referrals.initRefs",
      "offset": [
        344,
        367
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "308": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "310": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "312": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "314": {
      "op": "SHL"
    },
    "315": {
      "op": "SUB"
    },
    "316": {
      "offset": [
        344,
        367
      ],
      "op": "AND",
      "path": "38"
    },
    "317": {
      "fn": "Referrals.initRefs",
      "offset": [
        344,
        367
      ],
      "op": "DUP2",
      "path": "38"
    },
    "318": {
      "fn": "Referrals.initRefs",
      "offset": [
        344,
        367
      ],
      "op": "JUMP",
      "path": "38"
    },
    "319": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "320": {
      "fn": "Ownable.owner",
      "offset": [
        1247,
        1254
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "322": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "SLOAD",
      "path": "0",
      "statement": 1
    },
    "323": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "325": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "327": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "329": {
      "op": "SHL"
    },
    "330": {
      "op": "SUB"
    },
    "331": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "AND",
      "path": "0"
    },
    "332": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFC"
    },
    "335": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "JUMP",
      "path": "0"
    },
    "336": {
      "fn": "Referrals.getReferred",
      "offset": [
        1371,
        1483
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "337": {
      "fn": "Referrals.getReferred",
      "offset": [
        1371,
        1483
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x179"
    },
    "340": {
      "fn": "Referrals.getReferred",
      "offset": [
        1371,
        1483
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x15E"
    },
    "343": {
      "fn": "Referrals.getReferred",
      "offset": [
        1371,
        1483
      ],
      "op": "CALLDATASIZE",
      "path": "38"
    },
    "344": {
      "fn": "Referrals.getReferred",
      "offset": [
        1371,
        1483
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x4"
    },
    "346": {
      "fn": "Referrals.getReferred",
      "offset": [
        1371,
        1483
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x61C"
    },
    "349": {
      "fn": "Referrals.getReferred",
      "jump": "i",
      "offset": [
        1371,
        1483
      ],
      "op": "JUMP",
      "path": "38"
    },
    "350": {
      "fn": "Referrals.getReferred",
      "offset": [
        1371,
        1483
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "351": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "353": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "355": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "357": {
      "op": "SHL"
    },
    "358": {
      "op": "SUB"
    },
    "359": {
      "fn": "Referrals.getReferred",
      "offset": [
        1458,
        1476
      ],
      "op": "AND",
      "path": "38",
      "statement": 2
    },
    "360": {
      "fn": "Referrals.getReferred",
      "offset": [
        1432,
        1439
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x0"
    },
    "362": {
      "fn": "Referrals.getReferred",
      "offset": [
        1458,
        1476
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "363": {
      "fn": "Referrals.getReferred",
      "offset": [
        1458,
        1476
      ],
      "op": "DUP2",
      "path": "38"
    },
    "364": {
      "fn": "Referrals.getReferred",
      "offset": [
        1458,
        1476
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "365": {
      "fn": "Referrals.getReferred",
      "offset": [
        1458,
        1467
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x3"
    },
    "367": {
      "fn": "Referrals.getReferred",
      "offset": [
        1458,
        1476
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x20"
    },
    "369": {
      "fn": "Referrals.getReferred",
      "offset": [
        1458,
        1476
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "370": {
      "fn": "Referrals.getReferred",
      "offset": [
        1458,
        1476
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "372": {
      "fn": "Referrals.getReferred",
      "offset": [
        1458,
        1476
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "373": {
      "fn": "Referrals.getReferred",
      "offset": [
        1458,
        1476
      ],
      "op": "KECCAK256",
      "path": "38"
    },
    "374": {
      "fn": "Referrals.getReferred",
      "offset": [
        1458,
        1476
      ],
      "op": "SLOAD",
      "path": "38"
    },
    "375": {
      "fn": "Referrals.getReferred",
      "offset": [
        1458,
        1476
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "376": {
      "fn": "Referrals.getReferred",
      "offset": [
        1371,
        1483
      ],
      "op": "JUMP",
      "path": "38"
    },
    "377": {
      "fn": "Referrals.getReferred",
      "offset": [
        1371,
        1483
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "378": {
      "fn": "Referrals.getReferred",
      "offset": [
        1371,
        1483
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "380": {
      "fn": "Referrals.getReferred",
      "offset": [
        1371,
        1483
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "381": {
      "op": "SWAP1"
    },
    "382": {
      "op": "DUP2"
    },
    "383": {
      "op": "MSTORE"
    },
    "384": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "386": {
      "op": "ADD"
    },
    "387": {
      "fn": "Referrals.getReferred",
      "offset": [
        1371,
        1483
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x110"
    },
    "390": {
      "op": "JUMP"
    },
    "391": {
      "fn": "Referrals.setReferred",
      "offset": [
        997,
        1365
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "392": {
      "fn": "Referrals.setReferred",
      "offset": [
        997,
        1365
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0xB6"
    },
    "395": {
      "fn": "Referrals.setReferred",
      "offset": [
        997,
        1365
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x195"
    },
    "398": {
      "fn": "Referrals.setReferred",
      "offset": [
        997,
        1365
      ],
      "op": "CALLDATASIZE",
      "path": "38"
    },
    "399": {
      "fn": "Referrals.setReferred",
      "offset": [
        997,
        1365
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x4"
    },
    "401": {
      "fn": "Referrals.setReferred",
      "offset": [
        997,
        1365
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x83C"
    },
    "404": {
      "fn": "Referrals.setReferred",
      "jump": "i",
      "offset": [
        997,
        1365
      ],
      "op": "JUMP",
      "path": "38"
    },
    "405": {
      "fn": "Referrals.setReferred",
      "offset": [
        997,
        1365
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "406": {
      "fn": "Referrals.setReferred",
      "offset": [
        997,
        1365
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x3F7"
    },
    "409": {
      "fn": "Referrals.setReferred",
      "jump": "i",
      "offset": [
        997,
        1365
      ],
      "op": "JUMP",
      "path": "38"
    },
    "410": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "411": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB6"
    },
    "414": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A8"
    },
    "417": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "418": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "420": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x61C"
    },
    "423": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMP",
      "path": "0"
    },
    "424": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "425": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4DD"
    },
    "428": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMP",
      "path": "0"
    },
    "429": {
      "fn": "Referrals.setProtocol",
      "offset": [
        1616,
        1712
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "430": {
      "offset": [
        1094,
        1107
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B5"
    },
    "433": {
      "offset": [
        1094,
        1105
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x556"
    },
    "436": {
      "jump": "i",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMP",
      "path": "0"
    },
    "437": {
      "fn": "Referrals.setProtocol",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "438": {
      "fn": "Referrals.setProtocol",
      "offset": [
        1685,
        1693
      ],
      "op": "PUSH1",
      "path": "38",
      "statement": 3,
      "value": "0x1"
    },
    "440": {
      "fn": "Referrals.setProtocol",
      "offset": [
        1685,
        1705
      ],
      "op": "DUP1",
      "path": "38"
    },
    "441": {
      "fn": "Referrals.setProtocol",
      "offset": [
        1685,
        1705
      ],
      "op": "SLOAD",
      "path": "38"
    },
    "442": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "444": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "446": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "448": {
      "op": "SHL"
    },
    "449": {
      "op": "SUB"
    },
    "450": {
      "op": "NOT"
    },
    "451": {
      "fn": "Referrals.setProtocol",
      "offset": [
        1685,
        1705
      ],
      "op": "AND",
      "path": "38"
    },
    "452": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "454": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "456": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "458": {
      "op": "SHL"
    },
    "459": {
      "op": "SUB"
    },
    "460": {
      "fn": "Referrals.setProtocol",
      "offset": [
        1685,
        1705
      ],
      "op": "SWAP3",
      "path": "38"
    },
    "461": {
      "fn": "Referrals.setProtocol",
      "offset": [
        1685,
        1705
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "462": {
      "fn": "Referrals.setProtocol",
      "offset": [
        1685,
        1705
      ],
      "op": "SWAP3",
      "path": "38"
    },
    "463": {
      "fn": "Referrals.setProtocol",
      "offset": [
        1685,
        1705
      ],
      "op": "AND",
      "path": "38"
    },
    "464": {
      "fn": "Referrals.setProtocol",
      "offset": [
        1685,
        1705
      ],
      "op": "SWAP2",
      "path": "38"
    },
    "465": {
      "fn": "Referrals.setProtocol",
      "offset": [
        1685,
        1705
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "466": {
      "fn": "Referrals.setProtocol",
      "offset": [
        1685,
        1705
      ],
      "op": "SWAP2",
      "path": "38"
    },
    "467": {
      "fn": "Referrals.setProtocol",
      "offset": [
        1685,
        1705
      ],
      "op": "OR",
      "path": "38"
    },
    "468": {
      "fn": "Referrals.setProtocol",
      "offset": [
        1685,
        1705
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "469": {
      "fn": "Referrals.setProtocol",
      "offset": [
        1685,
        1705
      ],
      "op": "SSTORE",
      "path": "38"
    },
    "470": {
      "fn": "Referrals.setProtocol",
      "jump": "o",
      "offset": [
        1616,
        1712
      ],
      "op": "JUMP",
      "path": "38"
    },
    "471": {
      "fn": "Referrals.createReferralCode",
      "offset": [
        593,
        825
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "472": {
      "fn": "Referrals.createReferralCode",
      "offset": [
        691,
        692
      ],
      "op": "PUSH1",
      "path": "38",
      "statement": 4,
      "value": "0x0"
    },
    "474": {
      "fn": "Referrals.createReferralCode",
      "offset": [
        663,
        679
      ],
      "op": "DUP2",
      "path": "38"
    },
    "475": {
      "fn": "Referrals.createReferralCode",
      "offset": [
        663,
        679
      ],
      "op": "DUP2",
      "path": "38"
    },
    "476": {
      "fn": "Referrals.createReferralCode",
      "offset": [
        663,
        679
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "477": {
      "fn": "Referrals.createReferralCode",
      "offset": [
        663,
        672
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x2"
    },
    "479": {
      "fn": "Referrals.createReferralCode",
      "offset": [
        663,
        679
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x20"
    },
    "481": {
      "fn": "Referrals.createReferralCode",
      "offset": [
        663,
        679
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "482": {
      "fn": "Referrals.createReferralCode",
      "offset": [
        663,
        679
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "484": {
      "fn": "Referrals.createReferralCode",
      "offset": [
        663,
        679
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "485": {
      "fn": "Referrals.createReferralCode",
      "offset": [
        663,
        679
      ],
      "op": "KECCAK256",
      "path": "38"
    },
    "486": {
      "fn": "Referrals.createReferralCode",
      "offset": [
        663,
        679
      ],
      "op": "SLOAD",
      "path": "38"
    },
    "487": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "489": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "491": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "493": {
      "op": "SHL"
    },
    "494": {
      "op": "SUB"
    },
    "495": {
      "fn": "Referrals.createReferralCode",
      "offset": [
        663,
        679
      ],
      "op": "AND",
      "path": "38"
    },
    "496": {
      "branch": 24,
      "fn": "Referrals.createReferralCode",
      "offset": [
        663,
        693
      ],
      "op": "ISZERO",
      "path": "38"
    },
    "497": {
      "fn": "Referrals.createReferralCode",
      "offset": [
        655,
        726
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x241"
    },
    "500": {
      "branch": 24,
      "fn": "Referrals.createReferralCode",
      "offset": [
        655,
        726
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "501": {
      "fn": "Referrals.createReferralCode",
      "offset": [
        655,
        726
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "503": {
      "fn": "Referrals.createReferralCode",
      "offset": [
        655,
        726
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "504": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "508": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "510": {
      "op": "SHL"
    },
    "511": {
      "fn": "Referrals.createReferralCode",
      "offset": [
        655,
        726
      ],
      "op": "DUP2",
      "path": "38"
    },
    "512": {
      "fn": "Referrals.createReferralCode",
      "offset": [
        655,
        726
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "513": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "515": {
      "fn": "Referrals.createReferralCode",
      "offset": [
        655,
        726
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x4"
    },
    "517": {
      "fn": "Referrals.createReferralCode",
      "offset": [
        655,
        726
      ],
      "op": "DUP3",
      "path": "38"
    },
    "518": {
      "fn": "Referrals.createReferralCode",
      "offset": [
        655,
        726
      ],
      "op": "ADD",
      "path": "38"
    },
    "519": {
      "op": "MSTORE"
    },
    "520": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "522": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "524": {
      "op": "DUP3"
    },
    "525": {
      "op": "ADD"
    },
    "526": {
      "op": "MSTORE"
    },
    "527": {
      "op": "PUSH32",
      "value": "0x526566657272616C20636F646520616C72656164792065786973747300000000"
    },
    "560": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "562": {
      "op": "DUP3"
    },
    "563": {
      "op": "ADD"
    },
    "564": {
      "op": "MSTORE"
    },
    "565": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "567": {
      "op": "ADD"
    },
    "568": {
      "fn": "Referrals.createReferralCode",
      "offset": [
        655,
        726
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "569": {
      "fn": "Referrals.createReferralCode",
      "offset": [
        655,
        726
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "571": {
      "fn": "Referrals.createReferralCode",
      "offset": [
        655,
        726
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "572": {
      "fn": "Referrals.createReferralCode",
      "offset": [
        655,
        726
      ],
      "op": "DUP1",
      "path": "38"
    },
    "573": {
      "fn": "Referrals.createReferralCode",
      "offset": [
        655,
        726
      ],
      "op": "SWAP2",
      "path": "38"
    },
    "574": {
      "fn": "Referrals.createReferralCode",
      "offset": [
        655,
        726
      ],
      "op": "SUB",
      "path": "38"
    },
    "575": {
      "fn": "Referrals.createReferralCode",
      "offset": [
        655,
        726
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "576": {
      "fn": "Referrals.createReferralCode",
      "offset": [
        655,
        726
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "38"
    },
    "577": {
      "fn": "Referrals.createReferralCode",
      "offset": [
        655,
        726
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "578": {
      "fn": "Referrals.createReferralCode",
      "offset": [
        736,
        752
      ],
      "op": "PUSH1",
      "path": "38",
      "statement": 5,
      "value": "0x0"
    },
    "580": {
      "fn": "Referrals.createReferralCode",
      "offset": [
        736,
        752
      ],
      "op": "DUP2",
      "path": "38"
    },
    "581": {
      "fn": "Referrals.createReferralCode",
      "offset": [
        736,
        752
      ],
      "op": "DUP2",
      "path": "38"
    },
    "582": {
      "fn": "Referrals.createReferralCode",
      "offset": [
        736,
        752
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "583": {
      "fn": "Referrals.createReferralCode",
      "offset": [
        736,
        745
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x2"
    },
    "585": {
      "fn": "Referrals.createReferralCode",
      "offset": [
        736,
        752
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x20"
    },
    "587": {
      "fn": "Referrals.createReferralCode",
      "offset": [
        736,
        752
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "588": {
      "fn": "Referrals.createReferralCode",
      "offset": [
        736,
        752
      ],
      "op": "DUP2",
      "path": "38"
    },
    "589": {
      "fn": "Referrals.createReferralCode",
      "offset": [
        736,
        752
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "590": {
      "fn": "Referrals.createReferralCode",
      "offset": [
        736,
        752
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "592": {
      "fn": "Referrals.createReferralCode",
      "offset": [
        736,
        752
      ],
      "op": "SWAP2",
      "path": "38"
    },
    "593": {
      "fn": "Referrals.createReferralCode",
      "offset": [
        736,
        752
      ],
      "op": "DUP3",
      "path": "38"
    },
    "594": {
      "fn": "Referrals.createReferralCode",
      "offset": [
        736,
        752
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "595": {
      "fn": "Referrals.createReferralCode",
      "offset": [
        736,
        752
      ],
      "op": "KECCAK256",
      "path": "38"
    },
    "596": {
      "fn": "Referrals.createReferralCode",
      "offset": [
        736,
        767
      ],
      "op": "DUP1",
      "path": "38"
    },
    "597": {
      "fn": "Referrals.createReferralCode",
      "offset": [
        736,
        767
      ],
      "op": "SLOAD",
      "path": "38"
    },
    "598": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "600": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "602": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "604": {
      "op": "SHL"
    },
    "605": {
      "op": "SUB"
    },
    "606": {
      "op": "NOT"
    },
    "607": {
      "fn": "Referrals.createReferralCode",
      "offset": [
        736,
        767
      ],
      "op": "AND",
      "path": "38"
    },
    "608": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "13",
      "statement": 6
    },
    "609": {
      "fn": "Referrals.createReferralCode",
      "offset": [
        736,
        767
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "610": {
      "fn": "Referrals.createReferralCode",
      "offset": [
        736,
        767
      ],
      "op": "DUP2",
      "path": "38"
    },
    "611": {
      "fn": "Referrals.createReferralCode",
      "offset": [
        736,
        767
      ],
      "op": "OR",
      "path": "38"
    },
    "612": {
      "fn": "Referrals.createReferralCode",
      "offset": [
        736,
        767
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "613": {
      "fn": "Referrals.createReferralCode",
      "offset": [
        736,
        767
      ],
      "op": "SWAP2",
      "path": "38"
    },
    "614": {
      "fn": "Referrals.createReferralCode",
      "offset": [
        736,
        767
      ],
      "op": "SSTORE",
      "path": "38"
    },
    "615": {
      "fn": "Referrals.createReferralCode",
      "offset": [
        782,
        818
      ],
      "op": "DUP3",
      "path": "38",
      "statement": 7
    },
    "616": {
      "fn": "Referrals.createReferralCode",
      "offset": [
        782,
        818
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "617": {
      "op": "SWAP1"
    },
    "618": {
      "op": "DUP2"
    },
    "619": {
      "op": "MSTORE"
    },
    "620": {
      "op": "SWAP1"
    },
    "621": {
      "op": "DUP2"
    },
    "622": {
      "op": "ADD"
    },
    "623": {
      "op": "DUP4"
    },
    "624": {
      "op": "SWAP1"
    },
    "625": {
      "op": "MSTORE"
    },
    "626": {
      "fn": "Referrals.createReferralCode",
      "offset": [
        782,
        818
      ],
      "op": "DUP2",
      "path": "38"
    },
    "627": {
      "fn": "Referrals.createReferralCode",
      "offset": [
        782,
        818
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "628": {
      "fn": "Referrals.createReferralCode",
      "offset": [
        782,
        818
      ],
      "op": "PUSH32",
      "path": "38",
      "value": "0x5A56E3C54CB51AFDA5C8FFE89DAE0ADF7D78E99319EAEADD2539E2EC00CDF043"
    },
    "661": {
      "fn": "Referrals.createReferralCode",
      "offset": [
        782,
        818
      ],
      "op": "SWAP3",
      "path": "38"
    },
    "662": {
      "fn": "Referrals.createReferralCode",
      "offset": [
        782,
        818
      ],
      "op": "SWAP2",
      "path": "38"
    },
    "663": {
      "fn": "Referrals.createReferralCode",
      "offset": [
        782,
        818
      ],
      "op": "DUP2",
      "path": "38"
    },
    "664": {
      "fn": "Referrals.createReferralCode",
      "offset": [
        782,
        818
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "665": {
      "fn": "Referrals.createReferralCode",
      "offset": [
        782,
        818
      ],
      "op": "SUB",
      "path": "38"
    },
    "666": {
      "fn": "Referrals.createReferralCode",
      "offset": [
        782,
        818
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "667": {
      "fn": "Referrals.createReferralCode",
      "offset": [
        782,
        818
      ],
      "op": "SWAP2",
      "path": "38"
    },
    "668": {
      "fn": "Referrals.createReferralCode",
      "offset": [
        782,
        818
      ],
      "op": "ADD",
      "path": "38"
    },
    "669": {
      "fn": "Referrals.createReferralCode",
      "offset": [
        782,
        818
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "670": {
      "fn": "Referrals.createReferralCode",
      "offset": [
        782,
        818
      ],
      "op": "LOG1",
      "path": "38"
    },
    "671": {
      "fn": "Referrals.createReferralCode",
      "offset": [
        593,
        825
      ],
      "op": "POP",
      "path": "38"
    },
    "672": {
      "fn": "Referrals.createReferralCode",
      "jump": "o",
      "offset": [
        593,
        825
      ],
      "op": "JUMP",
      "path": "38"
    },
    "673": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "674": {
      "offset": [
        1094,
        1107
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A9"
    },
    "677": {
      "offset": [
        1094,
        1105
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x556"
    },
    "680": {
      "jump": "i",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMP",
      "path": "0"
    },
    "681": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "682": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1895,
        1925
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 8,
      "value": "0x2B3"
    },
    "685": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1922,
        1923
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "687": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1895,
        1913
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5B0"
    },
    "690": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1895,
        1925
      ],
      "op": "JUMP",
      "path": "0"
    },
    "691": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1895,
        1925
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "692": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1831,
        1932
      ],
      "op": "JUMP",
      "path": "0"
    },
    "693": {
      "fn": "Referrals.initRefs",
      "offset": [
        1760,
        2346
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "694": {
      "offset": [
        1094,
        1107
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2BD"
    },
    "697": {
      "offset": [
        1094,
        1105
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x556"
    },
    "700": {
      "jump": "i",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMP",
      "path": "0"
    },
    "701": {
      "fn": "Referrals.initRefs",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "702": {
      "fn": "Referrals.initRefs",
      "offset": [
        1973,
        1979
      ],
      "op": "PUSH1",
      "path": "38",
      "statement": 9,
      "value": "0x0"
    },
    "704": {
      "fn": "Referrals.initRefs",
      "offset": [
        1973,
        1979
      ],
      "op": "SLOAD",
      "path": "38"
    },
    "705": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "707": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "709": {
      "op": "SHL"
    },
    "710": {
      "fn": "Referrals.initRefs",
      "offset": [
        1973,
        1979
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "711": {
      "fn": "Referrals.initRefs",
      "offset": [
        1973,
        1979
      ],
      "op": "DIV",
      "path": "38"
    },
    "712": {
      "fn": "Referrals.initRefs",
      "offset": [
        1973,
        1979
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0xFF"
    },
    "714": {
      "fn": "Referrals.initRefs",
      "offset": [
        1973,
        1979
      ],
      "op": "AND",
      "path": "38"
    },
    "715": {
      "branch": 25,
      "fn": "Referrals.initRefs",
      "offset": [
        1972,
        1979
      ],
      "op": "ISZERO",
      "path": "38"
    },
    "716": {
      "fn": "Referrals.initRefs",
      "offset": [
        1964,
        1980
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x2D4"
    },
    "719": {
      "branch": 25,
      "fn": "Referrals.initRefs",
      "offset": [
        1964,
        1980
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "720": {
      "fn": "Referrals.initRefs",
      "offset": [
        1964,
        1980
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x0"
    },
    "722": {
      "fn": "Referrals.initRefs",
      "offset": [
        1964,
        1980
      ],
      "op": "DUP1",
      "path": "38"
    },
    "723": {
      "fn": "Referrals.initRefs",
      "offset": [
        1964,
        1980
      ],
      "op": "REVERT",
      "path": "38"
    },
    "724": {
      "fn": "Referrals.initRefs",
      "offset": [
        1964,
        1980
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "725": {
      "fn": "Referrals.initRefs",
      "offset": [
        1990,
        1996
      ],
      "op": "PUSH1",
      "path": "38",
      "statement": 10,
      "value": "0x0"
    },
    "727": {
      "fn": "Referrals.initRefs",
      "offset": [
        1990,
        2003
      ],
      "op": "DUP1",
      "path": "38"
    },
    "728": {
      "fn": "Referrals.initRefs",
      "offset": [
        1990,
        2003
      ],
      "op": "SLOAD",
      "path": "38"
    },
    "729": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "731": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "733": {
      "op": "SHL"
    },
    "734": {
      "op": "NOT"
    },
    "735": {
      "fn": "Referrals.initRefs",
      "offset": [
        1990,
        2003
      ],
      "op": "AND",
      "path": "38"
    },
    "736": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "738": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "740": {
      "op": "SHL"
    },
    "741": {
      "fn": "Referrals.initRefs",
      "offset": [
        1990,
        2003
      ],
      "op": "OR",
      "path": "38"
    },
    "742": {
      "fn": "Referrals.initRefs",
      "offset": [
        1990,
        2003
      ],
      "op": "DUP2",
      "path": "38"
    },
    "743": {
      "fn": "Referrals.initRefs",
      "offset": [
        1990,
        2003
      ],
      "op": "SSTORE",
      "path": "38"
    },
    "744": {
      "fn": "Referrals.initRefs",
      "offset": [
        2036,
        2054
      ],
      "op": "DUP5",
      "path": "38"
    },
    "745": {
      "fn": "Referrals.initRefs",
      "offset": [
        2036,
        2054
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "746": {
      "fn": "Referrals.initRefs",
      "offset": [
        2086,
        2103
      ],
      "op": "DUP4",
      "path": "38"
    },
    "747": {
      "fn": "Referrals.initRefs",
      "offset": [
        2086,
        2103
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "748": {
      "fn": "Referrals.initRefs",
      "offset": [
        2036,
        2054
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "749": {
      "fn": "Referrals.initRefs",
      "offset": [
        2036,
        2054
      ],
      "op": "SWAP2",
      "path": "38"
    },
    "750": {
      "fn": "Referrals.initRefs",
      "offset": [
        2113,
        2223
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "751": {
      "fn": "Referrals.initRefs",
      "offset": [
        2137,
        2149
      ],
      "op": "DUP3",
      "path": "38"
    },
    "752": {
      "fn": "Referrals.initRefs",
      "offset": [
        2133,
        2134
      ],
      "op": "DUP2",
      "path": "38"
    },
    "753": {
      "fn": "Referrals.initRefs",
      "offset": [
        2133,
        2149
      ],
      "op": "LT",
      "path": "38"
    },
    "754": {
      "fn": "Referrals.initRefs",
      "offset": [
        2113,
        2223
      ],
      "op": "ISZERO",
      "path": "38"
    },
    "755": {
      "fn": "Referrals.initRefs",
      "offset": [
        2113,
        2223
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x373"
    },
    "758": {
      "fn": "Referrals.initRefs",
      "offset": [
        2113,
        2223
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "759": {
      "fn": "Referrals.initRefs",
      "offset": [
        2198,
        2209
      ],
      "op": "DUP7",
      "path": "38",
      "statement": 11
    },
    "760": {
      "fn": "Referrals.initRefs",
      "offset": [
        2210,
        2211
      ],
      "op": "DUP2",
      "path": "38"
    },
    "761": {
      "fn": "Referrals.initRefs",
      "offset": [
        2198,
        2212
      ],
      "op": "DUP2",
      "path": "38"
    },
    "762": {
      "fn": "Referrals.initRefs",
      "offset": [
        2198,
        2212
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "763": {
      "fn": "Referrals.initRefs",
      "offset": [
        2198,
        2212
      ],
      "op": "DUP2",
      "path": "38"
    },
    "764": {
      "fn": "Referrals.initRefs",
      "offset": [
        2198,
        2212
      ],
      "op": "LT",
      "path": "38"
    },
    "765": {
      "fn": "Referrals.initRefs",
      "offset": [
        2198,
        2212
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x308"
    },
    "768": {
      "fn": "Referrals.initRefs",
      "offset": [
        2198,
        2212
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "769": {
      "fn": "Referrals.initRefs",
      "offset": [
        2198,
        2212
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x308"
    },
    "772": {
      "fn": "Referrals.initRefs",
      "offset": [
        2198,
        2212
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x866"
    },
    "775": {
      "fn": "Referrals.initRefs",
      "jump": "i",
      "offset": [
        2198,
        2212
      ],
      "op": "JUMP",
      "path": "38"
    },
    "776": {
      "fn": "Referrals.initRefs",
      "offset": [
        2198,
        2212
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "777": {
      "fn": "Referrals.initRefs",
      "offset": [
        2198,
        2212
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x20"
    },
    "779": {
      "fn": "Referrals.initRefs",
      "offset": [
        2198,
        2212
      ],
      "op": "MUL",
      "path": "38"
    },
    "780": {
      "fn": "Referrals.initRefs",
      "offset": [
        2198,
        2212
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x20"
    },
    "782": {
      "fn": "Referrals.initRefs",
      "offset": [
        2198,
        2212
      ],
      "op": "ADD",
      "path": "38"
    },
    "783": {
      "fn": "Referrals.initRefs",
      "offset": [
        2198,
        2212
      ],
      "op": "ADD",
      "path": "38"
    },
    "784": {
      "fn": "Referrals.initRefs",
      "offset": [
        2198,
        2212
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "785": {
      "fn": "Referrals.initRefs",
      "offset": [
        2170,
        2179
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x2"
    },
    "787": {
      "fn": "Referrals.initRefs",
      "offset": [
        2170,
        2195
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x0"
    },
    "789": {
      "fn": "Referrals.initRefs",
      "offset": [
        2180,
        2191
      ],
      "op": "DUP9",
      "path": "38"
    },
    "790": {
      "fn": "Referrals.initRefs",
      "offset": [
        2192,
        2193
      ],
      "op": "DUP5",
      "path": "38"
    },
    "791": {
      "fn": "Referrals.initRefs",
      "offset": [
        2180,
        2194
      ],
      "op": "DUP2",
      "path": "38"
    },
    "792": {
      "fn": "Referrals.initRefs",
      "offset": [
        2180,
        2194
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "793": {
      "fn": "Referrals.initRefs",
      "offset": [
        2180,
        2194
      ],
      "op": "DUP2",
      "path": "38"
    },
    "794": {
      "fn": "Referrals.initRefs",
      "offset": [
        2180,
        2194
      ],
      "op": "LT",
      "path": "38"
    },
    "795": {
      "fn": "Referrals.initRefs",
      "offset": [
        2180,
        2194
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x326"
    },
    "798": {
      "fn": "Referrals.initRefs",
      "offset": [
        2180,
        2194
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "799": {
      "fn": "Referrals.initRefs",
      "offset": [
        2180,
        2194
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x326"
    },
    "802": {
      "fn": "Referrals.initRefs",
      "offset": [
        2180,
        2194
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x866"
    },
    "805": {
      "fn": "Referrals.initRefs",
      "jump": "i",
      "offset": [
        2180,
        2194
      ],
      "op": "JUMP",
      "path": "38"
    },
    "806": {
      "fn": "Referrals.initRefs",
      "offset": [
        2180,
        2194
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "807": {
      "fn": "Referrals.initRefs",
      "offset": [
        2180,
        2194
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x20"
    },
    "809": {
      "fn": "Referrals.initRefs",
      "offset": [
        2180,
        2194
      ],
      "op": "MUL",
      "path": "38"
    },
    "810": {
      "fn": "Referrals.initRefs",
      "offset": [
        2180,
        2194
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x20"
    },
    "812": {
      "fn": "Referrals.initRefs",
      "offset": [
        2180,
        2194
      ],
      "op": "ADD",
      "path": "38"
    },
    "813": {
      "fn": "Referrals.initRefs",
      "offset": [
        2180,
        2194
      ],
      "op": "ADD",
      "path": "38"
    },
    "814": {
      "fn": "Referrals.initRefs",
      "offset": [
        2180,
        2194
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "815": {
      "fn": "Referrals.initRefs",
      "offset": [
        2170,
        2195
      ],
      "op": "DUP2",
      "path": "38"
    },
    "816": {
      "fn": "Referrals.initRefs",
      "offset": [
        2170,
        2195
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "817": {
      "fn": "Referrals.initRefs",
      "offset": [
        2170,
        2195
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x20"
    },
    "819": {
      "fn": "Referrals.initRefs",
      "offset": [
        2170,
        2195
      ],
      "op": "ADD",
      "path": "38"
    },
    "820": {
      "fn": "Referrals.initRefs",
      "offset": [
        2170,
        2195
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "821": {
      "fn": "Referrals.initRefs",
      "offset": [
        2170,
        2195
      ],
      "op": "DUP2",
      "path": "38"
    },
    "822": {
      "fn": "Referrals.initRefs",
      "offset": [
        2170,
        2195
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "823": {
      "fn": "Referrals.initRefs",
      "offset": [
        2170,
        2195
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x20"
    },
    "825": {
      "fn": "Referrals.initRefs",
      "offset": [
        2170,
        2195
      ],
      "op": "ADD",
      "path": "38"
    },
    "826": {
      "fn": "Referrals.initRefs",
      "offset": [
        2170,
        2195
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x0"
    },
    "828": {
      "fn": "Referrals.initRefs",
      "offset": [
        2170,
        2195
      ],
      "op": "KECCAK256",
      "path": "38"
    },
    "829": {
      "fn": "Referrals.initRefs",
      "offset": [
        2170,
        2195
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x0"
    },
    "831": {
      "fn": "Referrals.initRefs",
      "offset": [
        2170,
        2212
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x100"
    },
    "834": {
      "fn": "Referrals.initRefs",
      "offset": [
        2170,
        2212
      ],
      "op": "EXP",
      "path": "38"
    },
    "835": {
      "fn": "Referrals.initRefs",
      "offset": [
        2170,
        2212
      ],
      "op": "DUP2",
      "path": "38"
    },
    "836": {
      "fn": "Referrals.initRefs",
      "offset": [
        2170,
        2212
      ],
      "op": "SLOAD",
      "path": "38"
    },
    "837": {
      "fn": "Referrals.initRefs",
      "offset": [
        2170,
        2212
      ],
      "op": "DUP2",
      "path": "38"
    },
    "838": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "840": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "842": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "844": {
      "op": "SHL"
    },
    "845": {
      "op": "SUB"
    },
    "846": {
      "fn": "Referrals.initRefs",
      "offset": [
        2170,
        2212
      ],
      "op": "MUL",
      "path": "38"
    },
    "847": {
      "fn": "Referrals.initRefs",
      "offset": [
        2170,
        2212
      ],
      "op": "NOT",
      "path": "38"
    },
    "848": {
      "fn": "Referrals.initRefs",
      "offset": [
        2170,
        2212
      ],
      "op": "AND",
      "path": "38"
    },
    "849": {
      "fn": "Referrals.initRefs",
      "offset": [
        2170,
        2212
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "850": {
      "fn": "Referrals.initRefs",
      "offset": [
        2170,
        2212
      ],
      "op": "DUP4",
      "path": "38"
    },
    "851": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "853": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "855": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "857": {
      "op": "SHL"
    },
    "858": {
      "op": "SUB"
    },
    "859": {
      "fn": "Referrals.initRefs",
      "offset": [
        2170,
        2212
      ],
      "op": "AND",
      "path": "38"
    },
    "860": {
      "fn": "Referrals.initRefs",
      "offset": [
        2170,
        2212
      ],
      "op": "MUL",
      "path": "38"
    },
    "861": {
      "fn": "Referrals.initRefs",
      "offset": [
        2170,
        2212
      ],
      "op": "OR",
      "path": "38"
    },
    "862": {
      "fn": "Referrals.initRefs",
      "offset": [
        2170,
        2212
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "863": {
      "fn": "Referrals.initRefs",
      "offset": [
        2170,
        2212
      ],
      "op": "SSTORE",
      "path": "38"
    },
    "864": {
      "fn": "Referrals.initRefs",
      "offset": [
        2170,
        2212
      ],
      "op": "POP",
      "path": "38"
    },
    "865": {
      "fn": "Referrals.initRefs",
      "offset": [
        2151,
        2154
      ],
      "op": "DUP1",
      "path": "38",
      "statement": 12
    },
    "866": {
      "fn": "Referrals.initRefs",
      "offset": [
        2151,
        2154
      ],
      "op": "DUP1",
      "path": "38"
    },
    "867": {
      "fn": "Referrals.initRefs",
      "offset": [
        2151,
        2154
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x36B"
    },
    "870": {
      "fn": "Referrals.initRefs",
      "offset": [
        2151,
        2154
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "871": {
      "fn": "Referrals.initRefs",
      "offset": [
        2151,
        2154
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x87C"
    },
    "874": {
      "fn": "Referrals.initRefs",
      "jump": "i",
      "offset": [
        2151,
        2154
      ],
      "op": "JUMP",
      "path": "38"
    },
    "875": {
      "fn": "Referrals.initRefs",
      "offset": [
        2151,
        2154
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "876": {
      "fn": "Referrals.initRefs",
      "offset": [
        2151,
        2154
      ],
      "op": "SWAP2",
      "path": "38"
    },
    "877": {
      "fn": "Referrals.initRefs",
      "offset": [
        2151,
        2154
      ],
      "op": "POP",
      "path": "38"
    },
    "878": {
      "fn": "Referrals.initRefs",
      "offset": [
        2151,
        2154
      ],
      "op": "POP",
      "path": "38"
    },
    "879": {
      "fn": "Referrals.initRefs",
      "offset": [
        2113,
        2223
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x2EE"
    },
    "882": {
      "fn": "Referrals.initRefs",
      "offset": [
        2113,
        2223
      ],
      "op": "JUMP",
      "path": "38"
    },
    "883": {
      "fn": "Referrals.initRefs",
      "offset": [
        2113,
        2223
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "884": {
      "fn": "Referrals.initRefs",
      "offset": [
        2113,
        2223
      ],
      "op": "POP",
      "path": "38"
    },
    "885": {
      "fn": "Referrals.initRefs",
      "offset": [
        2237,
        2246
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x0"
    },
    "887": {
      "fn": "Referrals.initRefs",
      "offset": [
        2232,
        2340
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "888": {
      "fn": "Referrals.initRefs",
      "offset": [
        2256,
        2267
      ],
      "op": "DUP2",
      "path": "38"
    },
    "889": {
      "fn": "Referrals.initRefs",
      "offset": [
        2252,
        2253
      ],
      "op": "DUP2",
      "path": "38"
    },
    "890": {
      "fn": "Referrals.initRefs",
      "offset": [
        2252,
        2267
      ],
      "op": "LT",
      "path": "38"
    },
    "891": {
      "fn": "Referrals.initRefs",
      "offset": [
        2232,
        2340
      ],
      "op": "ISZERO",
      "path": "38"
    },
    "892": {
      "fn": "Referrals.initRefs",
      "offset": [
        2232,
        2340
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x3EE"
    },
    "895": {
      "fn": "Referrals.initRefs",
      "offset": [
        2232,
        2340
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "896": {
      "fn": "Referrals.initRefs",
      "offset": [
        2315,
        2326
      ],
      "op": "DUP4",
      "path": "38",
      "statement": 13
    },
    "897": {
      "fn": "Referrals.initRefs",
      "offset": [
        2327,
        2328
      ],
      "op": "DUP2",
      "path": "38"
    },
    "898": {
      "fn": "Referrals.initRefs",
      "offset": [
        2315,
        2329
      ],
      "op": "DUP2",
      "path": "38"
    },
    "899": {
      "fn": "Referrals.initRefs",
      "offset": [
        2315,
        2329
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "900": {
      "fn": "Referrals.initRefs",
      "offset": [
        2315,
        2329
      ],
      "op": "DUP2",
      "path": "38"
    },
    "901": {
      "fn": "Referrals.initRefs",
      "offset": [
        2315,
        2329
      ],
      "op": "LT",
      "path": "38"
    },
    "902": {
      "fn": "Referrals.initRefs",
      "offset": [
        2315,
        2329
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x391"
    },
    "905": {
      "fn": "Referrals.initRefs",
      "offset": [
        2315,
        2329
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "906": {
      "fn": "Referrals.initRefs",
      "offset": [
        2315,
        2329
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x391"
    },
    "909": {
      "fn": "Referrals.initRefs",
      "offset": [
        2315,
        2329
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x866"
    },
    "912": {
      "fn": "Referrals.initRefs",
      "jump": "i",
      "offset": [
        2315,
        2329
      ],
      "op": "JUMP",
      "path": "38"
    },
    "913": {
      "fn": "Referrals.initRefs",
      "offset": [
        2315,
        2329
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "914": {
      "fn": "Referrals.initRefs",
      "offset": [
        2315,
        2329
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x20"
    },
    "916": {
      "fn": "Referrals.initRefs",
      "offset": [
        2315,
        2329
      ],
      "op": "MUL",
      "path": "38"
    },
    "917": {
      "fn": "Referrals.initRefs",
      "offset": [
        2315,
        2329
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x20"
    },
    "919": {
      "fn": "Referrals.initRefs",
      "offset": [
        2315,
        2329
      ],
      "op": "ADD",
      "path": "38"
    },
    "920": {
      "fn": "Referrals.initRefs",
      "offset": [
        2315,
        2329
      ],
      "op": "ADD",
      "path": "38"
    },
    "921": {
      "fn": "Referrals.initRefs",
      "offset": [
        2315,
        2329
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "922": {
      "fn": "Referrals.initRefs",
      "offset": [
        2288,
        2297
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x3"
    },
    "924": {
      "fn": "Referrals.initRefs",
      "offset": [
        2288,
        2312
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x0"
    },
    "926": {
      "fn": "Referrals.initRefs",
      "offset": [
        2298,
        2308
      ],
      "op": "DUP8",
      "path": "38"
    },
    "927": {
      "fn": "Referrals.initRefs",
      "offset": [
        2309,
        2310
      ],
      "op": "DUP5",
      "path": "38"
    },
    "928": {
      "fn": "Referrals.initRefs",
      "offset": [
        2298,
        2311
      ],
      "op": "DUP2",
      "path": "38"
    },
    "929": {
      "fn": "Referrals.initRefs",
      "offset": [
        2298,
        2311
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "930": {
      "fn": "Referrals.initRefs",
      "offset": [
        2298,
        2311
      ],
      "op": "DUP2",
      "path": "38"
    },
    "931": {
      "fn": "Referrals.initRefs",
      "offset": [
        2298,
        2311
      ],
      "op": "LT",
      "path": "38"
    },
    "932": {
      "fn": "Referrals.initRefs",
      "offset": [
        2298,
        2311
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x3AF"
    },
    "935": {
      "fn": "Referrals.initRefs",
      "offset": [
        2298,
        2311
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "936": {
      "fn": "Referrals.initRefs",
      "offset": [
        2298,
        2311
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x3AF"
    },
    "939": {
      "fn": "Referrals.initRefs",
      "offset": [
        2298,
        2311
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x866"
    },
    "942": {
      "fn": "Referrals.initRefs",
      "jump": "i",
      "offset": [
        2298,
        2311
      ],
      "op": "JUMP",
      "path": "38"
    },
    "943": {
      "fn": "Referrals.initRefs",
      "offset": [
        2298,
        2311
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "944": {
      "fn": "Referrals.initRefs",
      "offset": [
        2298,
        2311
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x20"
    },
    "946": {
      "fn": "Referrals.initRefs",
      "offset": [
        2298,
        2311
      ],
      "op": "MUL",
      "path": "38"
    },
    "947": {
      "fn": "Referrals.initRefs",
      "offset": [
        2298,
        2311
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x20"
    },
    "949": {
      "fn": "Referrals.initRefs",
      "offset": [
        2298,
        2311
      ],
      "op": "ADD",
      "path": "38"
    },
    "950": {
      "fn": "Referrals.initRefs",
      "offset": [
        2298,
        2311
      ],
      "op": "ADD",
      "path": "38"
    },
    "951": {
      "fn": "Referrals.initRefs",
      "offset": [
        2298,
        2311
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "952": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "954": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "956": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "958": {
      "op": "SHL"
    },
    "959": {
      "op": "SUB"
    },
    "960": {
      "fn": "Referrals.initRefs",
      "offset": [
        2288,
        2312
      ],
      "op": "AND",
      "path": "38"
    },
    "961": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "963": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "965": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "967": {
      "op": "SHL"
    },
    "968": {
      "op": "SUB"
    },
    "969": {
      "fn": "Referrals.initRefs",
      "offset": [
        2288,
        2312
      ],
      "op": "AND",
      "path": "38"
    },
    "970": {
      "fn": "Referrals.initRefs",
      "offset": [
        2288,
        2312
      ],
      "op": "DUP2",
      "path": "38"
    },
    "971": {
      "fn": "Referrals.initRefs",
      "offset": [
        2288,
        2312
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "972": {
      "fn": "Referrals.initRefs",
      "offset": [
        2288,
        2312
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x20"
    },
    "974": {
      "fn": "Referrals.initRefs",
      "offset": [
        2288,
        2312
      ],
      "op": "ADD",
      "path": "38"
    },
    "975": {
      "fn": "Referrals.initRefs",
      "offset": [
        2288,
        2312
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "976": {
      "fn": "Referrals.initRefs",
      "offset": [
        2288,
        2312
      ],
      "op": "DUP2",
      "path": "38"
    },
    "977": {
      "fn": "Referrals.initRefs",
      "offset": [
        2288,
        2312
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "978": {
      "fn": "Referrals.initRefs",
      "offset": [
        2288,
        2312
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x20"
    },
    "980": {
      "fn": "Referrals.initRefs",
      "offset": [
        2288,
        2312
      ],
      "op": "ADD",
      "path": "38"
    },
    "981": {
      "fn": "Referrals.initRefs",
      "offset": [
        2288,
        2312
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x0"
    },
    "983": {
      "fn": "Referrals.initRefs",
      "offset": [
        2288,
        2312
      ],
      "op": "KECCAK256",
      "path": "38"
    },
    "984": {
      "fn": "Referrals.initRefs",
      "offset": [
        2288,
        2329
      ],
      "op": "DUP2",
      "path": "38"
    },
    "985": {
      "fn": "Referrals.initRefs",
      "offset": [
        2288,
        2329
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "986": {
      "fn": "Referrals.initRefs",
      "offset": [
        2288,
        2329
      ],
      "op": "SSTORE",
      "path": "38"
    },
    "987": {
      "fn": "Referrals.initRefs",
      "offset": [
        2288,
        2329
      ],
      "op": "POP",
      "path": "38"
    },
    "988": {
      "fn": "Referrals.initRefs",
      "offset": [
        2269,
        2272
      ],
      "op": "DUP1",
      "path": "38",
      "statement": 14
    },
    "989": {
      "fn": "Referrals.initRefs",
      "offset": [
        2269,
        2272
      ],
      "op": "DUP1",
      "path": "38"
    },
    "990": {
      "fn": "Referrals.initRefs",
      "offset": [
        2269,
        2272
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x3E6"
    },
    "993": {
      "fn": "Referrals.initRefs",
      "offset": [
        2269,
        2272
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "994": {
      "fn": "Referrals.initRefs",
      "offset": [
        2269,
        2272
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x87C"
    },
    "997": {
      "fn": "Referrals.initRefs",
      "jump": "i",
      "offset": [
        2269,
        2272
      ],
      "op": "JUMP",
      "path": "38"
    },
    "998": {
      "fn": "Referrals.initRefs",
      "offset": [
        2269,
        2272
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "999": {
      "fn": "Referrals.initRefs",
      "offset": [
        2269,
        2272
      ],
      "op": "SWAP2",
      "path": "38"
    },
    "1000": {
      "fn": "Referrals.initRefs",
      "offset": [
        2269,
        2272
      ],
      "op": "POP",
      "path": "38"
    },
    "1001": {
      "fn": "Referrals.initRefs",
      "offset": [
        2269,
        2272
      ],
      "op": "POP",
      "path": "38"
    },
    "1002": {
      "fn": "Referrals.initRefs",
      "offset": [
        2232,
        2340
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x377"
    },
    "1005": {
      "fn": "Referrals.initRefs",
      "offset": [
        2232,
        2340
      ],
      "op": "JUMP",
      "path": "38"
    },
    "1006": {
      "fn": "Referrals.initRefs",
      "offset": [
        2232,
        2340
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "1007": {
      "fn": "Referrals.initRefs",
      "offset": [
        2232,
        2340
      ],
      "op": "POP",
      "path": "38"
    },
    "1008": {
      "fn": "Referrals.initRefs",
      "offset": [
        1954,
        2346
      ],
      "op": "POP",
      "path": "38"
    },
    "1009": {
      "fn": "Referrals.initRefs",
      "offset": [
        1954,
        2346
      ],
      "op": "POP",
      "path": "38"
    },
    "1010": {
      "fn": "Referrals.initRefs",
      "offset": [
        1760,
        2346
      ],
      "op": "POP",
      "path": "38"
    },
    "1011": {
      "fn": "Referrals.initRefs",
      "offset": [
        1760,
        2346
      ],
      "op": "POP",
      "path": "38"
    },
    "1012": {
      "fn": "Referrals.initRefs",
      "offset": [
        1760,
        2346
      ],
      "op": "POP",
      "path": "38"
    },
    "1013": {
      "fn": "Referrals.initRefs",
      "offset": [
        1760,
        2346
      ],
      "op": "POP",
      "path": "38"
    },
    "1014": {
      "fn": "Referrals.initRefs",
      "jump": "o",
      "offset": [
        1760,
        2346
      ],
      "op": "JUMP",
      "path": "38"
    },
    "1015": {
      "fn": "Referrals.setReferred",
      "offset": [
        997,
        1365
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "1016": {
      "offset": [
        2436,
        2444
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x1"
    },
    "1018": {
      "fn": "Referrals.setReferred",
      "offset": [
        2436,
        2444
      ],
      "op": "SLOAD",
      "path": "38"
    },
    "1019": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1021": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1023": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1025": {
      "op": "SHL"
    },
    "1026": {
      "op": "SUB"
    },
    "1027": {
      "offset": [
        2436,
        2444
      ],
      "op": "AND",
      "path": "38"
    },
    "1028": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "13"
    },
    "1029": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1031": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1033": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1035": {
      "op": "SHL"
    },
    "1036": {
      "op": "SUB"
    },
    "1037": {
      "offset": [
        2412,
        2445
      ],
      "op": "AND",
      "path": "38"
    },
    "1038": {
      "branch": 26,
      "fn": "Context._msgSender",
      "offset": [
        2412,
        2445
      ],
      "op": "EQ",
      "path": "38"
    },
    "1039": {
      "offset": [
        2404,
        2459
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x446"
    },
    "1042": {
      "branch": 26,
      "offset": [
        2404,
        2459
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "1043": {
      "fn": "Context._msgSender",
      "offset": [
        2404,
        2459
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "1045": {
      "fn": "Context._msgSender",
      "offset": [
        2404,
        2459
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "1046": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1050": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1052": {
      "op": "SHL"
    },
    "1053": {
      "offset": [
        2404,
        2459
      ],
      "op": "DUP2",
      "path": "38"
    },
    "1054": {
      "fn": "Context._msgSender",
      "offset": [
        2404,
        2459
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "1055": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1057": {
      "offset": [
        2404,
        2459
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x4"
    },
    "1059": {
      "fn": "Context._msgSender",
      "offset": [
        2404,
        2459
      ],
      "op": "DUP3",
      "path": "38"
    },
    "1060": {
      "fn": "Context._msgSender",
      "offset": [
        2404,
        2459
      ],
      "op": "ADD",
      "path": "38"
    },
    "1061": {
      "op": "MSTORE"
    },
    "1062": {
      "op": "PUSH1",
      "value": "0x9"
    },
    "1064": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1066": {
      "op": "DUP3"
    },
    "1067": {
      "op": "ADD"
    },
    "1068": {
      "op": "MSTORE"
    },
    "1069": {
      "op": "PUSH9",
      "value": "0x8541C9BDD1BD8DBDB"
    },
    "1079": {
      "op": "PUSH1",
      "value": "0xBA"
    },
    "1081": {
      "op": "SHL"
    },
    "1082": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1084": {
      "op": "DUP3"
    },
    "1085": {
      "op": "ADD"
    },
    "1086": {
      "op": "MSTORE"
    },
    "1087": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1089": {
      "op": "ADD"
    },
    "1090": {
      "offset": [
        2404,
        2459
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x238"
    },
    "1093": {
      "op": "JUMP"
    },
    "1094": {
      "offset": [
        2404,
        2459
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "1095": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1097": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1099": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1101": {
      "op": "SHL"
    },
    "1102": {
      "op": "SUB"
    },
    "1103": {
      "fn": "Referrals.setReferred",
      "offset": [
        1114,
        1140
      ],
      "op": "DUP3",
      "path": "38"
    },
    "1104": {
      "fn": "Referrals.setReferred",
      "offset": [
        1114,
        1140
      ],
      "op": "AND",
      "path": "38"
    },
    "1105": {
      "fn": "Referrals.setReferred",
      "offset": [
        1152,
        1153
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x0"
    },
    "1107": {
      "fn": "Referrals.setReferred",
      "offset": [
        1114,
        1140
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "1108": {
      "fn": "Referrals.setReferred",
      "offset": [
        1114,
        1140
      ],
      "op": "DUP2",
      "path": "38"
    },
    "1109": {
      "fn": "Referrals.setReferred",
      "offset": [
        1114,
        1140
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "1110": {
      "fn": "Referrals.setReferred",
      "offset": [
        1114,
        1123
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x3"
    },
    "1112": {
      "fn": "Referrals.setReferred",
      "offset": [
        1114,
        1140
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x20"
    },
    "1114": {
      "fn": "Referrals.setReferred",
      "offset": [
        1114,
        1140
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "1115": {
      "fn": "Referrals.setReferred",
      "offset": [
        1114,
        1140
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "1117": {
      "fn": "Referrals.setReferred",
      "offset": [
        1114,
        1140
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "1118": {
      "fn": "Referrals.setReferred",
      "offset": [
        1114,
        1140
      ],
      "op": "KECCAK256",
      "path": "38"
    },
    "1119": {
      "fn": "Referrals.setReferred",
      "offset": [
        1114,
        1140
      ],
      "op": "SLOAD",
      "path": "38"
    },
    "1120": {
      "fn": "Referrals.setReferred",
      "offset": [
        1170,
        1177
      ],
      "op": "PUSH2",
      "path": "38",
      "statement": 15,
      "value": "0x4D9"
    },
    "1123": {
      "fn": "Referrals.setReferred",
      "offset": [
        1110,
        1187
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "1124": {
      "fn": "Referrals.setReferred",
      "offset": [
        1219,
        1235
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x0"
    },
    "1126": {
      "fn": "Referrals.setReferred",
      "offset": [
        1219,
        1235
      ],
      "op": "DUP2",
      "path": "38"
    },
    "1127": {
      "fn": "Referrals.setReferred",
      "offset": [
        1219,
        1235
      ],
      "op": "DUP2",
      "path": "38"
    },
    "1128": {
      "fn": "Referrals.setReferred",
      "offset": [
        1219,
        1235
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "1129": {
      "fn": "Referrals.setReferred",
      "offset": [
        1219,
        1228
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x2"
    },
    "1131": {
      "fn": "Referrals.setReferred",
      "offset": [
        1219,
        1235
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x20"
    },
    "1133": {
      "fn": "Referrals.setReferred",
      "offset": [
        1219,
        1235
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "1134": {
      "fn": "Referrals.setReferred",
      "offset": [
        1219,
        1235
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "1136": {
      "fn": "Referrals.setReferred",
      "offset": [
        1219,
        1235
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "1137": {
      "fn": "Referrals.setReferred",
      "offset": [
        1219,
        1235
      ],
      "op": "KECCAK256",
      "path": "38"
    },
    "1138": {
      "fn": "Referrals.setReferred",
      "offset": [
        1219,
        1235
      ],
      "op": "SLOAD",
      "path": "38"
    },
    "1139": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1141": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1143": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1145": {
      "op": "SHL"
    },
    "1146": {
      "op": "SUB"
    },
    "1147": {
      "fn": "Referrals.setReferred",
      "offset": [
        1200,
        1235
      ],
      "op": "DUP4",
      "path": "38"
    },
    "1148": {
      "fn": "Referrals.setReferred",
      "offset": [
        1200,
        1235
      ],
      "op": "DUP2",
      "path": "38"
    },
    "1149": {
      "branch": 27,
      "fn": "Referrals.setReferred",
      "offset": [
        1200,
        1235
      ],
      "op": "AND",
      "path": "38"
    },
    "1150": {
      "fn": "Referrals.setReferred",
      "offset": [
        1219,
        1235
      ],
      "op": "SWAP2",
      "path": "38"
    },
    "1151": {
      "fn": "Referrals.setReferred",
      "offset": [
        1219,
        1235
      ],
      "op": "AND",
      "path": "38"
    },
    "1152": {
      "fn": "Referrals.setReferred",
      "offset": [
        1196,
        1268
      ],
      "op": "EQ",
      "path": "38"
    },
    "1153": {
      "fn": "Referrals.setReferred",
      "offset": [
        1251,
        1258
      ],
      "op": "PUSH2",
      "path": "38",
      "statement": 16,
      "value": "0x4D9"
    },
    "1156": {
      "branch": 27,
      "fn": "Referrals.setReferred",
      "offset": [
        1196,
        1268
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "1157": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1159": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1161": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1163": {
      "op": "SHL"
    },
    "1164": {
      "op": "SUB"
    },
    "1165": {
      "fn": "Referrals.setReferred",
      "offset": [
        1277,
        1303
      ],
      "op": "DUP3",
      "path": "38",
      "statement": 17
    },
    "1166": {
      "fn": "Referrals.setReferred",
      "offset": [
        1277,
        1303
      ],
      "op": "AND",
      "path": "38"
    },
    "1167": {
      "fn": "Referrals.setReferred",
      "offset": [
        1277,
        1303
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x0"
    },
    "1169": {
      "fn": "Referrals.setReferred",
      "offset": [
        1277,
        1303
      ],
      "op": "DUP2",
      "path": "38"
    },
    "1170": {
      "fn": "Referrals.setReferred",
      "offset": [
        1277,
        1303
      ],
      "op": "DUP2",
      "path": "38"
    },
    "1171": {
      "fn": "Referrals.setReferred",
      "offset": [
        1277,
        1303
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "1172": {
      "fn": "Referrals.setReferred",
      "offset": [
        1277,
        1286
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x3"
    },
    "1174": {
      "fn": "Referrals.setReferred",
      "offset": [
        1277,
        1303
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x20"
    },
    "1176": {
      "fn": "Referrals.setReferred",
      "offset": [
        1277,
        1303
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "1177": {
      "fn": "Referrals.setReferred",
      "offset": [
        1277,
        1303
      ],
      "op": "DUP2",
      "path": "38"
    },
    "1178": {
      "fn": "Referrals.setReferred",
      "offset": [
        1277,
        1303
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "1179": {
      "fn": "Referrals.setReferred",
      "offset": [
        1277,
        1303
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "1181": {
      "fn": "Referrals.setReferred",
      "offset": [
        1277,
        1303
      ],
      "op": "SWAP2",
      "path": "38"
    },
    "1182": {
      "fn": "Referrals.setReferred",
      "offset": [
        1277,
        1303
      ],
      "op": "DUP3",
      "path": "38"
    },
    "1183": {
      "fn": "Referrals.setReferred",
      "offset": [
        1277,
        1303
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "1184": {
      "fn": "Referrals.setReferred",
      "offset": [
        1277,
        1303
      ],
      "op": "KECCAK256",
      "path": "38"
    },
    "1185": {
      "fn": "Referrals.setReferred",
      "offset": [
        1277,
        1311
      ],
      "op": "DUP5",
      "path": "38"
    },
    "1186": {
      "fn": "Referrals.setReferred",
      "offset": [
        1277,
        1311
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "1187": {
      "fn": "Referrals.setReferred",
      "offset": [
        1277,
        1311
      ],
      "op": "SSTORE",
      "path": "38"
    },
    "1188": {
      "fn": "Referrals.setReferred",
      "offset": [
        1326,
        1358
      ],
      "op": "DUP2",
      "path": "38",
      "statement": 18
    },
    "1189": {
      "fn": "Referrals.setReferred",
      "offset": [
        1326,
        1358
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "1190": {
      "op": "SWAP3"
    },
    "1191": {
      "op": "DUP4"
    },
    "1192": {
      "op": "MSTORE"
    },
    "1193": {
      "op": "DUP3"
    },
    "1194": {
      "op": "ADD"
    },
    "1195": {
      "op": "DUP4"
    },
    "1196": {
      "op": "SWAP1"
    },
    "1197": {
      "op": "MSTORE"
    },
    "1198": {
      "fn": "Referrals.setReferred",
      "offset": [
        1326,
        1358
      ],
      "op": "PUSH32",
      "path": "38",
      "value": "0x37C9EC64695B190BD0F33BA0A1EBA4006268223654349489B4A8B5CB13FFCD89"
    },
    "1231": {
      "fn": "Referrals.setReferred",
      "offset": [
        1326,
        1358
      ],
      "op": "SWAP2",
      "path": "38"
    },
    "1232": {
      "op": "ADD"
    },
    "1233": {
      "fn": "Referrals.setReferred",
      "offset": [
        1326,
        1358
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "1235": {
      "fn": "Referrals.setReferred",
      "offset": [
        1326,
        1358
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "1236": {
      "fn": "Referrals.setReferred",
      "offset": [
        1326,
        1358
      ],
      "op": "DUP1",
      "path": "38"
    },
    "1237": {
      "fn": "Referrals.setReferred",
      "offset": [
        1326,
        1358
      ],
      "op": "SWAP2",
      "path": "38"
    },
    "1238": {
      "fn": "Referrals.setReferred",
      "offset": [
        1326,
        1358
      ],
      "op": "SUB",
      "path": "38"
    },
    "1239": {
      "fn": "Referrals.setReferred",
      "offset": [
        1326,
        1358
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "1240": {
      "fn": "Referrals.setReferred",
      "offset": [
        1326,
        1358
      ],
      "op": "LOG1",
      "path": "38"
    },
    "1241": {
      "offset": [
        2469,
        2470
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "1242": {
      "fn": "Referrals.setReferred",
      "offset": [
        997,
        1365
      ],
      "op": "POP",
      "path": "38"
    },
    "1243": {
      "fn": "Referrals.setReferred",
      "offset": [
        997,
        1365
      ],
      "op": "POP",
      "path": "38"
    },
    "1244": {
      "fn": "Referrals.setReferred",
      "jump": "o",
      "offset": [
        997,
        1365
      ],
      "op": "JUMP",
      "path": "38"
    },
    "1245": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1246": {
      "offset": [
        1094,
        1107
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4E5"
    },
    "1249": {
      "offset": [
        1094,
        1105
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x556"
    },
    "1252": {
      "jump": "i",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1253": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1254": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1256": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1258": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1260": {
      "op": "SHL"
    },
    "1261": {
      "op": "SUB"
    },
    "1262": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2169,
        2191
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 19
    },
    "1263": {
      "branch": 28,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2169,
        2191
      ],
      "op": "AND",
      "path": "0"
    },
    "1264": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x54A"
    },
    "1267": {
      "branch": 28,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1268": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1270": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1271": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1275": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1277": {
      "op": "SHL"
    },
    "1278": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1279": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1280": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1282": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1284": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1285": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "ADD",
      "path": "0"
    },
    "1286": {
      "op": "MSTORE"
    },
    "1287": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "1289": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1291": {
      "op": "DUP3"
    },
    "1292": {
      "op": "ADD"
    },
    "1293": {
      "op": "MSTORE"
    },
    "1294": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "1327": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1329": {
      "op": "DUP3"
    },
    "1330": {
      "op": "ADD"
    },
    "1331": {
      "op": "MSTORE"
    },
    "1332": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "1339": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "1341": {
      "op": "SHL"
    },
    "1342": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1344": {
      "op": "DUP3"
    },
    "1345": {
      "op": "ADD"
    },
    "1346": {
      "op": "MSTORE"
    },
    "1347": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1349": {
      "op": "ADD"
    },
    "1350": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x238"
    },
    "1353": {
      "op": "JUMP"
    },
    "1354": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1355": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2244,
        2272
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 20,
      "value": "0x553"
    },
    "1358": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2263,
        2271
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1359": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2244,
        2262
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5B0"
    },
    "1362": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2244,
        2272
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1363": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2244,
        2272
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1364": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "POP",
      "path": "0"
    },
    "1365": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1366": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1359,
        1489
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1367": {
      "fn": "Ownable.owner",
      "offset": [
        1247,
        1254
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1369": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1370": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1372": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1374": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1376": {
      "op": "SHL"
    },
    "1377": {
      "op": "SUB"
    },
    "1378": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "AND",
      "path": "0"
    },
    "1379": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "13"
    },
    "1380": {
      "branch": 29,
      "fn": "Ownable._checkOwner",
      "offset": [
        1422,
        1445
      ],
      "op": "EQ",
      "path": "0",
      "statement": 21
    },
    "1381": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B3"
    },
    "1384": {
      "branch": 29,
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1385": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1387": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1388": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1392": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1394": {
      "op": "SHL"
    },
    "1395": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1396": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1397": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1399": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1401": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1402": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "ADD",
      "path": "0"
    },
    "1403": {
      "op": "DUP2"
    },
    "1404": {
      "op": "SWAP1"
    },
    "1405": {
      "op": "MSTORE"
    },
    "1406": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1408": {
      "op": "DUP3"
    },
    "1409": {
      "op": "ADD"
    },
    "1410": {
      "op": "MSTORE"
    },
    "1411": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "1444": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1446": {
      "op": "DUP3"
    },
    "1447": {
      "op": "ADD"
    },
    "1448": {
      "op": "MSTORE"
    },
    "1449": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1451": {
      "op": "ADD"
    },
    "1452": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x238"
    },
    "1455": {
      "op": "JUMP"
    },
    "1456": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2433,
        2620
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1457": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2506,
        2522
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1459": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1460": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1461": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1463": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1465": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1467": {
      "op": "SHL"
    },
    "1468": {
      "op": "SUB"
    },
    "1469": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 22
    },
    "1470": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1471": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "AND",
      "path": "0"
    },
    "1472": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1474": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1476": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1478": {
      "op": "SHL"
    },
    "1479": {
      "op": "SUB"
    },
    "1480": {
      "op": "NOT"
    },
    "1481": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1482": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "AND",
      "path": "0"
    },
    "1483": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1484": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "OR",
      "path": "0"
    },
    "1485": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1486": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1487": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2573,
        2613
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 23,
      "value": "0x40"
    },
    "1489": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2573,
        2613
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1490": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1491": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1492": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1493": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "AND",
      "path": "0"
    },
    "1494": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1495": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1496": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1497": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2573,
        2613
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "1530": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2573,
        2613
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1531": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2506,
        2522
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1532": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2573,
        2613
      ],
      "op": "LOG3",
      "path": "0"
    },
    "1533": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2496,
        2620
      ],
      "op": "POP",
      "path": "0"
    },
    "1534": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2433,
        2620
      ],
      "op": "POP",
      "path": "0"
    },
    "1535": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        2433,
        2620
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1536": {
      "op": "JUMPDEST"
    },
    "1537": {
      "op": "DUP1"
    },
    "1538": {
      "op": "CALLDATALOAD"
    },
    "1539": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1541": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1543": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1545": {
      "op": "SHL"
    },
    "1546": {
      "op": "SUB"
    },
    "1547": {
      "op": "DUP2"
    },
    "1548": {
      "op": "AND"
    },
    "1549": {
      "op": "DUP2"
    },
    "1550": {
      "op": "EQ"
    },
    "1551": {
      "op": "PUSH2",
      "value": "0x617"
    },
    "1554": {
      "op": "JUMPI"
    },
    "1555": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1557": {
      "op": "DUP1"
    },
    "1558": {
      "op": "REVERT"
    },
    "1559": {
      "op": "JUMPDEST"
    },
    "1560": {
      "op": "SWAP2"
    },
    "1561": {
      "op": "SWAP1"
    },
    "1562": {
      "op": "POP"
    },
    "1563": {
      "jump": "o",
      "op": "JUMP"
    },
    "1564": {
      "op": "JUMPDEST"
    },
    "1565": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1567": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1569": {
      "op": "DUP3"
    },
    "1570": {
      "op": "DUP5"
    },
    "1571": {
      "op": "SUB"
    },
    "1572": {
      "op": "SLT"
    },
    "1573": {
      "op": "ISZERO"
    },
    "1574": {
      "op": "PUSH2",
      "value": "0x62E"
    },
    "1577": {
      "op": "JUMPI"
    },
    "1578": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1580": {
      "op": "DUP1"
    },
    "1581": {
      "op": "REVERT"
    },
    "1582": {
      "op": "JUMPDEST"
    },
    "1583": {
      "op": "PUSH2",
      "value": "0x637"
    },
    "1586": {
      "op": "DUP3"
    },
    "1587": {
      "op": "PUSH2",
      "value": "0x600"
    },
    "1590": {
      "jump": "i",
      "op": "JUMP"
    },
    "1591": {
      "op": "JUMPDEST"
    },
    "1592": {
      "op": "SWAP4"
    },
    "1593": {
      "op": "SWAP3"
    },
    "1594": {
      "op": "POP"
    },
    "1595": {
      "op": "POP"
    },
    "1596": {
      "op": "POP"
    },
    "1597": {
      "jump": "o",
      "op": "JUMP"
    },
    "1598": {
      "op": "JUMPDEST"
    },
    "1599": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1601": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1603": {
      "op": "DUP3"
    },
    "1604": {
      "op": "DUP5"
    },
    "1605": {
      "op": "SUB"
    },
    "1606": {
      "op": "SLT"
    },
    "1607": {
      "op": "ISZERO"
    },
    "1608": {
      "op": "PUSH2",
      "value": "0x650"
    },
    "1611": {
      "op": "JUMPI"
    },
    "1612": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1614": {
      "op": "DUP1"
    },
    "1615": {
      "op": "REVERT"
    },
    "1616": {
      "op": "JUMPDEST"
    },
    "1617": {
      "op": "POP"
    },
    "1618": {
      "op": "CALLDATALOAD"
    },
    "1619": {
      "op": "SWAP2"
    },
    "1620": {
      "op": "SWAP1"
    },
    "1621": {
      "op": "POP"
    },
    "1622": {
      "jump": "o",
      "op": "JUMP"
    },
    "1623": {
      "op": "JUMPDEST"
    },
    "1624": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1629": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1631": {
      "op": "SHL"
    },
    "1632": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1634": {
      "op": "MSTORE"
    },
    "1635": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "1637": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1639": {
      "op": "MSTORE"
    },
    "1640": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1642": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1644": {
      "op": "REVERT"
    },
    "1645": {
      "op": "JUMPDEST"
    },
    "1646": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1648": {
      "op": "MLOAD"
    },
    "1649": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1651": {
      "op": "DUP3"
    },
    "1652": {
      "op": "ADD"
    },
    "1653": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1655": {
      "op": "NOT"
    },
    "1656": {
      "op": "AND"
    },
    "1657": {
      "op": "DUP2"
    },
    "1658": {
      "op": "ADD"
    },
    "1659": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1668": {
      "op": "DUP2"
    },
    "1669": {
      "op": "GT"
    },
    "1670": {
      "op": "DUP3"
    },
    "1671": {
      "op": "DUP3"
    },
    "1672": {
      "op": "LT"
    },
    "1673": {
      "op": "OR"
    },
    "1674": {
      "op": "ISZERO"
    },
    "1675": {
      "op": "PUSH2",
      "value": "0x696"
    },
    "1678": {
      "op": "JUMPI"
    },
    "1679": {
      "op": "PUSH2",
      "value": "0x696"
    },
    "1682": {
      "op": "PUSH2",
      "value": "0x657"
    },
    "1685": {
      "jump": "i",
      "op": "JUMP"
    },
    "1686": {
      "op": "JUMPDEST"
    },
    "1687": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1689": {
      "op": "MSTORE"
    },
    "1690": {
      "op": "SWAP2"
    },
    "1691": {
      "op": "SWAP1"
    },
    "1692": {
      "op": "POP"
    },
    "1693": {
      "jump": "o",
      "op": "JUMP"
    },
    "1694": {
      "op": "JUMPDEST"
    },
    "1695": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1697": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1706": {
      "op": "DUP3"
    },
    "1707": {
      "op": "GT"
    },
    "1708": {
      "op": "ISZERO"
    },
    "1709": {
      "op": "PUSH2",
      "value": "0x6B8"
    },
    "1712": {
      "op": "JUMPI"
    },
    "1713": {
      "op": "PUSH2",
      "value": "0x6B8"
    },
    "1716": {
      "op": "PUSH2",
      "value": "0x657"
    },
    "1719": {
      "jump": "i",
      "op": "JUMP"
    },
    "1720": {
      "op": "JUMPDEST"
    },
    "1721": {
      "op": "POP"
    },
    "1722": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "1724": {
      "op": "SHL"
    },
    "1725": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1727": {
      "op": "ADD"
    },
    "1728": {
      "op": "SWAP1"
    },
    "1729": {
      "jump": "o",
      "op": "JUMP"
    },
    "1730": {
      "op": "JUMPDEST"
    },
    "1731": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1733": {
      "op": "DUP3"
    },
    "1734": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1736": {
      "op": "DUP4"
    },
    "1737": {
      "op": "ADD"
    },
    "1738": {
      "op": "SLT"
    },
    "1739": {
      "op": "PUSH2",
      "value": "0x6D3"
    },
    "1742": {
      "op": "JUMPI"
    },
    "1743": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1745": {
      "op": "DUP1"
    },
    "1746": {
      "op": "REVERT"
    },
    "1747": {
      "op": "JUMPDEST"
    },
    "1748": {
      "op": "DUP2"
    },
    "1749": {
      "op": "CALLDATALOAD"
    },
    "1750": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1752": {
      "op": "PUSH2",
      "value": "0x6E8"
    },
    "1755": {
      "op": "PUSH2",
      "value": "0x6E3"
    },
    "1758": {
      "op": "DUP4"
    },
    "1759": {
      "op": "PUSH2",
      "value": "0x69E"
    },
    "1762": {
      "jump": "i",
      "op": "JUMP"
    },
    "1763": {
      "op": "JUMPDEST"
    },
    "1764": {
      "op": "PUSH2",
      "value": "0x66D"
    },
    "1767": {
      "jump": "i",
      "op": "JUMP"
    },
    "1768": {
      "op": "JUMPDEST"
    },
    "1769": {
      "op": "DUP3"
    },
    "1770": {
      "op": "DUP2"
    },
    "1771": {
      "op": "MSTORE"
    },
    "1772": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "1774": {
      "op": "SWAP3"
    },
    "1775": {
      "op": "SWAP1"
    },
    "1776": {
      "op": "SWAP3"
    },
    "1777": {
      "op": "SHL"
    },
    "1778": {
      "op": "DUP5"
    },
    "1779": {
      "op": "ADD"
    },
    "1780": {
      "op": "DUP2"
    },
    "1781": {
      "op": "ADD"
    },
    "1782": {
      "op": "SWAP2"
    },
    "1783": {
      "op": "DUP2"
    },
    "1784": {
      "op": "DUP2"
    },
    "1785": {
      "op": "ADD"
    },
    "1786": {
      "op": "SWAP1"
    },
    "1787": {
      "op": "DUP7"
    },
    "1788": {
      "op": "DUP5"
    },
    "1789": {
      "op": "GT"
    },
    "1790": {
      "op": "ISZERO"
    },
    "1791": {
      "op": "PUSH2",
      "value": "0x707"
    },
    "1794": {
      "op": "JUMPI"
    },
    "1795": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1797": {
      "op": "DUP1"
    },
    "1798": {
      "op": "REVERT"
    },
    "1799": {
      "op": "JUMPDEST"
    },
    "1800": {
      "op": "DUP3"
    },
    "1801": {
      "op": "DUP7"
    },
    "1802": {
      "op": "ADD"
    },
    "1803": {
      "op": "JUMPDEST"
    },
    "1804": {
      "op": "DUP5"
    },
    "1805": {
      "op": "DUP2"
    },
    "1806": {
      "op": "LT"
    },
    "1807": {
      "op": "ISZERO"
    },
    "1808": {
      "op": "PUSH2",
      "value": "0x729"
    },
    "1811": {
      "op": "JUMPI"
    },
    "1812": {
      "op": "PUSH2",
      "value": "0x71C"
    },
    "1815": {
      "op": "DUP2"
    },
    "1816": {
      "op": "PUSH2",
      "value": "0x600"
    },
    "1819": {
      "jump": "i",
      "op": "JUMP"
    },
    "1820": {
      "op": "JUMPDEST"
    },
    "1821": {
      "op": "DUP4"
    },
    "1822": {
      "op": "MSTORE"
    },
    "1823": {
      "op": "SWAP2"
    },
    "1824": {
      "op": "DUP4"
    },
    "1825": {
      "op": "ADD"
    },
    "1826": {
      "op": "SWAP2"
    },
    "1827": {
      "op": "DUP4"
    },
    "1828": {
      "op": "ADD"
    },
    "1829": {
      "op": "PUSH2",
      "value": "0x70B"
    },
    "1832": {
      "op": "JUMP"
    },
    "1833": {
      "op": "JUMPDEST"
    },
    "1834": {
      "op": "POP"
    },
    "1835": {
      "op": "SWAP7"
    },
    "1836": {
      "op": "SWAP6"
    },
    "1837": {
      "op": "POP"
    },
    "1838": {
      "op": "POP"
    },
    "1839": {
      "op": "POP"
    },
    "1840": {
      "op": "POP"
    },
    "1841": {
      "op": "POP"
    },
    "1842": {
      "op": "POP"
    },
    "1843": {
      "jump": "o",
      "op": "JUMP"
    },
    "1844": {
      "op": "JUMPDEST"
    },
    "1845": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1847": {
      "op": "DUP3"
    },
    "1848": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1850": {
      "op": "DUP4"
    },
    "1851": {
      "op": "ADD"
    },
    "1852": {
      "op": "SLT"
    },
    "1853": {
      "op": "PUSH2",
      "value": "0x745"
    },
    "1856": {
      "op": "JUMPI"
    },
    "1857": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1859": {
      "op": "DUP1"
    },
    "1860": {
      "op": "REVERT"
    },
    "1861": {
      "op": "JUMPDEST"
    },
    "1862": {
      "op": "DUP2"
    },
    "1863": {
      "op": "CALLDATALOAD"
    },
    "1864": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1866": {
      "op": "PUSH2",
      "value": "0x755"
    },
    "1869": {
      "op": "PUSH2",
      "value": "0x6E3"
    },
    "1872": {
      "op": "DUP4"
    },
    "1873": {
      "op": "PUSH2",
      "value": "0x69E"
    },
    "1876": {
      "jump": "i",
      "op": "JUMP"
    },
    "1877": {
      "op": "JUMPDEST"
    },
    "1878": {
      "op": "DUP3"
    },
    "1879": {
      "op": "DUP2"
    },
    "1880": {
      "op": "MSTORE"
    },
    "1881": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "1883": {
      "op": "SWAP3"
    },
    "1884": {
      "op": "SWAP1"
    },
    "1885": {
      "op": "SWAP3"
    },
    "1886": {
      "op": "SHL"
    },
    "1887": {
      "op": "DUP5"
    },
    "1888": {
      "op": "ADD"
    },
    "1889": {
      "op": "DUP2"
    },
    "1890": {
      "op": "ADD"
    },
    "1891": {
      "op": "SWAP2"
    },
    "1892": {
      "op": "DUP2"
    },
    "1893": {
      "op": "DUP2"
    },
    "1894": {
      "op": "ADD"
    },
    "1895": {
      "op": "SWAP1"
    },
    "1896": {
      "op": "DUP7"
    },
    "1897": {
      "op": "DUP5"
    },
    "1898": {
      "op": "GT"
    },
    "1899": {
      "op": "ISZERO"
    },
    "1900": {
      "op": "PUSH2",
      "value": "0x774"
    },
    "1903": {
      "op": "JUMPI"
    },
    "1904": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1906": {
      "op": "DUP1"
    },
    "1907": {
      "op": "REVERT"
    },
    "1908": {
      "op": "JUMPDEST"
    },
    "1909": {
      "op": "DUP3"
    },
    "1910": {
      "op": "DUP7"
    },
    "1911": {
      "op": "ADD"
    },
    "1912": {
      "op": "JUMPDEST"
    },
    "1913": {
      "op": "DUP5"
    },
    "1914": {
      "op": "DUP2"
    },
    "1915": {
      "op": "LT"
    },
    "1916": {
      "op": "ISZERO"
    },
    "1917": {
      "op": "PUSH2",
      "value": "0x729"
    },
    "1920": {
      "op": "JUMPI"
    },
    "1921": {
      "op": "DUP1"
    },
    "1922": {
      "op": "CALLDATALOAD"
    },
    "1923": {
      "op": "DUP4"
    },
    "1924": {
      "op": "MSTORE"
    },
    "1925": {
      "op": "SWAP2"
    },
    "1926": {
      "op": "DUP4"
    },
    "1927": {
      "op": "ADD"
    },
    "1928": {
      "op": "SWAP2"
    },
    "1929": {
      "op": "DUP4"
    },
    "1930": {
      "op": "ADD"
    },
    "1931": {
      "op": "PUSH2",
      "value": "0x778"
    },
    "1934": {
      "op": "JUMP"
    },
    "1935": {
      "op": "JUMPDEST"
    },
    "1936": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1938": {
      "op": "DUP1"
    },
    "1939": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1941": {
      "op": "DUP1"
    },
    "1942": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1944": {
      "op": "DUP6"
    },
    "1945": {
      "op": "DUP8"
    },
    "1946": {
      "op": "SUB"
    },
    "1947": {
      "op": "SLT"
    },
    "1948": {
      "op": "ISZERO"
    },
    "1949": {
      "op": "PUSH2",
      "value": "0x7A5"
    },
    "1952": {
      "op": "JUMPI"
    },
    "1953": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1955": {
      "op": "DUP1"
    },
    "1956": {
      "op": "REVERT"
    },
    "1957": {
      "op": "JUMPDEST"
    },
    "1958": {
      "op": "DUP5"
    },
    "1959": {
      "op": "CALLDATALOAD"
    },
    "1960": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1969": {
      "op": "DUP1"
    },
    "1970": {
      "op": "DUP3"
    },
    "1971": {
      "op": "GT"
    },
    "1972": {
      "op": "ISZERO"
    },
    "1973": {
      "op": "PUSH2",
      "value": "0x7BD"
    },
    "1976": {
      "op": "JUMPI"
    },
    "1977": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1979": {
      "op": "DUP1"
    },
    "1980": {
      "op": "REVERT"
    },
    "1981": {
      "op": "JUMPDEST"
    },
    "1982": {
      "op": "PUSH2",
      "value": "0x7C9"
    },
    "1985": {
      "op": "DUP9"
    },
    "1986": {
      "op": "DUP4"
    },
    "1987": {
      "op": "DUP10"
    },
    "1988": {
      "op": "ADD"
    },
    "1989": {
      "op": "PUSH2",
      "value": "0x6C2"
    },
    "1992": {
      "jump": "i",
      "op": "JUMP"
    },
    "1993": {
      "op": "JUMPDEST"
    },
    "1994": {
      "op": "SWAP6"
    },
    "1995": {
      "op": "POP"
    },
    "1996": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1998": {
      "op": "DUP8"
    },
    "1999": {
      "op": "ADD"
    },
    "2000": {
      "op": "CALLDATALOAD"
    },
    "2001": {
      "op": "SWAP2"
    },
    "2002": {
      "op": "POP"
    },
    "2003": {
      "op": "DUP1"
    },
    "2004": {
      "op": "DUP3"
    },
    "2005": {
      "op": "GT"
    },
    "2006": {
      "op": "ISZERO"
    },
    "2007": {
      "op": "PUSH2",
      "value": "0x7DF"
    },
    "2010": {
      "op": "JUMPI"
    },
    "2011": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2013": {
      "op": "DUP1"
    },
    "2014": {
      "op": "REVERT"
    },
    "2015": {
      "op": "JUMPDEST"
    },
    "2016": {
      "op": "PUSH2",
      "value": "0x7EB"
    },
    "2019": {
      "op": "DUP9"
    },
    "2020": {
      "op": "DUP4"
    },
    "2021": {
      "op": "DUP10"
    },
    "2022": {
      "op": "ADD"
    },
    "2023": {
      "op": "PUSH2",
      "value": "0x734"
    },
    "2026": {
      "jump": "i",
      "op": "JUMP"
    },
    "2027": {
      "op": "JUMPDEST"
    },
    "2028": {
      "op": "SWAP5"
    },
    "2029": {
      "op": "POP"
    },
    "2030": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2032": {
      "op": "DUP8"
    },
    "2033": {
      "op": "ADD"
    },
    "2034": {
      "op": "CALLDATALOAD"
    },
    "2035": {
      "op": "SWAP2"
    },
    "2036": {
      "op": "POP"
    },
    "2037": {
      "op": "DUP1"
    },
    "2038": {
      "op": "DUP3"
    },
    "2039": {
      "op": "GT"
    },
    "2040": {
      "op": "ISZERO"
    },
    "2041": {
      "op": "PUSH2",
      "value": "0x801"
    },
    "2044": {
      "op": "JUMPI"
    },
    "2045": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2047": {
      "op": "DUP1"
    },
    "2048": {
      "op": "REVERT"
    },
    "2049": {
      "op": "JUMPDEST"
    },
    "2050": {
      "op": "PUSH2",
      "value": "0x80D"
    },
    "2053": {
      "op": "DUP9"
    },
    "2054": {
      "op": "DUP4"
    },
    "2055": {
      "op": "DUP10"
    },
    "2056": {
      "op": "ADD"
    },
    "2057": {
      "op": "PUSH2",
      "value": "0x6C2"
    },
    "2060": {
      "jump": "i",
      "op": "JUMP"
    },
    "2061": {
      "op": "JUMPDEST"
    },
    "2062": {
      "op": "SWAP4"
    },
    "2063": {
      "op": "POP"
    },
    "2064": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2066": {
      "op": "DUP8"
    },
    "2067": {
      "op": "ADD"
    },
    "2068": {
      "op": "CALLDATALOAD"
    },
    "2069": {
      "op": "SWAP2"
    },
    "2070": {
      "op": "POP"
    },
    "2071": {
      "op": "DUP1"
    },
    "2072": {
      "op": "DUP3"
    },
    "2073": {
      "op": "GT"
    },
    "2074": {
      "op": "ISZERO"
    },
    "2075": {
      "op": "PUSH2",
      "value": "0x823"
    },
    "2078": {
      "op": "JUMPI"
    },
    "2079": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2081": {
      "op": "DUP1"
    },
    "2082": {
      "op": "REVERT"
    },
    "2083": {
      "op": "JUMPDEST"
    },
    "2084": {
      "op": "POP"
    },
    "2085": {
      "op": "PUSH2",
      "value": "0x830"
    },
    "2088": {
      "op": "DUP8"
    },
    "2089": {
      "op": "DUP3"
    },
    "2090": {
      "op": "DUP9"
    },
    "2091": {
      "op": "ADD"
    },
    "2092": {
      "op": "PUSH2",
      "value": "0x734"
    },
    "2095": {
      "jump": "i",
      "op": "JUMP"
    },
    "2096": {
      "op": "JUMPDEST"
    },
    "2097": {
      "op": "SWAP2"
    },
    "2098": {
      "op": "POP"
    },
    "2099": {
      "op": "POP"
    },
    "2100": {
      "op": "SWAP3"
    },
    "2101": {
      "op": "SWAP6"
    },
    "2102": {
      "op": "SWAP2"
    },
    "2103": {
      "op": "SWAP5"
    },
    "2104": {
      "op": "POP"
    },
    "2105": {
      "op": "SWAP3"
    },
    "2106": {
      "op": "POP"
    },
    "2107": {
      "jump": "o",
      "op": "JUMP"
    },
    "2108": {
      "op": "JUMPDEST"
    },
    "2109": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2111": {
      "op": "DUP1"
    },
    "2112": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2114": {
      "op": "DUP4"
    },
    "2115": {
      "op": "DUP6"
    },
    "2116": {
      "op": "SUB"
    },
    "2117": {
      "op": "SLT"
    },
    "2118": {
      "op": "ISZERO"
    },
    "2119": {
      "op": "PUSH2",
      "value": "0x84F"
    },
    "2122": {
      "op": "JUMPI"
    },
    "2123": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2125": {
      "op": "DUP1"
    },
    "2126": {
      "op": "REVERT"
    },
    "2127": {
      "op": "JUMPDEST"
    },
    "2128": {
      "op": "PUSH2",
      "value": "0x858"
    },
    "2131": {
      "op": "DUP4"
    },
    "2132": {
      "op": "PUSH2",
      "value": "0x600"
    },
    "2135": {
      "jump": "i",
      "op": "JUMP"
    },
    "2136": {
      "op": "JUMPDEST"
    },
    "2137": {
      "op": "SWAP5"
    },
    "2138": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2140": {
      "op": "SWAP4"
    },
    "2141": {
      "op": "SWAP1"
    },
    "2142": {
      "op": "SWAP4"
    },
    "2143": {
      "op": "ADD"
    },
    "2144": {
      "op": "CALLDATALOAD"
    },
    "2145": {
      "op": "SWAP4"
    },
    "2146": {
      "op": "POP"
    },
    "2147": {
      "op": "POP"
    },
    "2148": {
      "op": "POP"
    },
    "2149": {
      "jump": "o",
      "op": "JUMP"
    },
    "2150": {
      "op": "JUMPDEST"
    },
    "2151": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2156": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2158": {
      "op": "SHL"
    },
    "2159": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2161": {
      "op": "MSTORE"
    },
    "2162": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "2164": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2166": {
      "op": "MSTORE"
    },
    "2167": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2169": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2171": {
      "op": "REVERT"
    },
    "2172": {
      "op": "JUMPDEST"
    },
    "2173": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2175": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2177": {
      "op": "DUP3"
    },
    "2178": {
      "op": "ADD"
    },
    "2179": {
      "op": "PUSH2",
      "value": "0x89C"
    },
    "2182": {
      "op": "JUMPI"
    },
    "2183": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2188": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2190": {
      "op": "SHL"
    },
    "2191": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2193": {
      "op": "MSTORE"
    },
    "2194": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "2196": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2198": {
      "op": "MSTORE"
    },
    "2199": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2201": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2203": {
      "op": "REVERT"
    },
    "2204": {
      "op": "JUMPDEST"
    },
    "2205": {
      "op": "POP"
    },
    "2206": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2208": {
      "op": "ADD"
    },
    "2209": {
      "op": "SWAP1"
    },
    "2210": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "7b6b22e71d93ce373c196fd8be73512d388fb5f6",
  "source": "// SCH Course Copyright Policy (C): DO-NOT-SHARE-WITH-ANYONE\n// https://smartcontractshacking.com/#copyright-policy\npragma solidity ^0.8.13;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\n/**\n * @title Referrals\n * @author JohnnyTime (https://smartcontractshacking.com)\n */\ncontract Referrals is Ownable {\n    bool private isInit;\n\n    address public protocol;\n\n    mapping(bytes32 => address) private _referral;\n    mapping(address => bytes32) private _referred;\n\n    /**\n     * @notice used by any address to create a ref code\n     * @param _hash hash of the string code\n     */\n    function createReferralCode(bytes32 _hash) external {\n        require(_referral[_hash] == address(0), \"Referral code already exists\");\n        _referral[_hash] = _msgSender();\n        emit ReferralCreated(_msgSender(), _hash);\n    }\n\n    /**\n     * @notice set the ref data\n     * @dev only callable by trading\n     * @param _referredTrader address of the trader\n     * @param _hash ref hash\n     */\n    function setReferred(address _referredTrader, bytes32 _hash)\n        external\n        onlyProtocol\n    {\n        if (_referred[_referredTrader] != bytes32(0)) {\n            return;\n        }\n        if (_referredTrader == _referral[_hash]) {\n            return;\n        }\n        _referred[_referredTrader] = _hash;\n        emit Referred(_referredTrader, _hash);\n    }\n\n    function getReferred(address _trader) external view returns (bytes32) {\n        return _referred[_trader];\n    }\n\n    function getReferral(bytes32 _hash) external view returns (address) {\n        return _referral[_hash];\n    }\n\n    // Owner\n    function setProtocol(address _protocol) external onlyOwner {\n        protocol = _protocol;\n    }\n\n    /**\n     * @notice deprecated\n     */\n    function initRefs(\n        address[] memory _codeOwners,\n        bytes32[] memory _ownedCodes,\n        address[] memory _referredA,\n        bytes32[] memory _referredTo\n    ) external onlyOwner {\n        require(!isInit);\n        isInit = true;\n        uint256 _codeOwnersL = _codeOwners.length;\n        uint256 _referredAL = _referredA.length;\n        for (uint256 i = 0; i < _codeOwnersL; i++) {\n            _referral[_ownedCodes[i]] = _codeOwners[i];\n        }\n        for (uint256 i = 0; i < _referredAL; i++) {\n            _referred[_referredA[i]] = _referredTo[i];\n        }\n    }\n\n    // Modifiers\n\n    modifier onlyProtocol() {\n        require(_msgSender() == address(protocol), \"!Protocol\");\n        _;\n    }\n\n    event ReferralCreated(address _referrer, bytes32 _hash);\n    event Referred(address _referredTrader, bytes32 _hash);\n}\n",
  "sourceMap": "282:2319:38:-:0;;;;;;;;;;;;-1:-1:-1;936:32:0;719:10:13;936:18:0;:32::i;:::-;282:2319:38;;2433:187:0;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;282:2319:38:-;;;;;;;",
  "sourcePath": "contracts/frontrunning-2/Referrals.sol",
  "type": "contract"
}