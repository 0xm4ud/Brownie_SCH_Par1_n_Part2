{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "UniswapV2Factory",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "WETH",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenIn",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_tokenOut",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amountIn",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_absoluteMinAmountOut",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "_maxRetries",
          "type": "uint8"
        }
      ],
      "name": "snipe",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "uniswapV2Pair",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/Users/m4ud/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/access/Ownable.sol",
    "2": "/Users/m4ud/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/token/ERC20/IERC20.sol",
    "3": "/Users/m4ud/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/utils/Context.sol",
    "4": "contracts/dex-2/Sniper.sol",
    "5": "contracts/interfaces/IUniswapV2.sol"
  },
  "ast": {
    "absolutePath": "contracts/dex-2/Sniper.sol",
    "exportedSymbols": {
      "Context": [
        1215
      ],
      "IERC20": [
        1293
      ],
      "IUniswapV2Factory": [
        562
      ],
      "IUniswapV2Pair": [
        802
      ],
      "IUniswapV2Router01": [
        1108
      ],
      "IUniswapV2Router02": [
        1193
      ],
      "IWETH": [
        24
      ],
      "Ownable": [
        496
      ],
      "Sniper": [
        383
      ]
    },
    "id": 384,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.8",
          ".13"
        ],
        "nodeType": "PragmaDirective",
        "src": "116:23:4"
      },
      {
        "absolutePath": "/Users/m4ud/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 384,
        "sourceUnit": 497,
        "src": "141:52:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/m4ud/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/interfaces/IERC20.sol",
        "file": "@openzeppelin/contracts/interfaces/IERC20.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 384,
        "sourceUnit": 500,
        "src": "194:55:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/interfaces/IUniswapV2.sol",
        "file": "../interfaces/IUniswapV2.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 384,
        "sourceUnit": 1194,
        "src": "251:38:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 5,
              "name": "IERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1293,
              "src": "309:6:4"
            },
            "id": 6,
            "nodeType": "InheritanceSpecifier",
            "src": "309:6:4"
          }
        ],
        "canonicalName": "IWETH",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 24,
        "linearizedBaseContracts": [
          24,
          1293
        ],
        "name": "IWETH",
        "nameLocation": "300:5:4",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "functionSelector": "d0e30db0",
            "id": 9,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "331:7:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "338:2:4"
            },
            "returnParameters": {
              "id": 8,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "357:0:4"
            },
            "scope": 24,
            "src": "322:36:4",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1260
            ],
            "functionSelector": "a9059cbb",
            "id": 18,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nameLocation": "372:8:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "389:2:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 18,
                  "src": "381:10:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "381:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "398:5:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 18,
                  "src": "393:10:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "393:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "380:24:4"
            },
            "returnParameters": {
              "id": 17,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 18,
                  "src": "423:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 15,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "423:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "422:6:4"
            },
            "scope": 24,
            "src": "363:66:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "2e1a7d4d",
            "id": 23,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "443:8:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 21,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 23,
                  "src": "452:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 19,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "452:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "451:6:4"
            },
            "returnParameters": {
              "id": 22,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "466:0:4"
            },
            "scope": 24,
            "src": "434:33:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 384,
        "src": "290:179:4",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 26,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 496,
              "src": "572:7:4"
            },
            "id": 27,
            "nodeType": "InheritanceSpecifier",
            "src": "572:7:4"
          }
        ],
        "canonicalName": "Sniper",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 25,
          "nodeType": "StructuredDocumentation",
          "src": "470:82:4",
          "text": " @title Sniper\n @author JohnnyTime (https://smartcontractshacking.com)"
        },
        "fullyImplemented": true,
        "id": 383,
        "linearizedBaseContracts": [
          383,
          496,
          1215
        ],
        "name": "Sniper",
        "nameLocation": "562:6:4",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 30,
            "mutability": "constant",
            "name": "INITIAL_SLIPPAGE",
            "nameLocation": "813:16:4",
            "nodeType": "VariableDeclaration",
            "scope": 383,
            "src": "791:45:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 28,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "791:4:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31303030",
              "id": 29,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "832:4:4",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000_by_1",
                "typeString": "int_const 1000"
              },
              "value": "1000"
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 33,
            "mutability": "constant",
            "name": "SLLIPAGE_INCREMENTS",
            "nameLocation": "937:19:4",
            "nodeType": "VariableDeclaration",
            "scope": 383,
            "src": "915:45:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 31,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "915:4:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "33",
              "id": 32,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "959:1:4",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_3_by_1",
                "typeString": "int_const 3"
              },
              "value": "3"
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "78cc70b2",
            "id": 39,
            "mutability": "mutable",
            "name": "UniswapV2Factory",
            "nameLocation": "980:16:4",
            "nodeType": "VariableDeclaration",
            "scope": 383,
            "src": "965:85:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 34,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "965:7:4",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307835433639624565373031656638313461324236613345444434423136353243423963633561413666",
                  "id": 37,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1007:42:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 36,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "999:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 35,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "999:7:4",
                  "typeDescriptions": {}
                }
              },
              "id": 38,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "999:51:4",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ad5c4648",
            "id": 45,
            "mutability": "mutable",
            "name": "WETH",
            "nameLocation": "1069:4:4",
            "nodeType": "VariableDeclaration",
            "scope": 383,
            "src": "1054:73:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 40,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1054:7:4",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307843303261614133396232323346453844304130653543344632376541443930383343373536436332",
                  "id": 43,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1084:42:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 42,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "1076:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 41,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1076:7:4",
                  "typeDescriptions": {}
                }
              },
              "id": 44,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1076:51:4",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 48,
            "mutability": "immutable",
            "name": "factory",
            "nameLocation": "1168:7:4",
            "nodeType": "VariableDeclaration",
            "scope": 383,
            "src": "1132:43:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IUniswapV2Factory_$562",
              "typeString": "contract IUniswapV2Factory"
            },
            "typeName": {
              "id": 47,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 46,
                "name": "IUniswapV2Factory",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 562,
                "src": "1132:17:4"
              },
              "referencedDeclaration": 562,
              "src": "1132:17:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IUniswapV2Factory_$562",
                "typeString": "contract IUniswapV2Factory"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "49bd5a5e",
            "id": 50,
            "mutability": "mutable",
            "name": "uniswapV2Pair",
            "nameLocation": "1195:13:4",
            "nodeType": "VariableDeclaration",
            "scope": 383,
            "src": "1180:28:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 49,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1180:7:4",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 59,
              "nodeType": "Block",
              "src": "1314:57:4",
              "statements": [
                {
                  "expression": {
                    "id": 57,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 53,
                      "name": "factory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48,
                      "src": "1320:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IUniswapV2Factory_$562",
                        "typeString": "contract IUniswapV2Factory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 55,
                          "name": "UniswapV2Factory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39,
                          "src": "1348:16:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 54,
                        "name": "IUniswapV2Factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 562,
                        "src": "1330:17:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IUniswapV2Factory_$562_$",
                          "typeString": "type(contract IUniswapV2Factory)"
                        }
                      },
                      "id": 56,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1330:35:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IUniswapV2Factory_$562",
                        "typeString": "contract IUniswapV2Factory"
                      }
                    },
                    "src": "1320:45:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IUniswapV2Factory_$562",
                      "typeString": "contract IUniswapV2Factory"
                    }
                  },
                  "id": 58,
                  "nodeType": "ExpressionStatement",
                  "src": "1320:45:4"
                }
              ]
            },
            "id": 60,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 51,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1311:2:4"
            },
            "returnParameters": {
              "id": 52,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1314:0:4"
            },
            "scope": 383,
            "src": "1300:71:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 200,
              "nodeType": "Block",
              "src": "2236:2136:4",
              "statements": [
                {
                  "assignments": [
                    77
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 77,
                      "mutability": "mutable",
                      "name": "pair",
                      "nameLocation": "2498:4:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 200,
                      "src": "2490:12:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 76,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2490:7:4",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 83,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 80,
                        "name": "_tokenIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63,
                        "src": "2521:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 81,
                        "name": "_tokenOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65,
                        "src": "2531:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 78,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48,
                        "src": "2505:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswapV2Factory_$562",
                          "typeString": "contract IUniswapV2Factory"
                        }
                      },
                      "id": 79,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getPair",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 530,
                      "src": "2505:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_address_$",
                        "typeString": "function (address,address) view external returns (address)"
                      }
                    },
                    "id": 82,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2505:36:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2490:51:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 90,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 85,
                          "name": "pair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 77,
                          "src": "2555:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 88,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2571:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 87,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2563:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 86,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2563:7:4",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 89,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2563:10:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2555:18:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5061697220646f6573206e6f742065786973747321",
                        "id": 91,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2575:23:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b705f5360968e84e10fd36dcbc7731e1a4b41e559f3edaad1dfa591db73d002c",
                          "typeString": "literal_string \"Pair does not exists!\""
                        },
                        "value": "Pair does not exists!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b705f5360968e84e10fd36dcbc7731e1a4b41e559f3edaad1dfa591db73d002c",
                          "typeString": "literal_string \"Pair does not exists!\""
                        }
                      ],
                      "id": 84,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2547:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 92,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2547:52:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 93,
                  "nodeType": "ExpressionStatement",
                  "src": "2547:52:4"
                },
                {
                  "assignments": [
                    95,
                    97
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 95,
                      "mutability": "mutable",
                      "name": "token0",
                      "nameLocation": "2762:6:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 200,
                      "src": "2754:14:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 94,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2754:7:4",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 97,
                      "mutability": "mutable",
                      "name": "token1",
                      "nameLocation": "2778:6:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 200,
                      "src": "2770:14:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 96,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2770:7:4",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 102,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 99,
                        "name": "_tokenIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63,
                        "src": "2800:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 100,
                        "name": "_tokenOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65,
                        "src": "2810:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 98,
                      "name": "_sortTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 325,
                      "src": "2788:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$returns$_t_address_$_t_address_$",
                        "typeString": "function (address,address) pure returns (address,address)"
                      }
                    },
                    "id": 101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2788:32:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                      "typeString": "tuple(address,address)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2753:67:4"
                },
                {
                  "assignments": [
                    104
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 104,
                      "mutability": "mutable",
                      "name": "amountOut",
                      "nameLocation": "2835:9:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 200,
                      "src": "2827:17:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 103,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2827:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 105,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2827:17:4"
                },
                {
                  "id": 139,
                  "nodeType": "Block",
                  "src": "2913:518:4",
                  "statements": [
                    {
                      "assignments": [
                        107,
                        109,
                        null
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 107,
                          "mutability": "mutable",
                          "name": "reserve0",
                          "nameLocation": "3007:8:4",
                          "nodeType": "VariableDeclaration",
                          "scope": 139,
                          "src": "2999:16:4",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 106,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "2999:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "visibility": "internal"
                        },
                        {
                          "constant": false,
                          "id": 109,
                          "mutability": "mutable",
                          "name": "reserve1",
                          "nameLocation": "3025:8:4",
                          "nodeType": "VariableDeclaration",
                          "scope": 139,
                          "src": "3017:16:4",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 108,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "3017:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "visibility": "internal"
                        },
                        null
                      ],
                      "id": 115,
                      "initialValue": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "arguments": [
                              {
                                "id": 111,
                                "name": "pair",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 77,
                                "src": "3054:4:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 110,
                              "name": "IUniswapV2Pair",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 802,
                              "src": "3039:14:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IUniswapV2Pair_$802_$",
                                "typeString": "type(contract IUniswapV2Pair)"
                              }
                            },
                            "id": 112,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3039:20:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IUniswapV2Pair_$802",
                              "typeString": "contract IUniswapV2Pair"
                            }
                          },
                          "id": 113,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getReserves",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 744,
                          "src": "3039:32:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint112_$_t_uint112_$_t_uint32_$",
                            "typeString": "function () view external returns (uint112,uint112,uint32)"
                          }
                        },
                        "id": 114,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3039:34:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$_t_uint32_$",
                          "typeString": "tuple(uint112,uint112,uint32)"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "2998:75:4"
                    },
                    {
                      "assignments": [
                        117,
                        119
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 117,
                          "mutability": "mutable",
                          "name": "reserveIn",
                          "nameLocation": "3090:9:4",
                          "nodeType": "VariableDeclaration",
                          "scope": 139,
                          "src": "3082:17:4",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 116,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "3082:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "visibility": "internal"
                        },
                        {
                          "constant": false,
                          "id": 119,
                          "mutability": "mutable",
                          "name": "reserveOut",
                          "nameLocation": "3109:10:4",
                          "nodeType": "VariableDeclaration",
                          "scope": 139,
                          "src": "3101:18:4",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 118,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "3101:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 130,
                      "initialValue": {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 122,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 120,
                            "name": "_tokenIn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 63,
                            "src": "3123:8:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 121,
                            "name": "token0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 95,
                            "src": "3135:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3123:18:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseExpression": {
                          "components": [
                            {
                              "id": 126,
                              "name": "reserve1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 109,
                              "src": "3168:8:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 127,
                              "name": "reserve0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 107,
                              "src": "3178:8:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 128,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "3167:20:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                            "typeString": "tuple(uint256,uint256)"
                          }
                        },
                        "id": 129,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "Conditional",
                        "src": "3123:64:4",
                        "trueExpression": {
                          "components": [
                            {
                              "id": 123,
                              "name": "reserve0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 107,
                              "src": "3145:8:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 124,
                              "name": "reserve1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 109,
                              "src": "3155:8:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 125,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "3144:20:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                            "typeString": "tuple(uint256,uint256)"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                          "typeString": "tuple(uint256,uint256)"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "3081:106:4"
                    },
                    {
                      "expression": {
                        "id": 137,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 131,
                          "name": "amountOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 104,
                          "src": "3358:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "id": 133,
                              "name": "_amountIn",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 67,
                              "src": "3384:9:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 134,
                              "name": "reserveIn",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 117,
                              "src": "3395:9:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 135,
                              "name": "reserveOut",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 119,
                              "src": "3406:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 132,
                            "name": "_getAmountOut",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 382,
                            "src": "3370:13:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 136,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3370:47:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3358:59:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 138,
                      "nodeType": "ExpressionStatement",
                      "src": "3358:59:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 146,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 77,
                            "src": "3524:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 145,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3516:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 144,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3516:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 147,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3516:13:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 148,
                        "name": "_amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67,
                        "src": "3531:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 141,
                            "name": "_tokenIn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 63,
                            "src": "3497:8:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 140,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1293,
                          "src": "3490:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$1293_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 142,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3490:16:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1293",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 143,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1260,
                      "src": "3490:25:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3490:51:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 150,
                  "nodeType": "ExpressionStatement",
                  "src": "3490:51:4"
                },
                {
                  "assignments": [
                    152,
                    154
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 152,
                      "mutability": "mutable",
                      "name": "amount0Out",
                      "nameLocation": "3964:10:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 200,
                      "src": "3956:18:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 151,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3956:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 154,
                      "mutability": "mutable",
                      "name": "amount1Out",
                      "nameLocation": "3984:10:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 200,
                      "src": "3976:18:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 153,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3976:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 171,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 157,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 155,
                        "name": "_tokenIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63,
                        "src": "3999:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "id": 156,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 95,
                        "src": "4011:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "3999:18:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "components": [
                        {
                          "id": 164,
                          "name": "amountOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 104,
                          "src": "4047:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 167,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4066:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 166,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4058:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 165,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4058:7:4",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 168,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4058:10:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 169,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "4046:23:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "id": 170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "3999:70:4",
                    "trueExpression": {
                      "components": [
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 160,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4029:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 159,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4021:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 158,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4021:7:4",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 161,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4021:10:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 162,
                          "name": "amountOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 104,
                          "src": "4033:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 163,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "4020:23:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3955:114:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 175,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 77,
                            "src": "4182:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 174,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4174:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 173,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4174:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 176,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4174:13:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 177,
                        "name": "amount0Out",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 152,
                        "src": "4189:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 178,
                        "name": "amount1Out",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 154,
                        "src": "4201:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 179,
                        "name": "_maxRetries",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 71,
                        "src": "4213:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 180,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4226:1:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 172,
                      "name": "_swapWithRetries",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 280,
                      "src": "4157:16:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_uint8_$returns$__$",
                        "typeString": "function (address,uint256,uint256,uint8,uint8)"
                      }
                    },
                    "id": 181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4157:71:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 182,
                  "nodeType": "ExpressionStatement",
                  "src": "4157:71:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 187,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 424,
                          "src": "4314:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 188,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4314:7:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 195,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "4359:4:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Sniper_$383",
                                  "typeString": "contract Sniper"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Sniper_$383",
                                  "typeString": "contract Sniper"
                                }
                              ],
                              "id": 194,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4351:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 193,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4351:7:4",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 196,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4351:13:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 190,
                                "name": "_tokenOut",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 65,
                                "src": "4330:9:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 189,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1293,
                              "src": "4323:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$1293_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 191,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4323:17:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1293",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 192,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1250,
                          "src": "4323:27:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 197,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4323:42:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 184,
                            "name": "_tokenOut",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 65,
                            "src": "4294:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 183,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1293,
                          "src": "4287:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$1293_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 185,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4287:17:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1293",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 186,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1260,
                      "src": "4287:26:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4287:79:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 199,
                  "nodeType": "ExpressionStatement",
                  "src": "4287:79:4"
                }
              ]
            },
            "documentation": {
              "id": 61,
              "nodeType": "StructuredDocumentation",
              "src": "1375:705:4",
              "text": " The main external snipe function that is being called by the contract owner.\n Checks the the current reserves, determines the expected amountOut.\n If amountOut >= `_absoluteMinAmountOut`, it will try to swap the tokens `_maxRetries` times\n using the internal `_swapWithRetries` function.\n @param _tokenIn the token address you want to sell\n @param _tokenOut the token address you want to buy\n @param _amountIn the amount of tokens you are sending in\n @param _absoluteMinAmountOut the minimum amount of tokens you want out of the trade\n @param _maxRetries In case the swap fails, it will try again _maxRetries times (with higher slippage tolerance every time)"
            },
            "functionSelector": "9b905146",
            "id": 201,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 74,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 73,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 415,
                  "src": "2226:9:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "2226:9:4"
              }
            ],
            "name": "snipe",
            "nameLocation": "2092:5:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 72,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63,
                  "mutability": "mutable",
                  "name": "_tokenIn",
                  "nameLocation": "2111:8:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 201,
                  "src": "2103:16:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2103:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 65,
                  "mutability": "mutable",
                  "name": "_tokenOut",
                  "nameLocation": "2129:9:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 201,
                  "src": "2121:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 64,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2121:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67,
                  "mutability": "mutable",
                  "name": "_amountIn",
                  "nameLocation": "2148:9:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 201,
                  "src": "2140:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 66,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2140:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 69,
                  "mutability": "mutable",
                  "name": "_absoluteMinAmountOut",
                  "nameLocation": "2171:21:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 201,
                  "src": "2163:29:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 68,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2163:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 71,
                  "mutability": "mutable",
                  "name": "_maxRetries",
                  "nameLocation": "2200:11:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 201,
                  "src": "2194:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 70,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2194:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2097:115:4"
            },
            "returnParameters": {
              "id": 75,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2236:0:4"
            },
            "scope": 383,
            "src": "2083:2289:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 279,
              "nodeType": "Block",
              "src": "4742:1296:4",
              "statements": [
                {
                  "assignments": [
                    216
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 216,
                      "mutability": "mutable",
                      "name": "slippageTolerance",
                      "nameLocation": "5008:17:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 279,
                      "src": "5000:25:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 215,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5000:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 217,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5000:25:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 221,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 219,
                          "name": "_maxRetries",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 210,
                          "src": "5086:11:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 220,
                          "name": "_retryNo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 212,
                          "src": "5101:8:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "src": "5086:23:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "547269656420656e6f75676821",
                        "id": 222,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5111:15:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_00be5b1821bff0ef46110aded8c37d55ea6e3738c80cc982e6300ca0ef5979f5",
                          "typeString": "literal_string \"Tried enough!\""
                        },
                        "value": "Tried enough!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_00be5b1821bff0ef46110aded8c37d55ea6e3738c80cc982e6300ca0ef5979f5",
                          "typeString": "literal_string \"Tried enough!\""
                        }
                      ],
                      "id": 218,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5078:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 223,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5078:49:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 224,
                  "nodeType": "ExpressionStatement",
                  "src": "5078:49:4"
                },
                {
                  "expression": {
                    "id": 232,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 225,
                      "name": "slippageTolerance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 216,
                      "src": "5328:17:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 231,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 226,
                        "name": "INITIAL_SLIPPAGE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30,
                        "src": "5348:16:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 229,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 227,
                              "name": "SLLIPAGE_INCREMENTS",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33,
                              "src": "5368:19:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "id": 228,
                              "name": "_retryNo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 212,
                              "src": "5390:8:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "src": "5368:30:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 230,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "5367:32:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "5348:51:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5328:71:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 233,
                  "nodeType": "ExpressionStatement",
                  "src": "5328:71:4"
                },
                {
                  "expression": {
                    "id": 240,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 234,
                      "name": "_amount0Out",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 206,
                      "src": "5452:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 239,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 237,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 235,
                          "name": "_amount0Out",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 206,
                          "src": "5467:11:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "id": 236,
                          "name": "slippageTolerance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 216,
                          "src": "5481:17:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5467:31:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "hexValue": "31303030",
                        "id": 238,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5501:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      },
                      "src": "5467:38:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5452:53:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 241,
                  "nodeType": "ExpressionStatement",
                  "src": "5452:53:4"
                },
                {
                  "expression": {
                    "id": 248,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 242,
                      "name": "_amount1Out",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 208,
                      "src": "5511:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 247,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 245,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 243,
                          "name": "_amount1Out",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 208,
                          "src": "5525:11:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "id": 244,
                          "name": "slippageTolerance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 216,
                          "src": "5539:17:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5525:31:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "hexValue": "31303030",
                        "id": 246,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5559:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      },
                      "src": "5525:38:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5511:52:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 249,
                  "nodeType": "ExpressionStatement",
                  "src": "5511:52:4"
                },
                {
                  "clauses": [
                    {
                      "block": {
                        "id": 265,
                        "nodeType": "Block",
                        "src": "5829:8:4",
                        "statements": []
                      },
                      "errorName": "",
                      "id": 266,
                      "nodeType": "TryCatchClause",
                      "src": "5829:8:4"
                    },
                    {
                      "block": {
                        "id": 276,
                        "nodeType": "Block",
                        "src": "5844:89:4",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 268,
                                  "name": "_pair",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 204,
                                  "src": "5869:5:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 269,
                                  "name": "_amount0Out",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 206,
                                  "src": "5876:11:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 270,
                                  "name": "_amount1Out",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 208,
                                  "src": "5889:11:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 271,
                                  "name": "_maxRetries",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 210,
                                  "src": "5902:11:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                {
                                  "id": 273,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "UnaryOperation",
                                  "operator": "++",
                                  "prefix": false,
                                  "src": "5915:10:4",
                                  "subExpression": {
                                    "id": 272,
                                    "name": "_retryNo",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 212,
                                    "src": "5915:8:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  },
                                  {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                ],
                                "id": 267,
                                "name": "_swapWithRetries",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 280,
                                "src": "5852:16:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_uint8_$returns$__$",
                                  "typeString": "function (address,uint256,uint256,uint8,uint8)"
                                }
                              },
                              "id": 274,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5852:74:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 275,
                            "nodeType": "ExpressionStatement",
                            "src": "5852:74:4"
                          }
                        ]
                      },
                      "errorName": "",
                      "id": 277,
                      "nodeType": "TryCatchClause",
                      "src": "5838:95:4"
                    }
                  ],
                  "externalCall": {
                    "arguments": [
                      {
                        "id": 254,
                        "name": "_amount0Out",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 206,
                        "src": "5774:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 255,
                        "name": "_amount1Out",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 208,
                        "src": "5787:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 258,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5808:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Sniper_$383",
                              "typeString": "contract Sniper"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Sniper_$383",
                              "typeString": "contract Sniper"
                            }
                          ],
                          "id": 257,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5800:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 256,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5800:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 259,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5800:13:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 262,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5825:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 261,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "5815:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (bytes memory)"
                          },
                          "typeName": {
                            "id": 260,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "5819:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes"
                            }
                          }
                        },
                        "id": 263,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5815:12:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 251,
                            "name": "_pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 204,
                            "src": "5762:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 250,
                          "name": "IUniswapV2Pair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 802,
                          "src": "5747:14:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IUniswapV2Pair_$802_$",
                            "typeString": "type(contract IUniswapV2Pair)"
                          }
                        },
                        "id": 252,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5747:21:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswapV2Pair_$802",
                          "typeString": "contract IUniswapV2Pair"
                        }
                      },
                      "id": 253,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "swap",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 786,
                      "src": "5747:26:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,address,bytes memory) external"
                      }
                    },
                    "id": 264,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5747:81:4",
                    "tryCall": true,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 278,
                  "nodeType": "TryStatement",
                  "src": "5743:190:4"
                }
              ]
            },
            "documentation": {
              "id": 202,
              "nodeType": "StructuredDocumentation",
              "src": "4376:226:4",
              "text": " Internal function that will try to swap the tokens using the pair contract\n In case the swap failed, it will call itself again with higher slippage\n and try again until the swap succeded or `_maxRetries`"
            },
            "id": 280,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_swapWithRetries",
            "nameLocation": "4614:16:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 213,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 204,
                  "mutability": "mutable",
                  "name": "_pair",
                  "nameLocation": "4644:5:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 280,
                  "src": "4636:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 203,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4636:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 206,
                  "mutability": "mutable",
                  "name": "_amount0Out",
                  "nameLocation": "4659:11:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 280,
                  "src": "4651:19:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 205,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4651:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 208,
                  "mutability": "mutable",
                  "name": "_amount1Out",
                  "nameLocation": "4680:11:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 280,
                  "src": "4672:19:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 207,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4672:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 210,
                  "mutability": "mutable",
                  "name": "_maxRetries",
                  "nameLocation": "4699:11:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 280,
                  "src": "4693:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 209,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "4693:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 212,
                  "mutability": "mutable",
                  "name": "_retryNo",
                  "nameLocation": "4718:8:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 280,
                  "src": "4712:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 211,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "4712:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4630:102:4"
            },
            "returnParameters": {
              "id": 214,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4742:0:4"
            },
            "scope": 383,
            "src": "4605:1433:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 324,
              "nodeType": "Block",
              "src": "6298:337:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 295,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 293,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 283,
                          "src": "6415:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 294,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 285,
                          "src": "6425:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6415:16:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "556e697377617056323a204944454e544943414c5f414444524553534553",
                        "id": 296,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6433:32:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1af2ec9097b2f8bc2dcfea53a9ab4b2cdab42fa29e9a9e04dcb14b4efcc8aa70",
                          "typeString": "literal_string \"UniswapV2: IDENTICAL_ADDRESSES\""
                        },
                        "value": "UniswapV2: IDENTICAL_ADDRESSES"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1af2ec9097b2f8bc2dcfea53a9ab4b2cdab42fa29e9a9e04dcb14b4efcc8aa70",
                          "typeString": "literal_string \"UniswapV2: IDENTICAL_ADDRESSES\""
                        }
                      ],
                      "id": 292,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6407:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6407:59:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 298,
                  "nodeType": "ExpressionStatement",
                  "src": "6407:59:4"
                },
                {
                  "assignments": [
                    300,
                    302
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 300,
                      "mutability": "mutable",
                      "name": "token0",
                      "nameLocation": "6485:6:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 324,
                      "src": "6477:14:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 299,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6477:7:4",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 302,
                      "mutability": "mutable",
                      "name": "token1",
                      "nameLocation": "6501:6:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 324,
                      "src": "6493:14:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 301,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6493:7:4",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 313,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 305,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 303,
                        "name": "tokenA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 283,
                        "src": "6511:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "id": 304,
                        "name": "tokenB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 285,
                        "src": "6520:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "6511:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "components": [
                        {
                          "id": 309,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 285,
                          "src": "6549:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 310,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 283,
                          "src": "6557:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 311,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "6548:16:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                        "typeString": "tuple(address,address)"
                      }
                    },
                    "id": 312,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "6511:53:4",
                    "trueExpression": {
                      "components": [
                        {
                          "id": 306,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 283,
                          "src": "6530:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 307,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 285,
                          "src": "6538:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 308,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "6529:16:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                        "typeString": "tuple(address,address)"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                      "typeString": "tuple(address,address)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6476:88:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 320,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 315,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 300,
                          "src": "6582:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 318,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6600:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 317,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6592:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 316,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6592:7:4",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 319,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6592:10:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6582:20:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "556e697377617056323a205a45524f5f41444452455353",
                        "id": 321,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6604:25:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9fd3496d51391106f97d9c12d75d9ef2543a217eeaf4b9c52c6fdbe23f45a5ae",
                          "typeString": "literal_string \"UniswapV2: ZERO_ADDRESS\""
                        },
                        "value": "UniswapV2: ZERO_ADDRESS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9fd3496d51391106f97d9c12d75d9ef2543a217eeaf4b9c52c6fdbe23f45a5ae",
                          "typeString": "literal_string \"UniswapV2: ZERO_ADDRESS\""
                        }
                      ],
                      "id": 314,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6574:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6574:56:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 323,
                  "nodeType": "ExpressionStatement",
                  "src": "6574:56:4"
                }
              ]
            },
            "documentation": {
              "id": 281,
              "nodeType": "StructuredDocumentation",
              "src": "6042:145:4",
              "text": " Internal function to sort the tokens by their addresses\n Exact same logic like in the Unsiwap Factory `createPair()` function."
            },
            "id": 325,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_sortTokens",
            "nameLocation": "6199:11:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 286,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 283,
                  "mutability": "mutable",
                  "name": "tokenA",
                  "nameLocation": "6219:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 325,
                  "src": "6211:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 282,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6211:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 285,
                  "mutability": "mutable",
                  "name": "tokenB",
                  "nameLocation": "6235:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 325,
                  "src": "6227:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 284,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6227:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6210:32:4"
            },
            "returnParameters": {
              "id": 291,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 288,
                  "mutability": "mutable",
                  "name": "token0",
                  "nameLocation": "6274:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 325,
                  "src": "6266:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 287,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6266:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 290,
                  "mutability": "mutable",
                  "name": "token1",
                  "nameLocation": "6290:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 325,
                  "src": "6282:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 289,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6282:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6265:32:4"
            },
            "scope": 383,
            "src": "6190:445:4",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 381,
              "nodeType": "Block",
              "src": "6966:554:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 340,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 338,
                          "name": "amountIn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 328,
                          "src": "7072:8:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 339,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7083:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "7072:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "556e697377617056324c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e54",
                        "id": 341,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7086:45:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ec21b006eb37ef20d0f4abcabd34de6854fa68af48294244e0263dc05c1dbbae",
                          "typeString": "literal_string \"UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT\""
                        },
                        "value": "UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ec21b006eb37ef20d0f4abcabd34de6854fa68af48294244e0263dc05c1dbbae",
                          "typeString": "literal_string \"UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT\""
                        }
                      ],
                      "id": 337,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7064:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 342,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7064:68:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 343,
                  "nodeType": "ExpressionStatement",
                  "src": "7064:68:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 351,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 347,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 345,
                            "name": "reserveIn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 330,
                            "src": "7150:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 346,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7162:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "7150:13:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 350,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 348,
                            "name": "reserveOut",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 332,
                            "src": "7167:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 349,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7180:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "7167:14:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "7150:31:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "556e697377617056324c6962726172793a20494e53554646494349454e545f4c4951554944495459",
                        "id": 352,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7183:42:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7e8d6b265173dbbd87b3b9e2bf4238bea6caf2b2bbeb63f859a738aec9e761c8",
                          "typeString": "literal_string \"UniswapV2Library: INSUFFICIENT_LIQUIDITY\""
                        },
                        "value": "UniswapV2Library: INSUFFICIENT_LIQUIDITY"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7e8d6b265173dbbd87b3b9e2bf4238bea6caf2b2bbeb63f859a738aec9e761c8",
                          "typeString": "literal_string \"UniswapV2Library: INSUFFICIENT_LIQUIDITY\""
                        }
                      ],
                      "id": 344,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7142:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 353,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7142:84:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 354,
                  "nodeType": "ExpressionStatement",
                  "src": "7142:84:4"
                },
                {
                  "assignments": [
                    356
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 356,
                      "mutability": "mutable",
                      "name": "amountInWithFee",
                      "nameLocation": "7241:15:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 381,
                      "src": "7236:20:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 355,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "7236:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 360,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 359,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 357,
                      "name": "amountIn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 328,
                      "src": "7259:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "hexValue": "393937",
                      "id": 358,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7270:3:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_997_by_1",
                        "typeString": "int_const 997"
                      },
                      "value": "997"
                    },
                    "src": "7259:14:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7236:37:4"
                },
                {
                  "assignments": [
                    362
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 362,
                      "mutability": "mutable",
                      "name": "numerator",
                      "nameLocation": "7367:9:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 381,
                      "src": "7362:14:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 361,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "7362:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 366,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 365,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 363,
                      "name": "amountInWithFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 356,
                      "src": "7379:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "id": 364,
                      "name": "reserveOut",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 332,
                      "src": "7397:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7379:28:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7362:45:4"
                },
                {
                  "assignments": [
                    368
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 368,
                      "mutability": "mutable",
                      "name": "denominator",
                      "nameLocation": "7422:11:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 381,
                      "src": "7417:16:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 367,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "7417:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 374,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 373,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 371,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 369,
                        "name": "reserveIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 330,
                        "src": "7436:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "hexValue": "31303030",
                        "id": 370,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7448:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      },
                      "src": "7436:16:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "id": 372,
                      "name": "amountInWithFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 356,
                      "src": "7455:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7436:34:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7417:53:4"
                },
                {
                  "expression": {
                    "id": 379,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 375,
                      "name": "amountOut",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 335,
                      "src": "7480:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 378,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 376,
                        "name": "numerator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 362,
                        "src": "7492:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "id": 377,
                        "name": "denominator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 368,
                        "src": "7504:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "7492:23:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7480:35:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 380,
                  "nodeType": "ExpressionStatement",
                  "src": "7480:35:4"
                }
              ]
            },
            "documentation": {
              "id": 326,
              "nodeType": "StructuredDocumentation",
              "src": "6639:214:4",
              "text": " Internal function to get the expected amount of tokens which we will receive based on given `amountIn` and pair reserves.\n Exact same logic like in the Unsiwap Library `_getAmountOut()` function."
            },
            "id": 382,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getAmountOut",
            "nameLocation": "6865:13:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 333,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 328,
                  "mutability": "mutable",
                  "name": "amountIn",
                  "nameLocation": "6884:8:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 382,
                  "src": "6879:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 327,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6879:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 330,
                  "mutability": "mutable",
                  "name": "reserveIn",
                  "nameLocation": "6899:9:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 382,
                  "src": "6894:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 329,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6894:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 332,
                  "mutability": "mutable",
                  "name": "reserveOut",
                  "nameLocation": "6915:10:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 382,
                  "src": "6910:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 331,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6910:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6878:48:4"
            },
            "returnParameters": {
              "id": 336,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 335,
                  "mutability": "mutable",
                  "name": "amountOut",
                  "nameLocation": "6955:9:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 382,
                  "src": "6950:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 334,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6950:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6949:16:4"
            },
            "scope": 383,
            "src": "6856:664:4",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 384,
        "src": "553:6972:4",
        "usedErrors": []
      }
    ],
    "src": "116:7409:4"
  },
  "bytecode": "60a0604052600180546001600160a01b0319908116735c69bee701ef814a2b6a3edd4b1652cb9cc5aa6f179091556002805490911673c02aaa39b223fe8d0a0e5c4f27ead9083c756cc217905534801561005857600080fd5b5061006233610076565b6001546001600160a01b03166080526100c6565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b608051610bad6100e1600039600061015e0152610bad6000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80638da5cb5b1161005b5780638da5cb5b146100ce5780639b905146146100df578063ad5c4648146100f2578063f2fde38b1461010557600080fd5b806349bd5a5e14610082578063715018a6146100b157806378cc70b2146100bb575b600080fd5b600354610095906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b6100b9610118565b005b600154610095906001600160a01b031681565b6000546001600160a01b0316610095565b6100b96100ed366004610912565b61012c565b600254610095906001600160a01b031681565b6100b9610113366004610977565b6104a7565b610120610520565b61012a600061057a565b565b610134610520565b60405163e6a4390560e01b81526001600160a01b03868116600483015285811660248301526000917f00000000000000000000000000000000000000000000000000000000000000009091169063e6a4390590604401602060405180830381865afa1580156101a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101cb919061099b565b90506001600160a01b0381166102205760405162461bcd60e51b81526020600482015260156024820152745061697220646f6573206e6f74206578697374732160581b60448201526064015b60405180910390fd5b60008061022d88886105ca565b915091506000806000856001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa158015610274573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061029891906109d4565b506001600160701b031691506001600160701b03169150600080866001600160a01b03168d6001600160a01b0316146102d25782846102d5565b83835b915091506102e48b83836106b8565b60405163a9059cbb60e01b81526001600160a01b038a81166004830152602482018e9052919650908e16945063a9059cbb935060440191506103239050565b6020604051808303816000875af1158015610342573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103669190610a24565b50600080846001600160a01b03168b6001600160a01b03161461038b5782600061038f565b6000835b915091506103a18683838a60006107d8565b896001600160a01b031663a9059cbb6103c26000546001600160a01b031690565b6040516370a0823160e01b81523060048201526001600160a01b038e16906370a0823190602401602060405180830381865afa158015610406573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042a9190610a46565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015610475573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104999190610a24565b505050505050505050505050565b6104af610520565b6001600160a01b0381166105145760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610217565b61051d8161057a565b50565b6000546001600160a01b0316331461012a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610217565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080826001600160a01b0316846001600160a01b03160361062e5760405162461bcd60e51b815260206004820152601e60248201527f556e697377617056323a204944454e544943414c5f41444452455353455300006044820152606401610217565b600080846001600160a01b0316866001600160a01b031610610651578486610654565b85855b90925090506001600160a01b0382166106af5760405162461bcd60e51b815260206004820152601760248201527f556e697377617056323a205a45524f5f414444524553530000000000000000006044820152606401610217565b50509250929050565b600080841161071d5760405162461bcd60e51b815260206004820152602b60248201527f556e697377617056324c6962726172793a20494e53554646494349454e545f4960448201526a1394155517d05353d5539560aa1b6064820152608401610217565b60008311801561072d5750600082115b61078a5760405162461bcd60e51b815260206004820152602860248201527f556e697377617056324c6962726172793a20494e53554646494349454e545f4c604482015267495155494449545960c01b6064820152608401610217565b6000610798856103e5610a75565b905060006107a68483610a75565b90506000826107b7876103e8610a75565b6107c19190610a94565b90506107cd8183610aac565b979650505050505050565b60008160ff168360ff1610156108205760405162461bcd60e51b815260206004820152600d60248201526c547269656420656e6f7567682160981b6044820152606401610217565b61082e60ff83166003610a75565b61083a906103e8610ace565b90506103e86108498287610a75565b6108539190610aac565b94506103e86108628286610a75565b61086c9190610aac565b6040805160008152602081019182905263022c0d9f60e01b9091529094506001600160a01b0387169063022c0d9f906108ae9088908890309060248101610ae5565b600060405180830381600087803b1580156108c857600080fd5b505af19250505080156108d9575060015b6108f5576108f586868686866108ee81610b58565b97506107d8565b505050505050565b6001600160a01b038116811461051d57600080fd5b600080600080600060a0868803121561092a57600080fd5b8535610935816108fd565b94506020860135610945816108fd565b93506040860135925060608601359150608086013560ff8116811461096957600080fd5b809150509295509295909350565b60006020828403121561098957600080fd5b8135610994816108fd565b9392505050565b6000602082840312156109ad57600080fd5b8151610994816108fd565b80516001600160701b03811681146109cf57600080fd5b919050565b6000806000606084860312156109e957600080fd5b6109f2846109b8565b9250610a00602085016109b8565b9150604084015163ffffffff81168114610a1957600080fd5b809150509250925092565b600060208284031215610a3657600080fd5b8151801515811461099457600080fd5b600060208284031215610a5857600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615610a8f57610a8f610a5f565b500290565b60008219821115610aa757610aa7610a5f565b500190565b600082610ac957634e487b7160e01b600052601260045260246000fd5b500490565b600082821015610ae057610ae0610a5f565b500390565b84815260006020858184015260018060a01b038516604084015260806060840152835180608085015260005b81811015610b2d5785810183015185820160a001528201610b11565b81811115610b3f57600060a083870101525b50601f01601f19169290920160a0019695505050505050565b600060ff821660ff8103610b6e57610b6e610a5f565b6001019291505056fea2646970667358221220495213d35ef88a2da2676e6093625d1fbc2155ed5516916c55f5f1b44108de7064736f6c634300080d0033",
  "bytecodeSha1": "821cdddcbcabd8be9c7e747898d8328c9bff9fe5",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.13+commit.abaa5c0e"
  },
  "contractName": "Sniper",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable._checkOwner": {
          "34": [
            1422,
            1445,
            true
          ]
        },
        "Ownable.transferOwnership": {
          "33": [
            2169,
            2191,
            true
          ]
        }
      },
      "2": {},
      "3": {},
      "4": {
        "Sniper._getAmountOut": {
          "29": [
            7072,
            7084,
            true
          ],
          "30": [
            7150,
            7163,
            false
          ],
          "31": [
            7167,
            7181,
            true
          ]
        },
        "Sniper._sortTokens": {
          "26": [
            6415,
            6431,
            true
          ],
          "27": [
            6511,
            6526,
            true
          ],
          "28": [
            6582,
            6602,
            true
          ]
        },
        "Sniper._swapWithRetries": {
          "32": [
            5086,
            5109,
            true
          ]
        },
        "Sniper.snipe": {
          "23": [
            2555,
            2573,
            true
          ],
          "24": [
            3123,
            3141,
            true
          ],
          "25": [
            3999,
            4017,
            true
          ]
        }
      },
      "5": {}
    },
    "statements": {
      "0": {
        "Ownable._checkOwner": {
          "10": [
            1414,
            1482
          ]
        },
        "Ownable._transferOwnership": {
          "11": [
            2541,
            2558
          ],
          "12": [
            2568,
            2613
          ]
        },
        "Ownable.owner": {
          "0": [
            1266,
            1279
          ]
        },
        "Ownable.renounceOwnership": {
          "1": [
            1895,
            1925
          ]
        },
        "Ownable.transferOwnership": {
          "7": [
            2161,
            2234
          ],
          "8": [
            2244,
            2272
          ]
        }
      },
      "2": {},
      "3": {
        "Context._msgSender": {
          "9": [
            712,
            729
          ]
        }
      },
      "4": {
        "Sniper._getAmountOut": {
          "15": [
            7064,
            7132
          ],
          "16": [
            7142,
            7226
          ],
          "17": [
            7480,
            7515
          ]
        },
        "Sniper._sortTokens": {
          "13": [
            6407,
            6466
          ],
          "14": [
            6574,
            6630
          ]
        },
        "Sniper._swapWithRetries": {
          "18": [
            5078,
            5127
          ],
          "19": [
            5328,
            5399
          ],
          "20": [
            5452,
            5505
          ],
          "21": [
            5511,
            5563
          ],
          "22": [
            5852,
            5926
          ]
        },
        "Sniper.snipe": {
          "2": [
            2547,
            2599
          ],
          "3": [
            3358,
            3417
          ],
          "4": [
            3490,
            3541
          ],
          "5": [
            4157,
            4228
          ],
          "6": [
            4287,
            4366
          ]
        }
      },
      "5": {}
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.8.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.8.0/IERC20",
    "IUniswapV2Factory",
    "IUniswapV2Pair",
    "OpenZeppelin/openzeppelin-contracts@4.8.0/Ownable"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b506004361061007d5760003560e01c80638da5cb5b1161005b5780638da5cb5b146100ce5780639b905146146100df578063ad5c4648146100f2578063f2fde38b1461010557600080fd5b806349bd5a5e14610082578063715018a6146100b157806378cc70b2146100bb575b600080fd5b600354610095906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b6100b9610118565b005b600154610095906001600160a01b031681565b6000546001600160a01b0316610095565b6100b96100ed366004610912565b61012c565b600254610095906001600160a01b031681565b6100b9610113366004610977565b6104a7565b610120610520565b61012a600061057a565b565b610134610520565b60405163e6a4390560e01b81526001600160a01b03868116600483015285811660248301526000917f00000000000000000000000000000000000000000000000000000000000000009091169063e6a4390590604401602060405180830381865afa1580156101a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101cb919061099b565b90506001600160a01b0381166102205760405162461bcd60e51b81526020600482015260156024820152745061697220646f6573206e6f74206578697374732160581b60448201526064015b60405180910390fd5b60008061022d88886105ca565b915091506000806000856001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa158015610274573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061029891906109d4565b506001600160701b031691506001600160701b03169150600080866001600160a01b03168d6001600160a01b0316146102d25782846102d5565b83835b915091506102e48b83836106b8565b60405163a9059cbb60e01b81526001600160a01b038a81166004830152602482018e9052919650908e16945063a9059cbb935060440191506103239050565b6020604051808303816000875af1158015610342573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103669190610a24565b50600080846001600160a01b03168b6001600160a01b03161461038b5782600061038f565b6000835b915091506103a18683838a60006107d8565b896001600160a01b031663a9059cbb6103c26000546001600160a01b031690565b6040516370a0823160e01b81523060048201526001600160a01b038e16906370a0823190602401602060405180830381865afa158015610406573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042a9190610a46565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015610475573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104999190610a24565b505050505050505050505050565b6104af610520565b6001600160a01b0381166105145760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610217565b61051d8161057a565b50565b6000546001600160a01b0316331461012a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610217565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080826001600160a01b0316846001600160a01b03160361062e5760405162461bcd60e51b815260206004820152601e60248201527f556e697377617056323a204944454e544943414c5f41444452455353455300006044820152606401610217565b600080846001600160a01b0316866001600160a01b031610610651578486610654565b85855b90925090506001600160a01b0382166106af5760405162461bcd60e51b815260206004820152601760248201527f556e697377617056323a205a45524f5f414444524553530000000000000000006044820152606401610217565b50509250929050565b600080841161071d5760405162461bcd60e51b815260206004820152602b60248201527f556e697377617056324c6962726172793a20494e53554646494349454e545f4960448201526a1394155517d05353d5539560aa1b6064820152608401610217565b60008311801561072d5750600082115b61078a5760405162461bcd60e51b815260206004820152602860248201527f556e697377617056324c6962726172793a20494e53554646494349454e545f4c604482015267495155494449545960c01b6064820152608401610217565b6000610798856103e5610a75565b905060006107a68483610a75565b90506000826107b7876103e8610a75565b6107c19190610a94565b90506107cd8183610aac565b979650505050505050565b60008160ff168360ff1610156108205760405162461bcd60e51b815260206004820152600d60248201526c547269656420656e6f7567682160981b6044820152606401610217565b61082e60ff83166003610a75565b61083a906103e8610ace565b90506103e86108498287610a75565b6108539190610aac565b94506103e86108628286610a75565b61086c9190610aac565b6040805160008152602081019182905263022c0d9f60e01b9091529094506001600160a01b0387169063022c0d9f906108ae9088908890309060248101610ae5565b600060405180830381600087803b1580156108c857600080fd5b505af19250505080156108d9575060015b6108f5576108f586868686866108ee81610b58565b97506107d8565b505050505050565b6001600160a01b038116811461051d57600080fd5b600080600080600060a0868803121561092a57600080fd5b8535610935816108fd565b94506020860135610945816108fd565b93506040860135925060608601359150608086013560ff8116811461096957600080fd5b809150509295509295909350565b60006020828403121561098957600080fd5b8135610994816108fd565b9392505050565b6000602082840312156109ad57600080fd5b8151610994816108fd565b80516001600160701b03811681146109cf57600080fd5b919050565b6000806000606084860312156109e957600080fd5b6109f2846109b8565b9250610a00602085016109b8565b9150604084015163ffffffff81168114610a1957600080fd5b809150509250925092565b600060208284031215610a3657600080fd5b8151801515811461099457600080fd5b600060208284031215610a5857600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615610a8f57610a8f610a5f565b500290565b60008219821115610aa757610aa7610a5f565b500190565b600082610ac957634e487b7160e01b600052601260045260246000fd5b500490565b600082821015610ae057610ae0610a5f565b500390565b84815260006020858184015260018060a01b038516604084015260806060840152835180608085015260005b81811015610b2d5785810183015185820160a001528201610b11565b81811115610b3f57600060a083870101525b50601f01601f19169290920160a0019695505050505050565b600060ff821660ff8103610b6e57610b6e610a5f565b6001019291505056fea2646970667358221220495213d35ef88a2da2676e6093625d1fbc2155ed5516916c55f5f1b44108de7064736f6c634300080d0033",
  "deployedSourceMap": "553:6972:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1180:28;;;;;-1:-1:-1;;;;;1180:28:4;;;;;;-1:-1:-1;;;;;178:32:6;;;160:51;;148:2;133:18;1180:28:4;;;;;;;1831:101:0;;;:::i;:::-;;965:85:4;;;;;-1:-1:-1;;;;;965:85:4;;;1201::0;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;1201:85;;2083:2289:4;;;;;;:::i;:::-;;:::i;1054:73::-;;;;;-1:-1:-1;;;;;1054:73:4;;;2081:198:0;;;;;;:::i;:::-;;:::i;1831:101::-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;2083:2289:4:-;1094:13:0;:11;:13::i;:::-;2505:36:4::1;::::0;-1:-1:-1;;;2505:36:4;;-1:-1:-1;;;;;1536:15:6;;;2505:36:4::1;::::0;::::1;1518:34:6::0;1588:15;;;1568:18;;;1561:43;2490:12:4::1;::::0;2505:7:::1;:15:::0;;::::1;::::0;::::1;::::0;1453:18:6;;2505:36:4::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2490:51:::0;-1:-1:-1;;;;;;2555:18:4;::::1;2547:52;;;::::0;-1:-1:-1;;;2547:52:4;;2073:2:6;2547:52:4::1;::::0;::::1;2055:21:6::0;2112:2;2092:18;;;2085:30;-1:-1:-1;;;2131:18:6;;;2124:51;2192:18;;2547:52:4::1;;;;;;;;;2754:14;2770::::0;2788:32:::1;2800:8;2810:9;2788:11;:32::i;:::-;2753:67;;;;2827:17;2999:16:::0;3017::::1;3054:4;-1:-1:-1::0;;;;;3039:32:4::1;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2998:75;-1:-1:-1::0;;;;;2998:75:4::1;;;-1:-1:-1::0;;;;;2998:75:4::1;;;3082:17;3101:18:::0;3135:6:::1;-1:-1:-1::0;;;;;3123:18:4::1;:8;-1:-1:-1::0;;;;;3123:18:4::1;;:64;;3168:8;3178;3123:64;;;3145:8;3155;3123:64;3081:106;;;;3370:47;3384:9;3395;3406:10;3370:13;:47::i;:::-;3490:51;::::0;-1:-1:-1;;;3490:51:4;;-1:-1:-1;;;;;3061:32:6;;;3490:51:4::1;::::0;::::1;3043::6::0;3110:18;;;3103:34;;;3358:59:4;;-1:-1:-1;3490:25:4;;::::1;::::0;-1:-1:-1;3490:25:4::1;::::0;-1:-1:-1;3016:18:6;;;-1:-1:-1;3490:51:4::1;::::0;-1:-1:-1;2869:274:6;3490:51:4::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3956:18;3976::::0;4011:6:::1;-1:-1:-1::0;;;;;3999:18:4::1;:8;-1:-1:-1::0;;;;;3999:18:4::1;;:70;;4047:9;4066:1;3999:70;;;4029:1;4033:9;3999:70;3955:114;;;;4157:71;4182:4;4189:10;4201;4213:11;4226:1;4157:16;:71::i;:::-;4294:9;-1:-1:-1::0;;;;;4287:26:4::1;;4314:7;1247::0::0;1273:6;-1:-1:-1;;;;;1273:6:0;;1201:85;4314:7:4::1;4323:42;::::0;-1:-1:-1;;;4323:42:4;;4359:4:::1;4323:42;::::0;::::1;160:51:6::0;-1:-1:-1;;;;;4323:27:4;::::1;::::0;::::1;::::0;133:18:6;;4323:42:4::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4287:79;::::0;-1:-1:-1;;;;;;4287:79:4::1;::::0;;;;;;-1:-1:-1;;;;;3061:32:6;;;4287:79:4::1;::::0;::::1;3043:51:6::0;3110:18;;;3103:34;3016:18;;4287:79:4::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2236:2136;;;;;;2083:2289:::0;;;;;:::o;2081:198:0:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:0;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:0;;3821:2:6;2161:73:0::1;::::0;::::1;3803:21:6::0;3860:2;3840:18;;;3833:30;3899:34;3879:18;;;3872:62;-1:-1:-1;;;3950:18:6;;;3943:36;3996:19;;2161:73:0::1;3619:402:6::0;2161:73:0::1;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1359:130::-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;719:10:3;1422:23:0;1414:68;;;;-1:-1:-1;;;1414:68:0;;4228:2:6;1414:68:0;;;4210:21:6;;;4247:18;;;4240:30;4306:34;4286:18;;;4279:62;4358:18;;1414:68:0;4026:356:6;2433:187:0;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;6190:445:4:-;6266:14;6282;6425:6;-1:-1:-1;;;;;6415:16:4;:6;-1:-1:-1;;;;;6415:16:4;;6407:59;;;;-1:-1:-1;;;6407:59:4;;4589:2:6;6407:59:4;;;4571:21:6;4628:2;4608:18;;;4601:30;4667:32;4647:18;;;4640:60;4717:18;;6407:59:4;4387:354:6;6407:59:4;6477:14;6493;6520:6;-1:-1:-1;;;;;6511:15:4;:6;-1:-1:-1;;;;;6511:15:4;;:53;;6549:6;6557;6511:53;;;6530:6;6538;6511:53;6476:88;;-1:-1:-1;6476:88:4;-1:-1:-1;;;;;;6582:20:4;;6574:56;;;;-1:-1:-1;;;6574:56:4;;4948:2:6;6574:56:4;;;4930:21:6;4987:2;4967:18;;;4960:30;5026:25;5006:18;;;4999:53;5069:18;;6574:56:4;4746:347:6;6574:56:4;6298:337;;6190:445;;;;;:::o;6856:664::-;6950:14;7083:1;7072:8;:12;7064:68;;;;-1:-1:-1;;;7064:68:4;;5300:2:6;7064:68:4;;;5282:21:6;5339:2;5319:18;;;5312:30;5378:34;5358:18;;;5351:62;-1:-1:-1;;;5429:18:6;;;5422:41;5480:19;;7064:68:4;5098:407:6;7064:68:4;7162:1;7150:9;:13;:31;;;;;7180:1;7167:10;:14;7150:31;7142:84;;;;-1:-1:-1;;;7142:84:4;;5712:2:6;7142:84:4;;;5694:21:6;5751:2;5731:18;;;5724:30;5790:34;5770:18;;;5763:62;-1:-1:-1;;;5841:18:6;;;5834:38;5889:19;;7142:84:4;5510:404:6;7142:84:4;7236:20;7259:14;:8;7270:3;7259:14;:::i;:::-;7236:37;-1:-1:-1;7362:14:4;7379:28;7397:10;7236:37;7379:28;:::i;:::-;7362:45;-1:-1:-1;7417:16:4;7455:15;7436:16;:9;7448:4;7436:16;:::i;:::-;:34;;;;:::i;:::-;7417:53;-1:-1:-1;7492:23:4;7417:53;7492:9;:23;:::i;:::-;7480:35;6856:664;-1:-1:-1;;;;;;;6856:664:4:o;4605:1433::-;5000:25;5101:8;5086:23;;:11;:23;;;;5078:49;;;;-1:-1:-1;;;5078:49:4;;6781:2:6;5078:49:4;;;6763:21:6;6820:2;6800:18;;;6793:30;-1:-1:-1;;;6839:18:6;;;6832:43;6892:18;;5078:49:4;6579:337:6;5078:49:4;5368:30;;;;959:1;5368:30;:::i;:::-;5348:51;;832:4;5348:51;:::i;:::-;5328:71;-1:-1:-1;5501:4:4;5467:31;5328:71;5467:11;:31;:::i;:::-;:38;;;;:::i;:::-;5452:53;-1:-1:-1;5559:4:4;5525:31;5539:17;5525:11;:31;:::i;:::-;:38;;;;:::i;:::-;5815:12;;;5825:1;5815:12;;;;;;;;;-1:-1:-1;;;5747:81:4;;;5511:52;;-1:-1:-1;;;;;;5747:26:4;;;;;:81;;5774:11;;5511:52;;5808:4;;5747:81;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5743:190;;5852:74;5869:5;5876:11;5889;5902;5915:10;;;;:::i;:::-;;;5852:16;:74::i;:::-;4742:1296;4605:1433;;;;;:::o;222:131:6:-;-1:-1:-1;;;;;297:31:6;;287:42;;277:70;;343:1;340;333:12;358:691;451:6;459;467;475;483;536:3;524:9;515:7;511:23;507:33;504:53;;;553:1;550;543:12;504:53;592:9;579:23;611:31;636:5;611:31;:::i;:::-;661:5;-1:-1:-1;718:2:6;703:18;;690:32;731:33;690:32;731:33;:::i;:::-;783:7;-1:-1:-1;837:2:6;822:18;;809:32;;-1:-1:-1;888:2:6;873:18;;860:32;;-1:-1:-1;944:3:6;929:19;;916:33;993:4;980:18;;968:31;;958:59;;1013:1;1010;1003:12;958:59;1036:7;1026:17;;;358:691;;;;;;;;:::o;1054:247::-;1113:6;1166:2;1154:9;1145:7;1141:23;1137:32;1134:52;;;1182:1;1179;1172:12;1134:52;1221:9;1208:23;1240:31;1265:5;1240:31;:::i;:::-;1290:5;1054:247;-1:-1:-1;;;1054:247:6:o;1615:251::-;1685:6;1738:2;1726:9;1717:7;1713:23;1709:32;1706:52;;;1754:1;1751;1744:12;1706:52;1786:9;1780:16;1805:31;1830:5;1805:31;:::i;2221:188::-;2300:13;;-1:-1:-1;;;;;2342:42:6;;2332:53;;2322:81;;2399:1;2396;2389:12;2322:81;2221:188;;;:::o;2414:450::-;2501:6;2509;2517;2570:2;2558:9;2549:7;2545:23;2541:32;2538:52;;;2586:1;2583;2576:12;2538:52;2609:40;2639:9;2609:40;:::i;:::-;2599:50;;2668:49;2713:2;2702:9;2698:18;2668:49;:::i;:::-;2658:59;;2760:2;2749:9;2745:18;2739:25;2804:10;2797:5;2793:22;2786:5;2783:33;2773:61;;2830:1;2827;2820:12;2773:61;2853:5;2843:15;;;2414:450;;;;;:::o;3148:277::-;3215:6;3268:2;3256:9;3247:7;3243:23;3239:32;3236:52;;;3284:1;3281;3274:12;3236:52;3316:9;3310:16;3369:5;3362:13;3355:21;3348:5;3345:32;3335:60;;3391:1;3388;3381:12;3430:184;3500:6;3553:2;3541:9;3532:7;3528:23;3524:32;3521:52;;;3569:1;3566;3559:12;3521:52;-1:-1:-1;3592:16:6;;3430:184;-1:-1:-1;3430:184:6:o;5919:127::-;5980:10;5975:3;5971:20;5968:1;5961:31;6011:4;6008:1;6001:15;6035:4;6032:1;6025:15;6051:168;6091:7;6157:1;6153;6149:6;6145:14;6142:1;6139:21;6134:1;6127:9;6120:17;6116:45;6113:71;;;6164:18;;:::i;:::-;-1:-1:-1;6204:9:6;;6051:168::o;6224:128::-;6264:3;6295:1;6291:6;6288:1;6285:13;6282:39;;;6301:18;;:::i;:::-;-1:-1:-1;6337:9:6;;6224:128::o;6357:217::-;6397:1;6423;6413:132;;6467:10;6462:3;6458:20;6455:1;6448:31;6502:4;6499:1;6492:15;6530:4;6527:1;6520:15;6413:132;-1:-1:-1;6559:9:6;;6357:217::o;6921:125::-;6961:4;6989:1;6986;6983:8;6980:34;;;6994:18;;:::i;:::-;-1:-1:-1;7031:9:6;;6921:125::o;7183:839::-;7414:6;7403:9;7396:25;7377:4;7440:2;7478:6;7473:2;7462:9;7458:18;7451:34;7550:1;7546;7541:3;7537:11;7533:19;7525:6;7521:32;7516:2;7505:9;7501:18;7494:60;7590:3;7585:2;7574:9;7570:18;7563:31;7623:6;7617:13;7667:6;7661:3;7650:9;7646:19;7639:35;7692:1;7702:141;7716:6;7713:1;7710:13;7702:141;;;7812:14;;;7808:23;;7802:30;7777:17;;;7796:3;7773:27;7766:67;7731:10;;7702:141;;;7861:6;7858:1;7855:13;7852:92;;;7932:1;7926:3;7917:6;7906:9;7902:22;7898:32;7891:43;7852:92;-1:-1:-1;8005:2:6;7984:15;-1:-1:-1;;7980:29:6;7965:45;;;;8012:3;7961:55;;7183:839;-1:-1:-1;;;;;;7183:839:6:o;8027:175::-;8064:3;8108:4;8101:5;8097:16;8137:4;8128:7;8125:17;8122:43;;8145:18;;:::i;:::-;8194:1;8181:15;;8027:175;-1:-1:-1;;8027:175:6:o",
  "language": "Solidity",
  "natspec": {
    "author": "JohnnyTime (https://smartcontractshacking.com)",
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "snipe(address,address,uint256,uint256,uint8)": {
        "notice": "The main external snipe function that is being called by the contract owner. Checks the the current reserves, determines the expected amountOut. If amountOut >= `_absoluteMinAmountOut`, it will try to swap the tokens `_maxRetries` times using the internal `_swapWithRetries` function.",
        "params": {
          "_absoluteMinAmountOut": "the minimum amount of tokens you want out of the trade",
          "_amountIn": "the amount of tokens you are sending in",
          "_maxRetries": "In case the swap fails, it will try again _maxRetries times (with higher slippage tolerance every time)",
          "_tokenIn": "the token address you want to sell",
          "_tokenOut": "the token address you want to buy"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "Sniper",
    "version": 1
  },
  "offset": [
    553,
    7525
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xCE JUMPI DUP1 PUSH4 0x9B905146 EQ PUSH2 0xDF JUMPI DUP1 PUSH4 0xAD5C4648 EQ PUSH2 0xF2 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x105 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x49BD5A5E EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xB1 JUMPI DUP1 PUSH4 0x78CC70B2 EQ PUSH2 0xBB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x95 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB9 PUSH2 0x118 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x95 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x95 JUMP JUMPDEST PUSH2 0xB9 PUSH2 0xED CALLDATASIZE PUSH1 0x4 PUSH2 0x912 JUMP JUMPDEST PUSH2 0x12C JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x95 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0xB9 PUSH2 0x113 CALLDATASIZE PUSH1 0x4 PUSH2 0x977 JUMP JUMPDEST PUSH2 0x4A7 JUMP JUMPDEST PUSH2 0x120 PUSH2 0x520 JUMP JUMPDEST PUSH2 0x12A PUSH1 0x0 PUSH2 0x57A JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x134 PUSH2 0x520 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xE6A43905 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x0 SWAP2 PUSH32 0x0 SWAP1 SWAP2 AND SWAP1 PUSH4 0xE6A43905 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1CB SWAP2 SWAP1 PUSH2 0x99B JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x220 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x5061697220646F6573206E6F742065786973747321 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x22D DUP9 DUP9 PUSH2 0x5CA JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x902F1AC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x274 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x298 SWAP2 SWAP1 PUSH2 0x9D4 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND SWAP2 POP PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP14 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x2D2 JUMPI DUP3 DUP5 PUSH2 0x2D5 JUMP JUMPDEST DUP4 DUP4 JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x2E4 DUP12 DUP4 DUP4 PUSH2 0x6B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP15 SWAP1 MSTORE SWAP2 SWAP7 POP SWAP1 DUP15 AND SWAP5 POP PUSH4 0xA9059CBB SWAP4 POP PUSH1 0x44 ADD SWAP2 POP PUSH2 0x323 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x342 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x366 SWAP2 SWAP1 PUSH2 0xA24 JUMP JUMPDEST POP PUSH1 0x0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP12 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x38B JUMPI DUP3 PUSH1 0x0 PUSH2 0x38F JUMP JUMPDEST PUSH1 0x0 DUP4 JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x3A1 DUP7 DUP4 DUP4 DUP11 PUSH1 0x0 PUSH2 0x7D8 JUMP JUMPDEST DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB PUSH2 0x3C2 PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x406 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x42A SWAP2 SWAP1 PUSH2 0xA46 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x475 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x499 SWAP2 SWAP1 PUSH2 0xA24 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x4AF PUSH2 0x520 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x514 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x217 JUMP JUMPDEST PUSH2 0x51D DUP2 PUSH2 0x57A JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x12A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x217 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x62E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E697377617056323A204944454E544943414C5F4144445245535345530000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x217 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND LT PUSH2 0x651 JUMPI DUP5 DUP7 PUSH2 0x654 JUMP JUMPDEST DUP6 DUP6 JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x6AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E697377617056323A205A45524F5F41444452455353000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x217 JUMP JUMPDEST POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 GT PUSH2 0x71D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E697377617056324C6962726172793A20494E53554646494349454E545F49 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x1394155517D05353D55395 PUSH1 0xAA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x217 JUMP JUMPDEST PUSH1 0x0 DUP4 GT DUP1 ISZERO PUSH2 0x72D JUMPI POP PUSH1 0x0 DUP3 GT JUMPDEST PUSH2 0x78A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E697377617056324C6962726172793A20494E53554646494349454E545F4C PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x4951554944495459 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x217 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x798 DUP6 PUSH2 0x3E5 PUSH2 0xA75 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x7A6 DUP5 DUP4 PUSH2 0xA75 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH2 0x7B7 DUP8 PUSH2 0x3E8 PUSH2 0xA75 JUMP JUMPDEST PUSH2 0x7C1 SWAP2 SWAP1 PUSH2 0xA94 JUMP JUMPDEST SWAP1 POP PUSH2 0x7CD DUP2 DUP4 PUSH2 0xAAC JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xFF AND DUP4 PUSH1 0xFF AND LT ISZERO PUSH2 0x820 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x547269656420656E6F75676821 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x217 JUMP JUMPDEST PUSH2 0x82E PUSH1 0xFF DUP4 AND PUSH1 0x3 PUSH2 0xA75 JUMP JUMPDEST PUSH2 0x83A SWAP1 PUSH2 0x3E8 PUSH2 0xACE JUMP JUMPDEST SWAP1 POP PUSH2 0x3E8 PUSH2 0x849 DUP3 DUP8 PUSH2 0xA75 JUMP JUMPDEST PUSH2 0x853 SWAP2 SWAP1 PUSH2 0xAAC JUMP JUMPDEST SWAP5 POP PUSH2 0x3E8 PUSH2 0x862 DUP3 DUP7 PUSH2 0xA75 JUMP JUMPDEST PUSH2 0x86C SWAP2 SWAP1 PUSH2 0xAAC JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 DUP3 SWAP1 MSTORE PUSH4 0x22C0D9F PUSH1 0xE0 SHL SWAP1 SWAP2 MSTORE SWAP1 SWAP5 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 PUSH4 0x22C0D9F SWAP1 PUSH2 0x8AE SWAP1 DUP9 SWAP1 DUP9 SWAP1 ADDRESS SWAP1 PUSH1 0x24 DUP2 ADD PUSH2 0xAE5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x8D9 JUMPI POP PUSH1 0x1 JUMPDEST PUSH2 0x8F5 JUMPI PUSH2 0x8F5 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0x8EE DUP2 PUSH2 0xB58 JUMP JUMPDEST SWAP8 POP PUSH2 0x7D8 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x51D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x92A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x935 DUP2 PUSH2 0x8FD JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x945 DUP2 PUSH2 0x8FD JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x969 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x989 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x994 DUP2 PUSH2 0x8FD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x994 DUP2 PUSH2 0x8FD JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x9CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x9E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9F2 DUP5 PUSH2 0x9B8 JUMP JUMPDEST SWAP3 POP PUSH2 0xA00 PUSH1 0x20 DUP6 ADD PUSH2 0x9B8 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD MLOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xA19 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA36 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x994 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xA8F JUMPI PUSH2 0xA8F PUSH2 0xA5F JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xAA7 JUMPI PUSH2 0xAA7 PUSH2 0xA5F JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xAC9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xAE0 JUMPI PUSH2 0xAE0 PUSH2 0xA5F JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST DUP5 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP6 DUP2 DUP5 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x80 PUSH1 0x60 DUP5 ADD MSTORE DUP4 MLOAD DUP1 PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xB2D JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0xA0 ADD MSTORE DUP3 ADD PUSH2 0xB11 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xB3F JUMPI PUSH1 0x0 PUSH1 0xA0 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0xA0 ADD SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP2 SUB PUSH2 0xB6E JUMPI PUSH2 0xB6E PUSH2 0xA5F JUMP JUMPDEST PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x49 MSTORE SGT 0xD3 0x5E 0xF8 DUP11 0x2D LOG2 PUSH8 0x6E6093625D1FBC21 SSTORE 0xED SSTORE AND SWAP2 PUSH13 0x55F5F1B44108DE7064736F6C63 NUMBER STOP ADDMOD 0xD STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        553,
        7525
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        553,
        7525
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        553,
        7525
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5": {
      "fn": null,
      "offset": [
        553,
        7525
      ],
      "op": "CALLVALUE",
      "path": "4"
    },
    "6": {
      "fn": null,
      "offset": [
        553,
        7525
      ],
      "op": "DUP1",
      "path": "4"
    },
    "7": {
      "fn": null,
      "offset": [
        553,
        7525
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "8": {
      "fn": null,
      "offset": [
        553,
        7525
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        553,
        7525
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "12": {
      "fn": null,
      "offset": [
        553,
        7525
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        553,
        7525
      ],
      "op": "DUP1",
      "path": "4"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        553,
        7525
      ],
      "op": "REVERT",
      "path": "4"
    },
    "16": {
      "fn": null,
      "offset": [
        553,
        7525
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "17": {
      "fn": null,
      "offset": [
        553,
        7525
      ],
      "op": "POP",
      "path": "4"
    },
    "18": {
      "fn": null,
      "offset": [
        553,
        7525
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        553,
        7525
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "21": {
      "fn": null,
      "offset": [
        553,
        7525
      ],
      "op": "LT",
      "path": "4"
    },
    "22": {
      "fn": null,
      "offset": [
        553,
        7525
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x7D"
    },
    "25": {
      "fn": null,
      "offset": [
        553,
        7525
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "26": {
      "fn": null,
      "offset": [
        553,
        7525
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        553,
        7525
      ],
      "op": "CALLDATALOAD",
      "path": "4"
    },
    "29": {
      "fn": null,
      "offset": [
        553,
        7525
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        553,
        7525
      ],
      "op": "SHR",
      "path": "4"
    },
    "32": {
      "fn": null,
      "offset": [
        553,
        7525
      ],
      "op": "DUP1",
      "path": "4"
    },
    "33": {
      "fn": null,
      "offset": [
        553,
        7525
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x8DA5CB5B"
    },
    "38": {
      "fn": null,
      "offset": [
        553,
        7525
      ],
      "op": "GT",
      "path": "4"
    },
    "39": {
      "fn": null,
      "offset": [
        553,
        7525
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x5B"
    },
    "42": {
      "fn": null,
      "offset": [
        553,
        7525
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "43": {
      "fn": null,
      "offset": [
        553,
        7525
      ],
      "op": "DUP1",
      "path": "4"
    },
    "44": {
      "fn": null,
      "offset": [
        553,
        7525
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x8DA5CB5B"
    },
    "49": {
      "fn": null,
      "offset": [
        553,
        7525
      ],
      "op": "EQ",
      "path": "4"
    },
    "50": {
      "fn": null,
      "offset": [
        553,
        7525
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xCE"
    },
    "53": {
      "fn": null,
      "offset": [
        553,
        7525
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "54": {
      "fn": null,
      "offset": [
        553,
        7525
      ],
      "op": "DUP1",
      "path": "4"
    },
    "55": {
      "fn": null,
      "offset": [
        553,
        7525
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x9B905146"
    },
    "60": {
      "fn": null,
      "offset": [
        553,
        7525
      ],
      "op": "EQ",
      "path": "4"
    },
    "61": {
      "fn": null,
      "offset": [
        553,
        7525
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xDF"
    },
    "64": {
      "fn": null,
      "offset": [
        553,
        7525
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "65": {
      "fn": null,
      "offset": [
        553,
        7525
      ],
      "op": "DUP1",
      "path": "4"
    },
    "66": {
      "fn": null,
      "offset": [
        553,
        7525
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xAD5C4648"
    },
    "71": {
      "fn": null,
      "offset": [
        553,
        7525
      ],
      "op": "EQ",
      "path": "4"
    },
    "72": {
      "fn": null,
      "offset": [
        553,
        7525
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xF2"
    },
    "75": {
      "fn": null,
      "offset": [
        553,
        7525
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "76": {
      "fn": null,
      "offset": [
        553,
        7525
      ],
      "op": "DUP1",
      "path": "4"
    },
    "77": {
      "fn": null,
      "offset": [
        553,
        7525
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xF2FDE38B"
    },
    "82": {
      "fn": null,
      "offset": [
        553,
        7525
      ],
      "op": "EQ",
      "path": "4"
    },
    "83": {
      "fn": null,
      "offset": [
        553,
        7525
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x105"
    },
    "86": {
      "fn": null,
      "offset": [
        553,
        7525
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "87": {
      "fn": null,
      "offset": [
        553,
        7525
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "89": {
      "fn": null,
      "offset": [
        553,
        7525
      ],
      "op": "DUP1",
      "path": "4"
    },
    "90": {
      "fn": null,
      "offset": [
        553,
        7525
      ],
      "op": "REVERT",
      "path": "4"
    },
    "91": {
      "fn": null,
      "offset": [
        553,
        7525
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "92": {
      "fn": null,
      "offset": [
        553,
        7525
      ],
      "op": "DUP1",
      "path": "4"
    },
    "93": {
      "fn": null,
      "offset": [
        553,
        7525
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x49BD5A5E"
    },
    "98": {
      "fn": null,
      "offset": [
        553,
        7525
      ],
      "op": "EQ",
      "path": "4"
    },
    "99": {
      "fn": null,
      "offset": [
        553,
        7525
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x82"
    },
    "102": {
      "fn": null,
      "offset": [
        553,
        7525
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "103": {
      "fn": null,
      "offset": [
        553,
        7525
      ],
      "op": "DUP1",
      "path": "4"
    },
    "104": {
      "fn": null,
      "offset": [
        553,
        7525
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x715018A6"
    },
    "109": {
      "fn": null,
      "offset": [
        553,
        7525
      ],
      "op": "EQ",
      "path": "4"
    },
    "110": {
      "fn": null,
      "offset": [
        553,
        7525
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB1"
    },
    "113": {
      "fn": null,
      "offset": [
        553,
        7525
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "114": {
      "fn": null,
      "offset": [
        553,
        7525
      ],
      "op": "DUP1",
      "path": "4"
    },
    "115": {
      "fn": null,
      "offset": [
        553,
        7525
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x78CC70B2"
    },
    "120": {
      "fn": null,
      "offset": [
        553,
        7525
      ],
      "op": "EQ",
      "path": "4"
    },
    "121": {
      "fn": null,
      "offset": [
        553,
        7525
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xBB"
    },
    "124": {
      "fn": null,
      "offset": [
        553,
        7525
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "125": {
      "fn": null,
      "offset": [
        553,
        7525
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "126": {
      "fn": null,
      "offset": [
        553,
        7525
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "128": {
      "fn": null,
      "offset": [
        553,
        7525
      ],
      "op": "DUP1",
      "path": "4"
    },
    "129": {
      "first_revert": true,
      "fn": null,
      "offset": [
        553,
        7525
      ],
      "op": "REVERT",
      "path": "4"
    },
    "130": {
      "offset": [
        1180,
        1208
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "131": {
      "fn": null,
      "offset": [
        1180,
        1208
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x3"
    },
    "133": {
      "fn": null,
      "offset": [
        1180,
        1208
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "134": {
      "fn": null,
      "offset": [
        1180,
        1208
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x95"
    },
    "137": {
      "fn": null,
      "offset": [
        1180,
        1208
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "138": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "140": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "142": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "144": {
      "op": "SHL"
    },
    "145": {
      "op": "SUB"
    },
    "146": {
      "offset": [
        1180,
        1208
      ],
      "op": "AND",
      "path": "4"
    },
    "147": {
      "fn": null,
      "offset": [
        1180,
        1208
      ],
      "op": "DUP2",
      "path": "4"
    },
    "148": {
      "fn": null,
      "offset": [
        1180,
        1208
      ],
      "op": "JUMP",
      "path": "4"
    },
    "149": {
      "fn": null,
      "offset": [
        1180,
        1208
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "150": {
      "fn": null,
      "offset": [
        1180,
        1208
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "152": {
      "fn": null,
      "offset": [
        1180,
        1208
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "153": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "155": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "157": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "159": {
      "op": "SHL"
    },
    "160": {
      "op": "SUB"
    },
    "161": {
      "op": "SWAP1"
    },
    "162": {
      "op": "SWAP2"
    },
    "163": {
      "op": "AND"
    },
    "164": {
      "op": "DUP2"
    },
    "165": {
      "op": "MSTORE"
    },
    "166": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "168": {
      "op": "ADD"
    },
    "169": {
      "offset": [
        1180,
        1208
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "171": {
      "fn": null,
      "offset": [
        1180,
        1208
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "172": {
      "fn": null,
      "offset": [
        1180,
        1208
      ],
      "op": "DUP1",
      "path": "4"
    },
    "173": {
      "fn": null,
      "offset": [
        1180,
        1208
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "174": {
      "fn": null,
      "offset": [
        1180,
        1208
      ],
      "op": "SUB",
      "path": "4"
    },
    "175": {
      "fn": null,
      "offset": [
        1180,
        1208
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "176": {
      "fn": null,
      "offset": [
        1180,
        1208
      ],
      "op": "RETURN",
      "path": "4"
    },
    "177": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "178": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB9"
    },
    "181": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x118"
    },
    "184": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1831,
        1932
      ],
      "op": "JUMP",
      "path": "0"
    },
    "185": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "186": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "STOP",
      "path": "0"
    },
    "187": {
      "offset": [
        965,
        1050
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "188": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        965,
        1050
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "190": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        965,
        1050
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "191": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        965,
        1050
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x95"
    },
    "194": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        965,
        1050
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "195": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "197": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "199": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "201": {
      "op": "SHL"
    },
    "202": {
      "op": "SUB"
    },
    "203": {
      "offset": [
        965,
        1050
      ],
      "op": "AND",
      "path": "4"
    },
    "204": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        965,
        1050
      ],
      "op": "DUP2",
      "path": "4"
    },
    "205": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        965,
        1050
      ],
      "op": "JUMP",
      "path": "4"
    },
    "206": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "207": {
      "fn": "Ownable.owner",
      "offset": [
        1247,
        1254
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "209": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "SLOAD",
      "path": "0",
      "statement": 0
    },
    "210": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "212": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "214": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "216": {
      "op": "SHL"
    },
    "217": {
      "op": "SUB"
    },
    "218": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "AND",
      "path": "0"
    },
    "219": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x95"
    },
    "222": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "JUMP",
      "path": "0"
    },
    "223": {
      "fn": "Sniper.snipe",
      "offset": [
        2083,
        4372
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "224": {
      "fn": "Sniper.snipe",
      "offset": [
        2083,
        4372
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB9"
    },
    "227": {
      "fn": "Sniper.snipe",
      "offset": [
        2083,
        4372
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xED"
    },
    "230": {
      "fn": "Sniper.snipe",
      "offset": [
        2083,
        4372
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "231": {
      "fn": "Sniper.snipe",
      "offset": [
        2083,
        4372
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "233": {
      "fn": "Sniper.snipe",
      "offset": [
        2083,
        4372
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x912"
    },
    "236": {
      "fn": "Sniper.snipe",
      "jump": "i",
      "offset": [
        2083,
        4372
      ],
      "op": "JUMP",
      "path": "4"
    },
    "237": {
      "fn": "Sniper.snipe",
      "offset": [
        2083,
        4372
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "238": {
      "fn": "Sniper.snipe",
      "offset": [
        2083,
        4372
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x12C"
    },
    "241": {
      "fn": "Sniper.snipe",
      "jump": "i",
      "offset": [
        2083,
        4372
      ],
      "op": "JUMP",
      "path": "4"
    },
    "242": {
      "offset": [
        1054,
        1127
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "243": {
      "fn": "Sniper.snipe",
      "offset": [
        1054,
        1127
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "245": {
      "fn": "Sniper.snipe",
      "offset": [
        1054,
        1127
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "246": {
      "fn": "Sniper.snipe",
      "offset": [
        1054,
        1127
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x95"
    },
    "249": {
      "fn": "Sniper.snipe",
      "offset": [
        1054,
        1127
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "250": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "252": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "254": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "256": {
      "op": "SHL"
    },
    "257": {
      "op": "SUB"
    },
    "258": {
      "offset": [
        1054,
        1127
      ],
      "op": "AND",
      "path": "4"
    },
    "259": {
      "fn": "Sniper.snipe",
      "offset": [
        1054,
        1127
      ],
      "op": "DUP2",
      "path": "4"
    },
    "260": {
      "fn": "Sniper.snipe",
      "offset": [
        1054,
        1127
      ],
      "op": "JUMP",
      "path": "4"
    },
    "261": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "262": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB9"
    },
    "265": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x113"
    },
    "268": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "269": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "271": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x977"
    },
    "274": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMP",
      "path": "0"
    },
    "275": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "276": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4A7"
    },
    "279": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMP",
      "path": "0"
    },
    "280": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "281": {
      "offset": [
        1094,
        1107
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x120"
    },
    "284": {
      "offset": [
        1094,
        1105
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x520"
    },
    "287": {
      "jump": "i",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMP",
      "path": "0"
    },
    "288": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "289": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1895,
        1925
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 1,
      "value": "0x12A"
    },
    "292": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1922,
        1923
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "294": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1895,
        1913
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x57A"
    },
    "297": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1895,
        1925
      ],
      "op": "JUMP",
      "path": "0"
    },
    "298": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1895,
        1925
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "299": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1831,
        1932
      ],
      "op": "JUMP",
      "path": "0"
    },
    "300": {
      "fn": "Sniper.snipe",
      "offset": [
        2083,
        4372
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "301": {
      "offset": [
        1094,
        1107
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x134"
    },
    "304": {
      "offset": [
        1094,
        1105
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x520"
    },
    "307": {
      "jump": "i",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMP",
      "path": "0"
    },
    "308": {
      "fn": "Sniper.snipe",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "309": {
      "fn": "Sniper.snipe",
      "offset": [
        2505,
        2541
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "311": {
      "fn": "Sniper.snipe",
      "offset": [
        2505,
        2541
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "312": {
      "op": "PUSH4",
      "value": "0xE6A43905"
    },
    "317": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "319": {
      "op": "SHL"
    },
    "320": {
      "fn": "Sniper.snipe",
      "offset": [
        2505,
        2541
      ],
      "op": "DUP2",
      "path": "4"
    },
    "321": {
      "fn": "Sniper.snipe",
      "offset": [
        2505,
        2541
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "322": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "324": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "326": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "328": {
      "op": "SHL"
    },
    "329": {
      "op": "SUB"
    },
    "330": {
      "op": "DUP7"
    },
    "331": {
      "op": "DUP2"
    },
    "332": {
      "op": "AND"
    },
    "333": {
      "fn": "Sniper.snipe",
      "offset": [
        2505,
        2541
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "335": {
      "fn": "Sniper.snipe",
      "offset": [
        2505,
        2541
      ],
      "op": "DUP4",
      "path": "4"
    },
    "336": {
      "fn": "Sniper.snipe",
      "offset": [
        2505,
        2541
      ],
      "op": "ADD",
      "path": "4"
    },
    "337": {
      "op": "MSTORE"
    },
    "338": {
      "op": "DUP6"
    },
    "339": {
      "op": "DUP2"
    },
    "340": {
      "op": "AND"
    },
    "341": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "343": {
      "op": "DUP4"
    },
    "344": {
      "op": "ADD"
    },
    "345": {
      "op": "MSTORE"
    },
    "346": {
      "fn": "Sniper.snipe",
      "offset": [
        2490,
        2502
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "348": {
      "fn": "Sniper.snipe",
      "offset": [
        2490,
        2502
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "349": {
      "fn": "Sniper.snipe",
      "offset": [
        2505,
        2512
      ],
      "op": "PUSH32",
      "path": "4",
      "value": "0x0"
    },
    "382": {
      "fn": "Sniper.snipe",
      "offset": [
        2505,
        2520
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "383": {
      "fn": "Sniper.snipe",
      "offset": [
        2505,
        2520
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "384": {
      "fn": "Sniper.snipe",
      "offset": [
        2505,
        2520
      ],
      "op": "AND",
      "path": "4"
    },
    "385": {
      "fn": "Sniper.snipe",
      "offset": [
        2505,
        2520
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "386": {
      "fn": "Sniper.snipe",
      "offset": [
        2505,
        2520
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xE6A43905"
    },
    "391": {
      "fn": "Sniper.snipe",
      "offset": [
        2505,
        2520
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "392": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "394": {
      "op": "ADD"
    },
    "395": {
      "fn": "Sniper.snipe",
      "offset": [
        2505,
        2541
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "397": {
      "fn": "Sniper.snipe",
      "offset": [
        2505,
        2541
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "399": {
      "fn": "Sniper.snipe",
      "offset": [
        2505,
        2541
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "400": {
      "fn": "Sniper.snipe",
      "offset": [
        2505,
        2541
      ],
      "op": "DUP1",
      "path": "4"
    },
    "401": {
      "fn": "Sniper.snipe",
      "offset": [
        2505,
        2541
      ],
      "op": "DUP4",
      "path": "4"
    },
    "402": {
      "fn": "Sniper.snipe",
      "offset": [
        2505,
        2541
      ],
      "op": "SUB",
      "path": "4"
    },
    "403": {
      "fn": "Sniper.snipe",
      "offset": [
        2505,
        2541
      ],
      "op": "DUP2",
      "path": "4"
    },
    "404": {
      "fn": "Sniper.snipe",
      "offset": [
        2505,
        2541
      ],
      "op": "DUP7",
      "path": "4"
    },
    "405": {
      "fn": "Sniper.snipe",
      "offset": [
        2505,
        2541
      ],
      "op": "GAS",
      "path": "4"
    },
    "406": {
      "fn": "Sniper.snipe",
      "offset": [
        2505,
        2541
      ],
      "op": "STATICCALL",
      "path": "4"
    },
    "407": {
      "fn": "Sniper.snipe",
      "offset": [
        2505,
        2541
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "408": {
      "fn": "Sniper.snipe",
      "offset": [
        2505,
        2541
      ],
      "op": "DUP1",
      "path": "4"
    },
    "409": {
      "fn": "Sniper.snipe",
      "offset": [
        2505,
        2541
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "410": {
      "fn": "Sniper.snipe",
      "offset": [
        2505,
        2541
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1A7"
    },
    "413": {
      "fn": "Sniper.snipe",
      "offset": [
        2505,
        2541
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "414": {
      "fn": "Sniper.snipe",
      "offset": [
        2505,
        2541
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "415": {
      "fn": "Sniper.snipe",
      "offset": [
        2505,
        2541
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "417": {
      "fn": "Sniper.snipe",
      "offset": [
        2505,
        2541
      ],
      "op": "DUP1",
      "path": "4"
    },
    "418": {
      "fn": "Sniper.snipe",
      "offset": [
        2505,
        2541
      ],
      "op": "RETURNDATACOPY",
      "path": "4"
    },
    "419": {
      "fn": "Sniper.snipe",
      "offset": [
        2505,
        2541
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "420": {
      "fn": "Sniper.snipe",
      "offset": [
        2505,
        2541
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "422": {
      "fn": "Sniper.snipe",
      "offset": [
        2505,
        2541
      ],
      "op": "REVERT",
      "path": "4"
    },
    "423": {
      "fn": "Sniper.snipe",
      "offset": [
        2505,
        2541
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "424": {
      "fn": "Sniper.snipe",
      "offset": [
        2505,
        2541
      ],
      "op": "POP",
      "path": "4"
    },
    "425": {
      "fn": "Sniper.snipe",
      "offset": [
        2505,
        2541
      ],
      "op": "POP",
      "path": "4"
    },
    "426": {
      "fn": "Sniper.snipe",
      "offset": [
        2505,
        2541
      ],
      "op": "POP",
      "path": "4"
    },
    "427": {
      "fn": "Sniper.snipe",
      "offset": [
        2505,
        2541
      ],
      "op": "POP",
      "path": "4"
    },
    "428": {
      "fn": "Sniper.snipe",
      "offset": [
        2505,
        2541
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "430": {
      "fn": "Sniper.snipe",
      "offset": [
        2505,
        2541
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "431": {
      "fn": "Sniper.snipe",
      "offset": [
        2505,
        2541
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "432": {
      "fn": "Sniper.snipe",
      "offset": [
        2505,
        2541
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "434": {
      "fn": "Sniper.snipe",
      "offset": [
        2505,
        2541
      ],
      "op": "NOT",
      "path": "4"
    },
    "435": {
      "fn": "Sniper.snipe",
      "offset": [
        2505,
        2541
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "437": {
      "fn": "Sniper.snipe",
      "offset": [
        2505,
        2541
      ],
      "op": "DUP3",
      "path": "4"
    },
    "438": {
      "fn": "Sniper.snipe",
      "offset": [
        2505,
        2541
      ],
      "op": "ADD",
      "path": "4"
    },
    "439": {
      "fn": "Sniper.snipe",
      "offset": [
        2505,
        2541
      ],
      "op": "AND",
      "path": "4"
    },
    "440": {
      "fn": "Sniper.snipe",
      "offset": [
        2505,
        2541
      ],
      "op": "DUP3",
      "path": "4"
    },
    "441": {
      "fn": "Sniper.snipe",
      "offset": [
        2505,
        2541
      ],
      "op": "ADD",
      "path": "4"
    },
    "442": {
      "fn": "Sniper.snipe",
      "offset": [
        2505,
        2541
      ],
      "op": "DUP1",
      "path": "4"
    },
    "443": {
      "fn": "Sniper.snipe",
      "offset": [
        2505,
        2541
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "445": {
      "fn": "Sniper.snipe",
      "offset": [
        2505,
        2541
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "446": {
      "fn": "Sniper.snipe",
      "offset": [
        2505,
        2541
      ],
      "op": "POP",
      "path": "4"
    },
    "447": {
      "fn": "Sniper.snipe",
      "offset": [
        2505,
        2541
      ],
      "op": "DUP2",
      "path": "4"
    },
    "448": {
      "fn": "Sniper.snipe",
      "offset": [
        2505,
        2541
      ],
      "op": "ADD",
      "path": "4"
    },
    "449": {
      "fn": "Sniper.snipe",
      "offset": [
        2505,
        2541
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "450": {
      "fn": "Sniper.snipe",
      "offset": [
        2505,
        2541
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1CB"
    },
    "453": {
      "fn": "Sniper.snipe",
      "offset": [
        2505,
        2541
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "454": {
      "fn": "Sniper.snipe",
      "offset": [
        2505,
        2541
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "455": {
      "fn": "Sniper.snipe",
      "offset": [
        2505,
        2541
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x99B"
    },
    "458": {
      "fn": "Sniper.snipe",
      "jump": "i",
      "offset": [
        2505,
        2541
      ],
      "op": "JUMP",
      "path": "4"
    },
    "459": {
      "fn": "Sniper.snipe",
      "offset": [
        2505,
        2541
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "460": {
      "fn": "Sniper.snipe",
      "offset": [
        2490,
        2541
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "461": {
      "op": "POP"
    },
    "462": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "464": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "466": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "468": {
      "op": "SHL"
    },
    "469": {
      "op": "SUB"
    },
    "470": {
      "fn": "Sniper.snipe",
      "offset": [
        2555,
        2573
      ],
      "op": "DUP2",
      "path": "4",
      "statement": 2
    },
    "471": {
      "branch": 23,
      "fn": "Sniper.snipe",
      "offset": [
        2555,
        2573
      ],
      "op": "AND",
      "path": "4"
    },
    "472": {
      "fn": "Sniper.snipe",
      "offset": [
        2547,
        2599
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x220"
    },
    "475": {
      "branch": 23,
      "fn": "Sniper.snipe",
      "offset": [
        2547,
        2599
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "476": {
      "fn": "Sniper.snipe",
      "offset": [
        2547,
        2599
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "478": {
      "fn": "Sniper.snipe",
      "offset": [
        2547,
        2599
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "479": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "483": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "485": {
      "op": "SHL"
    },
    "486": {
      "fn": "Sniper.snipe",
      "offset": [
        2547,
        2599
      ],
      "op": "DUP2",
      "path": "4"
    },
    "487": {
      "fn": "Sniper.snipe",
      "offset": [
        2547,
        2599
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "488": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "490": {
      "fn": "Sniper.snipe",
      "offset": [
        2547,
        2599
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "492": {
      "fn": "Sniper.snipe",
      "offset": [
        2547,
        2599
      ],
      "op": "DUP3",
      "path": "4"
    },
    "493": {
      "fn": "Sniper.snipe",
      "offset": [
        2547,
        2599
      ],
      "op": "ADD",
      "path": "4"
    },
    "494": {
      "op": "MSTORE"
    },
    "495": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "497": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "499": {
      "op": "DUP3"
    },
    "500": {
      "op": "ADD"
    },
    "501": {
      "op": "MSTORE"
    },
    "502": {
      "op": "PUSH21",
      "value": "0x5061697220646F6573206E6F742065786973747321"
    },
    "524": {
      "op": "PUSH1",
      "value": "0x58"
    },
    "526": {
      "op": "SHL"
    },
    "527": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "529": {
      "op": "DUP3"
    },
    "530": {
      "op": "ADD"
    },
    "531": {
      "op": "MSTORE"
    },
    "532": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "534": {
      "op": "ADD"
    },
    "535": {
      "fn": "Sniper.snipe",
      "offset": [
        2547,
        2599
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "536": {
      "fn": "Sniper.snipe",
      "offset": [
        2547,
        2599
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "538": {
      "fn": "Sniper.snipe",
      "offset": [
        2547,
        2599
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "539": {
      "fn": "Sniper.snipe",
      "offset": [
        2547,
        2599
      ],
      "op": "DUP1",
      "path": "4"
    },
    "540": {
      "fn": "Sniper.snipe",
      "offset": [
        2547,
        2599
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "541": {
      "fn": "Sniper.snipe",
      "offset": [
        2547,
        2599
      ],
      "op": "SUB",
      "path": "4"
    },
    "542": {
      "fn": "Sniper.snipe",
      "offset": [
        2547,
        2599
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "543": {
      "fn": "Sniper.snipe",
      "offset": [
        2547,
        2599
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "4"
    },
    "544": {
      "fn": "Sniper.snipe",
      "offset": [
        2547,
        2599
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "545": {
      "fn": "Sniper.snipe",
      "offset": [
        2754,
        2768
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "547": {
      "fn": "Sniper.snipe",
      "offset": [
        2770,
        2784
      ],
      "op": "DUP1",
      "path": "4"
    },
    "548": {
      "fn": "Sniper.snipe",
      "offset": [
        2788,
        2820
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x22D"
    },
    "551": {
      "fn": "Sniper.snipe",
      "offset": [
        2800,
        2808
      ],
      "op": "DUP9",
      "path": "4"
    },
    "552": {
      "fn": "Sniper.snipe",
      "offset": [
        2810,
        2819
      ],
      "op": "DUP9",
      "path": "4"
    },
    "553": {
      "fn": "Sniper.snipe",
      "offset": [
        2788,
        2799
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x5CA"
    },
    "556": {
      "fn": "Sniper.snipe",
      "jump": "i",
      "offset": [
        2788,
        2820
      ],
      "op": "JUMP",
      "path": "4"
    },
    "557": {
      "fn": "Sniper.snipe",
      "offset": [
        2788,
        2820
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "558": {
      "fn": "Sniper.snipe",
      "offset": [
        2753,
        2820
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "559": {
      "fn": "Sniper.snipe",
      "offset": [
        2753,
        2820
      ],
      "op": "POP",
      "path": "4"
    },
    "560": {
      "fn": "Sniper.snipe",
      "offset": [
        2753,
        2820
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "561": {
      "fn": "Sniper.snipe",
      "offset": [
        2753,
        2820
      ],
      "op": "POP",
      "path": "4"
    },
    "562": {
      "fn": "Sniper.snipe",
      "offset": [
        2827,
        2844
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "564": {
      "fn": "Sniper.snipe",
      "offset": [
        2999,
        3015
      ],
      "op": "DUP1",
      "path": "4"
    },
    "565": {
      "fn": "Sniper.snipe",
      "offset": [
        3017,
        3033
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "567": {
      "fn": "Sniper.snipe",
      "offset": [
        3054,
        3058
      ],
      "op": "DUP6",
      "path": "4"
    },
    "568": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "570": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "572": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "574": {
      "op": "SHL"
    },
    "575": {
      "op": "SUB"
    },
    "576": {
      "fn": "Sniper.snipe",
      "offset": [
        3039,
        3071
      ],
      "op": "AND",
      "path": "4"
    },
    "577": {
      "fn": "Sniper.snipe",
      "offset": [
        3039,
        3071
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x902F1AC"
    },
    "582": {
      "fn": "Sniper.snipe",
      "offset": [
        3039,
        3073
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "584": {
      "fn": "Sniper.snipe",
      "offset": [
        3039,
        3073
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "585": {
      "fn": "Sniper.snipe",
      "offset": [
        3039,
        3073
      ],
      "op": "DUP2",
      "path": "4"
    },
    "586": {
      "fn": "Sniper.snipe",
      "offset": [
        3039,
        3073
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xFFFFFFFF"
    },
    "591": {
      "fn": "Sniper.snipe",
      "offset": [
        3039,
        3073
      ],
      "op": "AND",
      "path": "4"
    },
    "592": {
      "fn": "Sniper.snipe",
      "offset": [
        3039,
        3073
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xE0"
    },
    "594": {
      "fn": "Sniper.snipe",
      "offset": [
        3039,
        3073
      ],
      "op": "SHL",
      "path": "4"
    },
    "595": {
      "fn": "Sniper.snipe",
      "offset": [
        3039,
        3073
      ],
      "op": "DUP2",
      "path": "4"
    },
    "596": {
      "fn": "Sniper.snipe",
      "offset": [
        3039,
        3073
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "597": {
      "fn": "Sniper.snipe",
      "offset": [
        3039,
        3073
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "599": {
      "fn": "Sniper.snipe",
      "offset": [
        3039,
        3073
      ],
      "op": "ADD",
      "path": "4"
    },
    "600": {
      "fn": "Sniper.snipe",
      "offset": [
        3039,
        3073
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x60"
    },
    "602": {
      "fn": "Sniper.snipe",
      "offset": [
        3039,
        3073
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "604": {
      "fn": "Sniper.snipe",
      "offset": [
        3039,
        3073
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "605": {
      "fn": "Sniper.snipe",
      "offset": [
        3039,
        3073
      ],
      "op": "DUP1",
      "path": "4"
    },
    "606": {
      "fn": "Sniper.snipe",
      "offset": [
        3039,
        3073
      ],
      "op": "DUP4",
      "path": "4"
    },
    "607": {
      "fn": "Sniper.snipe",
      "offset": [
        3039,
        3073
      ],
      "op": "SUB",
      "path": "4"
    },
    "608": {
      "fn": "Sniper.snipe",
      "offset": [
        3039,
        3073
      ],
      "op": "DUP2",
      "path": "4"
    },
    "609": {
      "fn": "Sniper.snipe",
      "offset": [
        3039,
        3073
      ],
      "op": "DUP7",
      "path": "4"
    },
    "610": {
      "fn": "Sniper.snipe",
      "offset": [
        3039,
        3073
      ],
      "op": "GAS",
      "path": "4"
    },
    "611": {
      "fn": "Sniper.snipe",
      "offset": [
        3039,
        3073
      ],
      "op": "STATICCALL",
      "path": "4"
    },
    "612": {
      "fn": "Sniper.snipe",
      "offset": [
        3039,
        3073
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "613": {
      "fn": "Sniper.snipe",
      "offset": [
        3039,
        3073
      ],
      "op": "DUP1",
      "path": "4"
    },
    "614": {
      "fn": "Sniper.snipe",
      "offset": [
        3039,
        3073
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "615": {
      "fn": "Sniper.snipe",
      "offset": [
        3039,
        3073
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x274"
    },
    "618": {
      "fn": "Sniper.snipe",
      "offset": [
        3039,
        3073
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "619": {
      "fn": "Sniper.snipe",
      "offset": [
        3039,
        3073
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "620": {
      "fn": "Sniper.snipe",
      "offset": [
        3039,
        3073
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "622": {
      "fn": "Sniper.snipe",
      "offset": [
        3039,
        3073
      ],
      "op": "DUP1",
      "path": "4"
    },
    "623": {
      "fn": "Sniper.snipe",
      "offset": [
        3039,
        3073
      ],
      "op": "RETURNDATACOPY",
      "path": "4"
    },
    "624": {
      "fn": "Sniper.snipe",
      "offset": [
        3039,
        3073
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "625": {
      "fn": "Sniper.snipe",
      "offset": [
        3039,
        3073
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "627": {
      "fn": "Sniper.snipe",
      "offset": [
        3039,
        3073
      ],
      "op": "REVERT",
      "path": "4"
    },
    "628": {
      "fn": "Sniper.snipe",
      "offset": [
        3039,
        3073
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "629": {
      "fn": "Sniper.snipe",
      "offset": [
        3039,
        3073
      ],
      "op": "POP",
      "path": "4"
    },
    "630": {
      "fn": "Sniper.snipe",
      "offset": [
        3039,
        3073
      ],
      "op": "POP",
      "path": "4"
    },
    "631": {
      "fn": "Sniper.snipe",
      "offset": [
        3039,
        3073
      ],
      "op": "POP",
      "path": "4"
    },
    "632": {
      "fn": "Sniper.snipe",
      "offset": [
        3039,
        3073
      ],
      "op": "POP",
      "path": "4"
    },
    "633": {
      "fn": "Sniper.snipe",
      "offset": [
        3039,
        3073
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "635": {
      "fn": "Sniper.snipe",
      "offset": [
        3039,
        3073
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "636": {
      "fn": "Sniper.snipe",
      "offset": [
        3039,
        3073
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "637": {
      "fn": "Sniper.snipe",
      "offset": [
        3039,
        3073
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "639": {
      "fn": "Sniper.snipe",
      "offset": [
        3039,
        3073
      ],
      "op": "NOT",
      "path": "4"
    },
    "640": {
      "fn": "Sniper.snipe",
      "offset": [
        3039,
        3073
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "642": {
      "fn": "Sniper.snipe",
      "offset": [
        3039,
        3073
      ],
      "op": "DUP3",
      "path": "4"
    },
    "643": {
      "fn": "Sniper.snipe",
      "offset": [
        3039,
        3073
      ],
      "op": "ADD",
      "path": "4"
    },
    "644": {
      "fn": "Sniper.snipe",
      "offset": [
        3039,
        3073
      ],
      "op": "AND",
      "path": "4"
    },
    "645": {
      "fn": "Sniper.snipe",
      "offset": [
        3039,
        3073
      ],
      "op": "DUP3",
      "path": "4"
    },
    "646": {
      "fn": "Sniper.snipe",
      "offset": [
        3039,
        3073
      ],
      "op": "ADD",
      "path": "4"
    },
    "647": {
      "fn": "Sniper.snipe",
      "offset": [
        3039,
        3073
      ],
      "op": "DUP1",
      "path": "4"
    },
    "648": {
      "fn": "Sniper.snipe",
      "offset": [
        3039,
        3073
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "650": {
      "fn": "Sniper.snipe",
      "offset": [
        3039,
        3073
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "651": {
      "fn": "Sniper.snipe",
      "offset": [
        3039,
        3073
      ],
      "op": "POP",
      "path": "4"
    },
    "652": {
      "fn": "Sniper.snipe",
      "offset": [
        3039,
        3073
      ],
      "op": "DUP2",
      "path": "4"
    },
    "653": {
      "fn": "Sniper.snipe",
      "offset": [
        3039,
        3073
      ],
      "op": "ADD",
      "path": "4"
    },
    "654": {
      "fn": "Sniper.snipe",
      "offset": [
        3039,
        3073
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "655": {
      "fn": "Sniper.snipe",
      "offset": [
        3039,
        3073
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x298"
    },
    "658": {
      "fn": "Sniper.snipe",
      "offset": [
        3039,
        3073
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "659": {
      "fn": "Sniper.snipe",
      "offset": [
        3039,
        3073
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "660": {
      "fn": "Sniper.snipe",
      "offset": [
        3039,
        3073
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x9D4"
    },
    "663": {
      "fn": "Sniper.snipe",
      "jump": "i",
      "offset": [
        3039,
        3073
      ],
      "op": "JUMP",
      "path": "4"
    },
    "664": {
      "fn": "Sniper.snipe",
      "offset": [
        3039,
        3073
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "665": {
      "fn": "Sniper.snipe",
      "offset": [
        2998,
        3073
      ],
      "op": "POP",
      "path": "4"
    },
    "666": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "668": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "670": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "672": {
      "op": "SHL"
    },
    "673": {
      "op": "SUB"
    },
    "674": {
      "fn": "Sniper.snipe",
      "offset": [
        2998,
        3073
      ],
      "op": "AND",
      "path": "4"
    },
    "675": {
      "fn": "Sniper.snipe",
      "offset": [
        2998,
        3073
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "676": {
      "fn": "Sniper.snipe",
      "offset": [
        2998,
        3073
      ],
      "op": "POP",
      "path": "4"
    },
    "677": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "679": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "681": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "683": {
      "op": "SHL"
    },
    "684": {
      "op": "SUB"
    },
    "685": {
      "fn": "Sniper.snipe",
      "offset": [
        2998,
        3073
      ],
      "op": "AND",
      "path": "4"
    },
    "686": {
      "fn": "Sniper.snipe",
      "offset": [
        2998,
        3073
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "687": {
      "fn": "Sniper.snipe",
      "offset": [
        2998,
        3073
      ],
      "op": "POP",
      "path": "4"
    },
    "688": {
      "fn": "Sniper.snipe",
      "offset": [
        3082,
        3099
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "690": {
      "fn": "Sniper.snipe",
      "offset": [
        3101,
        3119
      ],
      "op": "DUP1",
      "path": "4"
    },
    "691": {
      "fn": "Sniper.snipe",
      "offset": [
        3135,
        3141
      ],
      "op": "DUP7",
      "path": "4"
    },
    "692": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "694": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "696": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "698": {
      "op": "SHL"
    },
    "699": {
      "op": "SUB"
    },
    "700": {
      "fn": "Sniper.snipe",
      "offset": [
        3123,
        3141
      ],
      "op": "AND",
      "path": "4"
    },
    "701": {
      "fn": "Sniper.snipe",
      "offset": [
        3123,
        3131
      ],
      "op": "DUP14",
      "path": "4"
    },
    "702": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "704": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "706": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "708": {
      "op": "SHL"
    },
    "709": {
      "op": "SUB"
    },
    "710": {
      "fn": "Sniper.snipe",
      "offset": [
        3123,
        3141
      ],
      "op": "AND",
      "path": "4"
    },
    "711": {
      "branch": 24,
      "fn": "Sniper.snipe",
      "offset": [
        3123,
        3141
      ],
      "op": "EQ",
      "path": "4"
    },
    "712": {
      "fn": "Sniper.snipe",
      "offset": [
        3123,
        3187
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2D2"
    },
    "715": {
      "branch": 24,
      "fn": "Sniper.snipe",
      "offset": [
        3123,
        3187
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "716": {
      "fn": "Sniper.snipe",
      "offset": [
        3168,
        3176
      ],
      "op": "DUP3",
      "path": "4"
    },
    "717": {
      "fn": "Sniper.snipe",
      "offset": [
        3178,
        3186
      ],
      "op": "DUP5",
      "path": "4"
    },
    "718": {
      "fn": "Sniper.snipe",
      "offset": [
        3123,
        3187
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2D5"
    },
    "721": {
      "fn": "Sniper.snipe",
      "offset": [
        3123,
        3187
      ],
      "op": "JUMP",
      "path": "4"
    },
    "722": {
      "fn": "Sniper.snipe",
      "offset": [
        3123,
        3187
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "723": {
      "fn": "Sniper.snipe",
      "offset": [
        3145,
        3153
      ],
      "op": "DUP4",
      "path": "4"
    },
    "724": {
      "fn": "Sniper.snipe",
      "offset": [
        3155,
        3163
      ],
      "op": "DUP4",
      "path": "4"
    },
    "725": {
      "fn": "Sniper.snipe",
      "offset": [
        3123,
        3187
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "726": {
      "fn": "Sniper.snipe",
      "offset": [
        3081,
        3187
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "727": {
      "fn": "Sniper.snipe",
      "offset": [
        3081,
        3187
      ],
      "op": "POP",
      "path": "4"
    },
    "728": {
      "fn": "Sniper.snipe",
      "offset": [
        3081,
        3187
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "729": {
      "fn": "Sniper.snipe",
      "offset": [
        3081,
        3187
      ],
      "op": "POP",
      "path": "4"
    },
    "730": {
      "fn": "Sniper.snipe",
      "offset": [
        3370,
        3417
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 3,
      "value": "0x2E4"
    },
    "733": {
      "fn": "Sniper.snipe",
      "offset": [
        3384,
        3393
      ],
      "op": "DUP12",
      "path": "4"
    },
    "734": {
      "fn": "Sniper.snipe",
      "offset": [
        3395,
        3404
      ],
      "op": "DUP4",
      "path": "4"
    },
    "735": {
      "fn": "Sniper.snipe",
      "offset": [
        3406,
        3416
      ],
      "op": "DUP4",
      "path": "4"
    },
    "736": {
      "fn": "Sniper.snipe",
      "offset": [
        3370,
        3383
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x6B8"
    },
    "739": {
      "fn": "Sniper.snipe",
      "jump": "i",
      "offset": [
        3370,
        3417
      ],
      "op": "JUMP",
      "path": "4"
    },
    "740": {
      "fn": "Sniper.snipe",
      "offset": [
        3370,
        3417
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "741": {
      "fn": "Sniper.snipe",
      "offset": [
        3490,
        3541
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 4,
      "value": "0x40"
    },
    "743": {
      "fn": "Sniper.snipe",
      "offset": [
        3490,
        3541
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "744": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "749": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "751": {
      "op": "SHL"
    },
    "752": {
      "fn": "Sniper.snipe",
      "offset": [
        3490,
        3541
      ],
      "op": "DUP2",
      "path": "4"
    },
    "753": {
      "fn": "Sniper.snipe",
      "offset": [
        3490,
        3541
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "754": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "756": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "758": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "760": {
      "op": "SHL"
    },
    "761": {
      "op": "SUB"
    },
    "762": {
      "op": "DUP11"
    },
    "763": {
      "op": "DUP2"
    },
    "764": {
      "op": "AND"
    },
    "765": {
      "fn": "Sniper.snipe",
      "offset": [
        3490,
        3541
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "767": {
      "fn": "Sniper.snipe",
      "offset": [
        3490,
        3541
      ],
      "op": "DUP4",
      "path": "4"
    },
    "768": {
      "fn": "Sniper.snipe",
      "offset": [
        3490,
        3541
      ],
      "op": "ADD",
      "path": "4"
    },
    "769": {
      "op": "MSTORE"
    },
    "770": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "772": {
      "op": "DUP3"
    },
    "773": {
      "op": "ADD"
    },
    "774": {
      "op": "DUP15"
    },
    "775": {
      "op": "SWAP1"
    },
    "776": {
      "op": "MSTORE"
    },
    "777": {
      "fn": "Sniper.snipe",
      "offset": [
        3358,
        3417
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "778": {
      "fn": "Sniper.snipe",
      "offset": [
        3358,
        3417
      ],
      "op": "SWAP7",
      "path": "4"
    },
    "779": {
      "op": "POP"
    },
    "780": {
      "fn": "Sniper.snipe",
      "offset": [
        3490,
        3515
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "781": {
      "fn": "Sniper.snipe",
      "offset": [
        3490,
        3515
      ],
      "op": "DUP15",
      "path": "4"
    },
    "782": {
      "fn": "Sniper.snipe",
      "offset": [
        3490,
        3515
      ],
      "op": "AND",
      "path": "4"
    },
    "783": {
      "fn": "Sniper.snipe",
      "offset": [
        3490,
        3515
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "784": {
      "op": "POP"
    },
    "785": {
      "fn": "Sniper.snipe",
      "offset": [
        3490,
        3515
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xA9059CBB"
    },
    "790": {
      "fn": "Sniper.snipe",
      "offset": [
        3490,
        3515
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "791": {
      "op": "POP"
    },
    "792": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "794": {
      "op": "ADD"
    },
    "795": {
      "op": "SWAP2"
    },
    "796": {
      "op": "POP"
    },
    "797": {
      "fn": "Sniper.snipe",
      "offset": [
        3490,
        3541
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x323"
    },
    "800": {
      "fn": "Sniper.snipe",
      "offset": [
        3490,
        3541
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "801": {
      "op": "POP"
    },
    "802": {
      "op": "JUMP"
    },
    "803": {
      "fn": "Sniper.snipe",
      "offset": [
        3490,
        3541
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "804": {
      "fn": "Sniper.snipe",
      "offset": [
        3490,
        3541
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "806": {
      "fn": "Sniper.snipe",
      "offset": [
        3490,
        3541
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "808": {
      "fn": "Sniper.snipe",
      "offset": [
        3490,
        3541
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "809": {
      "fn": "Sniper.snipe",
      "offset": [
        3490,
        3541
      ],
      "op": "DUP1",
      "path": "4"
    },
    "810": {
      "fn": "Sniper.snipe",
      "offset": [
        3490,
        3541
      ],
      "op": "DUP4",
      "path": "4"
    },
    "811": {
      "fn": "Sniper.snipe",
      "offset": [
        3490,
        3541
      ],
      "op": "SUB",
      "path": "4"
    },
    "812": {
      "fn": "Sniper.snipe",
      "offset": [
        3490,
        3541
      ],
      "op": "DUP2",
      "path": "4"
    },
    "813": {
      "fn": "Sniper.snipe",
      "offset": [
        3490,
        3541
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "815": {
      "fn": "Sniper.snipe",
      "offset": [
        3490,
        3541
      ],
      "op": "DUP8",
      "path": "4"
    },
    "816": {
      "fn": "Sniper.snipe",
      "offset": [
        3490,
        3541
      ],
      "op": "GAS",
      "path": "4"
    },
    "817": {
      "fn": "Sniper.snipe",
      "offset": [
        3490,
        3541
      ],
      "op": "CALL",
      "path": "4"
    },
    "818": {
      "fn": "Sniper.snipe",
      "offset": [
        3490,
        3541
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "819": {
      "fn": "Sniper.snipe",
      "offset": [
        3490,
        3541
      ],
      "op": "DUP1",
      "path": "4"
    },
    "820": {
      "fn": "Sniper.snipe",
      "offset": [
        3490,
        3541
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "821": {
      "fn": "Sniper.snipe",
      "offset": [
        3490,
        3541
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x342"
    },
    "824": {
      "fn": "Sniper.snipe",
      "offset": [
        3490,
        3541
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "825": {
      "fn": "Sniper.snipe",
      "offset": [
        3490,
        3541
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "826": {
      "fn": "Sniper.snipe",
      "offset": [
        3490,
        3541
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "828": {
      "fn": "Sniper.snipe",
      "offset": [
        3490,
        3541
      ],
      "op": "DUP1",
      "path": "4"
    },
    "829": {
      "fn": "Sniper.snipe",
      "offset": [
        3490,
        3541
      ],
      "op": "RETURNDATACOPY",
      "path": "4"
    },
    "830": {
      "fn": "Sniper.snipe",
      "offset": [
        3490,
        3541
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "831": {
      "fn": "Sniper.snipe",
      "offset": [
        3490,
        3541
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "833": {
      "fn": "Sniper.snipe",
      "offset": [
        3490,
        3541
      ],
      "op": "REVERT",
      "path": "4"
    },
    "834": {
      "fn": "Sniper.snipe",
      "offset": [
        3490,
        3541
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "835": {
      "fn": "Sniper.snipe",
      "offset": [
        3490,
        3541
      ],
      "op": "POP",
      "path": "4"
    },
    "836": {
      "fn": "Sniper.snipe",
      "offset": [
        3490,
        3541
      ],
      "op": "POP",
      "path": "4"
    },
    "837": {
      "fn": "Sniper.snipe",
      "offset": [
        3490,
        3541
      ],
      "op": "POP",
      "path": "4"
    },
    "838": {
      "fn": "Sniper.snipe",
      "offset": [
        3490,
        3541
      ],
      "op": "POP",
      "path": "4"
    },
    "839": {
      "fn": "Sniper.snipe",
      "offset": [
        3490,
        3541
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "841": {
      "fn": "Sniper.snipe",
      "offset": [
        3490,
        3541
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "842": {
      "fn": "Sniper.snipe",
      "offset": [
        3490,
        3541
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "843": {
      "fn": "Sniper.snipe",
      "offset": [
        3490,
        3541
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "845": {
      "fn": "Sniper.snipe",
      "offset": [
        3490,
        3541
      ],
      "op": "NOT",
      "path": "4"
    },
    "846": {
      "fn": "Sniper.snipe",
      "offset": [
        3490,
        3541
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "848": {
      "fn": "Sniper.snipe",
      "offset": [
        3490,
        3541
      ],
      "op": "DUP3",
      "path": "4"
    },
    "849": {
      "fn": "Sniper.snipe",
      "offset": [
        3490,
        3541
      ],
      "op": "ADD",
      "path": "4"
    },
    "850": {
      "fn": "Sniper.snipe",
      "offset": [
        3490,
        3541
      ],
      "op": "AND",
      "path": "4"
    },
    "851": {
      "fn": "Sniper.snipe",
      "offset": [
        3490,
        3541
      ],
      "op": "DUP3",
      "path": "4"
    },
    "852": {
      "fn": "Sniper.snipe",
      "offset": [
        3490,
        3541
      ],
      "op": "ADD",
      "path": "4"
    },
    "853": {
      "fn": "Sniper.snipe",
      "offset": [
        3490,
        3541
      ],
      "op": "DUP1",
      "path": "4"
    },
    "854": {
      "fn": "Sniper.snipe",
      "offset": [
        3490,
        3541
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "856": {
      "fn": "Sniper.snipe",
      "offset": [
        3490,
        3541
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "857": {
      "fn": "Sniper.snipe",
      "offset": [
        3490,
        3541
      ],
      "op": "POP",
      "path": "4"
    },
    "858": {
      "fn": "Sniper.snipe",
      "offset": [
        3490,
        3541
      ],
      "op": "DUP2",
      "path": "4"
    },
    "859": {
      "fn": "Sniper.snipe",
      "offset": [
        3490,
        3541
      ],
      "op": "ADD",
      "path": "4"
    },
    "860": {
      "fn": "Sniper.snipe",
      "offset": [
        3490,
        3541
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "861": {
      "fn": "Sniper.snipe",
      "offset": [
        3490,
        3541
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x366"
    },
    "864": {
      "fn": "Sniper.snipe",
      "offset": [
        3490,
        3541
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "865": {
      "fn": "Sniper.snipe",
      "offset": [
        3490,
        3541
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "866": {
      "fn": "Sniper.snipe",
      "offset": [
        3490,
        3541
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA24"
    },
    "869": {
      "fn": "Sniper.snipe",
      "jump": "i",
      "offset": [
        3490,
        3541
      ],
      "op": "JUMP",
      "path": "4"
    },
    "870": {
      "fn": "Sniper.snipe",
      "offset": [
        3490,
        3541
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "871": {
      "fn": "Sniper.snipe",
      "offset": [
        3490,
        3541
      ],
      "op": "POP",
      "path": "4"
    },
    "872": {
      "fn": "Sniper.snipe",
      "offset": [
        3956,
        3974
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "874": {
      "fn": "Sniper.snipe",
      "offset": [
        3976,
        3994
      ],
      "op": "DUP1",
      "path": "4"
    },
    "875": {
      "fn": "Sniper.snipe",
      "offset": [
        4011,
        4017
      ],
      "op": "DUP5",
      "path": "4"
    },
    "876": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "878": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "880": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "882": {
      "op": "SHL"
    },
    "883": {
      "op": "SUB"
    },
    "884": {
      "fn": "Sniper.snipe",
      "offset": [
        3999,
        4017
      ],
      "op": "AND",
      "path": "4"
    },
    "885": {
      "fn": "Sniper.snipe",
      "offset": [
        3999,
        4007
      ],
      "op": "DUP12",
      "path": "4"
    },
    "886": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "888": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "890": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "892": {
      "op": "SHL"
    },
    "893": {
      "op": "SUB"
    },
    "894": {
      "fn": "Sniper.snipe",
      "offset": [
        3999,
        4017
      ],
      "op": "AND",
      "path": "4"
    },
    "895": {
      "branch": 25,
      "fn": "Sniper.snipe",
      "offset": [
        3999,
        4017
      ],
      "op": "EQ",
      "path": "4"
    },
    "896": {
      "fn": "Sniper.snipe",
      "offset": [
        3999,
        4069
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x38B"
    },
    "899": {
      "branch": 25,
      "fn": "Sniper.snipe",
      "offset": [
        3999,
        4069
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "900": {
      "fn": "Sniper.snipe",
      "offset": [
        4047,
        4056
      ],
      "op": "DUP3",
      "path": "4"
    },
    "901": {
      "fn": "Sniper.snipe",
      "offset": [
        4066,
        4067
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "903": {
      "fn": "Sniper.snipe",
      "offset": [
        3999,
        4069
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x38F"
    },
    "906": {
      "fn": "Sniper.snipe",
      "offset": [
        3999,
        4069
      ],
      "op": "JUMP",
      "path": "4"
    },
    "907": {
      "fn": "Sniper.snipe",
      "offset": [
        3999,
        4069
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "908": {
      "fn": "Sniper.snipe",
      "offset": [
        4029,
        4030
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "910": {
      "fn": "Sniper.snipe",
      "offset": [
        4033,
        4042
      ],
      "op": "DUP4",
      "path": "4"
    },
    "911": {
      "fn": "Sniper.snipe",
      "offset": [
        3999,
        4069
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "912": {
      "fn": "Sniper.snipe",
      "offset": [
        3955,
        4069
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "913": {
      "fn": "Sniper.snipe",
      "offset": [
        3955,
        4069
      ],
      "op": "POP",
      "path": "4"
    },
    "914": {
      "fn": "Sniper.snipe",
      "offset": [
        3955,
        4069
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "915": {
      "fn": "Sniper.snipe",
      "offset": [
        3955,
        4069
      ],
      "op": "POP",
      "path": "4"
    },
    "916": {
      "fn": "Sniper.snipe",
      "offset": [
        4157,
        4228
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 5,
      "value": "0x3A1"
    },
    "919": {
      "fn": "Sniper.snipe",
      "offset": [
        4182,
        4186
      ],
      "op": "DUP7",
      "path": "4"
    },
    "920": {
      "fn": "Sniper.snipe",
      "offset": [
        4189,
        4199
      ],
      "op": "DUP4",
      "path": "4"
    },
    "921": {
      "fn": "Sniper.snipe",
      "offset": [
        4201,
        4211
      ],
      "op": "DUP4",
      "path": "4"
    },
    "922": {
      "fn": "Sniper.snipe",
      "offset": [
        4213,
        4224
      ],
      "op": "DUP11",
      "path": "4"
    },
    "923": {
      "fn": "Sniper.snipe",
      "offset": [
        4226,
        4227
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "925": {
      "fn": "Sniper.snipe",
      "offset": [
        4157,
        4173
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x7D8"
    },
    "928": {
      "fn": "Sniper.snipe",
      "jump": "i",
      "offset": [
        4157,
        4228
      ],
      "op": "JUMP",
      "path": "4"
    },
    "929": {
      "fn": "Sniper.snipe",
      "offset": [
        4157,
        4228
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "930": {
      "fn": "Sniper.snipe",
      "offset": [
        4294,
        4303
      ],
      "op": "DUP10",
      "path": "4",
      "statement": 6
    },
    "931": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "933": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "935": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "937": {
      "op": "SHL"
    },
    "938": {
      "op": "SUB"
    },
    "939": {
      "fn": "Sniper.snipe",
      "offset": [
        4287,
        4313
      ],
      "op": "AND",
      "path": "4"
    },
    "940": {
      "fn": "Sniper.snipe",
      "offset": [
        4287,
        4313
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xA9059CBB"
    },
    "945": {
      "fn": "Sniper.snipe",
      "offset": [
        4314,
        4321
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3C2"
    },
    "948": {
      "fn": "Ownable.owner",
      "offset": [
        1247,
        1254
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "950": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "951": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "953": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "955": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "957": {
      "op": "SHL"
    },
    "958": {
      "op": "SUB"
    },
    "959": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "AND",
      "path": "0"
    },
    "960": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "961": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "JUMP",
      "path": "0"
    },
    "962": {
      "fn": "Sniper.snipe",
      "offset": [
        4314,
        4321
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "963": {
      "fn": "Sniper.snipe",
      "offset": [
        4323,
        4365
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "965": {
      "fn": "Sniper.snipe",
      "offset": [
        4323,
        4365
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "966": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "971": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "973": {
      "op": "SHL"
    },
    "974": {
      "fn": "Sniper.snipe",
      "offset": [
        4323,
        4365
      ],
      "op": "DUP2",
      "path": "4"
    },
    "975": {
      "fn": "Sniper.snipe",
      "offset": [
        4323,
        4365
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "976": {
      "fn": "Sniper.snipe",
      "offset": [
        4359,
        4363
      ],
      "op": "ADDRESS",
      "path": "4"
    },
    "977": {
      "fn": "Sniper.snipe",
      "offset": [
        4323,
        4365
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "979": {
      "fn": "Sniper.snipe",
      "offset": [
        4323,
        4365
      ],
      "op": "DUP3",
      "path": "4"
    },
    "980": {
      "fn": "Sniper.snipe",
      "offset": [
        4323,
        4365
      ],
      "op": "ADD",
      "path": "4"
    },
    "981": {
      "op": "MSTORE"
    },
    "982": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "984": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "986": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "988": {
      "op": "SHL"
    },
    "989": {
      "op": "SUB"
    },
    "990": {
      "fn": "Sniper.snipe",
      "offset": [
        4323,
        4350
      ],
      "op": "DUP15",
      "path": "4"
    },
    "991": {
      "fn": "Sniper.snipe",
      "offset": [
        4323,
        4350
      ],
      "op": "AND",
      "path": "4"
    },
    "992": {
      "fn": "Sniper.snipe",
      "offset": [
        4323,
        4350
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "993": {
      "fn": "Sniper.snipe",
      "offset": [
        4323,
        4350
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x70A08231"
    },
    "998": {
      "fn": "Sniper.snipe",
      "offset": [
        4323,
        4350
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "999": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1001": {
      "op": "ADD"
    },
    "1002": {
      "fn": "Sniper.snipe",
      "offset": [
        4323,
        4365
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1004": {
      "fn": "Sniper.snipe",
      "offset": [
        4323,
        4365
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1006": {
      "fn": "Sniper.snipe",
      "offset": [
        4323,
        4365
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1007": {
      "fn": "Sniper.snipe",
      "offset": [
        4323,
        4365
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1008": {
      "fn": "Sniper.snipe",
      "offset": [
        4323,
        4365
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1009": {
      "fn": "Sniper.snipe",
      "offset": [
        4323,
        4365
      ],
      "op": "SUB",
      "path": "4"
    },
    "1010": {
      "fn": "Sniper.snipe",
      "offset": [
        4323,
        4365
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1011": {
      "fn": "Sniper.snipe",
      "offset": [
        4323,
        4365
      ],
      "op": "DUP7",
      "path": "4"
    },
    "1012": {
      "fn": "Sniper.snipe",
      "offset": [
        4323,
        4365
      ],
      "op": "GAS",
      "path": "4"
    },
    "1013": {
      "fn": "Sniper.snipe",
      "offset": [
        4323,
        4365
      ],
      "op": "STATICCALL",
      "path": "4"
    },
    "1014": {
      "fn": "Sniper.snipe",
      "offset": [
        4323,
        4365
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1015": {
      "fn": "Sniper.snipe",
      "offset": [
        4323,
        4365
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1016": {
      "fn": "Sniper.snipe",
      "offset": [
        4323,
        4365
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1017": {
      "fn": "Sniper.snipe",
      "offset": [
        4323,
        4365
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x406"
    },
    "1020": {
      "fn": "Sniper.snipe",
      "offset": [
        4323,
        4365
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1021": {
      "fn": "Sniper.snipe",
      "offset": [
        4323,
        4365
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "1022": {
      "fn": "Sniper.snipe",
      "offset": [
        4323,
        4365
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1024": {
      "fn": "Sniper.snipe",
      "offset": [
        4323,
        4365
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1025": {
      "fn": "Sniper.snipe",
      "offset": [
        4323,
        4365
      ],
      "op": "RETURNDATACOPY",
      "path": "4"
    },
    "1026": {
      "fn": "Sniper.snipe",
      "offset": [
        4323,
        4365
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "1027": {
      "fn": "Sniper.snipe",
      "offset": [
        4323,
        4365
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1029": {
      "fn": "Sniper.snipe",
      "offset": [
        4323,
        4365
      ],
      "op": "REVERT",
      "path": "4"
    },
    "1030": {
      "fn": "Sniper.snipe",
      "offset": [
        4323,
        4365
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1031": {
      "fn": "Sniper.snipe",
      "offset": [
        4323,
        4365
      ],
      "op": "POP",
      "path": "4"
    },
    "1032": {
      "fn": "Sniper.snipe",
      "offset": [
        4323,
        4365
      ],
      "op": "POP",
      "path": "4"
    },
    "1033": {
      "fn": "Sniper.snipe",
      "offset": [
        4323,
        4365
      ],
      "op": "POP",
      "path": "4"
    },
    "1034": {
      "fn": "Sniper.snipe",
      "offset": [
        4323,
        4365
      ],
      "op": "POP",
      "path": "4"
    },
    "1035": {
      "fn": "Sniper.snipe",
      "offset": [
        4323,
        4365
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1037": {
      "fn": "Sniper.snipe",
      "offset": [
        4323,
        4365
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1038": {
      "fn": "Sniper.snipe",
      "offset": [
        4323,
        4365
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "1039": {
      "fn": "Sniper.snipe",
      "offset": [
        4323,
        4365
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "1041": {
      "fn": "Sniper.snipe",
      "offset": [
        4323,
        4365
      ],
      "op": "NOT",
      "path": "4"
    },
    "1042": {
      "fn": "Sniper.snipe",
      "offset": [
        4323,
        4365
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "1044": {
      "fn": "Sniper.snipe",
      "offset": [
        4323,
        4365
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1045": {
      "fn": "Sniper.snipe",
      "offset": [
        4323,
        4365
      ],
      "op": "ADD",
      "path": "4"
    },
    "1046": {
      "fn": "Sniper.snipe",
      "offset": [
        4323,
        4365
      ],
      "op": "AND",
      "path": "4"
    },
    "1047": {
      "fn": "Sniper.snipe",
      "offset": [
        4323,
        4365
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1048": {
      "fn": "Sniper.snipe",
      "offset": [
        4323,
        4365
      ],
      "op": "ADD",
      "path": "4"
    },
    "1049": {
      "fn": "Sniper.snipe",
      "offset": [
        4323,
        4365
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1050": {
      "fn": "Sniper.snipe",
      "offset": [
        4323,
        4365
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1052": {
      "fn": "Sniper.snipe",
      "offset": [
        4323,
        4365
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1053": {
      "fn": "Sniper.snipe",
      "offset": [
        4323,
        4365
      ],
      "op": "POP",
      "path": "4"
    },
    "1054": {
      "fn": "Sniper.snipe",
      "offset": [
        4323,
        4365
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1055": {
      "fn": "Sniper.snipe",
      "offset": [
        4323,
        4365
      ],
      "op": "ADD",
      "path": "4"
    },
    "1056": {
      "fn": "Sniper.snipe",
      "offset": [
        4323,
        4365
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1057": {
      "fn": "Sniper.snipe",
      "offset": [
        4323,
        4365
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x42A"
    },
    "1060": {
      "fn": "Sniper.snipe",
      "offset": [
        4323,
        4365
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1061": {
      "fn": "Sniper.snipe",
      "offset": [
        4323,
        4365
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1062": {
      "fn": "Sniper.snipe",
      "offset": [
        4323,
        4365
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA46"
    },
    "1065": {
      "fn": "Sniper.snipe",
      "jump": "i",
      "offset": [
        4323,
        4365
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1066": {
      "fn": "Sniper.snipe",
      "offset": [
        4323,
        4365
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1067": {
      "fn": "Sniper.snipe",
      "offset": [
        4287,
        4366
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1069": {
      "fn": "Sniper.snipe",
      "offset": [
        4287,
        4366
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1070": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1072": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1074": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1076": {
      "op": "SHL"
    },
    "1077": {
      "op": "SUB"
    },
    "1078": {
      "op": "NOT"
    },
    "1079": {
      "fn": "Sniper.snipe",
      "offset": [
        4287,
        4366
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xE0"
    },
    "1081": {
      "fn": "Sniper.snipe",
      "offset": [
        4287,
        4366
      ],
      "op": "DUP6",
      "path": "4"
    },
    "1082": {
      "fn": "Sniper.snipe",
      "offset": [
        4287,
        4366
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1083": {
      "fn": "Sniper.snipe",
      "offset": [
        4287,
        4366
      ],
      "op": "SHL",
      "path": "4"
    },
    "1084": {
      "fn": "Sniper.snipe",
      "offset": [
        4287,
        4366
      ],
      "op": "AND",
      "path": "4"
    },
    "1085": {
      "fn": "Sniper.snipe",
      "offset": [
        4287,
        4366
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1086": {
      "fn": "Sniper.snipe",
      "offset": [
        4287,
        4366
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1087": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1089": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1091": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1093": {
      "op": "SHL"
    },
    "1094": {
      "op": "SUB"
    },
    "1095": {
      "op": "SWAP1"
    },
    "1096": {
      "op": "SWAP3"
    },
    "1097": {
      "op": "AND"
    },
    "1098": {
      "fn": "Sniper.snipe",
      "offset": [
        4287,
        4366
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1100": {
      "fn": "Sniper.snipe",
      "offset": [
        4287,
        4366
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1101": {
      "fn": "Sniper.snipe",
      "offset": [
        4287,
        4366
      ],
      "op": "ADD",
      "path": "4"
    },
    "1102": {
      "op": "MSTORE"
    },
    "1103": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1105": {
      "op": "DUP3"
    },
    "1106": {
      "op": "ADD"
    },
    "1107": {
      "op": "MSTORE"
    },
    "1108": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1110": {
      "op": "ADD"
    },
    "1111": {
      "fn": "Sniper.snipe",
      "offset": [
        4287,
        4366
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1113": {
      "fn": "Sniper.snipe",
      "offset": [
        4287,
        4366
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1115": {
      "fn": "Sniper.snipe",
      "offset": [
        4287,
        4366
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1116": {
      "fn": "Sniper.snipe",
      "offset": [
        4287,
        4366
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1117": {
      "fn": "Sniper.snipe",
      "offset": [
        4287,
        4366
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1118": {
      "fn": "Sniper.snipe",
      "offset": [
        4287,
        4366
      ],
      "op": "SUB",
      "path": "4"
    },
    "1119": {
      "fn": "Sniper.snipe",
      "offset": [
        4287,
        4366
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1120": {
      "fn": "Sniper.snipe",
      "offset": [
        4287,
        4366
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1122": {
      "fn": "Sniper.snipe",
      "offset": [
        4287,
        4366
      ],
      "op": "DUP8",
      "path": "4"
    },
    "1123": {
      "fn": "Sniper.snipe",
      "offset": [
        4287,
        4366
      ],
      "op": "GAS",
      "path": "4"
    },
    "1124": {
      "fn": "Sniper.snipe",
      "offset": [
        4287,
        4366
      ],
      "op": "CALL",
      "path": "4"
    },
    "1125": {
      "fn": "Sniper.snipe",
      "offset": [
        4287,
        4366
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1126": {
      "fn": "Sniper.snipe",
      "offset": [
        4287,
        4366
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1127": {
      "fn": "Sniper.snipe",
      "offset": [
        4287,
        4366
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1128": {
      "fn": "Sniper.snipe",
      "offset": [
        4287,
        4366
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x475"
    },
    "1131": {
      "fn": "Sniper.snipe",
      "offset": [
        4287,
        4366
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1132": {
      "fn": "Sniper.snipe",
      "offset": [
        4287,
        4366
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "1133": {
      "fn": "Sniper.snipe",
      "offset": [
        4287,
        4366
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1135": {
      "fn": "Sniper.snipe",
      "offset": [
        4287,
        4366
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1136": {
      "fn": "Sniper.snipe",
      "offset": [
        4287,
        4366
      ],
      "op": "RETURNDATACOPY",
      "path": "4"
    },
    "1137": {
      "fn": "Sniper.snipe",
      "offset": [
        4287,
        4366
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "1138": {
      "fn": "Sniper.snipe",
      "offset": [
        4287,
        4366
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1140": {
      "fn": "Sniper.snipe",
      "offset": [
        4287,
        4366
      ],
      "op": "REVERT",
      "path": "4"
    },
    "1141": {
      "fn": "Sniper.snipe",
      "offset": [
        4287,
        4366
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1142": {
      "fn": "Sniper.snipe",
      "offset": [
        4287,
        4366
      ],
      "op": "POP",
      "path": "4"
    },
    "1143": {
      "fn": "Sniper.snipe",
      "offset": [
        4287,
        4366
      ],
      "op": "POP",
      "path": "4"
    },
    "1144": {
      "fn": "Sniper.snipe",
      "offset": [
        4287,
        4366
      ],
      "op": "POP",
      "path": "4"
    },
    "1145": {
      "fn": "Sniper.snipe",
      "offset": [
        4287,
        4366
      ],
      "op": "POP",
      "path": "4"
    },
    "1146": {
      "fn": "Sniper.snipe",
      "offset": [
        4287,
        4366
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1148": {
      "fn": "Sniper.snipe",
      "offset": [
        4287,
        4366
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1149": {
      "fn": "Sniper.snipe",
      "offset": [
        4287,
        4366
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "1150": {
      "fn": "Sniper.snipe",
      "offset": [
        4287,
        4366
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "1152": {
      "fn": "Sniper.snipe",
      "offset": [
        4287,
        4366
      ],
      "op": "NOT",
      "path": "4"
    },
    "1153": {
      "fn": "Sniper.snipe",
      "offset": [
        4287,
        4366
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "1155": {
      "fn": "Sniper.snipe",
      "offset": [
        4287,
        4366
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1156": {
      "fn": "Sniper.snipe",
      "offset": [
        4287,
        4366
      ],
      "op": "ADD",
      "path": "4"
    },
    "1157": {
      "fn": "Sniper.snipe",
      "offset": [
        4287,
        4366
      ],
      "op": "AND",
      "path": "4"
    },
    "1158": {
      "fn": "Sniper.snipe",
      "offset": [
        4287,
        4366
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1159": {
      "fn": "Sniper.snipe",
      "offset": [
        4287,
        4366
      ],
      "op": "ADD",
      "path": "4"
    },
    "1160": {
      "fn": "Sniper.snipe",
      "offset": [
        4287,
        4366
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1161": {
      "fn": "Sniper.snipe",
      "offset": [
        4287,
        4366
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1163": {
      "fn": "Sniper.snipe",
      "offset": [
        4287,
        4366
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1164": {
      "fn": "Sniper.snipe",
      "offset": [
        4287,
        4366
      ],
      "op": "POP",
      "path": "4"
    },
    "1165": {
      "fn": "Sniper.snipe",
      "offset": [
        4287,
        4366
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1166": {
      "fn": "Sniper.snipe",
      "offset": [
        4287,
        4366
      ],
      "op": "ADD",
      "path": "4"
    },
    "1167": {
      "fn": "Sniper.snipe",
      "offset": [
        4287,
        4366
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1168": {
      "fn": "Sniper.snipe",
      "offset": [
        4287,
        4366
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x499"
    },
    "1171": {
      "fn": "Sniper.snipe",
      "offset": [
        4287,
        4366
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1172": {
      "fn": "Sniper.snipe",
      "offset": [
        4287,
        4366
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1173": {
      "fn": "Sniper.snipe",
      "offset": [
        4287,
        4366
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA24"
    },
    "1176": {
      "fn": "Sniper.snipe",
      "jump": "i",
      "offset": [
        4287,
        4366
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1177": {
      "fn": "Sniper.snipe",
      "offset": [
        4287,
        4366
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1178": {
      "fn": "Sniper.snipe",
      "offset": [
        4287,
        4366
      ],
      "op": "POP",
      "path": "4"
    },
    "1179": {
      "fn": "Sniper.snipe",
      "offset": [
        2236,
        4372
      ],
      "op": "POP",
      "path": "4"
    },
    "1180": {
      "fn": "Sniper.snipe",
      "offset": [
        2236,
        4372
      ],
      "op": "POP",
      "path": "4"
    },
    "1181": {
      "fn": "Sniper.snipe",
      "offset": [
        2236,
        4372
      ],
      "op": "POP",
      "path": "4"
    },
    "1182": {
      "fn": "Sniper.snipe",
      "offset": [
        2236,
        4372
      ],
      "op": "POP",
      "path": "4"
    },
    "1183": {
      "fn": "Sniper.snipe",
      "offset": [
        2236,
        4372
      ],
      "op": "POP",
      "path": "4"
    },
    "1184": {
      "fn": "Sniper.snipe",
      "offset": [
        2236,
        4372
      ],
      "op": "POP",
      "path": "4"
    },
    "1185": {
      "fn": "Sniper.snipe",
      "offset": [
        2083,
        4372
      ],
      "op": "POP",
      "path": "4"
    },
    "1186": {
      "fn": "Sniper.snipe",
      "offset": [
        2083,
        4372
      ],
      "op": "POP",
      "path": "4"
    },
    "1187": {
      "fn": "Sniper.snipe",
      "offset": [
        2083,
        4372
      ],
      "op": "POP",
      "path": "4"
    },
    "1188": {
      "fn": "Sniper.snipe",
      "offset": [
        2083,
        4372
      ],
      "op": "POP",
      "path": "4"
    },
    "1189": {
      "fn": "Sniper.snipe",
      "offset": [
        2083,
        4372
      ],
      "op": "POP",
      "path": "4"
    },
    "1190": {
      "fn": "Sniper.snipe",
      "jump": "o",
      "offset": [
        2083,
        4372
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1191": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1192": {
      "offset": [
        1094,
        1107
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4AF"
    },
    "1195": {
      "offset": [
        1094,
        1105
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x520"
    },
    "1198": {
      "jump": "i",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1199": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1200": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1202": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1204": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1206": {
      "op": "SHL"
    },
    "1207": {
      "op": "SUB"
    },
    "1208": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2169,
        2191
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 7
    },
    "1209": {
      "branch": 33,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2169,
        2191
      ],
      "op": "AND",
      "path": "0"
    },
    "1210": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x514"
    },
    "1213": {
      "branch": 33,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1214": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1216": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1217": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1221": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1223": {
      "op": "SHL"
    },
    "1224": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1225": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1226": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1228": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1230": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1231": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "ADD",
      "path": "0"
    },
    "1232": {
      "op": "MSTORE"
    },
    "1233": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "1235": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1237": {
      "op": "DUP3"
    },
    "1238": {
      "op": "ADD"
    },
    "1239": {
      "op": "MSTORE"
    },
    "1240": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "1273": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1275": {
      "op": "DUP3"
    },
    "1276": {
      "op": "ADD"
    },
    "1277": {
      "op": "MSTORE"
    },
    "1278": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "1285": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "1287": {
      "op": "SHL"
    },
    "1288": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1290": {
      "op": "DUP3"
    },
    "1291": {
      "op": "ADD"
    },
    "1292": {
      "op": "MSTORE"
    },
    "1293": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1295": {
      "op": "ADD"
    },
    "1296": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x217"
    },
    "1299": {
      "op": "JUMP"
    },
    "1300": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1301": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2244,
        2272
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 8,
      "value": "0x51D"
    },
    "1304": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2263,
        2271
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1305": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2244,
        2262
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x57A"
    },
    "1308": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2244,
        2272
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1309": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2244,
        2272
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1310": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "POP",
      "path": "0"
    },
    "1311": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1312": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1359,
        1489
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1313": {
      "fn": "Ownable.owner",
      "offset": [
        1247,
        1254
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1315": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1316": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1318": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1320": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1322": {
      "op": "SHL"
    },
    "1323": {
      "op": "SUB"
    },
    "1324": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "AND",
      "path": "0"
    },
    "1325": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "3",
      "statement": 9
    },
    "1326": {
      "branch": 34,
      "fn": "Ownable._checkOwner",
      "offset": [
        1422,
        1445
      ],
      "op": "EQ",
      "path": "0",
      "statement": 10
    },
    "1327": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12A"
    },
    "1330": {
      "branch": 34,
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1331": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1333": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1334": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1338": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1340": {
      "op": "SHL"
    },
    "1341": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1342": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1343": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1345": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1347": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1348": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "ADD",
      "path": "0"
    },
    "1349": {
      "op": "DUP2"
    },
    "1350": {
      "op": "SWAP1"
    },
    "1351": {
      "op": "MSTORE"
    },
    "1352": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1354": {
      "op": "DUP3"
    },
    "1355": {
      "op": "ADD"
    },
    "1356": {
      "op": "MSTORE"
    },
    "1357": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "1390": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1392": {
      "op": "DUP3"
    },
    "1393": {
      "op": "ADD"
    },
    "1394": {
      "op": "MSTORE"
    },
    "1395": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1397": {
      "op": "ADD"
    },
    "1398": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x217"
    },
    "1401": {
      "op": "JUMP"
    },
    "1402": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2433,
        2620
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1403": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2506,
        2522
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1405": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1406": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1407": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1409": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1411": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1413": {
      "op": "SHL"
    },
    "1414": {
      "op": "SUB"
    },
    "1415": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 11
    },
    "1416": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1417": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "AND",
      "path": "0"
    },
    "1418": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1420": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1422": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1424": {
      "op": "SHL"
    },
    "1425": {
      "op": "SUB"
    },
    "1426": {
      "op": "NOT"
    },
    "1427": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1428": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "AND",
      "path": "0"
    },
    "1429": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1430": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "OR",
      "path": "0"
    },
    "1431": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1432": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1433": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2573,
        2613
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 12,
      "value": "0x40"
    },
    "1435": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2573,
        2613
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1436": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1437": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1438": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1439": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "AND",
      "path": "0"
    },
    "1440": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1441": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1442": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1443": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2573,
        2613
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "1476": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2573,
        2613
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1477": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2506,
        2522
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1478": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2573,
        2613
      ],
      "op": "LOG3",
      "path": "0"
    },
    "1479": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2496,
        2620
      ],
      "op": "POP",
      "path": "0"
    },
    "1480": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2433,
        2620
      ],
      "op": "POP",
      "path": "0"
    },
    "1481": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        2433,
        2620
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1482": {
      "fn": "Sniper._sortTokens",
      "offset": [
        6190,
        6635
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1483": {
      "fn": "Sniper._sortTokens",
      "offset": [
        6266,
        6280
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1485": {
      "fn": "Sniper._sortTokens",
      "offset": [
        6282,
        6296
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1486": {
      "fn": "Sniper._sortTokens",
      "offset": [
        6425,
        6431
      ],
      "op": "DUP3",
      "path": "4",
      "statement": 13
    },
    "1487": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1489": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1491": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1493": {
      "op": "SHL"
    },
    "1494": {
      "op": "SUB"
    },
    "1495": {
      "fn": "Sniper._sortTokens",
      "offset": [
        6415,
        6431
      ],
      "op": "AND",
      "path": "4"
    },
    "1496": {
      "fn": "Sniper._sortTokens",
      "offset": [
        6415,
        6421
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1497": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1499": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1501": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1503": {
      "op": "SHL"
    },
    "1504": {
      "op": "SUB"
    },
    "1505": {
      "fn": "Sniper._sortTokens",
      "offset": [
        6415,
        6431
      ],
      "op": "AND",
      "path": "4"
    },
    "1506": {
      "branch": 26,
      "fn": "Sniper._sortTokens",
      "offset": [
        6415,
        6431
      ],
      "op": "SUB",
      "path": "4"
    },
    "1507": {
      "fn": "Sniper._sortTokens",
      "offset": [
        6407,
        6466
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x62E"
    },
    "1510": {
      "branch": 26,
      "fn": "Sniper._sortTokens",
      "offset": [
        6407,
        6466
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1511": {
      "fn": "Sniper._sortTokens",
      "offset": [
        6407,
        6466
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1513": {
      "fn": "Sniper._sortTokens",
      "offset": [
        6407,
        6466
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1514": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1518": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1520": {
      "op": "SHL"
    },
    "1521": {
      "fn": "Sniper._sortTokens",
      "offset": [
        6407,
        6466
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1522": {
      "fn": "Sniper._sortTokens",
      "offset": [
        6407,
        6466
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1523": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1525": {
      "fn": "Sniper._sortTokens",
      "offset": [
        6407,
        6466
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1527": {
      "fn": "Sniper._sortTokens",
      "offset": [
        6407,
        6466
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1528": {
      "fn": "Sniper._sortTokens",
      "offset": [
        6407,
        6466
      ],
      "op": "ADD",
      "path": "4"
    },
    "1529": {
      "op": "MSTORE"
    },
    "1530": {
      "op": "PUSH1",
      "value": "0x1E"
    },
    "1532": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1534": {
      "op": "DUP3"
    },
    "1535": {
      "op": "ADD"
    },
    "1536": {
      "op": "MSTORE"
    },
    "1537": {
      "op": "PUSH32",
      "value": "0x556E697377617056323A204944454E544943414C5F4144445245535345530000"
    },
    "1570": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1572": {
      "op": "DUP3"
    },
    "1573": {
      "op": "ADD"
    },
    "1574": {
      "op": "MSTORE"
    },
    "1575": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1577": {
      "op": "ADD"
    },
    "1578": {
      "fn": "Sniper._sortTokens",
      "offset": [
        6407,
        6466
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x217"
    },
    "1581": {
      "op": "JUMP"
    },
    "1582": {
      "fn": "Sniper._sortTokens",
      "offset": [
        6407,
        6466
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1583": {
      "fn": "Sniper._sortTokens",
      "offset": [
        6477,
        6491
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1585": {
      "fn": "Sniper._sortTokens",
      "offset": [
        6493,
        6507
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1586": {
      "fn": "Sniper._sortTokens",
      "offset": [
        6520,
        6526
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1587": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1589": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1591": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1593": {
      "op": "SHL"
    },
    "1594": {
      "op": "SUB"
    },
    "1595": {
      "fn": "Sniper._sortTokens",
      "offset": [
        6511,
        6526
      ],
      "op": "AND",
      "path": "4"
    },
    "1596": {
      "fn": "Sniper._sortTokens",
      "offset": [
        6511,
        6517
      ],
      "op": "DUP7",
      "path": "4"
    },
    "1597": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1599": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1601": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1603": {
      "op": "SHL"
    },
    "1604": {
      "op": "SUB"
    },
    "1605": {
      "fn": "Sniper._sortTokens",
      "offset": [
        6511,
        6526
      ],
      "op": "AND",
      "path": "4"
    },
    "1606": {
      "branch": 27,
      "fn": "Sniper._sortTokens",
      "offset": [
        6511,
        6526
      ],
      "op": "LT",
      "path": "4"
    },
    "1607": {
      "fn": "Sniper._sortTokens",
      "offset": [
        6511,
        6564
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x651"
    },
    "1610": {
      "branch": 27,
      "fn": "Sniper._sortTokens",
      "offset": [
        6511,
        6564
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1611": {
      "fn": "Sniper._sortTokens",
      "offset": [
        6549,
        6555
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1612": {
      "fn": "Sniper._sortTokens",
      "offset": [
        6557,
        6563
      ],
      "op": "DUP7",
      "path": "4"
    },
    "1613": {
      "fn": "Sniper._sortTokens",
      "offset": [
        6511,
        6564
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x654"
    },
    "1616": {
      "fn": "Sniper._sortTokens",
      "offset": [
        6511,
        6564
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1617": {
      "fn": "Sniper._sortTokens",
      "offset": [
        6511,
        6564
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1618": {
      "fn": "Sniper._sortTokens",
      "offset": [
        6530,
        6536
      ],
      "op": "DUP6",
      "path": "4"
    },
    "1619": {
      "fn": "Sniper._sortTokens",
      "offset": [
        6538,
        6544
      ],
      "op": "DUP6",
      "path": "4"
    },
    "1620": {
      "fn": "Sniper._sortTokens",
      "offset": [
        6511,
        6564
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1621": {
      "fn": "Sniper._sortTokens",
      "offset": [
        6476,
        6564
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1622": {
      "fn": "Sniper._sortTokens",
      "offset": [
        6476,
        6564
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1623": {
      "op": "POP"
    },
    "1624": {
      "fn": "Sniper._sortTokens",
      "offset": [
        6476,
        6564
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1625": {
      "op": "POP"
    },
    "1626": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1628": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1630": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1632": {
      "op": "SHL"
    },
    "1633": {
      "op": "SUB"
    },
    "1634": {
      "fn": "Sniper._sortTokens",
      "offset": [
        6582,
        6602
      ],
      "op": "DUP3",
      "path": "4",
      "statement": 14
    },
    "1635": {
      "branch": 28,
      "fn": "Sniper._sortTokens",
      "offset": [
        6582,
        6602
      ],
      "op": "AND",
      "path": "4"
    },
    "1636": {
      "fn": "Sniper._sortTokens",
      "offset": [
        6574,
        6630
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x6AF"
    },
    "1639": {
      "branch": 28,
      "fn": "Sniper._sortTokens",
      "offset": [
        6574,
        6630
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1640": {
      "fn": "Sniper._sortTokens",
      "offset": [
        6574,
        6630
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1642": {
      "fn": "Sniper._sortTokens",
      "offset": [
        6574,
        6630
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1643": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1647": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1649": {
      "op": "SHL"
    },
    "1650": {
      "fn": "Sniper._sortTokens",
      "offset": [
        6574,
        6630
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1651": {
      "fn": "Sniper._sortTokens",
      "offset": [
        6574,
        6630
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1652": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1654": {
      "fn": "Sniper._sortTokens",
      "offset": [
        6574,
        6630
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1656": {
      "fn": "Sniper._sortTokens",
      "offset": [
        6574,
        6630
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1657": {
      "fn": "Sniper._sortTokens",
      "offset": [
        6574,
        6630
      ],
      "op": "ADD",
      "path": "4"
    },
    "1658": {
      "op": "MSTORE"
    },
    "1659": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "1661": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1663": {
      "op": "DUP3"
    },
    "1664": {
      "op": "ADD"
    },
    "1665": {
      "op": "MSTORE"
    },
    "1666": {
      "op": "PUSH32",
      "value": "0x556E697377617056323A205A45524F5F41444452455353000000000000000000"
    },
    "1699": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1701": {
      "op": "DUP3"
    },
    "1702": {
      "op": "ADD"
    },
    "1703": {
      "op": "MSTORE"
    },
    "1704": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1706": {
      "op": "ADD"
    },
    "1707": {
      "fn": "Sniper._sortTokens",
      "offset": [
        6574,
        6630
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x217"
    },
    "1710": {
      "op": "JUMP"
    },
    "1711": {
      "fn": "Sniper._sortTokens",
      "offset": [
        6574,
        6630
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1712": {
      "fn": "Sniper._sortTokens",
      "offset": [
        6298,
        6635
      ],
      "op": "POP",
      "path": "4"
    },
    "1713": {
      "fn": "Sniper._sortTokens",
      "offset": [
        6298,
        6635
      ],
      "op": "POP",
      "path": "4"
    },
    "1714": {
      "fn": "Sniper._sortTokens",
      "offset": [
        6190,
        6635
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1715": {
      "fn": "Sniper._sortTokens",
      "offset": [
        6190,
        6635
      ],
      "op": "POP",
      "path": "4"
    },
    "1716": {
      "fn": "Sniper._sortTokens",
      "offset": [
        6190,
        6635
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1717": {
      "fn": "Sniper._sortTokens",
      "offset": [
        6190,
        6635
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1718": {
      "fn": "Sniper._sortTokens",
      "offset": [
        6190,
        6635
      ],
      "op": "POP",
      "path": "4"
    },
    "1719": {
      "fn": "Sniper._sortTokens",
      "jump": "o",
      "offset": [
        6190,
        6635
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1720": {
      "fn": "Sniper._getAmountOut",
      "offset": [
        6856,
        7520
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1721": {
      "fn": "Sniper._getAmountOut",
      "offset": [
        6950,
        6964
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1723": {
      "fn": "Sniper._getAmountOut",
      "offset": [
        7083,
        7084
      ],
      "op": "DUP1",
      "path": "4",
      "statement": 15
    },
    "1724": {
      "fn": "Sniper._getAmountOut",
      "offset": [
        7072,
        7080
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1725": {
      "branch": 29,
      "fn": "Sniper._getAmountOut",
      "offset": [
        7072,
        7084
      ],
      "op": "GT",
      "path": "4"
    },
    "1726": {
      "fn": "Sniper._getAmountOut",
      "offset": [
        7064,
        7132
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x71D"
    },
    "1729": {
      "branch": 29,
      "fn": "Sniper._getAmountOut",
      "offset": [
        7064,
        7132
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1730": {
      "fn": "Sniper._getAmountOut",
      "offset": [
        7064,
        7132
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1732": {
      "fn": "Sniper._getAmountOut",
      "offset": [
        7064,
        7132
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1733": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1737": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1739": {
      "op": "SHL"
    },
    "1740": {
      "fn": "Sniper._getAmountOut",
      "offset": [
        7064,
        7132
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1741": {
      "fn": "Sniper._getAmountOut",
      "offset": [
        7064,
        7132
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1742": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1744": {
      "fn": "Sniper._getAmountOut",
      "offset": [
        7064,
        7132
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1746": {
      "fn": "Sniper._getAmountOut",
      "offset": [
        7064,
        7132
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1747": {
      "fn": "Sniper._getAmountOut",
      "offset": [
        7064,
        7132
      ],
      "op": "ADD",
      "path": "4"
    },
    "1748": {
      "op": "MSTORE"
    },
    "1749": {
      "op": "PUSH1",
      "value": "0x2B"
    },
    "1751": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1753": {
      "op": "DUP3"
    },
    "1754": {
      "op": "ADD"
    },
    "1755": {
      "op": "MSTORE"
    },
    "1756": {
      "op": "PUSH32",
      "value": "0x556E697377617056324C6962726172793A20494E53554646494349454E545F49"
    },
    "1789": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1791": {
      "op": "DUP3"
    },
    "1792": {
      "op": "ADD"
    },
    "1793": {
      "op": "MSTORE"
    },
    "1794": {
      "op": "PUSH11",
      "value": "0x1394155517D05353D55395"
    },
    "1806": {
      "op": "PUSH1",
      "value": "0xAA"
    },
    "1808": {
      "op": "SHL"
    },
    "1809": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1811": {
      "op": "DUP3"
    },
    "1812": {
      "op": "ADD"
    },
    "1813": {
      "op": "MSTORE"
    },
    "1814": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1816": {
      "op": "ADD"
    },
    "1817": {
      "fn": "Sniper._getAmountOut",
      "offset": [
        7064,
        7132
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x217"
    },
    "1820": {
      "op": "JUMP"
    },
    "1821": {
      "fn": "Sniper._getAmountOut",
      "offset": [
        7064,
        7132
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1822": {
      "fn": "Sniper._getAmountOut",
      "offset": [
        7162,
        7163
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 16,
      "value": "0x0"
    },
    "1824": {
      "fn": "Sniper._getAmountOut",
      "offset": [
        7150,
        7159
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1825": {
      "branch": 30,
      "fn": "Sniper._getAmountOut",
      "offset": [
        7150,
        7163
      ],
      "op": "GT",
      "path": "4"
    },
    "1826": {
      "fn": "Sniper._getAmountOut",
      "offset": [
        7150,
        7181
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1827": {
      "fn": "Sniper._getAmountOut",
      "offset": [
        7150,
        7181
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1828": {
      "fn": "Sniper._getAmountOut",
      "offset": [
        7150,
        7181
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x72D"
    },
    "1831": {
      "branch": 30,
      "fn": "Sniper._getAmountOut",
      "offset": [
        7150,
        7181
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1832": {
      "fn": "Sniper._getAmountOut",
      "offset": [
        7150,
        7181
      ],
      "op": "POP",
      "path": "4"
    },
    "1833": {
      "fn": "Sniper._getAmountOut",
      "offset": [
        7180,
        7181
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1835": {
      "fn": "Sniper._getAmountOut",
      "offset": [
        7167,
        7177
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1836": {
      "branch": 31,
      "fn": "Sniper._getAmountOut",
      "offset": [
        7167,
        7181
      ],
      "op": "GT",
      "path": "4"
    },
    "1837": {
      "fn": "Sniper._getAmountOut",
      "offset": [
        7150,
        7181
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1838": {
      "fn": "Sniper._getAmountOut",
      "offset": [
        7142,
        7226
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x78A"
    },
    "1841": {
      "branch": 31,
      "fn": "Sniper._getAmountOut",
      "offset": [
        7142,
        7226
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1842": {
      "fn": "Sniper._getAmountOut",
      "offset": [
        7142,
        7226
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1844": {
      "fn": "Sniper._getAmountOut",
      "offset": [
        7142,
        7226
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1845": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1849": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1851": {
      "op": "SHL"
    },
    "1852": {
      "fn": "Sniper._getAmountOut",
      "offset": [
        7142,
        7226
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1853": {
      "fn": "Sniper._getAmountOut",
      "offset": [
        7142,
        7226
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1854": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1856": {
      "fn": "Sniper._getAmountOut",
      "offset": [
        7142,
        7226
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1858": {
      "fn": "Sniper._getAmountOut",
      "offset": [
        7142,
        7226
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1859": {
      "fn": "Sniper._getAmountOut",
      "offset": [
        7142,
        7226
      ],
      "op": "ADD",
      "path": "4"
    },
    "1860": {
      "op": "MSTORE"
    },
    "1861": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "1863": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1865": {
      "op": "DUP3"
    },
    "1866": {
      "op": "ADD"
    },
    "1867": {
      "op": "MSTORE"
    },
    "1868": {
      "op": "PUSH32",
      "value": "0x556E697377617056324C6962726172793A20494E53554646494349454E545F4C"
    },
    "1901": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1903": {
      "op": "DUP3"
    },
    "1904": {
      "op": "ADD"
    },
    "1905": {
      "op": "MSTORE"
    },
    "1906": {
      "op": "PUSH8",
      "value": "0x4951554944495459"
    },
    "1915": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "1917": {
      "op": "SHL"
    },
    "1918": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1920": {
      "op": "DUP3"
    },
    "1921": {
      "op": "ADD"
    },
    "1922": {
      "op": "MSTORE"
    },
    "1923": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1925": {
      "op": "ADD"
    },
    "1926": {
      "fn": "Sniper._getAmountOut",
      "offset": [
        7142,
        7226
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x217"
    },
    "1929": {
      "op": "JUMP"
    },
    "1930": {
      "fn": "Sniper._getAmountOut",
      "offset": [
        7142,
        7226
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1931": {
      "fn": "Sniper._getAmountOut",
      "offset": [
        7236,
        7256
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1933": {
      "fn": "Sniper._getAmountOut",
      "offset": [
        7259,
        7273
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x798"
    },
    "1936": {
      "fn": "Sniper._getAmountOut",
      "offset": [
        7259,
        7267
      ],
      "op": "DUP6",
      "path": "4"
    },
    "1937": {
      "fn": "Sniper._getAmountOut",
      "offset": [
        7270,
        7273
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3E5"
    },
    "1940": {
      "fn": "Sniper._getAmountOut",
      "offset": [
        7259,
        7273
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA75"
    },
    "1943": {
      "fn": "Sniper._getAmountOut",
      "jump": "i",
      "offset": [
        7259,
        7273
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1944": {
      "fn": "Sniper._getAmountOut",
      "offset": [
        7259,
        7273
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1945": {
      "fn": "Sniper._getAmountOut",
      "offset": [
        7236,
        7273
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1946": {
      "op": "POP"
    },
    "1947": {
      "fn": "Sniper._getAmountOut",
      "offset": [
        7362,
        7376
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1949": {
      "fn": "Sniper._getAmountOut",
      "offset": [
        7379,
        7407
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x7A6"
    },
    "1952": {
      "fn": "Sniper._getAmountOut",
      "offset": [
        7397,
        7407
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1953": {
      "fn": "Sniper._getAmountOut",
      "offset": [
        7236,
        7273
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1954": {
      "fn": "Sniper._getAmountOut",
      "offset": [
        7379,
        7407
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA75"
    },
    "1957": {
      "fn": "Sniper._getAmountOut",
      "jump": "i",
      "offset": [
        7379,
        7407
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1958": {
      "fn": "Sniper._getAmountOut",
      "offset": [
        7379,
        7407
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1959": {
      "fn": "Sniper._getAmountOut",
      "offset": [
        7362,
        7407
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1960": {
      "op": "POP"
    },
    "1961": {
      "fn": "Sniper._getAmountOut",
      "offset": [
        7417,
        7433
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1963": {
      "fn": "Sniper._getAmountOut",
      "offset": [
        7455,
        7470
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1964": {
      "fn": "Sniper._getAmountOut",
      "offset": [
        7436,
        7452
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x7B7"
    },
    "1967": {
      "fn": "Sniper._getAmountOut",
      "offset": [
        7436,
        7445
      ],
      "op": "DUP8",
      "path": "4"
    },
    "1968": {
      "fn": "Sniper._getAmountOut",
      "offset": [
        7448,
        7452
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3E8"
    },
    "1971": {
      "fn": "Sniper._getAmountOut",
      "offset": [
        7436,
        7452
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA75"
    },
    "1974": {
      "fn": "Sniper._getAmountOut",
      "jump": "i",
      "offset": [
        7436,
        7452
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1975": {
      "fn": "Sniper._getAmountOut",
      "offset": [
        7436,
        7452
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1976": {
      "fn": "Sniper._getAmountOut",
      "offset": [
        7436,
        7470
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x7C1"
    },
    "1979": {
      "fn": "Sniper._getAmountOut",
      "offset": [
        7436,
        7470
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1980": {
      "fn": "Sniper._getAmountOut",
      "offset": [
        7436,
        7470
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1981": {
      "fn": "Sniper._getAmountOut",
      "offset": [
        7436,
        7470
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA94"
    },
    "1984": {
      "fn": "Sniper._getAmountOut",
      "jump": "i",
      "offset": [
        7436,
        7470
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1985": {
      "fn": "Sniper._getAmountOut",
      "offset": [
        7436,
        7470
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1986": {
      "fn": "Sniper._getAmountOut",
      "offset": [
        7417,
        7470
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1987": {
      "op": "POP"
    },
    "1988": {
      "fn": "Sniper._getAmountOut",
      "offset": [
        7492,
        7515
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 17,
      "value": "0x7CD"
    },
    "1991": {
      "fn": "Sniper._getAmountOut",
      "offset": [
        7417,
        7470
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1992": {
      "fn": "Sniper._getAmountOut",
      "offset": [
        7492,
        7501
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1993": {
      "fn": "Sniper._getAmountOut",
      "offset": [
        7492,
        7515
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xAAC"
    },
    "1996": {
      "fn": "Sniper._getAmountOut",
      "jump": "i",
      "offset": [
        7492,
        7515
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1997": {
      "fn": "Sniper._getAmountOut",
      "offset": [
        7492,
        7515
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1998": {
      "fn": "Sniper._getAmountOut",
      "offset": [
        7480,
        7515
      ],
      "op": "SWAP8",
      "path": "4"
    },
    "1999": {
      "fn": "Sniper._getAmountOut",
      "offset": [
        6856,
        7520
      ],
      "op": "SWAP7",
      "path": "4"
    },
    "2000": {
      "op": "POP"
    },
    "2001": {
      "op": "POP"
    },
    "2002": {
      "op": "POP"
    },
    "2003": {
      "op": "POP"
    },
    "2004": {
      "op": "POP"
    },
    "2005": {
      "op": "POP"
    },
    "2006": {
      "op": "POP"
    },
    "2007": {
      "fn": "Sniper._getAmountOut",
      "jump": "o",
      "offset": [
        6856,
        7520
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2008": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        4605,
        6038
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2009": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5000,
        5025
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2011": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5101,
        5109
      ],
      "op": "DUP2",
      "path": "4",
      "statement": 18
    },
    "2012": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5086,
        5109
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xFF"
    },
    "2014": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5086,
        5109
      ],
      "op": "AND",
      "path": "4"
    },
    "2015": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5086,
        5097
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2016": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5086,
        5109
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xFF"
    },
    "2018": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5086,
        5109
      ],
      "op": "AND",
      "path": "4"
    },
    "2019": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5086,
        5109
      ],
      "op": "LT",
      "path": "4"
    },
    "2020": {
      "branch": 32,
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5086,
        5109
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2021": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5078,
        5127
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x820"
    },
    "2024": {
      "branch": 32,
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5078,
        5127
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2025": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5078,
        5127
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2027": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5078,
        5127
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2028": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2032": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2034": {
      "op": "SHL"
    },
    "2035": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5078,
        5127
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2036": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5078,
        5127
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2037": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2039": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5078,
        5127
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "2041": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5078,
        5127
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2042": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5078,
        5127
      ],
      "op": "ADD",
      "path": "4"
    },
    "2043": {
      "op": "MSTORE"
    },
    "2044": {
      "op": "PUSH1",
      "value": "0xD"
    },
    "2046": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2048": {
      "op": "DUP3"
    },
    "2049": {
      "op": "ADD"
    },
    "2050": {
      "op": "MSTORE"
    },
    "2051": {
      "op": "PUSH13",
      "value": "0x547269656420656E6F75676821"
    },
    "2065": {
      "op": "PUSH1",
      "value": "0x98"
    },
    "2067": {
      "op": "SHL"
    },
    "2068": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2070": {
      "op": "DUP3"
    },
    "2071": {
      "op": "ADD"
    },
    "2072": {
      "op": "MSTORE"
    },
    "2073": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2075": {
      "op": "ADD"
    },
    "2076": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5078,
        5127
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x217"
    },
    "2079": {
      "op": "JUMP"
    },
    "2080": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5078,
        5127
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2081": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5368,
        5398
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 19,
      "value": "0x82E"
    },
    "2084": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5368,
        5398
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xFF"
    },
    "2086": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5368,
        5398
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2087": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5368,
        5398
      ],
      "op": "AND",
      "path": "4"
    },
    "2088": {
      "offset": [
        959,
        960
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x3"
    },
    "2090": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5368,
        5398
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA75"
    },
    "2093": {
      "fn": "Sniper._swapWithRetries",
      "jump": "i",
      "offset": [
        5368,
        5398
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2094": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5368,
        5398
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2095": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5348,
        5399
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x83A"
    },
    "2098": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5348,
        5399
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2099": {
      "offset": [
        832,
        836
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3E8"
    },
    "2102": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5348,
        5399
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xACE"
    },
    "2105": {
      "fn": "Sniper._swapWithRetries",
      "jump": "i",
      "offset": [
        5348,
        5399
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2106": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5348,
        5399
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2107": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5328,
        5399
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2108": {
      "op": "POP"
    },
    "2109": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5501,
        5505
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 20,
      "value": "0x3E8"
    },
    "2112": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5467,
        5498
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x849"
    },
    "2115": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5328,
        5399
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2116": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5467,
        5478
      ],
      "op": "DUP8",
      "path": "4"
    },
    "2117": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5467,
        5498
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA75"
    },
    "2120": {
      "fn": "Sniper._swapWithRetries",
      "jump": "i",
      "offset": [
        5467,
        5498
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2121": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5467,
        5498
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2122": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5467,
        5505
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x853"
    },
    "2125": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5467,
        5505
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2126": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5467,
        5505
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2127": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5467,
        5505
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xAAC"
    },
    "2130": {
      "fn": "Sniper._swapWithRetries",
      "jump": "i",
      "offset": [
        5467,
        5505
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2131": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5467,
        5505
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2132": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5452,
        5505
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "2133": {
      "op": "POP"
    },
    "2134": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5559,
        5563
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 21,
      "value": "0x3E8"
    },
    "2137": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5525,
        5556
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x862"
    },
    "2140": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5539,
        5556
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2141": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5525,
        5536
      ],
      "op": "DUP7",
      "path": "4"
    },
    "2142": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5525,
        5556
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA75"
    },
    "2145": {
      "fn": "Sniper._swapWithRetries",
      "jump": "i",
      "offset": [
        5525,
        5556
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2146": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5525,
        5556
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2147": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5525,
        5563
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x86C"
    },
    "2150": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5525,
        5563
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2151": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5525,
        5563
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2152": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5525,
        5563
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xAAC"
    },
    "2155": {
      "fn": "Sniper._swapWithRetries",
      "jump": "i",
      "offset": [
        5525,
        5563
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2156": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5525,
        5563
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2157": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5815,
        5827
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2159": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5815,
        5827
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2160": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5815,
        5827
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2161": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5825,
        5826
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2163": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5815,
        5827
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2164": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5815,
        5827
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2165": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5815,
        5827
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2167": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5815,
        5827
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2168": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5815,
        5827
      ],
      "op": "ADD",
      "path": "4"
    },
    "2169": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5815,
        5827
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2170": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5815,
        5827
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2171": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5815,
        5827
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2172": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5815,
        5827
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2173": {
      "op": "PUSH4",
      "value": "0x22C0D9F"
    },
    "2178": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2180": {
      "op": "SHL"
    },
    "2181": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5747,
        5828
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2182": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5747,
        5828
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2183": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5747,
        5828
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2184": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5511,
        5563
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2185": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5511,
        5563
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "2186": {
      "op": "POP"
    },
    "2187": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2189": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2191": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2193": {
      "op": "SHL"
    },
    "2194": {
      "op": "SUB"
    },
    "2195": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5747,
        5773
      ],
      "op": "DUP8",
      "path": "4"
    },
    "2196": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5747,
        5773
      ],
      "op": "AND",
      "path": "4"
    },
    "2197": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5747,
        5773
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2198": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5747,
        5773
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x22C0D9F"
    },
    "2203": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5747,
        5773
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2204": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5747,
        5828
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x8AE"
    },
    "2207": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5747,
        5828
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2208": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5774,
        5785
      ],
      "op": "DUP9",
      "path": "4"
    },
    "2209": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5774,
        5785
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2210": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5511,
        5563
      ],
      "op": "DUP9",
      "path": "4"
    },
    "2211": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5511,
        5563
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2212": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5808,
        5812
      ],
      "op": "ADDRESS",
      "path": "4"
    },
    "2213": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5808,
        5812
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2214": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5747,
        5828
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x24"
    },
    "2216": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5747,
        5828
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2217": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5747,
        5828
      ],
      "op": "ADD",
      "path": "4"
    },
    "2218": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5747,
        5828
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xAE5"
    },
    "2221": {
      "fn": "Sniper._swapWithRetries",
      "jump": "i",
      "offset": [
        5747,
        5828
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2222": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5747,
        5828
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2223": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5747,
        5828
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2225": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5747,
        5828
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2227": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5747,
        5828
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2228": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5747,
        5828
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2229": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5747,
        5828
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2230": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5747,
        5828
      ],
      "op": "SUB",
      "path": "4"
    },
    "2231": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5747,
        5828
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2232": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5747,
        5828
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2234": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5747,
        5828
      ],
      "op": "DUP8",
      "path": "4"
    },
    "2235": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5747,
        5828
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2236": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5747,
        5828
      ],
      "op": "EXTCODESIZE",
      "path": "4"
    },
    "2237": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5747,
        5828
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2238": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5747,
        5828
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2239": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5747,
        5828
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2240": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5747,
        5828
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x8C8"
    },
    "2243": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5747,
        5828
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2244": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5747,
        5828
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2246": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5747,
        5828
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2247": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5747,
        5828
      ],
      "op": "REVERT",
      "path": "4"
    },
    "2248": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5747,
        5828
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2249": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5747,
        5828
      ],
      "op": "POP",
      "path": "4"
    },
    "2250": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5747,
        5828
      ],
      "op": "GAS",
      "path": "4"
    },
    "2251": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5747,
        5828
      ],
      "op": "CALL",
      "path": "4"
    },
    "2252": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5747,
        5828
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2253": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5747,
        5828
      ],
      "op": "POP",
      "path": "4"
    },
    "2254": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5747,
        5828
      ],
      "op": "POP",
      "path": "4"
    },
    "2255": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5747,
        5828
      ],
      "op": "POP",
      "path": "4"
    },
    "2256": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5747,
        5828
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2257": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5747,
        5828
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2258": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5747,
        5828
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x8D9"
    },
    "2261": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5747,
        5828
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2262": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5747,
        5828
      ],
      "op": "POP",
      "path": "4"
    },
    "2263": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5747,
        5828
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "2265": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5747,
        5828
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2266": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5743,
        5933
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x8F5"
    },
    "2269": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5743,
        5933
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2270": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5852,
        5926
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 22,
      "value": "0x8F5"
    },
    "2273": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5869,
        5874
      ],
      "op": "DUP7",
      "path": "4"
    },
    "2274": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5876,
        5887
      ],
      "op": "DUP7",
      "path": "4"
    },
    "2275": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5889,
        5900
      ],
      "op": "DUP7",
      "path": "4"
    },
    "2276": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5902,
        5913
      ],
      "op": "DUP7",
      "path": "4"
    },
    "2277": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5915,
        5925
      ],
      "op": "DUP7",
      "path": "4"
    },
    "2278": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5915,
        5925
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x8EE"
    },
    "2281": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5915,
        5925
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2282": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5915,
        5925
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB58"
    },
    "2285": {
      "fn": "Sniper._swapWithRetries",
      "jump": "i",
      "offset": [
        5915,
        5925
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2286": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5915,
        5925
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2287": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5915,
        5925
      ],
      "op": "SWAP8",
      "path": "4"
    },
    "2288": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5915,
        5925
      ],
      "op": "POP",
      "path": "4"
    },
    "2289": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5852,
        5868
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x7D8"
    },
    "2292": {
      "fn": "Sniper._swapWithRetries",
      "jump": "i",
      "offset": [
        5852,
        5926
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2293": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        5852,
        5926
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2294": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        4742,
        6038
      ],
      "op": "POP",
      "path": "4"
    },
    "2295": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        4605,
        6038
      ],
      "op": "POP",
      "path": "4"
    },
    "2296": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        4605,
        6038
      ],
      "op": "POP",
      "path": "4"
    },
    "2297": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        4605,
        6038
      ],
      "op": "POP",
      "path": "4"
    },
    "2298": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        4605,
        6038
      ],
      "op": "POP",
      "path": "4"
    },
    "2299": {
      "fn": "Sniper._swapWithRetries",
      "offset": [
        4605,
        6038
      ],
      "op": "POP",
      "path": "4"
    },
    "2300": {
      "fn": "Sniper._swapWithRetries",
      "jump": "o",
      "offset": [
        4605,
        6038
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2301": {
      "op": "JUMPDEST"
    },
    "2302": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2304": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2306": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2308": {
      "op": "SHL"
    },
    "2309": {
      "op": "SUB"
    },
    "2310": {
      "op": "DUP2"
    },
    "2311": {
      "op": "AND"
    },
    "2312": {
      "op": "DUP2"
    },
    "2313": {
      "op": "EQ"
    },
    "2314": {
      "op": "PUSH2",
      "value": "0x51D"
    },
    "2317": {
      "op": "JUMPI"
    },
    "2318": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2320": {
      "op": "DUP1"
    },
    "2321": {
      "op": "REVERT"
    },
    "2322": {
      "op": "JUMPDEST"
    },
    "2323": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2325": {
      "op": "DUP1"
    },
    "2326": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2328": {
      "op": "DUP1"
    },
    "2329": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2331": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2333": {
      "op": "DUP7"
    },
    "2334": {
      "op": "DUP9"
    },
    "2335": {
      "op": "SUB"
    },
    "2336": {
      "op": "SLT"
    },
    "2337": {
      "op": "ISZERO"
    },
    "2338": {
      "op": "PUSH2",
      "value": "0x92A"
    },
    "2341": {
      "op": "JUMPI"
    },
    "2342": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2344": {
      "op": "DUP1"
    },
    "2345": {
      "op": "REVERT"
    },
    "2346": {
      "op": "JUMPDEST"
    },
    "2347": {
      "op": "DUP6"
    },
    "2348": {
      "op": "CALLDATALOAD"
    },
    "2349": {
      "op": "PUSH2",
      "value": "0x935"
    },
    "2352": {
      "op": "DUP2"
    },
    "2353": {
      "op": "PUSH2",
      "value": "0x8FD"
    },
    "2356": {
      "jump": "i",
      "op": "JUMP"
    },
    "2357": {
      "op": "JUMPDEST"
    },
    "2358": {
      "op": "SWAP5"
    },
    "2359": {
      "op": "POP"
    },
    "2360": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2362": {
      "op": "DUP7"
    },
    "2363": {
      "op": "ADD"
    },
    "2364": {
      "op": "CALLDATALOAD"
    },
    "2365": {
      "op": "PUSH2",
      "value": "0x945"
    },
    "2368": {
      "op": "DUP2"
    },
    "2369": {
      "op": "PUSH2",
      "value": "0x8FD"
    },
    "2372": {
      "jump": "i",
      "op": "JUMP"
    },
    "2373": {
      "op": "JUMPDEST"
    },
    "2374": {
      "op": "SWAP4"
    },
    "2375": {
      "op": "POP"
    },
    "2376": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2378": {
      "op": "DUP7"
    },
    "2379": {
      "op": "ADD"
    },
    "2380": {
      "op": "CALLDATALOAD"
    },
    "2381": {
      "op": "SWAP3"
    },
    "2382": {
      "op": "POP"
    },
    "2383": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2385": {
      "op": "DUP7"
    },
    "2386": {
      "op": "ADD"
    },
    "2387": {
      "op": "CALLDATALOAD"
    },
    "2388": {
      "op": "SWAP2"
    },
    "2389": {
      "op": "POP"
    },
    "2390": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2392": {
      "op": "DUP7"
    },
    "2393": {
      "op": "ADD"
    },
    "2394": {
      "op": "CALLDATALOAD"
    },
    "2395": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2397": {
      "op": "DUP2"
    },
    "2398": {
      "op": "AND"
    },
    "2399": {
      "op": "DUP2"
    },
    "2400": {
      "op": "EQ"
    },
    "2401": {
      "op": "PUSH2",
      "value": "0x969"
    },
    "2404": {
      "op": "JUMPI"
    },
    "2405": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2407": {
      "op": "DUP1"
    },
    "2408": {
      "op": "REVERT"
    },
    "2409": {
      "op": "JUMPDEST"
    },
    "2410": {
      "op": "DUP1"
    },
    "2411": {
      "op": "SWAP2"
    },
    "2412": {
      "op": "POP"
    },
    "2413": {
      "op": "POP"
    },
    "2414": {
      "op": "SWAP3"
    },
    "2415": {
      "op": "SWAP6"
    },
    "2416": {
      "op": "POP"
    },
    "2417": {
      "op": "SWAP3"
    },
    "2418": {
      "op": "SWAP6"
    },
    "2419": {
      "op": "SWAP1"
    },
    "2420": {
      "op": "SWAP4"
    },
    "2421": {
      "op": "POP"
    },
    "2422": {
      "jump": "o",
      "op": "JUMP"
    },
    "2423": {
      "op": "JUMPDEST"
    },
    "2424": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2426": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2428": {
      "op": "DUP3"
    },
    "2429": {
      "op": "DUP5"
    },
    "2430": {
      "op": "SUB"
    },
    "2431": {
      "op": "SLT"
    },
    "2432": {
      "op": "ISZERO"
    },
    "2433": {
      "op": "PUSH2",
      "value": "0x989"
    },
    "2436": {
      "op": "JUMPI"
    },
    "2437": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2439": {
      "op": "DUP1"
    },
    "2440": {
      "op": "REVERT"
    },
    "2441": {
      "op": "JUMPDEST"
    },
    "2442": {
      "op": "DUP2"
    },
    "2443": {
      "op": "CALLDATALOAD"
    },
    "2444": {
      "op": "PUSH2",
      "value": "0x994"
    },
    "2447": {
      "op": "DUP2"
    },
    "2448": {
      "op": "PUSH2",
      "value": "0x8FD"
    },
    "2451": {
      "jump": "i",
      "op": "JUMP"
    },
    "2452": {
      "op": "JUMPDEST"
    },
    "2453": {
      "op": "SWAP4"
    },
    "2454": {
      "op": "SWAP3"
    },
    "2455": {
      "op": "POP"
    },
    "2456": {
      "op": "POP"
    },
    "2457": {
      "op": "POP"
    },
    "2458": {
      "jump": "o",
      "op": "JUMP"
    },
    "2459": {
      "op": "JUMPDEST"
    },
    "2460": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2462": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2464": {
      "op": "DUP3"
    },
    "2465": {
      "op": "DUP5"
    },
    "2466": {
      "op": "SUB"
    },
    "2467": {
      "op": "SLT"
    },
    "2468": {
      "op": "ISZERO"
    },
    "2469": {
      "op": "PUSH2",
      "value": "0x9AD"
    },
    "2472": {
      "op": "JUMPI"
    },
    "2473": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2475": {
      "op": "DUP1"
    },
    "2476": {
      "op": "REVERT"
    },
    "2477": {
      "op": "JUMPDEST"
    },
    "2478": {
      "op": "DUP2"
    },
    "2479": {
      "op": "MLOAD"
    },
    "2480": {
      "op": "PUSH2",
      "value": "0x994"
    },
    "2483": {
      "op": "DUP2"
    },
    "2484": {
      "op": "PUSH2",
      "value": "0x8FD"
    },
    "2487": {
      "jump": "i",
      "op": "JUMP"
    },
    "2488": {
      "op": "JUMPDEST"
    },
    "2489": {
      "op": "DUP1"
    },
    "2490": {
      "op": "MLOAD"
    },
    "2491": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2493": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2495": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "2497": {
      "op": "SHL"
    },
    "2498": {
      "op": "SUB"
    },
    "2499": {
      "op": "DUP2"
    },
    "2500": {
      "op": "AND"
    },
    "2501": {
      "op": "DUP2"
    },
    "2502": {
      "op": "EQ"
    },
    "2503": {
      "op": "PUSH2",
      "value": "0x9CF"
    },
    "2506": {
      "op": "JUMPI"
    },
    "2507": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2509": {
      "op": "DUP1"
    },
    "2510": {
      "op": "REVERT"
    },
    "2511": {
      "op": "JUMPDEST"
    },
    "2512": {
      "op": "SWAP2"
    },
    "2513": {
      "op": "SWAP1"
    },
    "2514": {
      "op": "POP"
    },
    "2515": {
      "jump": "o",
      "op": "JUMP"
    },
    "2516": {
      "op": "JUMPDEST"
    },
    "2517": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2519": {
      "op": "DUP1"
    },
    "2520": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2522": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2524": {
      "op": "DUP5"
    },
    "2525": {
      "op": "DUP7"
    },
    "2526": {
      "op": "SUB"
    },
    "2527": {
      "op": "SLT"
    },
    "2528": {
      "op": "ISZERO"
    },
    "2529": {
      "op": "PUSH2",
      "value": "0x9E9"
    },
    "2532": {
      "op": "JUMPI"
    },
    "2533": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2535": {
      "op": "DUP1"
    },
    "2536": {
      "op": "REVERT"
    },
    "2537": {
      "op": "JUMPDEST"
    },
    "2538": {
      "op": "PUSH2",
      "value": "0x9F2"
    },
    "2541": {
      "op": "DUP5"
    },
    "2542": {
      "op": "PUSH2",
      "value": "0x9B8"
    },
    "2545": {
      "jump": "i",
      "op": "JUMP"
    },
    "2546": {
      "op": "JUMPDEST"
    },
    "2547": {
      "op": "SWAP3"
    },
    "2548": {
      "op": "POP"
    },
    "2549": {
      "op": "PUSH2",
      "value": "0xA00"
    },
    "2552": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2554": {
      "op": "DUP6"
    },
    "2555": {
      "op": "ADD"
    },
    "2556": {
      "op": "PUSH2",
      "value": "0x9B8"
    },
    "2559": {
      "jump": "i",
      "op": "JUMP"
    },
    "2560": {
      "op": "JUMPDEST"
    },
    "2561": {
      "op": "SWAP2"
    },
    "2562": {
      "op": "POP"
    },
    "2563": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2565": {
      "op": "DUP5"
    },
    "2566": {
      "op": "ADD"
    },
    "2567": {
      "op": "MLOAD"
    },
    "2568": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "2573": {
      "op": "DUP2"
    },
    "2574": {
      "op": "AND"
    },
    "2575": {
      "op": "DUP2"
    },
    "2576": {
      "op": "EQ"
    },
    "2577": {
      "op": "PUSH2",
      "value": "0xA19"
    },
    "2580": {
      "op": "JUMPI"
    },
    "2581": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2583": {
      "op": "DUP1"
    },
    "2584": {
      "op": "REVERT"
    },
    "2585": {
      "op": "JUMPDEST"
    },
    "2586": {
      "op": "DUP1"
    },
    "2587": {
      "op": "SWAP2"
    },
    "2588": {
      "op": "POP"
    },
    "2589": {
      "op": "POP"
    },
    "2590": {
      "op": "SWAP3"
    },
    "2591": {
      "op": "POP"
    },
    "2592": {
      "op": "SWAP3"
    },
    "2593": {
      "op": "POP"
    },
    "2594": {
      "op": "SWAP3"
    },
    "2595": {
      "jump": "o",
      "op": "JUMP"
    },
    "2596": {
      "op": "JUMPDEST"
    },
    "2597": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2599": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2601": {
      "op": "DUP3"
    },
    "2602": {
      "op": "DUP5"
    },
    "2603": {
      "op": "SUB"
    },
    "2604": {
      "op": "SLT"
    },
    "2605": {
      "op": "ISZERO"
    },
    "2606": {
      "op": "PUSH2",
      "value": "0xA36"
    },
    "2609": {
      "op": "JUMPI"
    },
    "2610": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2612": {
      "op": "DUP1"
    },
    "2613": {
      "op": "REVERT"
    },
    "2614": {
      "op": "JUMPDEST"
    },
    "2615": {
      "op": "DUP2"
    },
    "2616": {
      "op": "MLOAD"
    },
    "2617": {
      "op": "DUP1"
    },
    "2618": {
      "op": "ISZERO"
    },
    "2619": {
      "op": "ISZERO"
    },
    "2620": {
      "op": "DUP2"
    },
    "2621": {
      "op": "EQ"
    },
    "2622": {
      "op": "PUSH2",
      "value": "0x994"
    },
    "2625": {
      "op": "JUMPI"
    },
    "2626": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2628": {
      "op": "DUP1"
    },
    "2629": {
      "op": "REVERT"
    },
    "2630": {
      "op": "JUMPDEST"
    },
    "2631": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2633": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2635": {
      "op": "DUP3"
    },
    "2636": {
      "op": "DUP5"
    },
    "2637": {
      "op": "SUB"
    },
    "2638": {
      "op": "SLT"
    },
    "2639": {
      "op": "ISZERO"
    },
    "2640": {
      "op": "PUSH2",
      "value": "0xA58"
    },
    "2643": {
      "op": "JUMPI"
    },
    "2644": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2646": {
      "op": "DUP1"
    },
    "2647": {
      "op": "REVERT"
    },
    "2648": {
      "op": "JUMPDEST"
    },
    "2649": {
      "op": "POP"
    },
    "2650": {
      "op": "MLOAD"
    },
    "2651": {
      "op": "SWAP2"
    },
    "2652": {
      "op": "SWAP1"
    },
    "2653": {
      "op": "POP"
    },
    "2654": {
      "jump": "o",
      "op": "JUMP"
    },
    "2655": {
      "op": "JUMPDEST"
    },
    "2656": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2661": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2663": {
      "op": "SHL"
    },
    "2664": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2666": {
      "op": "MSTORE"
    },
    "2667": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "2669": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2671": {
      "op": "MSTORE"
    },
    "2672": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2674": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2676": {
      "op": "REVERT"
    },
    "2677": {
      "op": "JUMPDEST"
    },
    "2678": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2680": {
      "op": "DUP2"
    },
    "2681": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2683": {
      "op": "NOT"
    },
    "2684": {
      "op": "DIV"
    },
    "2685": {
      "op": "DUP4"
    },
    "2686": {
      "op": "GT"
    },
    "2687": {
      "op": "DUP3"
    },
    "2688": {
      "op": "ISZERO"
    },
    "2689": {
      "op": "ISZERO"
    },
    "2690": {
      "op": "AND"
    },
    "2691": {
      "op": "ISZERO"
    },
    "2692": {
      "op": "PUSH2",
      "value": "0xA8F"
    },
    "2695": {
      "op": "JUMPI"
    },
    "2696": {
      "op": "PUSH2",
      "value": "0xA8F"
    },
    "2699": {
      "op": "PUSH2",
      "value": "0xA5F"
    },
    "2702": {
      "jump": "i",
      "op": "JUMP"
    },
    "2703": {
      "op": "JUMPDEST"
    },
    "2704": {
      "op": "POP"
    },
    "2705": {
      "op": "MUL"
    },
    "2706": {
      "op": "SWAP1"
    },
    "2707": {
      "jump": "o",
      "op": "JUMP"
    },
    "2708": {
      "op": "JUMPDEST"
    },
    "2709": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2711": {
      "op": "DUP3"
    },
    "2712": {
      "op": "NOT"
    },
    "2713": {
      "op": "DUP3"
    },
    "2714": {
      "op": "GT"
    },
    "2715": {
      "op": "ISZERO"
    },
    "2716": {
      "op": "PUSH2",
      "value": "0xAA7"
    },
    "2719": {
      "op": "JUMPI"
    },
    "2720": {
      "op": "PUSH2",
      "value": "0xAA7"
    },
    "2723": {
      "op": "PUSH2",
      "value": "0xA5F"
    },
    "2726": {
      "jump": "i",
      "op": "JUMP"
    },
    "2727": {
      "op": "JUMPDEST"
    },
    "2728": {
      "op": "POP"
    },
    "2729": {
      "op": "ADD"
    },
    "2730": {
      "op": "SWAP1"
    },
    "2731": {
      "jump": "o",
      "op": "JUMP"
    },
    "2732": {
      "op": "JUMPDEST"
    },
    "2733": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2735": {
      "op": "DUP3"
    },
    "2736": {
      "op": "PUSH2",
      "value": "0xAC9"
    },
    "2739": {
      "op": "JUMPI"
    },
    "2740": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2745": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2747": {
      "op": "SHL"
    },
    "2748": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2750": {
      "op": "MSTORE"
    },
    "2751": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "2753": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2755": {
      "op": "MSTORE"
    },
    "2756": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2758": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2760": {
      "op": "REVERT"
    },
    "2761": {
      "op": "JUMPDEST"
    },
    "2762": {
      "op": "POP"
    },
    "2763": {
      "op": "DIV"
    },
    "2764": {
      "op": "SWAP1"
    },
    "2765": {
      "jump": "o",
      "op": "JUMP"
    },
    "2766": {
      "op": "JUMPDEST"
    },
    "2767": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2769": {
      "op": "DUP3"
    },
    "2770": {
      "op": "DUP3"
    },
    "2771": {
      "op": "LT"
    },
    "2772": {
      "op": "ISZERO"
    },
    "2773": {
      "op": "PUSH2",
      "value": "0xAE0"
    },
    "2776": {
      "op": "JUMPI"
    },
    "2777": {
      "op": "PUSH2",
      "value": "0xAE0"
    },
    "2780": {
      "op": "PUSH2",
      "value": "0xA5F"
    },
    "2783": {
      "jump": "i",
      "op": "JUMP"
    },
    "2784": {
      "op": "JUMPDEST"
    },
    "2785": {
      "op": "POP"
    },
    "2786": {
      "op": "SUB"
    },
    "2787": {
      "op": "SWAP1"
    },
    "2788": {
      "jump": "o",
      "op": "JUMP"
    },
    "2789": {
      "op": "JUMPDEST"
    },
    "2790": {
      "op": "DUP5"
    },
    "2791": {
      "op": "DUP2"
    },
    "2792": {
      "op": "MSTORE"
    },
    "2793": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2795": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2797": {
      "op": "DUP6"
    },
    "2798": {
      "op": "DUP2"
    },
    "2799": {
      "op": "DUP5"
    },
    "2800": {
      "op": "ADD"
    },
    "2801": {
      "op": "MSTORE"
    },
    "2802": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2804": {
      "op": "DUP1"
    },
    "2805": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2807": {
      "op": "SHL"
    },
    "2808": {
      "op": "SUB"
    },
    "2809": {
      "op": "DUP6"
    },
    "2810": {
      "op": "AND"
    },
    "2811": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2813": {
      "op": "DUP5"
    },
    "2814": {
      "op": "ADD"
    },
    "2815": {
      "op": "MSTORE"
    },
    "2816": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2818": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2820": {
      "op": "DUP5"
    },
    "2821": {
      "op": "ADD"
    },
    "2822": {
      "op": "MSTORE"
    },
    "2823": {
      "op": "DUP4"
    },
    "2824": {
      "op": "MLOAD"
    },
    "2825": {
      "op": "DUP1"
    },
    "2826": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2828": {
      "op": "DUP6"
    },
    "2829": {
      "op": "ADD"
    },
    "2830": {
      "op": "MSTORE"
    },
    "2831": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2833": {
      "op": "JUMPDEST"
    },
    "2834": {
      "op": "DUP2"
    },
    "2835": {
      "op": "DUP2"
    },
    "2836": {
      "op": "LT"
    },
    "2837": {
      "op": "ISZERO"
    },
    "2838": {
      "op": "PUSH2",
      "value": "0xB2D"
    },
    "2841": {
      "op": "JUMPI"
    },
    "2842": {
      "op": "DUP6"
    },
    "2843": {
      "op": "DUP2"
    },
    "2844": {
      "op": "ADD"
    },
    "2845": {
      "op": "DUP4"
    },
    "2846": {
      "op": "ADD"
    },
    "2847": {
      "op": "MLOAD"
    },
    "2848": {
      "op": "DUP6"
    },
    "2849": {
      "op": "DUP3"
    },
    "2850": {
      "op": "ADD"
    },
    "2851": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2853": {
      "op": "ADD"
    },
    "2854": {
      "op": "MSTORE"
    },
    "2855": {
      "op": "DUP3"
    },
    "2856": {
      "op": "ADD"
    },
    "2857": {
      "op": "PUSH2",
      "value": "0xB11"
    },
    "2860": {
      "op": "JUMP"
    },
    "2861": {
      "op": "JUMPDEST"
    },
    "2862": {
      "op": "DUP2"
    },
    "2863": {
      "op": "DUP2"
    },
    "2864": {
      "op": "GT"
    },
    "2865": {
      "op": "ISZERO"
    },
    "2866": {
      "op": "PUSH2",
      "value": "0xB3F"
    },
    "2869": {
      "op": "JUMPI"
    },
    "2870": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2872": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2874": {
      "op": "DUP4"
    },
    "2875": {
      "op": "DUP8"
    },
    "2876": {
      "op": "ADD"
    },
    "2877": {
      "op": "ADD"
    },
    "2878": {
      "op": "MSTORE"
    },
    "2879": {
      "op": "JUMPDEST"
    },
    "2880": {
      "op": "POP"
    },
    "2881": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2883": {
      "op": "ADD"
    },
    "2884": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2886": {
      "op": "NOT"
    },
    "2887": {
      "op": "AND"
    },
    "2888": {
      "op": "SWAP3"
    },
    "2889": {
      "op": "SWAP1"
    },
    "2890": {
      "op": "SWAP3"
    },
    "2891": {
      "op": "ADD"
    },
    "2892": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2894": {
      "op": "ADD"
    },
    "2895": {
      "op": "SWAP7"
    },
    "2896": {
      "op": "SWAP6"
    },
    "2897": {
      "op": "POP"
    },
    "2898": {
      "op": "POP"
    },
    "2899": {
      "op": "POP"
    },
    "2900": {
      "op": "POP"
    },
    "2901": {
      "op": "POP"
    },
    "2902": {
      "op": "POP"
    },
    "2903": {
      "jump": "o",
      "op": "JUMP"
    },
    "2904": {
      "op": "JUMPDEST"
    },
    "2905": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2907": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2909": {
      "op": "DUP3"
    },
    "2910": {
      "op": "AND"
    },
    "2911": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2913": {
      "op": "DUP2"
    },
    "2914": {
      "op": "SUB"
    },
    "2915": {
      "op": "PUSH2",
      "value": "0xB6E"
    },
    "2918": {
      "op": "JUMPI"
    },
    "2919": {
      "op": "PUSH2",
      "value": "0xB6E"
    },
    "2922": {
      "op": "PUSH2",
      "value": "0xA5F"
    },
    "2925": {
      "jump": "i",
      "op": "JUMP"
    },
    "2926": {
      "op": "JUMPDEST"
    },
    "2927": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2929": {
      "op": "ADD"
    },
    "2930": {
      "op": "SWAP3"
    },
    "2931": {
      "op": "SWAP2"
    },
    "2932": {
      "op": "POP"
    },
    "2933": {
      "op": "POP"
    },
    "2934": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "00f4965b04d273f0df59b5b285cbae1899d8033d",
  "source": "// SCH Course Copyright Policy (C): DO-NOT-SHARE-WITH-ANYONE\n// https://smartcontractshacking.com/#copyright-policy\npragma solidity 0.8.13;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/interfaces/IERC20.sol\";\n\nimport \"../interfaces/IUniswapV2.sol\";\ninterface IWETH is IERC20 {\n    function deposit() external payable;\n    function transfer(address to, uint value) external returns (bool);\n    function withdraw(uint) external;\n}\n/**\n * @title Sniper\n * @author JohnnyTime (https://smartcontractshacking.com)\n */\ncontract Sniper is Ownable {\n\n  // We are calculating `amountOut = amountOut * slippage / 1000.\n  // So, if we set slippage to 1000, it means no slippage at all, because 1000 / 1000 = 1\n  // Initally we try to purchase without slippage\n  uint private constant INITIAL_SLIPPAGE = 1000; \n  // Every failed attemp we will increase the slippage by 0.3% (3 / 1000)\n  uint private constant SLLIPAGE_INCREMENTS = 3; \n  address public UniswapV2Factory = address(0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f);\n  address public WETH = address(0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2);\n\n  IUniswapV2Factory private immutable factory;\n\n  address public uniswapV2Pair;\n\n/*   constructor(address _factory) {\n    factory = IUniswapV2Factory(_factory);\n  } */\n  constructor() {\n    factory = IUniswapV2Factory(UniswapV2Factory);\n\n  }\n\n  /**\n   * The main external snipe function that is being called by the contract owner.\n   * Checks the the current reserves, determines the expected amountOut.\n   * If amountOut >= `_absoluteMinAmountOut`, it will try to swap the tokens `_maxRetries` times\n   * using the internal `_swapWithRetries` function.\n   * @param _tokenIn the token address you want to sell\n   * @param _tokenOut the token address you want to buy\n   * @param _amountIn the amount of tokens you are sending in\n   * @param _absoluteMinAmountOut the minimum amount of tokens you want out of the trade\n   * @param _maxRetries In case the swap fails, it will try again _maxRetries times (with higher slippage tolerance every time)\n   */\n  function snipe(\n    address _tokenIn, address _tokenOut, uint256 _amountIn,\n    uint256 _absoluteMinAmountOut, uint8 _maxRetries)\n    external onlyOwner {\n    // TODO: Implement this function\n\n    // TODO: Use the Factory to get the pair contract address, revert if pair doesn't exist\n    // Note: might return error - if the pair is not created yet\n    //factory = IUniswapV2Factory(UniswapV2Factory);\n    address pair = factory.getPair(_tokenIn, _tokenOut);\n    require(pair != address(0), \"Pair does not exists!\");\n    //uniswapV2Pair = uniswapV2Factory.createPair(address(this), weth);\n    \n    // TODO: Sort the tokens using the internal `_sortTokens` function\n    (address token0, address token1) = _sortTokens(_tokenIn, _tokenOut);\n\n    uint256 amountOut;\n    // NOTE: We're using block to avoid \"stack too deep\" error\n    {\n      // TODO: Get pair reserves, and match them with _tokenIn and _tokenOut\n      (uint256 reserve0, uint256 reserve1, ) = IUniswapV2Pair(pair).getReserves();\n      (uint256 reserveIn, uint256 reserveOut) = _tokenIn == token0 ? (reserve0, reserve1) : (reserve1, reserve0);\n      \n      // TODO: Get the expected amount out and revert if it's lower than the `_absoluteMinAmountOut`\n      // NOTE: Use the internal _getAmountOut function\n      amountOut = _getAmountOut(_amountIn, reserveIn, reserveOut);\n      \n    }\n\n    // TODO: Transfer the token to the pair contract\n    IERC20(_tokenIn).transfer(address(pair), _amountIn);\n\n    \n\n    // TODO: Set amount0Out and amount1Out, based on token0 & token1\n    // explanation 1- : _tokenIn is the token we want to sell\n    // explanation 2- : So if tokenIn == token0, \n    // explanation 3- : it means we are not looking for amount0Out,\n    // explanation 4- : because we selling this token and not buying\n    // explanation 5- : Therefore Amount0Out must be ZERO if if tokenIn == token0.\n    (uint256 amount0Out, uint256 amount1Out ) = _tokenIn == token0 ? (uint256(0), amountOut) : (amountOut, uint256(0));\n    // TODO: Call internal _swapWithRetries function with the relevant parameters\n    _swapWithRetries(address(pair), amount0Out, amount1Out, _maxRetries, 0);\n    // TODO: Transfer the sniped tokens to the owner\n    IERC20(_tokenOut).transfer(owner(), IERC20(_tokenOut).balanceOf(address(this)));\n\n  }\n\n  /**\n   * Internal function that will try to swap the tokens using the pair contract\n   * In case the swap failed, it will call itself again with higher slippage\n   * and try again until the swap succeded or `_maxRetries`\n   */\n  function _swapWithRetries(\n    address _pair, uint256 _amount0Out, uint256 _amount1Out, uint8 _maxRetries, uint8 _retryNo\n    ) internal {\n    // TODO: Implement this function\n\n    // Our slippage tolerance. Every retry we will be willinig to pay 0.3% more for the tokens\n    // The slippage will be calculated by `amountOut * slippage / 1000`, so\n    // 0.3% = 997, 0.6% = 994, and so on..\n    uint256 slippageTolerance;\n\n    // TODO: Revert if we reached max retries\n    require(_maxRetries >= _retryNo, \"Tried enough!\");\n\n    // TODO: Set the slippage tolerance based on the _retryNo\n    // TODO: Start from INITIAL_SLIPPAGE, then every retry we reduce SLLIPAGE_INCREMENTS\n    // 0.3% = 997, 0.6% = 994, and so on..\n    slippageTolerance = INITIAL_SLIPPAGE - (SLLIPAGE_INCREMENTS * _retryNo);\n    // TODO: Apply the slippage to the amounts\n    _amount0Out =  _amount0Out * slippageTolerance / 1000;\n    _amount1Out = _amount1Out * slippageTolerance / 1000;\n    // TODO: Call the low-level pair swap() function with all the parameters\n    // TODO: In case it failed, call _swapWithRetreis again (don't forget to increment _retryNo)\n    try IUniswapV2Pair(_pair).swap(_amount0Out, _amount1Out, address(this), new bytes(0)) {\n\n    } catch {\n      _swapWithRetries(_pair, _amount0Out, _amount1Out, _maxRetries, _retryNo++);\n    }\n    /*     function _swap(amount0Out, uint amount1Out, address to, bytes calldata data) external; */\n  }\n\n  /**\n   * Internal function to sort the tokens by their addresses\n   * Exact same logic like in the Unsiwap Factory `createPair()` function.\n   */\n  function _sortTokens(address tokenA, address tokenB) internal pure returns (address token0, address token1) {\n    // TODO: Implement tokens sorting functionality as in Uniswap V2 Factory `createPair` function\n        require(tokenA != tokenB, 'UniswapV2: IDENTICAL_ADDRESSES');\n        (address token0, address token1) = tokenA < tokenB ? (tokenA, tokenB) : (tokenB, tokenA);\n        require(token0 != address(0), 'UniswapV2: ZERO_ADDRESS');\n  }\n\n  /**\n   * Internal function to get the expected amount of tokens which we will receive based on given `amountIn` and pair reserves.\n   * Exact same logic like in the Unsiwap Library `_getAmountOut()` function.\n   */\n  function _getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) internal pure returns (uint amountOut) {\n      // TODO: Implement functionality as in Uniswap V2 Library `getAmountOut` function\n        require(amountIn > 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT');\n        require(reserveIn > 0 && reserveOut > 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY');\n        uint amountInWithFee = amountIn * 997; // Calculating 0.3% of UniSwap fee, to calculate 0.3% you must multiply by 997\n        uint numerator = amountInWithFee * reserveOut;\n        uint denominator = reserveIn * 1000 + amountInWithFee;\n        amountOut = numerator / denominator;\n  }\n  \n}",
  "sourceMap": "553:6972:4:-:0;;;965:85;;;-1:-1:-1;;;;;;965:85:4;;;1007:42;965:85;;;;1054:73;;;;;;1084:42;1054:73;;;1300:71;;;;;;;;;-1:-1:-1;936:32:0;719:10:3;936:18:0;:32::i;:::-;1348:16:4;;-1:-1:-1;;;;;1348:16:4;1320:45;;553:6972;;2433:187:0;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;553:6972:4:-;;;;;;;;;;;;;",
  "sourcePath": "contracts/dex-2/Sniper.sol",
  "type": "contract"
}