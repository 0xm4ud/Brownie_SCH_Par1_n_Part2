{
  "abi": [
    {
      "inputs": [],
      "name": "allowExecution",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "beforeExecution",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "flipSwitch",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "22": "contracts/solution/AttackContractSolved.sol"
  },
  "ast": {
    "absolutePath": "contracts/solution/AttackContractSolved.sol",
    "exportedSymbols": {
      "AttackContract2": [
        2326
      ],
      "ICallbackContract": [
        2356
      ]
    },
    "id": 2327,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2278,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".13"
        ],
        "nodeType": "PragmaDirective",
        "src": "116:24:22"
      },
      {
        "absolutePath": "interfaces/ICallbackContract.sol",
        "file": "../../interfaces/ICallbackContract.sol",
        "id": 2279,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2327,
        "sourceUnit": 2357,
        "src": "142:48:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "AttackContract2",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 2326,
        "linearizedBaseContracts": [
          2326
        ],
        "name": "AttackContract2",
        "nameLocation": "201:15:22",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "91a41888",
            "id": 2281,
            "mutability": "mutable",
            "name": "allowExecution",
            "nameLocation": "235:14:22",
            "nodeType": "VariableDeclaration",
            "scope": 2326,
            "src": "223:26:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 2280,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "223:4:22",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 2289,
              "nodeType": "Block",
              "src": "285:49:22",
              "statements": [
                {
                  "expression": {
                    "id": 2287,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2284,
                      "name": "allowExecution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2281,
                      "src": "295:14:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2286,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "312:15:22",
                      "subExpression": {
                        "id": 2285,
                        "name": "allowExecution",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2281,
                        "src": "313:14:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "295:32:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2288,
                  "nodeType": "ExpressionStatement",
                  "src": "295:32:22"
                }
              ]
            },
            "functionSelector": "4f0c8fdf",
            "id": 2290,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "flipSwitch",
            "nameLocation": "265:10:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2282,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "275:2:22"
            },
            "returnParameters": {
              "id": 2283,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "285:0:22"
            },
            "scope": 2326,
            "src": "256:78:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2324,
              "nodeType": "Block",
              "src": "376:391:22",
              "statements": [
                {
                  "condition": {
                    "id": 2293,
                    "name": "allowExecution",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2281,
                    "src": "390:14:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2295,
                  "nodeType": "IfStatement",
                  "src": "386:27:22",
                  "trueBody": {
                    "functionReturnParameters": 2292,
                    "id": 2294,
                    "nodeType": "Return",
                    "src": "406:7:22"
                  }
                },
                {
                  "assignments": [
                    2297
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2297,
                      "mutability": "mutable",
                      "name": "gas",
                      "nameLocation": "449:3:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 2324,
                      "src": "423:29:22",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 2296,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "423:6:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2299,
                  "initialValue": {
                    "hexValue": "676173676173676173676173676167736761736761736761736761736761736761736761736761736761736761677367617367617367617367617367617367617367617367617367617367616773676173676173676173676173676173676173676173676173676173676167736761736761736761736761736761736761736761736761736761736761677367617367617367617367617367617367617367617367617367617367616773676173676173676173676173676173676173676173",
                    "id": 2298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "455:194:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_e332b137a52242503f268f0be5669e1e49964a03f662a305938ebd5d352d8db5",
                      "typeString": "literal_string \"gasgasgasgasgagsgasgasgasgasgasgasgasgasgasgagsgasgasgasgasgasgasgasgasgasgagsgasgasgasgasgasgasgasgasgasgagsgasgasgasgasgasgasgasgasgasgagsgasgasgasgasgasgasgasgasgasgagsgasgasgasgasgasgasgas\""
                    },
                    "value": "gasgasgasgasgagsgasgasgasgasgasgasgasgasgasgagsgasgasgasgasgasgasgasgasgasgagsgasgasgasgasgasgasgasgasgasgagsgasgasgasgasgasgasgasgasgasgagsgasgasgasgasgasgasgasgasgasgagsgasgasgasgasgasgasgas"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "423:226:22"
                },
                {
                  "body": {
                    "id": 2318,
                    "nodeType": "Block",
                    "src": "685:54:22",
                    "statements": [
                      {
                        "expression": {
                          "id": 2316,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2309,
                            "name": "gas",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2297,
                            "src": "699:3:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 2313,
                                "name": "gas",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2297,
                                "src": "719:3:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "id": 2314,
                                "name": "gas",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2297,
                                "src": "724:3:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "expression": {
                                "id": 2311,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "705:6:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                  "typeString": "type(string storage pointer)"
                                },
                                "typeName": {
                                  "id": 2310,
                                  "name": "string",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "705:6:22",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2312,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "712:6:22",
                              "memberName": "concat",
                              "nodeType": "MemberAccess",
                              "src": "705:13:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
                                "typeString": "function () pure returns (string memory)"
                              }
                            },
                            "id": 2315,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "705:23:22",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "699:29:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "id": 2317,
                        "nodeType": "ExpressionStatement",
                        "src": "699:29:22"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2305,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2303,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2301,
                      "src": "673:1:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "39",
                      "id": 2304,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "677:1:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_9_by_1",
                        "typeString": "int_const 9"
                      },
                      "value": "9"
                    },
                    "src": "673:5:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2319,
                  "initializationExpression": {
                    "assignments": [
                      2301
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2301,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "670:1:22",
                        "nodeType": "VariableDeclaration",
                        "scope": 2319,
                        "src": "665:6:22",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2300,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "665:4:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 2302,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "665:6:22"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 2307,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "680:3:22",
                      "subExpression": {
                        "id": 2306,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2301,
                        "src": "680:1:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2308,
                    "nodeType": "ExpressionStatement",
                    "src": "680:3:22"
                  },
                  "nodeType": "ForStatement",
                  "src": "660:79:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2321,
                        "name": "gas",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2297,
                        "src": "756:3:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 2320,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -19,
                        -19
                      ],
                      "referencedDeclaration": -19,
                      "src": "749:6:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) pure"
                      }
                    },
                    "id": 2322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "749:11:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2323,
                  "nodeType": "ExpressionStatement",
                  "src": "749:11:22"
                }
              ]
            },
            "functionSelector": "6e785635",
            "id": 2325,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "beforeExecution",
            "nameLocation": "349:15:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2291,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "364:2:22"
            },
            "returnParameters": {
              "id": 2292,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "376:0:22"
            },
            "scope": 2326,
            "src": "340:427:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2327,
        "src": "192:577:22",
        "usedErrors": []
      }
    ],
    "src": "116:654:22"
  },
  "bytecode": "608060405234801561001057600080fd5b506102bc806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80634f0c8fdf146100465780636e7856351461005f57806391a4188814610067575b600080fd5b61005d6000805460ff19811660ff90911615179055565b005b61005d610088565b6000546100749060ff1681565b604051901515815260200160405180910390f35b60005460ff161561009557565b60006040518060e0016040528060c081526020016101c760c09139905060005b60098110156100f55781826040516020016100d192919061013d565b604051602081830303815290604052915080806100ed9061016c565b9150506100b5565b508060405162461bcd60e51b81526004016101109190610193565b60405180910390fd5b60005b8381101561013457818101518382015260200161011c565b50506000910152565b6000835161014f818460208801610119565b835190830190610163818360208801610119565b01949350505050565b60006001820161018c57634e487b7160e01b600052601160045260246000fd5b5060010190565b60208152600082518060208401526101b2816040850160208701610119565b601f01601f1916919091016040019291505056fe676173676173676173676173676167736761736761736761736761736761736761736761736761736761736761677367617367617367617367617367617367617367617367617367617367616773676173676173676173676173676173676173676173676173676173676167736761736761736761736761736761736761736761736761736761736761677367617367617367617367617367617367617367617367617367617367616773676173676173676173676173676173676173676173a2646970667358221220d560a2bf147bf83220d18c19fe98e1e63de167df28a00727ac84bf661703ecae64736f6c63430008130033",
  "bytecodeSha1": "c53d50f5629fe4daf91b1216d6ee9d8436fafd80",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.19+commit.7dd6d404"
  },
  "contractName": "AttackContract2",
  "coverageMap": {
    "branches": {
      "22": {
        "AttackContract2.beforeExecution": {
          "4": [
            390,
            404,
            false
          ]
        }
      }
    },
    "statements": {
      "22": {
        "AttackContract2.beforeExecution": {
          "1": [
            699,
            728
          ],
          "2": [
            680,
            683
          ],
          "3": [
            749,
            760
          ]
        },
        "AttackContract2.flipSwitch": {
          "0": [
            295,
            327
          ]
        }
      }
    }
  },
  "dependencies": [],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100415760003560e01c80634f0c8fdf146100465780636e7856351461005f57806391a4188814610067575b600080fd5b61005d6000805460ff19811660ff90911615179055565b005b61005d610088565b6000546100749060ff1681565b604051901515815260200160405180910390f35b60005460ff161561009557565b60006040518060e0016040528060c081526020016101c760c09139905060005b60098110156100f55781826040516020016100d192919061013d565b604051602081830303815290604052915080806100ed9061016c565b9150506100b5565b508060405162461bcd60e51b81526004016101109190610193565b60405180910390fd5b60005b8381101561013457818101518382015260200161011c565b50506000910152565b6000835161014f818460208801610119565b835190830190610163818360208801610119565b01949350505050565b60006001820161018c57634e487b7160e01b600052601160045260246000fd5b5060010190565b60208152600082518060208401526101b2816040850160208701610119565b601f01601f1916919091016040019291505056fe676173676173676173676173676167736761736761736761736761736761736761736761736761736761736761677367617367617367617367617367617367617367617367617367617367616773676173676173676173676173676173676173676173676173676173676167736761736761736761736761736761736761736761736761736761736761677367617367617367617367617367617367617367617367617367617367616773676173676173676173676173676173676173676173a2646970667358221220d560a2bf147bf83220d18c19fe98e1e63de167df28a00727ac84bf661703ecae64736f6c63430008130033",
  "deployedSourceMap": "192:577:22:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;256:78;;313:14;;;-1:-1:-1;;295:32:22;;313:14;;;;312:15;295:32;;;256:78;;;340:427;;;:::i;223:26::-;;;;;;;;;;;;179:14:26;;172:22;154:41;;142:2;127:18;223:26:22;;;;;;;340:427;390:14;;;;386:27;;;340:427::o;386:27::-;423:29;:226;;;;;;;;;;;;;;;;;;;665:6;660:79;677:1;673;:5;660:79;;;719:3;724;705:23;;;;;;;;;:::i;:::-;;;;;;;;;;;;;699:29;;680:3;;;;;:::i;:::-;;;;660:79;;;;756:3;749:11;;-1:-1:-1;;;749:11:22;;;;;;;;:::i;:::-;;;;;;;;206:250:26;291:1;301:113;315:6;312:1;309:13;301:113;;;391:11;;;385:18;372:11;;;365:39;337:2;330:10;301:113;;;-1:-1:-1;;448:1:26;430:16;;423:27;206:250::o;461:496::-;640:3;678:6;672:13;694:66;753:6;748:3;741:4;733:6;729:17;694:66;:::i;:::-;823:13;;782:16;;;;845:70;823:13;782:16;892:4;880:17;;845:70;:::i;:::-;931:20;;461:496;-1:-1:-1;;;;461:496:26:o;962:232::-;1001:3;1022:17;;;1019:140;;1081:10;1076:3;1072:20;1069:1;1062:31;1116:4;1113:1;1106:15;1144:4;1141:1;1134:15;1019:140;-1:-1:-1;1186:1:26;1175:13;;962:232::o;1199:396::-;1348:2;1337:9;1330:21;1311:4;1380:6;1374:13;1423:6;1418:2;1407:9;1403:18;1396:34;1439:79;1511:6;1506:2;1495:9;1491:18;1486:2;1478:6;1474:15;1439:79;:::i;:::-;1579:2;1558:15;-1:-1:-1;;1554:29:26;1539:45;;;;1586:2;1535:54;;1199:396;-1:-1:-1;;1199:396:26:o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    192,
    769
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4F0C8FDF EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x6E785635 EQ PUSH2 0x5F JUMPI DUP1 PUSH4 0x91A41888 EQ PUSH2 0x67 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5D PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT DUP2 AND PUSH1 0xFF SWAP1 SWAP2 AND ISZERO OR SWAP1 SSTORE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5D PUSH2 0x88 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x74 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x95 JUMPI JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xC0 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1C7 PUSH1 0xC0 SWAP2 CODECOPY SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x9 DUP2 LT ISZERO PUSH2 0xF5 JUMPI DUP2 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xD1 SWAP3 SWAP2 SWAP1 PUSH2 0x13D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP DUP1 DUP1 PUSH2 0xED SWAP1 PUSH2 0x16C JUMP JUMPDEST SWAP2 POP POP PUSH2 0xB5 JUMP JUMPDEST POP DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x110 SWAP2 SWAP1 PUSH2 0x193 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x134 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x11C JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x14F DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x119 JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x163 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x119 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x18C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1B2 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x119 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID PUSH8 0x6173676173676173 PUSH8 0x6173676167736761 PUSH20 0x6761736761736761736761736761736761736761 PUSH20 0x6761736761677367617367617367617367617367 PUSH2 0x7367 PUSH2 0x7367 PUSH2 0x7367 PUSH2 0x7367 PUSH2 0x7367 PUSH2 0x6773 PUSH8 0x6173676173676173 PUSH8 0x6173676173676173 PUSH8 0x6173676173676173 PUSH8 0x6167736761736761 PUSH20 0x6761736761736761736761736761736761736761 PUSH20 0x6761677367617367617367617367617367617367 PUSH2 0x7367 PUSH2 0x7367 PUSH2 0x7367 PUSH2 0x7367 PUSH2 0x6773 PUSH8 0x6173676173676173 PUSH8 0x6173676173676173 PUSH8 0x6173A26469706673 PC 0x22 SLT KECCAK256 0xD5 PUSH1 0xA2 0xBF EQ PUSH28 0xF83220D18C19FE98E1E63DE167DF28A00727AC84BF661703ECAE6473 PUSH16 0x6C634300081300330000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        192,
        769
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        192,
        769
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        192,
        769
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5": {
      "fn": null,
      "offset": [
        192,
        769
      ],
      "op": "CALLVALUE",
      "path": "22"
    },
    "6": {
      "fn": null,
      "offset": [
        192,
        769
      ],
      "op": "DUP1",
      "path": "22"
    },
    "7": {
      "fn": null,
      "offset": [
        192,
        769
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "8": {
      "fn": null,
      "offset": [
        192,
        769
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        192,
        769
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "12": {
      "fn": null,
      "offset": [
        192,
        769
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        192,
        769
      ],
      "op": "DUP1",
      "path": "22"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        192,
        769
      ],
      "op": "REVERT",
      "path": "22"
    },
    "16": {
      "fn": null,
      "offset": [
        192,
        769
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "17": {
      "fn": null,
      "offset": [
        192,
        769
      ],
      "op": "POP",
      "path": "22"
    },
    "18": {
      "fn": null,
      "offset": [
        192,
        769
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        192,
        769
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "21": {
      "fn": null,
      "offset": [
        192,
        769
      ],
      "op": "LT",
      "path": "22"
    },
    "22": {
      "fn": null,
      "offset": [
        192,
        769
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x41"
    },
    "25": {
      "fn": null,
      "offset": [
        192,
        769
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "26": {
      "fn": null,
      "offset": [
        192,
        769
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        192,
        769
      ],
      "op": "CALLDATALOAD",
      "path": "22"
    },
    "29": {
      "fn": null,
      "offset": [
        192,
        769
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        192,
        769
      ],
      "op": "SHR",
      "path": "22"
    },
    "32": {
      "fn": null,
      "offset": [
        192,
        769
      ],
      "op": "DUP1",
      "path": "22"
    },
    "33": {
      "fn": null,
      "offset": [
        192,
        769
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x4F0C8FDF"
    },
    "38": {
      "fn": null,
      "offset": [
        192,
        769
      ],
      "op": "EQ",
      "path": "22"
    },
    "39": {
      "fn": null,
      "offset": [
        192,
        769
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x46"
    },
    "42": {
      "fn": null,
      "offset": [
        192,
        769
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "43": {
      "fn": null,
      "offset": [
        192,
        769
      ],
      "op": "DUP1",
      "path": "22"
    },
    "44": {
      "fn": null,
      "offset": [
        192,
        769
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x6E785635"
    },
    "49": {
      "fn": null,
      "offset": [
        192,
        769
      ],
      "op": "EQ",
      "path": "22"
    },
    "50": {
      "fn": null,
      "offset": [
        192,
        769
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x5F"
    },
    "53": {
      "fn": null,
      "offset": [
        192,
        769
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "54": {
      "fn": null,
      "offset": [
        192,
        769
      ],
      "op": "DUP1",
      "path": "22"
    },
    "55": {
      "fn": null,
      "offset": [
        192,
        769
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x91A41888"
    },
    "60": {
      "fn": null,
      "offset": [
        192,
        769
      ],
      "op": "EQ",
      "path": "22"
    },
    "61": {
      "fn": null,
      "offset": [
        192,
        769
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x67"
    },
    "64": {
      "fn": null,
      "offset": [
        192,
        769
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "65": {
      "fn": null,
      "offset": [
        192,
        769
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "66": {
      "fn": null,
      "offset": [
        192,
        769
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "68": {
      "fn": null,
      "offset": [
        192,
        769
      ],
      "op": "DUP1",
      "path": "22"
    },
    "69": {
      "first_revert": true,
      "fn": null,
      "offset": [
        192,
        769
      ],
      "op": "REVERT",
      "path": "22"
    },
    "70": {
      "fn": "AttackContract2.flipSwitch",
      "offset": [
        256,
        334
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "71": {
      "fn": "AttackContract2.flipSwitch",
      "offset": [
        256,
        334
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x5D"
    },
    "74": {
      "fn": "AttackContract2.flipSwitch",
      "offset": [
        313,
        327
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 0,
      "value": "0x0"
    },
    "76": {
      "fn": "AttackContract2.flipSwitch",
      "offset": [
        313,
        327
      ],
      "op": "DUP1",
      "path": "22"
    },
    "77": {
      "fn": "AttackContract2.flipSwitch",
      "offset": [
        313,
        327
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "78": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "80": {
      "op": "NOT"
    },
    "81": {
      "fn": "AttackContract2.flipSwitch",
      "offset": [
        295,
        327
      ],
      "op": "DUP2",
      "path": "22"
    },
    "82": {
      "fn": "AttackContract2.flipSwitch",
      "offset": [
        295,
        327
      ],
      "op": "AND",
      "path": "22"
    },
    "83": {
      "fn": "AttackContract2.flipSwitch",
      "offset": [
        313,
        327
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xFF"
    },
    "85": {
      "fn": "AttackContract2.flipSwitch",
      "offset": [
        313,
        327
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "86": {
      "fn": "AttackContract2.flipSwitch",
      "offset": [
        313,
        327
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "87": {
      "fn": "AttackContract2.flipSwitch",
      "offset": [
        313,
        327
      ],
      "op": "AND",
      "path": "22"
    },
    "88": {
      "fn": "AttackContract2.flipSwitch",
      "offset": [
        312,
        327
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "89": {
      "fn": "AttackContract2.flipSwitch",
      "offset": [
        295,
        327
      ],
      "op": "OR",
      "path": "22"
    },
    "90": {
      "fn": "AttackContract2.flipSwitch",
      "offset": [
        295,
        327
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "91": {
      "fn": "AttackContract2.flipSwitch",
      "offset": [
        295,
        327
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "92": {
      "fn": "AttackContract2.flipSwitch",
      "offset": [
        256,
        334
      ],
      "op": "JUMP",
      "path": "22"
    },
    "93": {
      "fn": "AttackContract2.flipSwitch",
      "offset": [
        256,
        334
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "94": {
      "fn": "AttackContract2.flipSwitch",
      "offset": [
        256,
        334
      ],
      "op": "STOP",
      "path": "22"
    },
    "95": {
      "fn": "AttackContract2.beforeExecution",
      "offset": [
        340,
        767
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "96": {
      "fn": "AttackContract2.beforeExecution",
      "offset": [
        340,
        767
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x5D"
    },
    "99": {
      "fn": "AttackContract2.beforeExecution",
      "offset": [
        340,
        767
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x88"
    },
    "102": {
      "fn": "AttackContract2.beforeExecution",
      "jump": "i",
      "offset": [
        340,
        767
      ],
      "op": "JUMP",
      "path": "22"
    },
    "103": {
      "offset": [
        223,
        249
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "104": {
      "fn": "AttackContract2.beforeExecution",
      "offset": [
        223,
        249
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "106": {
      "fn": "AttackContract2.beforeExecution",
      "offset": [
        223,
        249
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "107": {
      "fn": "AttackContract2.beforeExecution",
      "offset": [
        223,
        249
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x74"
    },
    "110": {
      "fn": "AttackContract2.beforeExecution",
      "offset": [
        223,
        249
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "111": {
      "fn": "AttackContract2.beforeExecution",
      "offset": [
        223,
        249
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xFF"
    },
    "113": {
      "fn": "AttackContract2.beforeExecution",
      "offset": [
        223,
        249
      ],
      "op": "AND",
      "path": "22"
    },
    "114": {
      "fn": "AttackContract2.beforeExecution",
      "offset": [
        223,
        249
      ],
      "op": "DUP2",
      "path": "22"
    },
    "115": {
      "fn": "AttackContract2.beforeExecution",
      "offset": [
        223,
        249
      ],
      "op": "JUMP",
      "path": "22"
    },
    "116": {
      "fn": "AttackContract2.beforeExecution",
      "offset": [
        223,
        249
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "117": {
      "fn": "AttackContract2.beforeExecution",
      "offset": [
        223,
        249
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "119": {
      "fn": "AttackContract2.beforeExecution",
      "offset": [
        223,
        249
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "120": {
      "op": "SWAP1"
    },
    "121": {
      "op": "ISZERO"
    },
    "122": {
      "op": "ISZERO"
    },
    "123": {
      "op": "DUP2"
    },
    "124": {
      "op": "MSTORE"
    },
    "125": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "127": {
      "op": "ADD"
    },
    "128": {
      "offset": [
        223,
        249
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "130": {
      "fn": "AttackContract2.beforeExecution",
      "offset": [
        223,
        249
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "131": {
      "fn": "AttackContract2.beforeExecution",
      "offset": [
        223,
        249
      ],
      "op": "DUP1",
      "path": "22"
    },
    "132": {
      "fn": "AttackContract2.beforeExecution",
      "offset": [
        223,
        249
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "133": {
      "fn": "AttackContract2.beforeExecution",
      "offset": [
        223,
        249
      ],
      "op": "SUB",
      "path": "22"
    },
    "134": {
      "fn": "AttackContract2.beforeExecution",
      "offset": [
        223,
        249
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "135": {
      "fn": "AttackContract2.beforeExecution",
      "offset": [
        223,
        249
      ],
      "op": "RETURN",
      "path": "22"
    },
    "136": {
      "fn": "AttackContract2.beforeExecution",
      "offset": [
        340,
        767
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "137": {
      "fn": "AttackContract2.beforeExecution",
      "offset": [
        390,
        404
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "139": {
      "fn": "AttackContract2.beforeExecution",
      "offset": [
        390,
        404
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "140": {
      "fn": "AttackContract2.beforeExecution",
      "offset": [
        390,
        404
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xFF"
    },
    "142": {
      "branch": 4,
      "fn": "AttackContract2.beforeExecution",
      "offset": [
        390,
        404
      ],
      "op": "AND",
      "path": "22"
    },
    "143": {
      "fn": "AttackContract2.beforeExecution",
      "offset": [
        386,
        413
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "144": {
      "fn": "AttackContract2.beforeExecution",
      "offset": [
        386,
        413
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x95"
    },
    "147": {
      "branch": 4,
      "fn": "AttackContract2.beforeExecution",
      "offset": [
        386,
        413
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "148": {
      "fn": "AttackContract2.beforeExecution",
      "jump": "o",
      "offset": [
        340,
        767
      ],
      "op": "JUMP",
      "path": "22"
    },
    "149": {
      "fn": "AttackContract2.beforeExecution",
      "offset": [
        386,
        413
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "150": {
      "fn": "AttackContract2.beforeExecution",
      "offset": [
        423,
        452
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "152": {
      "fn": "AttackContract2.beforeExecution",
      "offset": [
        423,
        649
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "154": {
      "fn": "AttackContract2.beforeExecution",
      "offset": [
        423,
        649
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "155": {
      "fn": "AttackContract2.beforeExecution",
      "offset": [
        423,
        649
      ],
      "op": "DUP1",
      "path": "22"
    },
    "156": {
      "fn": "AttackContract2.beforeExecution",
      "offset": [
        423,
        649
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xE0"
    },
    "158": {
      "fn": "AttackContract2.beforeExecution",
      "offset": [
        423,
        649
      ],
      "op": "ADD",
      "path": "22"
    },
    "159": {
      "fn": "AttackContract2.beforeExecution",
      "offset": [
        423,
        649
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "161": {
      "fn": "AttackContract2.beforeExecution",
      "offset": [
        423,
        649
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "162": {
      "fn": "AttackContract2.beforeExecution",
      "offset": [
        423,
        649
      ],
      "op": "DUP1",
      "path": "22"
    },
    "163": {
      "fn": "AttackContract2.beforeExecution",
      "offset": [
        423,
        649
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xC0"
    },
    "165": {
      "fn": "AttackContract2.beforeExecution",
      "offset": [
        423,
        649
      ],
      "op": "DUP2",
      "path": "22"
    },
    "166": {
      "fn": "AttackContract2.beforeExecution",
      "offset": [
        423,
        649
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "167": {
      "fn": "AttackContract2.beforeExecution",
      "offset": [
        423,
        649
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "169": {
      "fn": "AttackContract2.beforeExecution",
      "offset": [
        423,
        649
      ],
      "op": "ADD",
      "path": "22"
    },
    "170": {
      "fn": "AttackContract2.beforeExecution",
      "offset": [
        423,
        649
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1C7"
    },
    "173": {
      "fn": "AttackContract2.beforeExecution",
      "offset": [
        423,
        649
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xC0"
    },
    "175": {
      "fn": "AttackContract2.beforeExecution",
      "offset": [
        423,
        649
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "176": {
      "fn": "AttackContract2.beforeExecution",
      "offset": [
        423,
        649
      ],
      "op": "CODECOPY",
      "path": "22"
    },
    "177": {
      "fn": "AttackContract2.beforeExecution",
      "offset": [
        423,
        649
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "178": {
      "fn": "AttackContract2.beforeExecution",
      "offset": [
        423,
        649
      ],
      "op": "POP",
      "path": "22"
    },
    "179": {
      "fn": "AttackContract2.beforeExecution",
      "offset": [
        665,
        671
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "181": {
      "fn": "AttackContract2.beforeExecution",
      "offset": [
        660,
        739
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "182": {
      "fn": "AttackContract2.beforeExecution",
      "offset": [
        677,
        678
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x9"
    },
    "184": {
      "fn": "AttackContract2.beforeExecution",
      "offset": [
        673,
        674
      ],
      "op": "DUP2",
      "path": "22"
    },
    "185": {
      "fn": "AttackContract2.beforeExecution",
      "offset": [
        673,
        678
      ],
      "op": "LT",
      "path": "22"
    },
    "186": {
      "fn": "AttackContract2.beforeExecution",
      "offset": [
        660,
        739
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "187": {
      "fn": "AttackContract2.beforeExecution",
      "offset": [
        660,
        739
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xF5"
    },
    "190": {
      "fn": "AttackContract2.beforeExecution",
      "offset": [
        660,
        739
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "191": {
      "fn": "AttackContract2.beforeExecution",
      "offset": [
        719,
        722
      ],
      "op": "DUP2",
      "path": "22",
      "statement": 1
    },
    "192": {
      "fn": "AttackContract2.beforeExecution",
      "offset": [
        724,
        727
      ],
      "op": "DUP3",
      "path": "22"
    },
    "193": {
      "fn": "AttackContract2.beforeExecution",
      "offset": [
        705,
        728
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "195": {
      "fn": "AttackContract2.beforeExecution",
      "offset": [
        705,
        728
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "196": {
      "fn": "AttackContract2.beforeExecution",
      "offset": [
        705,
        728
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "198": {
      "fn": "AttackContract2.beforeExecution",
      "offset": [
        705,
        728
      ],
      "op": "ADD",
      "path": "22"
    },
    "199": {
      "fn": "AttackContract2.beforeExecution",
      "offset": [
        705,
        728
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xD1"
    },
    "202": {
      "fn": "AttackContract2.beforeExecution",
      "offset": [
        705,
        728
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "203": {
      "fn": "AttackContract2.beforeExecution",
      "offset": [
        705,
        728
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "204": {
      "fn": "AttackContract2.beforeExecution",
      "offset": [
        705,
        728
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "205": {
      "fn": "AttackContract2.beforeExecution",
      "offset": [
        705,
        728
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x13D"
    },
    "208": {
      "fn": "AttackContract2.beforeExecution",
      "jump": "i",
      "offset": [
        705,
        728
      ],
      "op": "JUMP",
      "path": "22"
    },
    "209": {
      "fn": "AttackContract2.beforeExecution",
      "offset": [
        705,
        728
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "210": {
      "fn": "AttackContract2.beforeExecution",
      "offset": [
        705,
        728
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "212": {
      "fn": "AttackContract2.beforeExecution",
      "offset": [
        705,
        728
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "213": {
      "fn": "AttackContract2.beforeExecution",
      "offset": [
        705,
        728
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "215": {
      "fn": "AttackContract2.beforeExecution",
      "offset": [
        705,
        728
      ],
      "op": "DUP2",
      "path": "22"
    },
    "216": {
      "fn": "AttackContract2.beforeExecution",
      "offset": [
        705,
        728
      ],
      "op": "DUP4",
      "path": "22"
    },
    "217": {
      "fn": "AttackContract2.beforeExecution",
      "offset": [
        705,
        728
      ],
      "op": "SUB",
      "path": "22"
    },
    "218": {
      "fn": "AttackContract2.beforeExecution",
      "offset": [
        705,
        728
      ],
      "op": "SUB",
      "path": "22"
    },
    "219": {
      "fn": "AttackContract2.beforeExecution",
      "offset": [
        705,
        728
      ],
      "op": "DUP2",
      "path": "22"
    },
    "220": {
      "fn": "AttackContract2.beforeExecution",
      "offset": [
        705,
        728
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "221": {
      "fn": "AttackContract2.beforeExecution",
      "offset": [
        705,
        728
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "222": {
      "fn": "AttackContract2.beforeExecution",
      "offset": [
        705,
        728
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "224": {
      "fn": "AttackContract2.beforeExecution",
      "offset": [
        705,
        728
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "225": {
      "fn": "AttackContract2.beforeExecution",
      "offset": [
        699,
        728
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "226": {
      "fn": "AttackContract2.beforeExecution",
      "offset": [
        699,
        728
      ],
      "op": "POP",
      "path": "22"
    },
    "227": {
      "fn": "AttackContract2.beforeExecution",
      "offset": [
        680,
        683
      ],
      "op": "DUP1",
      "path": "22",
      "statement": 2
    },
    "228": {
      "fn": "AttackContract2.beforeExecution",
      "offset": [
        680,
        683
      ],
      "op": "DUP1",
      "path": "22"
    },
    "229": {
      "fn": "AttackContract2.beforeExecution",
      "offset": [
        680,
        683
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xED"
    },
    "232": {
      "fn": "AttackContract2.beforeExecution",
      "offset": [
        680,
        683
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "233": {
      "fn": "AttackContract2.beforeExecution",
      "offset": [
        680,
        683
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x16C"
    },
    "236": {
      "fn": "AttackContract2.beforeExecution",
      "jump": "i",
      "offset": [
        680,
        683
      ],
      "op": "JUMP",
      "path": "22"
    },
    "237": {
      "fn": "AttackContract2.beforeExecution",
      "offset": [
        680,
        683
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "238": {
      "fn": "AttackContract2.beforeExecution",
      "offset": [
        680,
        683
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "239": {
      "fn": "AttackContract2.beforeExecution",
      "offset": [
        680,
        683
      ],
      "op": "POP",
      "path": "22"
    },
    "240": {
      "fn": "AttackContract2.beforeExecution",
      "offset": [
        680,
        683
      ],
      "op": "POP",
      "path": "22"
    },
    "241": {
      "fn": "AttackContract2.beforeExecution",
      "offset": [
        660,
        739
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xB5"
    },
    "244": {
      "fn": "AttackContract2.beforeExecution",
      "offset": [
        660,
        739
      ],
      "op": "JUMP",
      "path": "22"
    },
    "245": {
      "fn": "AttackContract2.beforeExecution",
      "offset": [
        660,
        739
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "246": {
      "fn": "AttackContract2.beforeExecution",
      "offset": [
        660,
        739
      ],
      "op": "POP",
      "path": "22"
    },
    "247": {
      "fn": "AttackContract2.beforeExecution",
      "offset": [
        756,
        759
      ],
      "op": "DUP1",
      "path": "22",
      "statement": 3
    },
    "248": {
      "fn": "AttackContract2.beforeExecution",
      "offset": [
        749,
        760
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "250": {
      "fn": "AttackContract2.beforeExecution",
      "offset": [
        749,
        760
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "251": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "255": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "257": {
      "op": "SHL"
    },
    "258": {
      "fn": "AttackContract2.beforeExecution",
      "offset": [
        749,
        760
      ],
      "op": "DUP2",
      "path": "22"
    },
    "259": {
      "fn": "AttackContract2.beforeExecution",
      "offset": [
        749,
        760
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "260": {
      "fn": "AttackContract2.beforeExecution",
      "offset": [
        749,
        760
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "262": {
      "fn": "AttackContract2.beforeExecution",
      "offset": [
        749,
        760
      ],
      "op": "ADD",
      "path": "22"
    },
    "263": {
      "fn": "AttackContract2.beforeExecution",
      "offset": [
        749,
        760
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x110"
    },
    "266": {
      "fn": "AttackContract2.beforeExecution",
      "offset": [
        749,
        760
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "267": {
      "fn": "AttackContract2.beforeExecution",
      "offset": [
        749,
        760
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "268": {
      "fn": "AttackContract2.beforeExecution",
      "offset": [
        749,
        760
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x193"
    },
    "271": {
      "fn": "AttackContract2.beforeExecution",
      "jump": "i",
      "offset": [
        749,
        760
      ],
      "op": "JUMP",
      "path": "22"
    },
    "272": {
      "fn": "AttackContract2.beforeExecution",
      "offset": [
        749,
        760
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "273": {
      "fn": "AttackContract2.beforeExecution",
      "offset": [
        749,
        760
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "275": {
      "fn": "AttackContract2.beforeExecution",
      "offset": [
        749,
        760
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "276": {
      "fn": "AttackContract2.beforeExecution",
      "offset": [
        749,
        760
      ],
      "op": "DUP1",
      "path": "22"
    },
    "277": {
      "fn": "AttackContract2.beforeExecution",
      "offset": [
        749,
        760
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "278": {
      "fn": "AttackContract2.beforeExecution",
      "offset": [
        749,
        760
      ],
      "op": "SUB",
      "path": "22"
    },
    "279": {
      "fn": "AttackContract2.beforeExecution",
      "offset": [
        749,
        760
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "280": {
      "fn": "AttackContract2.beforeExecution",
      "offset": [
        749,
        760
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "22"
    },
    "281": {
      "op": "JUMPDEST"
    },
    "282": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "284": {
      "op": "JUMPDEST"
    },
    "285": {
      "op": "DUP4"
    },
    "286": {
      "op": "DUP2"
    },
    "287": {
      "op": "LT"
    },
    "288": {
      "op": "ISZERO"
    },
    "289": {
      "op": "PUSH2",
      "value": "0x134"
    },
    "292": {
      "op": "JUMPI"
    },
    "293": {
      "op": "DUP2"
    },
    "294": {
      "op": "DUP2"
    },
    "295": {
      "op": "ADD"
    },
    "296": {
      "op": "MLOAD"
    },
    "297": {
      "op": "DUP4"
    },
    "298": {
      "op": "DUP3"
    },
    "299": {
      "op": "ADD"
    },
    "300": {
      "op": "MSTORE"
    },
    "301": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "303": {
      "op": "ADD"
    },
    "304": {
      "op": "PUSH2",
      "value": "0x11C"
    },
    "307": {
      "op": "JUMP"
    },
    "308": {
      "op": "JUMPDEST"
    },
    "309": {
      "op": "POP"
    },
    "310": {
      "op": "POP"
    },
    "311": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "313": {
      "op": "SWAP2"
    },
    "314": {
      "op": "ADD"
    },
    "315": {
      "op": "MSTORE"
    },
    "316": {
      "jump": "o",
      "op": "JUMP"
    },
    "317": {
      "op": "JUMPDEST"
    },
    "318": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "320": {
      "op": "DUP4"
    },
    "321": {
      "op": "MLOAD"
    },
    "322": {
      "op": "PUSH2",
      "value": "0x14F"
    },
    "325": {
      "op": "DUP2"
    },
    "326": {
      "op": "DUP5"
    },
    "327": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "329": {
      "op": "DUP9"
    },
    "330": {
      "op": "ADD"
    },
    "331": {
      "op": "PUSH2",
      "value": "0x119"
    },
    "334": {
      "jump": "i",
      "op": "JUMP"
    },
    "335": {
      "op": "JUMPDEST"
    },
    "336": {
      "op": "DUP4"
    },
    "337": {
      "op": "MLOAD"
    },
    "338": {
      "op": "SWAP1"
    },
    "339": {
      "op": "DUP4"
    },
    "340": {
      "op": "ADD"
    },
    "341": {
      "op": "SWAP1"
    },
    "342": {
      "op": "PUSH2",
      "value": "0x163"
    },
    "345": {
      "op": "DUP2"
    },
    "346": {
      "op": "DUP4"
    },
    "347": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "349": {
      "op": "DUP9"
    },
    "350": {
      "op": "ADD"
    },
    "351": {
      "op": "PUSH2",
      "value": "0x119"
    },
    "354": {
      "jump": "i",
      "op": "JUMP"
    },
    "355": {
      "op": "JUMPDEST"
    },
    "356": {
      "op": "ADD"
    },
    "357": {
      "op": "SWAP5"
    },
    "358": {
      "op": "SWAP4"
    },
    "359": {
      "op": "POP"
    },
    "360": {
      "op": "POP"
    },
    "361": {
      "op": "POP"
    },
    "362": {
      "op": "POP"
    },
    "363": {
      "jump": "o",
      "op": "JUMP"
    },
    "364": {
      "op": "JUMPDEST"
    },
    "365": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "367": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "369": {
      "op": "DUP3"
    },
    "370": {
      "op": "ADD"
    },
    "371": {
      "op": "PUSH2",
      "value": "0x18C"
    },
    "374": {
      "op": "JUMPI"
    },
    "375": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "380": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "382": {
      "op": "SHL"
    },
    "383": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "385": {
      "op": "MSTORE"
    },
    "386": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "388": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "390": {
      "op": "MSTORE"
    },
    "391": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "393": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "395": {
      "op": "REVERT"
    },
    "396": {
      "op": "JUMPDEST"
    },
    "397": {
      "op": "POP"
    },
    "398": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "400": {
      "op": "ADD"
    },
    "401": {
      "op": "SWAP1"
    },
    "402": {
      "jump": "o",
      "op": "JUMP"
    },
    "403": {
      "op": "JUMPDEST"
    },
    "404": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "406": {
      "op": "DUP2"
    },
    "407": {
      "op": "MSTORE"
    },
    "408": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "410": {
      "op": "DUP3"
    },
    "411": {
      "op": "MLOAD"
    },
    "412": {
      "op": "DUP1"
    },
    "413": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "415": {
      "op": "DUP5"
    },
    "416": {
      "op": "ADD"
    },
    "417": {
      "op": "MSTORE"
    },
    "418": {
      "op": "PUSH2",
      "value": "0x1B2"
    },
    "421": {
      "op": "DUP2"
    },
    "422": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "424": {
      "op": "DUP6"
    },
    "425": {
      "op": "ADD"
    },
    "426": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "428": {
      "op": "DUP8"
    },
    "429": {
      "op": "ADD"
    },
    "430": {
      "op": "PUSH2",
      "value": "0x119"
    },
    "433": {
      "jump": "i",
      "op": "JUMP"
    },
    "434": {
      "op": "JUMPDEST"
    },
    "435": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "437": {
      "op": "ADD"
    },
    "438": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "440": {
      "op": "NOT"
    },
    "441": {
      "op": "AND"
    },
    "442": {
      "op": "SWAP2"
    },
    "443": {
      "op": "SWAP1"
    },
    "444": {
      "op": "SWAP2"
    },
    "445": {
      "op": "ADD"
    },
    "446": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "448": {
      "op": "ADD"
    },
    "449": {
      "op": "SWAP3"
    },
    "450": {
      "op": "SWAP2"
    },
    "451": {
      "op": "POP"
    },
    "452": {
      "op": "POP"
    },
    "453": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "d71923aedb38d9aebc10d3f095b76df2cf9103c0",
  "source": "// SCH Course Copyright Policy (C): DO-NOT-SHARE-WITH-ANYONE\n// https://smartcontractshacking.com/#copyright-policy\npragma solidity ^0.8.13;\n\nimport \"../../interfaces/ICallbackContract.sol\";\n\ncontract AttackContract2 {\n    bool public allowExecution;\n\n    function flipSwitch() public {\n        allowExecution = !allowExecution;\n    }\n\n    function beforeExecution() external {\n        if (allowExecution) return;\n\n        string\n            memory gas = \"gasgasgasgasgagsgasgasgasgasgasgasgasgasgasgagsgasgasgasgasgasgasgasgasgasgagsgasgasgasgasgasgasgasgasgasgagsgasgasgasgasgasgasgasgasgasgagsgasgasgasgasgasgasgasgasgasgagsgasgasgasgasgasgasgas\";\n\n        for (uint i; i < 9; i++) {\n            gas = string.concat(gas, gas);\n        }\n\n        revert(gas);\n    }\n}\n",
  "sourceMap": "192:577:22:-:0;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/solution/AttackContractSolved.sol",
  "type": "contract"
}