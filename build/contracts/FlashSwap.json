{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_pair",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "executeFlashSwap",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount0",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount1",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "uniswapV2Call",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "14": "contracts/flash-loans-3/FlashSwap.sol",
    "16": "contracts/interfaces/IPair.sol",
    "20": "hardhat/console.sol",
    "3": "/Users/m4ud/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/token/ERC20/IERC20.sol"
  },
  "ast": {
    "absolutePath": "contracts/flash-loans-3/FlashSwap.sol",
    "exportedSymbols": {
      "FlashSwap": [
        1396
      ],
      "IERC20": [
        3122
      ],
      "IPair": [
        4058
      ],
      "console": [
        12122
      ]
    },
    "id": 1397,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1185,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".13"
        ],
        "nodeType": "PragmaDirective",
        "src": "116:24:14"
      },
      {
        "absolutePath": "contracts/interfaces/IPair.sol",
        "file": "../interfaces/IPair.sol",
        "id": 1186,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1397,
        "sourceUnit": 4059,
        "src": "142:33:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/m4ud/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 1187,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1397,
        "sourceUnit": 3123,
        "src": "176:56:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "hardhat/console.sol",
        "file": "hardhat/console.sol",
        "id": 1188,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1397,
        "sourceUnit": 12123,
        "src": "234:29:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "FlashSwap",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 1189,
          "nodeType": "StructuredDocumentation",
          "src": "265:85:14",
          "text": " @title FlashSwap\n @author JohnnyTime (https://smartcontractshacking.com)"
        },
        "fullyImplemented": true,
        "id": 1396,
        "linearizedBaseContracts": [
          1396
        ],
        "name": "FlashSwap",
        "nameLocation": "360:9:14",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1192,
            "mutability": "mutable",
            "name": "pair",
            "nameLocation": "383:4:14",
            "nodeType": "VariableDeclaration",
            "scope": 1396,
            "src": "377:10:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IPair_$4058",
              "typeString": "contract IPair"
            },
            "typeName": {
              "id": 1191,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1190,
                "name": "IPair",
                "nameLocations": [
                  "377:5:14"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 4058,
                "src": "377:5:14"
              },
              "referencedDeclaration": 4058,
              "src": "377:5:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IPair_$4058",
                "typeString": "contract IPair"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1194,
            "mutability": "mutable",
            "name": "token",
            "nameLocation": "401:5:14",
            "nodeType": "VariableDeclaration",
            "scope": 1396,
            "src": "393:13:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1193,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "393:7:14",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1205,
              "nodeType": "Block",
              "src": "439:36:14",
              "statements": [
                {
                  "expression": {
                    "id": 1203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1199,
                      "name": "pair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1192,
                      "src": "449:4:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IPair_$4058",
                        "typeString": "contract IPair"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1201,
                          "name": "_pair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1196,
                          "src": "462:5:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1200,
                        "name": "IPair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4058,
                        "src": "456:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IPair_$4058_$",
                          "typeString": "type(contract IPair)"
                        }
                      },
                      "id": 1202,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "456:12:14",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IPair_$4058",
                        "typeString": "contract IPair"
                      }
                    },
                    "src": "449:19:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPair_$4058",
                      "typeString": "contract IPair"
                    }
                  },
                  "id": 1204,
                  "nodeType": "ExpressionStatement",
                  "src": "449:19:14"
                }
              ]
            },
            "id": 1206,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1197,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1196,
                  "mutability": "mutable",
                  "name": "_pair",
                  "nameLocation": "432:5:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 1206,
                  "src": "424:13:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1195,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "424:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "423:15:14"
            },
            "returnParameters": {
              "id": 1198,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "439:0:14"
            },
            "scope": 1396,
            "src": "412:63:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1275,
              "nodeType": "Block",
              "src": "549:408:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "436f6e7472616374277320746f6b656e2062616c616e6365206265666f726520666c61736820737761703a20",
                        "id": 1216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "571:46:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e7637c28561ee3777896764bed4c49b8dec505f134dd78a495cf960fd7fcf6e7",
                          "typeString": "literal_string \"Contract's token balance before flash swap: \""
                        },
                        "value": "Contract's token balance before flash swap: "
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 1223,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "652:4:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_FlashSwap_$1396",
                                  "typeString": "contract FlashSwap"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_FlashSwap_$1396",
                                  "typeString": "contract FlashSwap"
                                }
                              ],
                              "id": 1222,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "644:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1221,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "644:7:14",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1224,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "644:13:14",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 1218,
                                "name": "_token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1208,
                                "src": "626:6:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 1217,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3122,
                              "src": "619:6:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$3122_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 1219,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "619:14:14",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$3122",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 1220,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "634:9:14",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3079,
                          "src": "619:24:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 1225,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "619:39:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_e7637c28561ee3777896764bed4c49b8dec505f134dd78a495cf960fd7fcf6e7",
                          "typeString": "literal_string \"Contract's token balance before flash swap: \""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1213,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12122,
                        "src": "559:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$12122_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 1215,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "567:3:14",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4766,
                      "src": "559:11:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 1226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "559:100:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1227,
                  "nodeType": "ExpressionStatement",
                  "src": "559:100:14"
                },
                {
                  "expression": {
                    "id": 1230,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1228,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1194,
                      "src": "670:5:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1229,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1208,
                      "src": "678:6:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "670:14:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1231,
                  "nodeType": "ExpressionStatement",
                  "src": "670:14:14"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1236,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1232,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1208,
                      "src": "698:6:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 1233,
                          "name": "pair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1192,
                          "src": "708:4:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IPair_$4058",
                            "typeString": "contract IPair"
                          }
                        },
                        "id": 1234,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "713:6:14",
                        "memberName": "token0",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4027,
                        "src": "708:11:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                          "typeString": "function () view external returns (address)"
                        }
                      },
                      "id": 1235,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "708:13:14",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "698:23:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 1254,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1250,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1208,
                        "src": "802:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 1251,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1192,
                            "src": "812:4:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IPair_$4058",
                              "typeString": "contract IPair"
                            }
                          },
                          "id": 1252,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "817:6:14",
                          "memberName": "token1",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4032,
                          "src": "812:11:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 1253,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "812:13:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "802:23:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "id": 1272,
                      "nodeType": "Block",
                      "src": "904:46:14",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "hexValue": "57726f6e6720546f6b656e",
                                "id": 1269,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "925:13:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_b2e69b4cd02f9d0e1e48fb5b28aa03fc372512372579b84c4935e3a96d0c7a78",
                                  "typeString": "literal_string \"Wrong Token\""
                                },
                                "value": "Wrong Token"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_b2e69b4cd02f9d0e1e48fb5b28aa03fc372512372579b84c4935e3a96d0c7a78",
                                  "typeString": "literal_string \"Wrong Token\""
                                }
                              ],
                              "id": 1268,
                              "name": "revert",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                -19,
                                -19
                              ],
                              "referencedDeclaration": -19,
                              "src": "918:6:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (string memory) pure"
                              }
                            },
                            "id": 1270,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "918:21:14",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 1271,
                          "nodeType": "ExpressionStatement",
                          "src": "918:21:14"
                        }
                      ]
                    },
                    "id": 1273,
                    "nodeType": "IfStatement",
                    "src": "799:151:14",
                    "trueBody": {
                      "id": 1267,
                      "nodeType": "Block",
                      "src": "827:71:14",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 1258,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "851:1:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "id": 1259,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1210,
                                "src": "854:7:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 1262,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "871:4:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_FlashSwap_$1396",
                                      "typeString": "contract FlashSwap"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_FlashSwap_$1396",
                                      "typeString": "contract FlashSwap"
                                    }
                                  ],
                                  "id": 1261,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "863:7:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1260,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "863:7:14",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1263,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "863:13:14",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "hexValue": "307841414141",
                                "id": 1264,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "878:8:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_a177104d59d1648b74a07d7ef6cac86b8f73f5162bc09596d40d9e009f4b2746",
                                  "typeString": "literal_string \"0xAAAA\""
                                },
                                "value": "0xAAAA"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_a177104d59d1648b74a07d7ef6cac86b8f73f5162bc09596d40d9e009f4b2746",
                                  "typeString": "literal_string \"0xAAAA\""
                                }
                              ],
                              "expression": {
                                "id": 1255,
                                "name": "pair",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1192,
                                "src": "841:4:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IPair_$4058",
                                  "typeString": "contract IPair"
                                }
                              },
                              "id": 1257,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "846:4:14",
                              "memberName": "swap",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4014,
                              "src": "841:9:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                                "typeString": "function (uint256,uint256,address,bytes memory) external"
                              }
                            },
                            "id": 1265,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "841:46:14",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 1266,
                          "nodeType": "ExpressionStatement",
                          "src": "841:46:14"
                        }
                      ]
                    }
                  },
                  "id": 1274,
                  "nodeType": "IfStatement",
                  "src": "695:255:14",
                  "trueBody": {
                    "id": 1249,
                    "nodeType": "Block",
                    "src": "722:71:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1240,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1210,
                              "src": "746:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 1241,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "755:1:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "id": 1244,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "766:4:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_FlashSwap_$1396",
                                    "typeString": "contract FlashSwap"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_FlashSwap_$1396",
                                    "typeString": "contract FlashSwap"
                                  }
                                ],
                                "id": 1243,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "758:7:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1242,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "758:7:14",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1245,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "758:13:14",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "hexValue": "307841414141",
                              "id": 1246,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "773:8:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a177104d59d1648b74a07d7ef6cac86b8f73f5162bc09596d40d9e009f4b2746",
                                "typeString": "literal_string \"0xAAAA\""
                              },
                              "value": "0xAAAA"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a177104d59d1648b74a07d7ef6cac86b8f73f5162bc09596d40d9e009f4b2746",
                                "typeString": "literal_string \"0xAAAA\""
                              }
                            ],
                            "expression": {
                              "id": 1237,
                              "name": "pair",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1192,
                              "src": "736:4:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IPair_$4058",
                                "typeString": "contract IPair"
                              }
                            },
                            "id": 1239,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "741:4:14",
                            "memberName": "swap",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4014,
                            "src": "736:9:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (uint256,uint256,address,bytes memory) external"
                            }
                          },
                          "id": 1247,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "736:46:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1248,
                        "nodeType": "ExpressionStatement",
                        "src": "736:46:14"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "c9ef9a56",
            "id": 1276,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "executeFlashSwap",
            "nameLocation": "490:16:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1211,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1208,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "515:6:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 1276,
                  "src": "507:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1207,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "507:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1210,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "531:7:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 1276,
                  "src": "523:15:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1209,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "523:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "506:33:14"
            },
            "returnParameters": {
              "id": 1212,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "549:0:14"
            },
            "scope": 1396,
            "src": "481:476:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1394,
              "nodeType": "Block",
              "src": "1098:623:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1294,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1288,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1117:3:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1289,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1121:6:14",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1117:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 1292,
                              "name": "pair",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1192,
                              "src": "1139:4:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IPair_$4058",
                                "typeString": "contract IPair"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IPair_$4058",
                                "typeString": "contract IPair"
                              }
                            ],
                            "id": 1291,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1131:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1290,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1131:7:14",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1293,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1131:13:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1117:27:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f742070616972",
                        "id": 1295,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1146:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a6db26ec765ebd5d122b28a0efe9eac2bafa05453cfed61dad88f7c3cd84b3e8",
                          "typeString": "literal_string \"not pair\""
                        },
                        "value": "not pair"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a6db26ec765ebd5d122b28a0efe9eac2bafa05453cfed61dad88f7c3cd84b3e8",
                          "typeString": "literal_string \"not pair\""
                        }
                      ],
                      "id": 1287,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1109:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1296,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1109:48:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1297,
                  "nodeType": "ExpressionStatement",
                  "src": "1109:48:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1304,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1299,
                          "name": "sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1278,
                          "src": "1175:6:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 1302,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "1193:4:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FlashSwap_$1396",
                                "typeString": "contract FlashSwap"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_FlashSwap_$1396",
                                "typeString": "contract FlashSwap"
                              }
                            ],
                            "id": 1301,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1185:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1300,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1185:7:14",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1303,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1185:13:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1175:23:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6572726f72",
                        "id": 1305,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1200:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_177f242d20ff7dc4598657e4355abd2b0df8f6351283a95d209db56ce73ef6e9",
                          "typeString": "literal_string \"error\""
                        },
                        "value": "error"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_177f242d20ff7dc4598657e4355abd2b0df8f6351283a95d209db56ce73ef6e9",
                          "typeString": "literal_string \"error\""
                        }
                      ],
                      "id": 1298,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1167:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1306,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1167:41:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1307,
                  "nodeType": "ExpressionStatement",
                  "src": "1167:41:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "436f6e7472616374277320746f6b656e2062616c616e636520647572696e6720466c61736820537761703a20",
                        "id": 1311,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1231:46:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8f698916cdeb71395de0524c4f6b03a90642b69c16c42f223ca28af41a29b6aa",
                          "typeString": "literal_string \"Contract's token balance during Flash Swap: \""
                        },
                        "value": "Contract's token balance during Flash Swap: "
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 1318,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "1311:4:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_FlashSwap_$1396",
                                  "typeString": "contract FlashSwap"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_FlashSwap_$1396",
                                  "typeString": "contract FlashSwap"
                                }
                              ],
                              "id": 1317,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1303:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1316,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1303:7:14",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1319,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1303:13:14",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 1313,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1194,
                                "src": "1286:5:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 1312,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3122,
                              "src": "1279:6:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$3122_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 1314,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1279:13:14",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$3122",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 1315,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1293:9:14",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3079,
                          "src": "1279:23:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 1320,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1279:38:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_8f698916cdeb71395de0524c4f6b03a90642b69c16c42f223ca28af41a29b6aa",
                          "typeString": "literal_string \"Contract's token balance during Flash Swap: \""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1308,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12122,
                        "src": "1219:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$12122_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 1310,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1227:3:14",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4766,
                      "src": "1219:11:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 1321,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1219:99:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1322,
                  "nodeType": "ExpressionStatement",
                  "src": "1219:99:14"
                },
                {
                  "assignments": [
                    1324
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1324,
                      "mutability": "mutable",
                      "name": "fee",
                      "nameLocation": "1338:3:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 1394,
                      "src": "1330:11:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1323,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1330:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1325,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1330:11:14"
                },
                {
                  "assignments": [
                    1327
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1327,
                      "mutability": "mutable",
                      "name": "owed",
                      "nameLocation": "1359:4:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 1394,
                      "src": "1351:12:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1326,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1351:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1328,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1351:12:14"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1333,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 1329,
                          "name": "pair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1192,
                          "src": "1377:4:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IPair_$4058",
                            "typeString": "contract IPair"
                          }
                        },
                        "id": 1330,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1382:6:14",
                        "memberName": "token0",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4027,
                        "src": "1377:11:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                          "typeString": "function () view external returns (address)"
                        }
                      },
                      "id": 1331,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1377:13:14",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 1332,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1194,
                      "src": "1394:5:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1377:22:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1367,
                    "nodeType": "Block",
                    "src": "1492:86:14",
                    "statements": [
                      {
                        "expression": {
                          "id": 1359,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1351,
                            "name": "fee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1324,
                            "src": "1506:3:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1358,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1356,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1354,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1352,
                                  "name": "amount1",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1282,
                                  "src": "1512:7:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "hexValue": "33",
                                  "id": 1353,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1522:1:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_3_by_1",
                                    "typeString": "int_const 3"
                                  },
                                  "value": "3"
                                },
                                "src": "1512:11:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "hexValue": "393937",
                                "id": 1355,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1526:3:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_997_by_1",
                                  "typeString": "int_const 997"
                                },
                                "value": "997"
                              },
                              "src": "1512:17:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 1357,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1532:1:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "1512:21:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1506:27:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1360,
                        "nodeType": "ExpressionStatement",
                        "src": "1506:27:14"
                      },
                      {
                        "expression": {
                          "id": 1365,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1361,
                            "name": "owed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1327,
                            "src": "1547:4:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1364,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1362,
                              "name": "amount1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1282,
                              "src": "1554:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 1363,
                              "name": "fee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1324,
                              "src": "1564:3:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "1554:13:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1547:20:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1366,
                        "nodeType": "ExpressionStatement",
                        "src": "1547:20:14"
                      }
                    ]
                  },
                  "id": 1368,
                  "nodeType": "IfStatement",
                  "src": "1374:204:14",
                  "trueBody": {
                    "id": 1350,
                    "nodeType": "Block",
                    "src": "1400:86:14",
                    "statements": [
                      {
                        "expression": {
                          "id": 1342,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1334,
                            "name": "fee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1324,
                            "src": "1414:3:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1341,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1339,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1337,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1335,
                                  "name": "amount0",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1280,
                                  "src": "1420:7:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "hexValue": "33",
                                  "id": 1336,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1430:1:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_3_by_1",
                                    "typeString": "int_const 3"
                                  },
                                  "value": "3"
                                },
                                "src": "1420:11:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "hexValue": "393937",
                                "id": 1338,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1434:3:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_997_by_1",
                                  "typeString": "int_const 997"
                                },
                                "value": "997"
                              },
                              "src": "1420:17:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 1340,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1440:1:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "1420:21:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1414:27:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1343,
                        "nodeType": "ExpressionStatement",
                        "src": "1414:27:14"
                      },
                      {
                        "expression": {
                          "id": 1348,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1344,
                            "name": "owed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1327,
                            "src": "1455:4:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1347,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1345,
                              "name": "amount0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1280,
                              "src": "1462:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 1346,
                              "name": "fee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1324,
                              "src": "1472:3:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "1462:13:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1455:20:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1349,
                        "nodeType": "ExpressionStatement",
                        "src": "1455:20:14"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "466c61736853776170206665653a20",
                        "id": 1372,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1600:17:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a130e18cae9f1524b2a040214dc43162ad4e65f06220f8b67fe4be54624ec245",
                          "typeString": "literal_string \"FlashSwap fee: \""
                        },
                        "value": "FlashSwap fee: "
                      },
                      {
                        "id": 1373,
                        "name": "fee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1324,
                        "src": "1619:3:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_a130e18cae9f1524b2a040214dc43162ad4e65f06220f8b67fe4be54624ec245",
                          "typeString": "literal_string \"FlashSwap fee: \""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1369,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12122,
                        "src": "1588:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$12122_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 1371,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1596:3:14",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4766,
                      "src": "1588:11:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 1374,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1588:35:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1375,
                  "nodeType": "ExpressionStatement",
                  "src": "1588:35:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "4f7765643a20",
                        "id": 1379,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1645:8:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_18ef92699c86e9835463904cbe820dbaafdc1082b1185c6c487d34c049a36751",
                          "typeString": "literal_string \"Owed: \""
                        },
                        "value": "Owed: "
                      },
                      {
                        "id": 1380,
                        "name": "owed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1327,
                        "src": "1655:4:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_18ef92699c86e9835463904cbe820dbaafdc1082b1185c6c487d34c049a36751",
                          "typeString": "literal_string \"Owed: \""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1376,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12122,
                        "src": "1633:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$12122_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 1378,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1641:3:14",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4766,
                      "src": "1633:11:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 1381,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1633:27:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1382,
                  "nodeType": "ExpressionStatement",
                  "src": "1633:27:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1389,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1192,
                            "src": "1702:4:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IPair_$4058",
                              "typeString": "contract IPair"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IPair_$4058",
                              "typeString": "contract IPair"
                            }
                          ],
                          "id": 1388,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1694:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1387,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1694:7:14",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1390,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1694:13:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1391,
                        "name": "owed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1327,
                        "src": "1709:4:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1384,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1194,
                            "src": "1678:5:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1383,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3122,
                          "src": "1671:6:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$3122_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 1385,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1671:13:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3122",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1386,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1685:8:14",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3089,
                      "src": "1671:22:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1392,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1671:43:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1393,
                  "nodeType": "ExpressionStatement",
                  "src": "1671:43:14"
                }
              ]
            },
            "functionSelector": "10d1e85c",
            "id": 1395,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "uniswapV2Call",
            "nameLocation": "972:13:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1285,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1278,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "1003:6:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 1395,
                  "src": "995:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1277,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "995:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1280,
                  "mutability": "mutable",
                  "name": "amount0",
                  "nameLocation": "1024:7:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 1395,
                  "src": "1019:12:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1279,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1019:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1282,
                  "mutability": "mutable",
                  "name": "amount1",
                  "nameLocation": "1046:7:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 1395,
                  "src": "1041:12:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1281,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1041:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1284,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "1078:4:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 1395,
                  "src": "1063:19:14",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1283,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1063:5:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "985:103:14"
            },
            "returnParameters": {
              "id": 1286,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1098:0:14"
            },
            "scope": 1396,
            "src": "963:758:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1397,
        "src": "351:1372:14",
        "usedErrors": []
      }
    ],
    "src": "116:1607:14"
  },
  "bytecode": "608060405234801561001057600080fd5b5060405161094538038061094583398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b6108b2806100936000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806310d1e85c1461003b578063c9ef9a5614610050575b600080fd5b61004e610049366004610609565b610063565b005b61004e61005e36600461069f565b610346565b6000546001600160a01b031633146100ad5760405162461bcd60e51b81526020600482015260086024820152673737ba103830b4b960c11b60448201526064015b60405180910390fd5b6001600160a01b03851630146100ed5760405162461bcd60e51b815260206004820152600560248201526432b93937b960d91b60448201526064016100a4565b61017b6040518060600160405280602c8152602001610825602c91396001546040516370a0823160e01b81523060048201526001600160a01b03909116906370a08231906024015b602060405180830381865afa158015610152573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061017691906106cb565b610590565b6001546000805460408051630dfe168160e01b81529051929384936001600160a01b039182169390911691630dfe16819160048083019260209291908290030181865afa1580156101d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101f491906106e4565b6001600160a01b031603610238576103e561021087600361071e565b61021a919061073b565b61022590600161075d565b9150610231828761075d565b905061026a565b6103e561024686600361071e565b610250919061073b565b61025b90600161075d565b9150610267828661075d565b90505b61029b6040518060400160405280600f81526020016e0233630b9b429bbb0b8103332b29d1608d1b81525083610590565b6102c360405180604001604052806006815260200165027bbb2b21d160d51b81525082610590565b60015460005460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810184905291169063a9059cbb906044016020604051808303816000875af1158015610318573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061033c9190610770565b5050505050505050565b61038e6040518060600160405280602c8152602001610851602c91396040516370a0823160e01b81523060048201526001600160a01b038516906370a0823190602401610135565b600180546001600160a01b0319166001600160a01b038481169190911790915560005460408051630dfe168160e01b815290519190921691630dfe16819160048083019260209291908290030181865afa1580156103f0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061041491906106e4565b6001600160a01b0316826001600160a01b031603610495576000805460405163022c0d9f60e01b81526001600160a01b039091169163022c0d9f9161045f9185913090600401610792565b600060405180830381600087803b15801561047957600080fd5b505af115801561048d573d6000803e3d6000fd5b505050505050565b60008054906101000a90046001600160a01b03166001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061050a91906106e4565b6001600160a01b0316826001600160a01b031603610556576000805460405163022c0d9f60e01b81526001600160a01b039091169163022c0d9f9161045f919085903090600401610792565b60405162461bcd60e51b815260206004820152600b60248201526a2bb937b733902a37b5b2b760a91b60448201526064016100a4565b5050565b61058c82826040516024016105a69291906107cf565b60408051601f198184030181529190526020810180516001600160e01b0316632d839cb360e21b17905280516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6001600160a01b038116811461060657600080fd5b50565b60008060008060006080868803121561062157600080fd5b853561062c816105f1565b94506020860135935060408601359250606086013567ffffffffffffffff8082111561065757600080fd5b818801915088601f83011261066b57600080fd5b81358181111561067a57600080fd5b89602082850101111561068c57600080fd5b9699959850939650602001949392505050565b600080604083850312156106b257600080fd5b82356106bd816105f1565b946020939093013593505050565b6000602082840312156106dd57600080fd5b5051919050565b6000602082840312156106f657600080fd5b8151610701816105f1565b9392505050565b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761073557610735610708565b92915050565b60008261075857634e487b7160e01b600052601260045260246000fd5b500490565b8082018082111561073557610735610708565b60006020828403121561078257600080fd5b8151801515811461070157600080fd5b92835260208301919091526001600160a01b031660408201526080606082018190526006908201526530784141414160d01b60a082015260c00190565b604081526000835180604084015260005b818110156107fd57602081870181015160608684010152016107e0565b506000606082850101526060601f19601f830116840101915050826020830152939250505056fe436f6e7472616374277320746f6b656e2062616c616e636520647572696e6720466c61736820537761703a20436f6e7472616374277320746f6b656e2062616c616e6365206265666f726520666c61736820737761703a20a26469706673582212209ca348636aa76f2ac18d68ab4acb015ba497bb72ffc520c1de76ddb46b000c3564736f6c63430008130033",
  "bytecodeSha1": "9543e60f46ca2877d755e71d286f3c729c6120c6",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.19+commit.7dd6d404"
  },
  "contractName": "FlashSwap",
  "coverageMap": {
    "branches": {
      "14": {
        "FlashSwap.executeFlashSwap": {
          "19": [
            698,
            721,
            false
          ],
          "20": [
            802,
            825,
            false
          ]
        },
        "FlashSwap.uniswapV2Call": {
          "16": [
            1117,
            1144,
            true
          ],
          "17": [
            1175,
            1198,
            true
          ],
          "18": [
            1377,
            1399,
            false
          ]
        }
      },
      "16": {},
      "20": {},
      "3": {}
    },
    "statements": {
      "14": {
        "FlashSwap.executeFlashSwap": {
          "10": [
            559,
            659
          ],
          "11": [
            670,
            684
          ],
          "12": [
            736,
            782
          ],
          "13": [
            841,
            887
          ],
          "14": [
            918,
            939
          ]
        },
        "FlashSwap.uniswapV2Call": {
          "0": [
            1109,
            1157
          ],
          "1": [
            1167,
            1208
          ],
          "2": [
            1219,
            1318
          ],
          "3": [
            1414,
            1441
          ],
          "4": [
            1455,
            1475
          ],
          "5": [
            1506,
            1533
          ],
          "6": [
            1547,
            1567
          ],
          "7": [
            1588,
            1623
          ],
          "8": [
            1633,
            1660
          ],
          "9": [
            1671,
            1714
          ]
        }
      },
      "16": {},
      "20": {
        "console.log": {
          "15": [
            5997,
            6068
          ]
        }
      },
      "3": {}
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.8.0/IERC20",
    "IPair",
    "console"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100365760003560e01c806310d1e85c1461003b578063c9ef9a5614610050575b600080fd5b61004e610049366004610609565b610063565b005b61004e61005e36600461069f565b610346565b6000546001600160a01b031633146100ad5760405162461bcd60e51b81526020600482015260086024820152673737ba103830b4b960c11b60448201526064015b60405180910390fd5b6001600160a01b03851630146100ed5760405162461bcd60e51b815260206004820152600560248201526432b93937b960d91b60448201526064016100a4565b61017b6040518060600160405280602c8152602001610825602c91396001546040516370a0823160e01b81523060048201526001600160a01b03909116906370a08231906024015b602060405180830381865afa158015610152573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061017691906106cb565b610590565b6001546000805460408051630dfe168160e01b81529051929384936001600160a01b039182169390911691630dfe16819160048083019260209291908290030181865afa1580156101d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101f491906106e4565b6001600160a01b031603610238576103e561021087600361071e565b61021a919061073b565b61022590600161075d565b9150610231828761075d565b905061026a565b6103e561024686600361071e565b610250919061073b565b61025b90600161075d565b9150610267828661075d565b90505b61029b6040518060400160405280600f81526020016e0233630b9b429bbb0b8103332b29d1608d1b81525083610590565b6102c360405180604001604052806006815260200165027bbb2b21d160d51b81525082610590565b60015460005460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810184905291169063a9059cbb906044016020604051808303816000875af1158015610318573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061033c9190610770565b5050505050505050565b61038e6040518060600160405280602c8152602001610851602c91396040516370a0823160e01b81523060048201526001600160a01b038516906370a0823190602401610135565b600180546001600160a01b0319166001600160a01b038481169190911790915560005460408051630dfe168160e01b815290519190921691630dfe16819160048083019260209291908290030181865afa1580156103f0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061041491906106e4565b6001600160a01b0316826001600160a01b031603610495576000805460405163022c0d9f60e01b81526001600160a01b039091169163022c0d9f9161045f9185913090600401610792565b600060405180830381600087803b15801561047957600080fd5b505af115801561048d573d6000803e3d6000fd5b505050505050565b60008054906101000a90046001600160a01b03166001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061050a91906106e4565b6001600160a01b0316826001600160a01b031603610556576000805460405163022c0d9f60e01b81526001600160a01b039091169163022c0d9f9161045f919085903090600401610792565b60405162461bcd60e51b815260206004820152600b60248201526a2bb937b733902a37b5b2b760a91b60448201526064016100a4565b5050565b61058c82826040516024016105a69291906107cf565b60408051601f198184030181529190526020810180516001600160e01b0316632d839cb360e21b17905280516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6001600160a01b038116811461060657600080fd5b50565b60008060008060006080868803121561062157600080fd5b853561062c816105f1565b94506020860135935060408601359250606086013567ffffffffffffffff8082111561065757600080fd5b818801915088601f83011261066b57600080fd5b81358181111561067a57600080fd5b89602082850101111561068c57600080fd5b9699959850939650602001949392505050565b600080604083850312156106b257600080fd5b82356106bd816105f1565b946020939093013593505050565b6000602082840312156106dd57600080fd5b5051919050565b6000602082840312156106f657600080fd5b8151610701816105f1565b9392505050565b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761073557610735610708565b92915050565b60008261075857634e487b7160e01b600052601260045260246000fd5b500490565b8082018082111561073557610735610708565b60006020828403121561078257600080fd5b8151801515811461070157600080fd5b92835260208301919091526001600160a01b031660408201526080606082018190526006908201526530784141414160d01b60a082015260c00190565b604081526000835180604084015260005b818110156107fd57602081870181015160608684010152016107e0565b506000606082850101526060601f19601f830116840101915050826020830152939250505056fe436f6e7472616374277320746f6b656e2062616c616e636520647572696e6720466c61736820537761703a20436f6e7472616374277320746f6b656e2062616c616e6365206265666f726520666c61736820737761703a20a26469706673582212209ca348636aa76f2ac18d68ab4acb015ba497bb72ffc520c1de76ddb46b000c3564736f6c63430008130033",
  "deployedSourceMap": "351:1372:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;963:758;;;;;;:::i;:::-;;:::i;:::-;;481:476;;;;;;:::i;:::-;;:::i;963:758::-;1139:4;;-1:-1:-1;;;;;1139:4:14;1117:10;:27;1109:48;;;;-1:-1:-1;;;1109:48:14;;1540:2:21;1109:48:14;;;1522:21:21;1579:1;1559:18;;;1552:29;-1:-1:-1;;;1597:18:21;;;1590:38;1645:18;;1109:48:14;;;;;;;;;-1:-1:-1;;;;;1175:23:14;;1193:4;1175:23;1167:41;;;;-1:-1:-1;;;1167:41:14;;1876:2:21;1167:41:14;;;1858:21:21;1915:1;1895:18;;;1888:29;-1:-1:-1;;;1933:18:21;;;1926:35;1978:18;;1167:41:14;1674:328:21;1167:41:14;1219:99;;;;;;;;;;;;;;;;;;1286:5;;1279:38;;-1:-1:-1;;;1279:38:14;;1311:4;1279:38;;;2153:51:21;-1:-1:-1;;;;;1286:5:14;;;;1279:23;;2126:18:21;;1279:38:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1219:11;:99::i;:::-;1394:5;;1330:11;1377:4;;:13;;;-1:-1:-1;;;1377:13:14;;;;1330:11;;;;-1:-1:-1;;;;;1394:5:14;;;;1377:4;;;;:11;;:13;;;;;;;;;;;;;;:4;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1377:22:14;;1374:204;;1434:3;1420:11;:7;1430:1;1420:11;:::i;:::-;:17;;;;:::i;:::-;:21;;1440:1;1420:21;:::i;:::-;1414:27;-1:-1:-1;1462:13:14;1414:27;1462:7;:13;:::i;:::-;1455:20;;1374:204;;;1526:3;1512:11;:7;1522:1;1512:11;:::i;:::-;:17;;;;:::i;:::-;:21;;1532:1;1512:21;:::i;:::-;1506:27;-1:-1:-1;1554:13:14;1506:27;1554:7;:13;:::i;:::-;1547:20;;1374:204;1588:35;;;;;;;;;;;;;;-1:-1:-1;;;1588:35:14;;;1619:3;1588:11;:35::i;:::-;1633:27;;;;;;;;;;;;;;-1:-1:-1;;;1633:27:14;;;1655:4;1633:11;:27::i;:::-;1678:5;;;1702:4;1671:43;;-1:-1:-1;;;1671:43:14;;-1:-1:-1;;;;;1702:4:14;;;1671:43;;;3491:51:21;3558:18;;;3551:34;;;1678:5:14;;;1671:22;;3464:18:21;;1671:43:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1098:623;;963:758;;;;;:::o;481:476::-;559:100;;;;;;;;;;;;;;;;;;619:39;;-1:-1:-1;;;619:39:14;;652:4;619:39;;;2153:51:21;-1:-1:-1;;;;;619:24:14;;;;;2126:18:21;;619:39:14;2007:203:21;559:100:14;670:5;:14;;-1:-1:-1;;;;;;670:14:14;-1:-1:-1;;;;;670:14:14;;;;;;;;;;-1:-1:-1;708:4:14;:13;;;-1:-1:-1;;;708:13:14;;;;:4;;;;;:11;;:13;;;;;;;;;;;;;;:4;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;698:23:14;:6;-1:-1:-1;;;;;698:23:14;;695:255;;736:4;;;:46;;-1:-1:-1;;;736:46:14;;-1:-1:-1;;;;;736:4:14;;;;:9;;:46;;746:7;;766:4;;736:46;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;481:476;;:::o;695:255::-;812:4;;;;;;;;-1:-1:-1;;;;;812:4:14;-1:-1:-1;;;;;812:11:14;;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;802:23:14;:6;-1:-1:-1;;;;;802:23:14;;799:151;;841:4;;;:46;;-1:-1:-1;;;841:46:14;;-1:-1:-1;;;;;841:4:14;;;;:9;;:46;;:4;854:7;;871:4;;841:46;;;:::i;799:151::-;918:21;;-1:-1:-1;;;918:21:14;;5299:2:21;918:21:14;;;5281::21;5338:2;5318:18;;;5311:30;-1:-1:-1;;;5357:18:21;;;5350:41;5408:18;;918:21:14;5097:335:21;799:151:14;481:476;;:::o;5936:136:20:-;5997:71;6060:2;6064;6013:54;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;6013:54:20;;;;;;;;;;;;;;-1:-1:-1;;;;;6013:54:20;-1:-1:-1;;;6013:54:20;;;264:14;;129:42;373:2;360:16;;240:21;;264:14;360:16;129:42;400:5;389:68;380:77;;335:126;;176:288;:::o;14:131:21:-;-1:-1:-1;;;;;89:31:21;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:863::-;247:6;255;263;271;279;332:3;320:9;311:7;307:23;303:33;300:53;;;349:1;346;339:12;300:53;388:9;375:23;407:31;432:5;407:31;:::i;:::-;457:5;-1:-1:-1;509:2:21;494:18;;481:32;;-1:-1:-1;560:2:21;545:18;;532:32;;-1:-1:-1;615:2:21;600:18;;587:32;638:18;668:14;;;665:34;;;695:1;692;685:12;665:34;733:6;722:9;718:22;708:32;;778:7;771:4;767:2;763:13;759:27;749:55;;800:1;797;790:12;749:55;840:2;827:16;866:2;858:6;855:14;852:34;;;882:1;879;872:12;852:34;927:7;922:2;913:6;909:2;905:15;901:24;898:37;895:57;;;948:1;945;938:12;895:57;150:863;;;;-1:-1:-1;150:863:21;;-1:-1:-1;979:2:21;971:11;;1001:6;150:863;-1:-1:-1;;;150:863:21:o;1018:315::-;1086:6;1094;1147:2;1135:9;1126:7;1122:23;1118:32;1115:52;;;1163:1;1160;1153:12;1115:52;1202:9;1189:23;1221:31;1246:5;1221:31;:::i;:::-;1271:5;1323:2;1308:18;;;;1295:32;;-1:-1:-1;;;1018:315:21:o;2215:184::-;2285:6;2338:2;2326:9;2317:7;2313:23;2309:32;2306:52;;;2354:1;2351;2344:12;2306:52;-1:-1:-1;2377:16:21;;2215:184;-1:-1:-1;2215:184:21:o;2404:251::-;2474:6;2527:2;2515:9;2506:7;2502:23;2498:32;2495:52;;;2543:1;2540;2533:12;2495:52;2575:9;2569:16;2594:31;2619:5;2594:31;:::i;:::-;2644:5;2404:251;-1:-1:-1;;;2404:251:21:o;2660:127::-;2721:10;2716:3;2712:20;2709:1;2702:31;2752:4;2749:1;2742:15;2776:4;2773:1;2766:15;2792:168;2865:9;;;2896;;2913:15;;;2907:22;;2893:37;2883:71;;2934:18;;:::i;:::-;2792:168;;;;:::o;2965:217::-;3005:1;3031;3021:132;;3075:10;3070:3;3066:20;3063:1;3056:31;3110:4;3107:1;3100:15;3138:4;3135:1;3128:15;3021:132;-1:-1:-1;3167:9:21;;2965:217::o;3187:125::-;3252:9;;;3273:10;;;3270:36;;;3286:18;;:::i;3596:277::-;3663:6;3716:2;3704:9;3695:7;3691:23;3687:32;3684:52;;;3732:1;3729;3722:12;3684:52;3764:9;3758:16;3817:5;3810:13;3803:21;3796:5;3793:32;3783:60;;3839:1;3836;3829:12;4037:525;4312:25;;;4368:2;4353:18;;4346:34;;;;-1:-1:-1;;;;;4416:32:21;4411:2;4396:18;;4389:60;4485:3;4480:2;4465:18;;4458:31;;;3955:1;4536:19;;;3943:14;-1:-1:-1;;;4436:3:21;3973:14;;3966:32;4014:12;;;4037:525::o;5437:604::-;5614:2;5603:9;5596:21;5577:4;5646:6;5640:13;5689:6;5684:2;5673:9;5669:18;5662:34;5714:1;5724:144;5738:6;5735:1;5732:13;5724:144;;;5851:4;5835:14;;;5831:25;;5825:32;5820:2;5801:17;;;5797:26;5790:68;5753:12;5724:144;;;5728:3;5917:1;5912:2;5903:6;5892:9;5888:22;5884:31;5877:42;5987:2;5980;5976:7;5971:2;5963:6;5959:15;5955:29;5944:9;5940:45;5936:54;5928:62;;;6028:6;6021:4;6010:9;6006:20;5999:36;5437:604;;;;;:::o",
  "language": "Solidity",
  "natspec": {
    "author": "JohnnyTime (https://smartcontractshacking.com)",
    "kind": "dev",
    "methods": {},
    "title": "FlashSwap",
    "version": 1
  },
  "offset": [
    351,
    1723
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x10D1E85C EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xC9EF9A56 EQ PUSH2 0x50 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x49 CALLDATASIZE PUSH1 0x4 PUSH2 0x609 JUMP JUMPDEST PUSH2 0x63 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4E PUSH2 0x5E CALLDATASIZE PUSH1 0x4 PUSH2 0x69F JUMP JUMPDEST PUSH2 0x346 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xAD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x8 PUSH1 0x24 DUP3 ADD MSTORE PUSH8 0x3737BA103830B4B9 PUSH1 0xC1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ADDRESS EQ PUSH2 0xED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x5 PUSH1 0x24 DUP3 ADD MSTORE PUSH5 0x32B93937B9 PUSH1 0xD9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA4 JUMP JUMPDEST PUSH2 0x17B PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2C DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x825 PUSH1 0x2C SWAP2 CODECOPY PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x152 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x176 SWAP2 SWAP1 PUSH2 0x6CB JUMP JUMPDEST PUSH2 0x590 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xDFE1681 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD SWAP3 SWAP4 DUP5 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP4 SWAP1 SWAP2 AND SWAP2 PUSH4 0xDFE1681 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1D0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0x6E4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x238 JUMPI PUSH2 0x3E5 PUSH2 0x210 DUP8 PUSH1 0x3 PUSH2 0x71E JUMP JUMPDEST PUSH2 0x21A SWAP2 SWAP1 PUSH2 0x73B JUMP JUMPDEST PUSH2 0x225 SWAP1 PUSH1 0x1 PUSH2 0x75D JUMP JUMPDEST SWAP2 POP PUSH2 0x231 DUP3 DUP8 PUSH2 0x75D JUMP JUMPDEST SWAP1 POP PUSH2 0x26A JUMP JUMPDEST PUSH2 0x3E5 PUSH2 0x246 DUP7 PUSH1 0x3 PUSH2 0x71E JUMP JUMPDEST PUSH2 0x250 SWAP2 SWAP1 PUSH2 0x73B JUMP JUMPDEST PUSH2 0x25B SWAP1 PUSH1 0x1 PUSH2 0x75D JUMP JUMPDEST SWAP2 POP PUSH2 0x267 DUP3 DUP7 PUSH2 0x75D JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0x29B PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD PUSH15 0x233630B9B429BBB0B8103332B29D1 PUSH1 0x8D SHL DUP2 MSTORE POP DUP4 PUSH2 0x590 JUMP JUMPDEST PUSH2 0x2C3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH6 0x27BBB2B21D1 PUSH1 0xD5 SHL DUP2 MSTORE POP DUP3 PUSH2 0x590 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x318 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x33C SWAP2 SWAP1 PUSH2 0x770 JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x38E PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2C DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x851 PUSH1 0x2C SWAP2 CODECOPY PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH2 0x135 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xDFE1681 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH4 0xDFE1681 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3F0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x414 SWAP2 SWAP1 PUSH2 0x6E4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x495 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x22C0D9F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH4 0x22C0D9F SWAP2 PUSH2 0x45F SWAP2 DUP6 SWAP2 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x792 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x479 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x48D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD21220A7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4E6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x50A SWAP2 SWAP1 PUSH2 0x6E4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x556 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x22C0D9F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH4 0x22C0D9F SWAP2 PUSH2 0x45F SWAP2 SWAP1 DUP6 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x792 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x2BB937B733902A37B5B2B7 PUSH1 0xA9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x58C DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x5A6 SWAP3 SWAP2 SWAP1 PUSH2 0x7CF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x2D839CB3 PUSH1 0xE2 SHL OR SWAP1 MSTORE DUP1 MLOAD PUSH11 0x636F6E736F6C652E6C6F67 PUSH1 0x20 DUP4 ADD PUSH1 0x0 DUP1 DUP5 DUP4 DUP6 GAS STATICCALL POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x606 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x621 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x62C DUP2 PUSH2 0x5F1 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x657 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP9 ADD SWAP2 POP DUP9 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x66B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x67A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP10 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x68C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP PUSH1 0x20 ADD SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x6B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x6BD DUP2 PUSH2 0x5F1 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x701 DUP2 PUSH2 0x5F1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x735 JUMPI PUSH2 0x735 PUSH2 0x708 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x758 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x735 JUMPI PUSH2 0x735 PUSH2 0x708 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x782 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x701 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x6 SWAP1 DUP3 ADD MSTORE PUSH6 0x307841414141 PUSH1 0xD0 SHL PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 DUP4 MLOAD DUP1 PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x7FD JUMPI PUSH1 0x20 DUP2 DUP8 ADD DUP2 ADD MLOAD PUSH1 0x60 DUP7 DUP5 ADD ADD MSTORE ADD PUSH2 0x7E0 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x60 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x60 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP DUP3 PUSH1 0x20 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP INVALID NUMBER PUSH16 0x6E7472616374277320746F6B656E2062 PUSH2 0x6C61 PUSH15 0x636520647572696E6720466C617368 KECCAK256 MSTORE8 PUSH24 0x61703A20436F6E7472616374277320746F6B656E2062616C PUSH2 0x6E63 PUSH6 0x206265666F72 PUSH6 0x20666C617368 KECCAK256 PUSH20 0x7761703A20A26469706673582212209CA348636A 0xA7 PUSH16 0x2AC18D68AB4ACB015BA497BB72FFC520 0xC1 0xDE PUSH23 0xDDB46B000C3564736F6C63430008130033000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        351,
        1723
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        351,
        1723
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        351,
        1723
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5": {
      "fn": null,
      "offset": [
        351,
        1723
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "6": {
      "fn": null,
      "offset": [
        351,
        1723
      ],
      "op": "DUP1",
      "path": "14"
    },
    "7": {
      "fn": null,
      "offset": [
        351,
        1723
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "8": {
      "fn": null,
      "offset": [
        351,
        1723
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        351,
        1723
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "12": {
      "fn": null,
      "offset": [
        351,
        1723
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        351,
        1723
      ],
      "op": "DUP1",
      "path": "14"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        351,
        1723
      ],
      "op": "REVERT",
      "path": "14"
    },
    "16": {
      "fn": null,
      "offset": [
        351,
        1723
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "17": {
      "fn": null,
      "offset": [
        351,
        1723
      ],
      "op": "POP",
      "path": "14"
    },
    "18": {
      "fn": null,
      "offset": [
        351,
        1723
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        351,
        1723
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "21": {
      "fn": null,
      "offset": [
        351,
        1723
      ],
      "op": "LT",
      "path": "14"
    },
    "22": {
      "fn": null,
      "offset": [
        351,
        1723
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x36"
    },
    "25": {
      "fn": null,
      "offset": [
        351,
        1723
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "26": {
      "fn": null,
      "offset": [
        351,
        1723
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        351,
        1723
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "29": {
      "fn": null,
      "offset": [
        351,
        1723
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        351,
        1723
      ],
      "op": "SHR",
      "path": "14"
    },
    "32": {
      "fn": null,
      "offset": [
        351,
        1723
      ],
      "op": "DUP1",
      "path": "14"
    },
    "33": {
      "fn": null,
      "offset": [
        351,
        1723
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x10D1E85C"
    },
    "38": {
      "fn": null,
      "offset": [
        351,
        1723
      ],
      "op": "EQ",
      "path": "14"
    },
    "39": {
      "fn": null,
      "offset": [
        351,
        1723
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x3B"
    },
    "42": {
      "fn": null,
      "offset": [
        351,
        1723
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "43": {
      "fn": null,
      "offset": [
        351,
        1723
      ],
      "op": "DUP1",
      "path": "14"
    },
    "44": {
      "fn": null,
      "offset": [
        351,
        1723
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xC9EF9A56"
    },
    "49": {
      "fn": null,
      "offset": [
        351,
        1723
      ],
      "op": "EQ",
      "path": "14"
    },
    "50": {
      "fn": null,
      "offset": [
        351,
        1723
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x50"
    },
    "53": {
      "fn": null,
      "offset": [
        351,
        1723
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "54": {
      "fn": null,
      "offset": [
        351,
        1723
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "55": {
      "fn": null,
      "offset": [
        351,
        1723
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "57": {
      "fn": null,
      "offset": [
        351,
        1723
      ],
      "op": "DUP1",
      "path": "14"
    },
    "58": {
      "first_revert": true,
      "fn": null,
      "offset": [
        351,
        1723
      ],
      "op": "REVERT",
      "path": "14"
    },
    "59": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        963,
        1721
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "60": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        963,
        1721
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x4E"
    },
    "63": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        963,
        1721
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x49"
    },
    "66": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        963,
        1721
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "67": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        963,
        1721
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "69": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        963,
        1721
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x609"
    },
    "72": {
      "fn": "FlashSwap.uniswapV2Call",
      "jump": "i",
      "offset": [
        963,
        1721
      ],
      "op": "JUMP",
      "path": "14"
    },
    "73": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        963,
        1721
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "74": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        963,
        1721
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x63"
    },
    "77": {
      "fn": "FlashSwap.uniswapV2Call",
      "jump": "i",
      "offset": [
        963,
        1721
      ],
      "op": "JUMP",
      "path": "14"
    },
    "78": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        963,
        1721
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "79": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        963,
        1721
      ],
      "op": "STOP",
      "path": "14"
    },
    "80": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        481,
        957
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "81": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        481,
        957
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x4E"
    },
    "84": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        481,
        957
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x5E"
    },
    "87": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        481,
        957
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "88": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        481,
        957
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "90": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        481,
        957
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x69F"
    },
    "93": {
      "fn": "FlashSwap.executeFlashSwap",
      "jump": "i",
      "offset": [
        481,
        957
      ],
      "op": "JUMP",
      "path": "14"
    },
    "94": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        481,
        957
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "95": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        481,
        957
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x346"
    },
    "98": {
      "fn": "FlashSwap.executeFlashSwap",
      "jump": "i",
      "offset": [
        481,
        957
      ],
      "op": "JUMP",
      "path": "14"
    },
    "99": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        963,
        1721
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "100": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1139,
        1143
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 0,
      "value": "0x0"
    },
    "102": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1139,
        1143
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "103": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "105": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "107": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "109": {
      "op": "SHL"
    },
    "110": {
      "op": "SUB"
    },
    "111": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1139,
        1143
      ],
      "op": "AND",
      "path": "14"
    },
    "112": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1117,
        1127
      ],
      "op": "CALLER",
      "path": "14"
    },
    "113": {
      "branch": 16,
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1117,
        1144
      ],
      "op": "EQ",
      "path": "14"
    },
    "114": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1109,
        1157
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xAD"
    },
    "117": {
      "branch": 16,
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1109,
        1157
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "118": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1109,
        1157
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "120": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1109,
        1157
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "121": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "125": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "127": {
      "op": "SHL"
    },
    "128": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1109,
        1157
      ],
      "op": "DUP2",
      "path": "14"
    },
    "129": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1109,
        1157
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "130": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "132": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1109,
        1157
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "134": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1109,
        1157
      ],
      "op": "DUP3",
      "path": "14"
    },
    "135": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1109,
        1157
      ],
      "op": "ADD",
      "path": "14"
    },
    "136": {
      "op": "MSTORE"
    },
    "137": {
      "op": "PUSH1",
      "value": "0x8"
    },
    "139": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "141": {
      "op": "DUP3"
    },
    "142": {
      "op": "ADD"
    },
    "143": {
      "op": "MSTORE"
    },
    "144": {
      "op": "PUSH8",
      "value": "0x3737BA103830B4B9"
    },
    "153": {
      "op": "PUSH1",
      "value": "0xC1"
    },
    "155": {
      "op": "SHL"
    },
    "156": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "158": {
      "op": "DUP3"
    },
    "159": {
      "op": "ADD"
    },
    "160": {
      "op": "MSTORE"
    },
    "161": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "163": {
      "op": "ADD"
    },
    "164": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1109,
        1157
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "165": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1109,
        1157
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "167": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1109,
        1157
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "168": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1109,
        1157
      ],
      "op": "DUP1",
      "path": "14"
    },
    "169": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1109,
        1157
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "170": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1109,
        1157
      ],
      "op": "SUB",
      "path": "14"
    },
    "171": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1109,
        1157
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "172": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1109,
        1157
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "14"
    },
    "173": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1109,
        1157
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "174": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "176": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "178": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "180": {
      "op": "SHL"
    },
    "181": {
      "op": "SUB"
    },
    "182": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1175,
        1198
      ],
      "op": "DUP6",
      "path": "14",
      "statement": 1
    },
    "183": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1175,
        1198
      ],
      "op": "AND",
      "path": "14"
    },
    "184": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1193,
        1197
      ],
      "op": "ADDRESS",
      "path": "14"
    },
    "185": {
      "branch": 17,
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1175,
        1198
      ],
      "op": "EQ",
      "path": "14"
    },
    "186": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1167,
        1208
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xED"
    },
    "189": {
      "branch": 17,
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1167,
        1208
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "190": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1167,
        1208
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "192": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1167,
        1208
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "193": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "197": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "199": {
      "op": "SHL"
    },
    "200": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1167,
        1208
      ],
      "op": "DUP2",
      "path": "14"
    },
    "201": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1167,
        1208
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "202": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "204": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1167,
        1208
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "206": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1167,
        1208
      ],
      "op": "DUP3",
      "path": "14"
    },
    "207": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1167,
        1208
      ],
      "op": "ADD",
      "path": "14"
    },
    "208": {
      "op": "MSTORE"
    },
    "209": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "211": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "213": {
      "op": "DUP3"
    },
    "214": {
      "op": "ADD"
    },
    "215": {
      "op": "MSTORE"
    },
    "216": {
      "op": "PUSH5",
      "value": "0x32B93937B9"
    },
    "222": {
      "op": "PUSH1",
      "value": "0xD9"
    },
    "224": {
      "op": "SHL"
    },
    "225": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "227": {
      "op": "DUP3"
    },
    "228": {
      "op": "ADD"
    },
    "229": {
      "op": "MSTORE"
    },
    "230": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "232": {
      "op": "ADD"
    },
    "233": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1167,
        1208
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xA4"
    },
    "236": {
      "op": "JUMP"
    },
    "237": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1167,
        1208
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "238": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1219,
        1318
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 2,
      "value": "0x17B"
    },
    "241": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1219,
        1318
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "243": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1219,
        1318
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "244": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1219,
        1318
      ],
      "op": "DUP1",
      "path": "14"
    },
    "245": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1219,
        1318
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x60"
    },
    "247": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1219,
        1318
      ],
      "op": "ADD",
      "path": "14"
    },
    "248": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1219,
        1318
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "250": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1219,
        1318
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "251": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1219,
        1318
      ],
      "op": "DUP1",
      "path": "14"
    },
    "252": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1219,
        1318
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x2C"
    },
    "254": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1219,
        1318
      ],
      "op": "DUP2",
      "path": "14"
    },
    "255": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1219,
        1318
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "256": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1219,
        1318
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "258": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1219,
        1318
      ],
      "op": "ADD",
      "path": "14"
    },
    "259": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1219,
        1318
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x825"
    },
    "262": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1219,
        1318
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x2C"
    },
    "264": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1219,
        1318
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "265": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1219,
        1318
      ],
      "op": "CODECOPY",
      "path": "14"
    },
    "266": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1286,
        1291
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "268": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1286,
        1291
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "269": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1279,
        1317
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "271": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1279,
        1317
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "272": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "277": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "279": {
      "op": "SHL"
    },
    "280": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1279,
        1317
      ],
      "op": "DUP2",
      "path": "14"
    },
    "281": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1279,
        1317
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "282": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1311,
        1315
      ],
      "op": "ADDRESS",
      "path": "14"
    },
    "283": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1279,
        1317
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "285": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1279,
        1317
      ],
      "op": "DUP3",
      "path": "14"
    },
    "286": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1279,
        1317
      ],
      "op": "ADD",
      "path": "14"
    },
    "287": {
      "op": "MSTORE"
    },
    "288": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "290": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "292": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "294": {
      "op": "SHL"
    },
    "295": {
      "op": "SUB"
    },
    "296": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1286,
        1291
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "297": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1286,
        1291
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "298": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1286,
        1291
      ],
      "op": "AND",
      "path": "14"
    },
    "299": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1286,
        1291
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "300": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1279,
        1302
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x70A08231"
    },
    "305": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1279,
        1302
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "306": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "308": {
      "op": "ADD"
    },
    "309": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1279,
        1317
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "310": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1279,
        1317
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "312": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1279,
        1317
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "314": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1279,
        1317
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "315": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1279,
        1317
      ],
      "op": "DUP1",
      "path": "14"
    },
    "316": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1279,
        1317
      ],
      "op": "DUP4",
      "path": "14"
    },
    "317": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1279,
        1317
      ],
      "op": "SUB",
      "path": "14"
    },
    "318": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1279,
        1317
      ],
      "op": "DUP2",
      "path": "14"
    },
    "319": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1279,
        1317
      ],
      "op": "DUP7",
      "path": "14"
    },
    "320": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1279,
        1317
      ],
      "op": "GAS",
      "path": "14"
    },
    "321": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1279,
        1317
      ],
      "op": "STATICCALL",
      "path": "14"
    },
    "322": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1279,
        1317
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "323": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1279,
        1317
      ],
      "op": "DUP1",
      "path": "14"
    },
    "324": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1279,
        1317
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "325": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1279,
        1317
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x152"
    },
    "328": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1279,
        1317
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "329": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1279,
        1317
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "330": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1279,
        1317
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "332": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1279,
        1317
      ],
      "op": "DUP1",
      "path": "14"
    },
    "333": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1279,
        1317
      ],
      "op": "RETURNDATACOPY",
      "path": "14"
    },
    "334": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1279,
        1317
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "335": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1279,
        1317
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "337": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1279,
        1317
      ],
      "op": "REVERT",
      "path": "14"
    },
    "338": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1279,
        1317
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "339": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1279,
        1317
      ],
      "op": "POP",
      "path": "14"
    },
    "340": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1279,
        1317
      ],
      "op": "POP",
      "path": "14"
    },
    "341": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1279,
        1317
      ],
      "op": "POP",
      "path": "14"
    },
    "342": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1279,
        1317
      ],
      "op": "POP",
      "path": "14"
    },
    "343": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1279,
        1317
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "345": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1279,
        1317
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "346": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1279,
        1317
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "347": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1279,
        1317
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1F"
    },
    "349": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1279,
        1317
      ],
      "op": "NOT",
      "path": "14"
    },
    "350": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1279,
        1317
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1F"
    },
    "352": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1279,
        1317
      ],
      "op": "DUP3",
      "path": "14"
    },
    "353": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1279,
        1317
      ],
      "op": "ADD",
      "path": "14"
    },
    "354": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1279,
        1317
      ],
      "op": "AND",
      "path": "14"
    },
    "355": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1279,
        1317
      ],
      "op": "DUP3",
      "path": "14"
    },
    "356": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1279,
        1317
      ],
      "op": "ADD",
      "path": "14"
    },
    "357": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1279,
        1317
      ],
      "op": "DUP1",
      "path": "14"
    },
    "358": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1279,
        1317
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "360": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1279,
        1317
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "361": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1279,
        1317
      ],
      "op": "POP",
      "path": "14"
    },
    "362": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1279,
        1317
      ],
      "op": "DUP2",
      "path": "14"
    },
    "363": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1279,
        1317
      ],
      "op": "ADD",
      "path": "14"
    },
    "364": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1279,
        1317
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "365": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1279,
        1317
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x176"
    },
    "368": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1279,
        1317
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "369": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1279,
        1317
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "370": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1279,
        1317
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x6CB"
    },
    "373": {
      "fn": "FlashSwap.uniswapV2Call",
      "jump": "i",
      "offset": [
        1279,
        1317
      ],
      "op": "JUMP",
      "path": "14"
    },
    "374": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1279,
        1317
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "375": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1219,
        1230
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x590"
    },
    "378": {
      "fn": "FlashSwap.uniswapV2Call",
      "jump": "i",
      "offset": [
        1219,
        1318
      ],
      "op": "JUMP",
      "path": "14"
    },
    "379": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1219,
        1318
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "380": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1394,
        1399
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "382": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1394,
        1399
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "383": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1330,
        1341
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "385": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1377,
        1381
      ],
      "op": "DUP1",
      "path": "14"
    },
    "386": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1377,
        1381
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "387": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1377,
        1390
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "389": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1377,
        1390
      ],
      "op": "DUP1",
      "path": "14"
    },
    "390": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1377,
        1390
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "391": {
      "op": "PUSH4",
      "value": "0xDFE1681"
    },
    "396": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "398": {
      "op": "SHL"
    },
    "399": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1377,
        1390
      ],
      "op": "DUP2",
      "path": "14"
    },
    "400": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1377,
        1390
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "401": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1377,
        1390
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "402": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1377,
        1390
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "403": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1330,
        1341
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "404": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1330,
        1341
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "405": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1330,
        1341
      ],
      "op": "DUP5",
      "path": "14"
    },
    "406": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1330,
        1341
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "407": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "409": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "411": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "413": {
      "op": "SHL"
    },
    "414": {
      "op": "SUB"
    },
    "415": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1394,
        1399
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "416": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1394,
        1399
      ],
      "op": "DUP3",
      "path": "14"
    },
    "417": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1394,
        1399
      ],
      "op": "AND",
      "path": "14"
    },
    "418": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1394,
        1399
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "419": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1377,
        1381
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "420": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1377,
        1381
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "421": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1377,
        1381
      ],
      "op": "AND",
      "path": "14"
    },
    "422": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1377,
        1381
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "423": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1377,
        1388
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xDFE1681"
    },
    "428": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1377,
        1388
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "429": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1377,
        1390
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "431": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1377,
        1390
      ],
      "op": "DUP1",
      "path": "14"
    },
    "432": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1377,
        1390
      ],
      "op": "DUP4",
      "path": "14"
    },
    "433": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1377,
        1390
      ],
      "op": "ADD",
      "path": "14"
    },
    "434": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1377,
        1390
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "435": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1377,
        1390
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "437": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1377,
        1390
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "438": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1377,
        1390
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "439": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1377,
        1390
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "440": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1377,
        1390
      ],
      "op": "DUP3",
      "path": "14"
    },
    "441": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1377,
        1390
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "442": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1377,
        1390
      ],
      "op": "SUB",
      "path": "14"
    },
    "443": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1377,
        1390
      ],
      "op": "ADD",
      "path": "14"
    },
    "444": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1377,
        1390
      ],
      "op": "DUP2",
      "path": "14"
    },
    "445": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1377,
        1381
      ],
      "op": "DUP7",
      "path": "14"
    },
    "446": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1377,
        1390
      ],
      "op": "GAS",
      "path": "14"
    },
    "447": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1377,
        1390
      ],
      "op": "STATICCALL",
      "path": "14"
    },
    "448": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1377,
        1390
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "449": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1377,
        1390
      ],
      "op": "DUP1",
      "path": "14"
    },
    "450": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1377,
        1390
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "451": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1377,
        1390
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1D0"
    },
    "454": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1377,
        1390
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "455": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1377,
        1390
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "456": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1377,
        1390
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "458": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1377,
        1390
      ],
      "op": "DUP1",
      "path": "14"
    },
    "459": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1377,
        1390
      ],
      "op": "RETURNDATACOPY",
      "path": "14"
    },
    "460": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1377,
        1390
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "461": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1377,
        1390
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "463": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1377,
        1390
      ],
      "op": "REVERT",
      "path": "14"
    },
    "464": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1377,
        1390
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "465": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1377,
        1390
      ],
      "op": "POP",
      "path": "14"
    },
    "466": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1377,
        1390
      ],
      "op": "POP",
      "path": "14"
    },
    "467": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1377,
        1390
      ],
      "op": "POP",
      "path": "14"
    },
    "468": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1377,
        1390
      ],
      "op": "POP",
      "path": "14"
    },
    "469": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1377,
        1390
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "471": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1377,
        1390
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "472": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1377,
        1390
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "473": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1377,
        1390
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1F"
    },
    "475": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1377,
        1390
      ],
      "op": "NOT",
      "path": "14"
    },
    "476": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1377,
        1390
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1F"
    },
    "478": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1377,
        1390
      ],
      "op": "DUP3",
      "path": "14"
    },
    "479": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1377,
        1390
      ],
      "op": "ADD",
      "path": "14"
    },
    "480": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1377,
        1390
      ],
      "op": "AND",
      "path": "14"
    },
    "481": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1377,
        1390
      ],
      "op": "DUP3",
      "path": "14"
    },
    "482": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1377,
        1390
      ],
      "op": "ADD",
      "path": "14"
    },
    "483": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1377,
        1390
      ],
      "op": "DUP1",
      "path": "14"
    },
    "484": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1377,
        1390
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "486": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1377,
        1390
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "487": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1377,
        1390
      ],
      "op": "POP",
      "path": "14"
    },
    "488": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1377,
        1390
      ],
      "op": "DUP2",
      "path": "14"
    },
    "489": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1377,
        1390
      ],
      "op": "ADD",
      "path": "14"
    },
    "490": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1377,
        1390
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "491": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1377,
        1390
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1F4"
    },
    "494": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1377,
        1390
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "495": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1377,
        1390
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "496": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1377,
        1390
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x6E4"
    },
    "499": {
      "fn": "FlashSwap.uniswapV2Call",
      "jump": "i",
      "offset": [
        1377,
        1390
      ],
      "op": "JUMP",
      "path": "14"
    },
    "500": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1377,
        1390
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "501": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "503": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "505": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "507": {
      "op": "SHL"
    },
    "508": {
      "op": "SUB"
    },
    "509": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1377,
        1399
      ],
      "op": "AND",
      "path": "14"
    },
    "510": {
      "branch": 18,
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1377,
        1399
      ],
      "op": "SUB",
      "path": "14"
    },
    "511": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1374,
        1578
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x238"
    },
    "514": {
      "branch": 18,
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1374,
        1578
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "515": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1434,
        1437
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 3,
      "value": "0x3E5"
    },
    "518": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1420,
        1431
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x210"
    },
    "521": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1420,
        1427
      ],
      "op": "DUP8",
      "path": "14"
    },
    "522": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1430,
        1431
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "524": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1420,
        1431
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x71E"
    },
    "527": {
      "fn": "FlashSwap.uniswapV2Call",
      "jump": "i",
      "offset": [
        1420,
        1431
      ],
      "op": "JUMP",
      "path": "14"
    },
    "528": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1420,
        1431
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "529": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1420,
        1437
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x21A"
    },
    "532": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1420,
        1437
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "533": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1420,
        1437
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "534": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1420,
        1437
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x73B"
    },
    "537": {
      "fn": "FlashSwap.uniswapV2Call",
      "jump": "i",
      "offset": [
        1420,
        1437
      ],
      "op": "JUMP",
      "path": "14"
    },
    "538": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1420,
        1437
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "539": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1420,
        1441
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x225"
    },
    "542": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1420,
        1441
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "543": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1440,
        1441
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "545": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1420,
        1441
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x75D"
    },
    "548": {
      "fn": "FlashSwap.uniswapV2Call",
      "jump": "i",
      "offset": [
        1420,
        1441
      ],
      "op": "JUMP",
      "path": "14"
    },
    "549": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1420,
        1441
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "550": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1414,
        1441
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "551": {
      "op": "POP"
    },
    "552": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1462,
        1475
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 4,
      "value": "0x231"
    },
    "555": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1414,
        1441
      ],
      "op": "DUP3",
      "path": "14"
    },
    "556": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1462,
        1469
      ],
      "op": "DUP8",
      "path": "14"
    },
    "557": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1462,
        1475
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x75D"
    },
    "560": {
      "fn": "FlashSwap.uniswapV2Call",
      "jump": "i",
      "offset": [
        1462,
        1475
      ],
      "op": "JUMP",
      "path": "14"
    },
    "561": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1462,
        1475
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "562": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1455,
        1475
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "563": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1455,
        1475
      ],
      "op": "POP",
      "path": "14"
    },
    "564": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1374,
        1578
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x26A"
    },
    "567": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1374,
        1578
      ],
      "op": "JUMP",
      "path": "14"
    },
    "568": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1374,
        1578
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "569": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1526,
        1529
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 5,
      "value": "0x3E5"
    },
    "572": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1512,
        1523
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x246"
    },
    "575": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1512,
        1519
      ],
      "op": "DUP7",
      "path": "14"
    },
    "576": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1522,
        1523
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "578": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1512,
        1523
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x71E"
    },
    "581": {
      "fn": "FlashSwap.uniswapV2Call",
      "jump": "i",
      "offset": [
        1512,
        1523
      ],
      "op": "JUMP",
      "path": "14"
    },
    "582": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1512,
        1523
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "583": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1512,
        1529
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x250"
    },
    "586": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1512,
        1529
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "587": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1512,
        1529
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "588": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1512,
        1529
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x73B"
    },
    "591": {
      "fn": "FlashSwap.uniswapV2Call",
      "jump": "i",
      "offset": [
        1512,
        1529
      ],
      "op": "JUMP",
      "path": "14"
    },
    "592": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1512,
        1529
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "593": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1512,
        1533
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x25B"
    },
    "596": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1512,
        1533
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "597": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1532,
        1533
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "599": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1512,
        1533
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x75D"
    },
    "602": {
      "fn": "FlashSwap.uniswapV2Call",
      "jump": "i",
      "offset": [
        1512,
        1533
      ],
      "op": "JUMP",
      "path": "14"
    },
    "603": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1512,
        1533
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "604": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1506,
        1533
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "605": {
      "op": "POP"
    },
    "606": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1554,
        1567
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 6,
      "value": "0x267"
    },
    "609": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1506,
        1533
      ],
      "op": "DUP3",
      "path": "14"
    },
    "610": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1554,
        1561
      ],
      "op": "DUP7",
      "path": "14"
    },
    "611": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1554,
        1567
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x75D"
    },
    "614": {
      "fn": "FlashSwap.uniswapV2Call",
      "jump": "i",
      "offset": [
        1554,
        1567
      ],
      "op": "JUMP",
      "path": "14"
    },
    "615": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1554,
        1567
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "616": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1547,
        1567
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "617": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1547,
        1567
      ],
      "op": "POP",
      "path": "14"
    },
    "618": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1374,
        1578
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "619": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1588,
        1623
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 7,
      "value": "0x29B"
    },
    "622": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1588,
        1623
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "624": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1588,
        1623
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "625": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1588,
        1623
      ],
      "op": "DUP1",
      "path": "14"
    },
    "626": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1588,
        1623
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "628": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1588,
        1623
      ],
      "op": "ADD",
      "path": "14"
    },
    "629": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1588,
        1623
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "631": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1588,
        1623
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "632": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1588,
        1623
      ],
      "op": "DUP1",
      "path": "14"
    },
    "633": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1588,
        1623
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xF"
    },
    "635": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1588,
        1623
      ],
      "op": "DUP2",
      "path": "14"
    },
    "636": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1588,
        1623
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "637": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1588,
        1623
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "639": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1588,
        1623
      ],
      "op": "ADD",
      "path": "14"
    },
    "640": {
      "op": "PUSH15",
      "value": "0x233630B9B429BBB0B8103332B29D1"
    },
    "656": {
      "op": "PUSH1",
      "value": "0x8D"
    },
    "658": {
      "op": "SHL"
    },
    "659": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1588,
        1623
      ],
      "op": "DUP2",
      "path": "14"
    },
    "660": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1588,
        1623
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "661": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1588,
        1623
      ],
      "op": "POP",
      "path": "14"
    },
    "662": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1619,
        1622
      ],
      "op": "DUP4",
      "path": "14"
    },
    "663": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1588,
        1599
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x590"
    },
    "666": {
      "fn": "FlashSwap.uniswapV2Call",
      "jump": "i",
      "offset": [
        1588,
        1623
      ],
      "op": "JUMP",
      "path": "14"
    },
    "667": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1588,
        1623
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "668": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1633,
        1660
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 8,
      "value": "0x2C3"
    },
    "671": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1633,
        1660
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "673": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1633,
        1660
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "674": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1633,
        1660
      ],
      "op": "DUP1",
      "path": "14"
    },
    "675": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1633,
        1660
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "677": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1633,
        1660
      ],
      "op": "ADD",
      "path": "14"
    },
    "678": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1633,
        1660
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "680": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1633,
        1660
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "681": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1633,
        1660
      ],
      "op": "DUP1",
      "path": "14"
    },
    "682": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1633,
        1660
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x6"
    },
    "684": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1633,
        1660
      ],
      "op": "DUP2",
      "path": "14"
    },
    "685": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1633,
        1660
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "686": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1633,
        1660
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "688": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1633,
        1660
      ],
      "op": "ADD",
      "path": "14"
    },
    "689": {
      "op": "PUSH6",
      "value": "0x27BBB2B21D1"
    },
    "696": {
      "op": "PUSH1",
      "value": "0xD5"
    },
    "698": {
      "op": "SHL"
    },
    "699": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1633,
        1660
      ],
      "op": "DUP2",
      "path": "14"
    },
    "700": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1633,
        1660
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "701": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1633,
        1660
      ],
      "op": "POP",
      "path": "14"
    },
    "702": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1655,
        1659
      ],
      "op": "DUP3",
      "path": "14"
    },
    "703": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1633,
        1644
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x590"
    },
    "706": {
      "fn": "FlashSwap.uniswapV2Call",
      "jump": "i",
      "offset": [
        1633,
        1660
      ],
      "op": "JUMP",
      "path": "14"
    },
    "707": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1633,
        1660
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "708": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1678,
        1683
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 9,
      "value": "0x1"
    },
    "710": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1678,
        1683
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "711": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1678,
        1683
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "713": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1702,
        1706
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "714": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1671,
        1714
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "716": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1671,
        1714
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "717": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "722": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "724": {
      "op": "SHL"
    },
    "725": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1671,
        1714
      ],
      "op": "DUP2",
      "path": "14"
    },
    "726": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1671,
        1714
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "727": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "729": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "731": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "733": {
      "op": "SHL"
    },
    "734": {
      "op": "SUB"
    },
    "735": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1702,
        1706
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "736": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1702,
        1706
      ],
      "op": "DUP3",
      "path": "14"
    },
    "737": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1702,
        1706
      ],
      "op": "AND",
      "path": "14"
    },
    "738": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1671,
        1714
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "740": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1671,
        1714
      ],
      "op": "DUP3",
      "path": "14"
    },
    "741": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1671,
        1714
      ],
      "op": "ADD",
      "path": "14"
    },
    "742": {
      "op": "MSTORE"
    },
    "743": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "745": {
      "op": "DUP2"
    },
    "746": {
      "op": "ADD"
    },
    "747": {
      "op": "DUP5"
    },
    "748": {
      "op": "SWAP1"
    },
    "749": {
      "op": "MSTORE"
    },
    "750": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1678,
        1683
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "751": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1678,
        1683
      ],
      "op": "AND",
      "path": "14"
    },
    "752": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1678,
        1683
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "753": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1671,
        1693
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xA9059CBB"
    },
    "758": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1671,
        1693
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "759": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "761": {
      "op": "ADD"
    },
    "762": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1671,
        1714
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "764": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1671,
        1714
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "766": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1671,
        1714
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "767": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1671,
        1714
      ],
      "op": "DUP1",
      "path": "14"
    },
    "768": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1671,
        1714
      ],
      "op": "DUP4",
      "path": "14"
    },
    "769": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1671,
        1714
      ],
      "op": "SUB",
      "path": "14"
    },
    "770": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1671,
        1714
      ],
      "op": "DUP2",
      "path": "14"
    },
    "771": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1671,
        1714
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "773": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1671,
        1714
      ],
      "op": "DUP8",
      "path": "14"
    },
    "774": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1671,
        1714
      ],
      "op": "GAS",
      "path": "14"
    },
    "775": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1671,
        1714
      ],
      "op": "CALL",
      "path": "14"
    },
    "776": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1671,
        1714
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "777": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1671,
        1714
      ],
      "op": "DUP1",
      "path": "14"
    },
    "778": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1671,
        1714
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "779": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1671,
        1714
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x318"
    },
    "782": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1671,
        1714
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "783": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1671,
        1714
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "784": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1671,
        1714
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "786": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1671,
        1714
      ],
      "op": "DUP1",
      "path": "14"
    },
    "787": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1671,
        1714
      ],
      "op": "RETURNDATACOPY",
      "path": "14"
    },
    "788": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1671,
        1714
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "789": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1671,
        1714
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "791": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1671,
        1714
      ],
      "op": "REVERT",
      "path": "14"
    },
    "792": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1671,
        1714
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "793": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1671,
        1714
      ],
      "op": "POP",
      "path": "14"
    },
    "794": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1671,
        1714
      ],
      "op": "POP",
      "path": "14"
    },
    "795": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1671,
        1714
      ],
      "op": "POP",
      "path": "14"
    },
    "796": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1671,
        1714
      ],
      "op": "POP",
      "path": "14"
    },
    "797": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1671,
        1714
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "799": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1671,
        1714
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "800": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1671,
        1714
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "801": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1671,
        1714
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1F"
    },
    "803": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1671,
        1714
      ],
      "op": "NOT",
      "path": "14"
    },
    "804": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1671,
        1714
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1F"
    },
    "806": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1671,
        1714
      ],
      "op": "DUP3",
      "path": "14"
    },
    "807": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1671,
        1714
      ],
      "op": "ADD",
      "path": "14"
    },
    "808": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1671,
        1714
      ],
      "op": "AND",
      "path": "14"
    },
    "809": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1671,
        1714
      ],
      "op": "DUP3",
      "path": "14"
    },
    "810": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1671,
        1714
      ],
      "op": "ADD",
      "path": "14"
    },
    "811": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1671,
        1714
      ],
      "op": "DUP1",
      "path": "14"
    },
    "812": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1671,
        1714
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "814": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1671,
        1714
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "815": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1671,
        1714
      ],
      "op": "POP",
      "path": "14"
    },
    "816": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1671,
        1714
      ],
      "op": "DUP2",
      "path": "14"
    },
    "817": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1671,
        1714
      ],
      "op": "ADD",
      "path": "14"
    },
    "818": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1671,
        1714
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "819": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1671,
        1714
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x33C"
    },
    "822": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1671,
        1714
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "823": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1671,
        1714
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "824": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1671,
        1714
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x770"
    },
    "827": {
      "fn": "FlashSwap.uniswapV2Call",
      "jump": "i",
      "offset": [
        1671,
        1714
      ],
      "op": "JUMP",
      "path": "14"
    },
    "828": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1671,
        1714
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "829": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1671,
        1714
      ],
      "op": "POP",
      "path": "14"
    },
    "830": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1098,
        1721
      ],
      "op": "POP",
      "path": "14"
    },
    "831": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        1098,
        1721
      ],
      "op": "POP",
      "path": "14"
    },
    "832": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        963,
        1721
      ],
      "op": "POP",
      "path": "14"
    },
    "833": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        963,
        1721
      ],
      "op": "POP",
      "path": "14"
    },
    "834": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        963,
        1721
      ],
      "op": "POP",
      "path": "14"
    },
    "835": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        963,
        1721
      ],
      "op": "POP",
      "path": "14"
    },
    "836": {
      "fn": "FlashSwap.uniswapV2Call",
      "offset": [
        963,
        1721
      ],
      "op": "POP",
      "path": "14"
    },
    "837": {
      "fn": "FlashSwap.uniswapV2Call",
      "jump": "o",
      "offset": [
        963,
        1721
      ],
      "op": "JUMP",
      "path": "14"
    },
    "838": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        481,
        957
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "839": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        559,
        659
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 10,
      "value": "0x38E"
    },
    "842": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        559,
        659
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "844": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        559,
        659
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "845": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        559,
        659
      ],
      "op": "DUP1",
      "path": "14"
    },
    "846": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        559,
        659
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x60"
    },
    "848": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        559,
        659
      ],
      "op": "ADD",
      "path": "14"
    },
    "849": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        559,
        659
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "851": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        559,
        659
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "852": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        559,
        659
      ],
      "op": "DUP1",
      "path": "14"
    },
    "853": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        559,
        659
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x2C"
    },
    "855": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        559,
        659
      ],
      "op": "DUP2",
      "path": "14"
    },
    "856": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        559,
        659
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "857": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        559,
        659
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "859": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        559,
        659
      ],
      "op": "ADD",
      "path": "14"
    },
    "860": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        559,
        659
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x851"
    },
    "863": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        559,
        659
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x2C"
    },
    "865": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        559,
        659
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "866": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        559,
        659
      ],
      "op": "CODECOPY",
      "path": "14"
    },
    "867": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        619,
        658
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "869": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        619,
        658
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "870": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "875": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "877": {
      "op": "SHL"
    },
    "878": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        619,
        658
      ],
      "op": "DUP2",
      "path": "14"
    },
    "879": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        619,
        658
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "880": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        652,
        656
      ],
      "op": "ADDRESS",
      "path": "14"
    },
    "881": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        619,
        658
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "883": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        619,
        658
      ],
      "op": "DUP3",
      "path": "14"
    },
    "884": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        619,
        658
      ],
      "op": "ADD",
      "path": "14"
    },
    "885": {
      "op": "MSTORE"
    },
    "886": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "888": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "890": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "892": {
      "op": "SHL"
    },
    "893": {
      "op": "SUB"
    },
    "894": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        619,
        643
      ],
      "op": "DUP6",
      "path": "14"
    },
    "895": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        619,
        643
      ],
      "op": "AND",
      "path": "14"
    },
    "896": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        619,
        643
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "897": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        619,
        643
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x70A08231"
    },
    "902": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        619,
        643
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "903": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "905": {
      "op": "ADD"
    },
    "906": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        619,
        658
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x135"
    },
    "909": {
      "op": "JUMP"
    },
    "910": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        559,
        659
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "911": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        670,
        675
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 11,
      "value": "0x1"
    },
    "913": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        670,
        684
      ],
      "op": "DUP1",
      "path": "14"
    },
    "914": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        670,
        684
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "915": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "917": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "919": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "921": {
      "op": "SHL"
    },
    "922": {
      "op": "SUB"
    },
    "923": {
      "op": "NOT"
    },
    "924": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        670,
        684
      ],
      "op": "AND",
      "path": "14"
    },
    "925": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "927": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "929": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "931": {
      "op": "SHL"
    },
    "932": {
      "op": "SUB"
    },
    "933": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        670,
        684
      ],
      "op": "DUP5",
      "path": "14"
    },
    "934": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        670,
        684
      ],
      "op": "DUP2",
      "path": "14"
    },
    "935": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        670,
        684
      ],
      "op": "AND",
      "path": "14"
    },
    "936": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        670,
        684
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "937": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        670,
        684
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "938": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        670,
        684
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "939": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        670,
        684
      ],
      "op": "OR",
      "path": "14"
    },
    "940": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        670,
        684
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "941": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        670,
        684
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "942": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        670,
        684
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "943": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "945": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        708,
        712
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "946": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        708,
        721
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "948": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        708,
        721
      ],
      "op": "DUP1",
      "path": "14"
    },
    "949": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        708,
        721
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "950": {
      "op": "PUSH4",
      "value": "0xDFE1681"
    },
    "955": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "957": {
      "op": "SHL"
    },
    "958": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        708,
        721
      ],
      "op": "DUP2",
      "path": "14"
    },
    "959": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        708,
        721
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "960": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        708,
        721
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "961": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        708,
        721
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "962": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        708,
        712
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "963": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        708,
        712
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "964": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        708,
        712
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "965": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        708,
        712
      ],
      "op": "AND",
      "path": "14"
    },
    "966": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        708,
        712
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "967": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        708,
        719
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xDFE1681"
    },
    "972": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        708,
        719
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "973": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        708,
        721
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "975": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        708,
        721
      ],
      "op": "DUP1",
      "path": "14"
    },
    "976": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        708,
        721
      ],
      "op": "DUP4",
      "path": "14"
    },
    "977": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        708,
        721
      ],
      "op": "ADD",
      "path": "14"
    },
    "978": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        708,
        721
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "979": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        708,
        721
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "981": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        708,
        721
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "982": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        708,
        721
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "983": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        708,
        721
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "984": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        708,
        721
      ],
      "op": "DUP3",
      "path": "14"
    },
    "985": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        708,
        721
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "986": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        708,
        721
      ],
      "op": "SUB",
      "path": "14"
    },
    "987": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        708,
        721
      ],
      "op": "ADD",
      "path": "14"
    },
    "988": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        708,
        721
      ],
      "op": "DUP2",
      "path": "14"
    },
    "989": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        708,
        712
      ],
      "op": "DUP7",
      "path": "14"
    },
    "990": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        708,
        721
      ],
      "op": "GAS",
      "path": "14"
    },
    "991": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        708,
        721
      ],
      "op": "STATICCALL",
      "path": "14"
    },
    "992": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        708,
        721
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "993": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        708,
        721
      ],
      "op": "DUP1",
      "path": "14"
    },
    "994": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        708,
        721
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "995": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        708,
        721
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x3F0"
    },
    "998": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        708,
        721
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "999": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        708,
        721
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "1000": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        708,
        721
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1002": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        708,
        721
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1003": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        708,
        721
      ],
      "op": "RETURNDATACOPY",
      "path": "14"
    },
    "1004": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        708,
        721
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "1005": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        708,
        721
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1007": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        708,
        721
      ],
      "op": "REVERT",
      "path": "14"
    },
    "1008": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        708,
        721
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1009": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        708,
        721
      ],
      "op": "POP",
      "path": "14"
    },
    "1010": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        708,
        721
      ],
      "op": "POP",
      "path": "14"
    },
    "1011": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        708,
        721
      ],
      "op": "POP",
      "path": "14"
    },
    "1012": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        708,
        721
      ],
      "op": "POP",
      "path": "14"
    },
    "1013": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        708,
        721
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1015": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        708,
        721
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1016": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        708,
        721
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "1017": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        708,
        721
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1F"
    },
    "1019": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        708,
        721
      ],
      "op": "NOT",
      "path": "14"
    },
    "1020": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        708,
        721
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1F"
    },
    "1022": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        708,
        721
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1023": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        708,
        721
      ],
      "op": "ADD",
      "path": "14"
    },
    "1024": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        708,
        721
      ],
      "op": "AND",
      "path": "14"
    },
    "1025": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        708,
        721
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1026": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        708,
        721
      ],
      "op": "ADD",
      "path": "14"
    },
    "1027": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        708,
        721
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1028": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        708,
        721
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1030": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        708,
        721
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1031": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        708,
        721
      ],
      "op": "POP",
      "path": "14"
    },
    "1032": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        708,
        721
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1033": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        708,
        721
      ],
      "op": "ADD",
      "path": "14"
    },
    "1034": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        708,
        721
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1035": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        708,
        721
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x414"
    },
    "1038": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        708,
        721
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1039": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        708,
        721
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1040": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        708,
        721
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x6E4"
    },
    "1043": {
      "fn": "FlashSwap.executeFlashSwap",
      "jump": "i",
      "offset": [
        708,
        721
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1044": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        708,
        721
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1045": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1047": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1049": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1051": {
      "op": "SHL"
    },
    "1052": {
      "op": "SUB"
    },
    "1053": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        698,
        721
      ],
      "op": "AND",
      "path": "14"
    },
    "1054": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        698,
        704
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1055": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1057": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1059": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1061": {
      "op": "SHL"
    },
    "1062": {
      "op": "SUB"
    },
    "1063": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        698,
        721
      ],
      "op": "AND",
      "path": "14"
    },
    "1064": {
      "branch": 19,
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        698,
        721
      ],
      "op": "SUB",
      "path": "14"
    },
    "1065": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        695,
        950
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x495"
    },
    "1068": {
      "branch": 19,
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        695,
        950
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1069": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        736,
        740
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 12,
      "value": "0x0"
    },
    "1071": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        736,
        740
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1072": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        736,
        740
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1073": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        736,
        782
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1075": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        736,
        782
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1076": {
      "op": "PUSH4",
      "value": "0x22C0D9F"
    },
    "1081": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1083": {
      "op": "SHL"
    },
    "1084": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        736,
        782
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1085": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        736,
        782
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1086": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1088": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1090": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1092": {
      "op": "SHL"
    },
    "1093": {
      "op": "SUB"
    },
    "1094": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        736,
        740
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1095": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        736,
        740
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1096": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        736,
        740
      ],
      "op": "AND",
      "path": "14"
    },
    "1097": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        736,
        740
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1098": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        736,
        745
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x22C0D9F"
    },
    "1103": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        736,
        745
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1104": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        736,
        782
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x45F"
    },
    "1107": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        736,
        782
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1108": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        746,
        753
      ],
      "op": "DUP6",
      "path": "14"
    },
    "1109": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        746,
        753
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1110": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        766,
        770
      ],
      "op": "ADDRESS",
      "path": "14"
    },
    "1111": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        766,
        770
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1112": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        736,
        782
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "1114": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        736,
        782
      ],
      "op": "ADD",
      "path": "14"
    },
    "1115": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        736,
        782
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x792"
    },
    "1118": {
      "fn": "FlashSwap.executeFlashSwap",
      "jump": "i",
      "offset": [
        736,
        782
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1119": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        736,
        782
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1120": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        736,
        782
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1122": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        736,
        782
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1124": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        736,
        782
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1125": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        736,
        782
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1126": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        736,
        782
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1127": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        736,
        782
      ],
      "op": "SUB",
      "path": "14"
    },
    "1128": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        736,
        782
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1129": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        736,
        782
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1131": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        736,
        782
      ],
      "op": "DUP8",
      "path": "14"
    },
    "1132": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        736,
        782
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1133": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        736,
        782
      ],
      "op": "EXTCODESIZE",
      "path": "14"
    },
    "1134": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        736,
        782
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1135": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        736,
        782
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1136": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        736,
        782
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1137": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        736,
        782
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x479"
    },
    "1140": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        736,
        782
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1141": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        736,
        782
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1143": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        736,
        782
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1144": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        736,
        782
      ],
      "op": "REVERT",
      "path": "14"
    },
    "1145": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        736,
        782
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1146": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        736,
        782
      ],
      "op": "POP",
      "path": "14"
    },
    "1147": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        736,
        782
      ],
      "op": "GAS",
      "path": "14"
    },
    "1148": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        736,
        782
      ],
      "op": "CALL",
      "path": "14"
    },
    "1149": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        736,
        782
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1150": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        736,
        782
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1151": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        736,
        782
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1152": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        736,
        782
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x48D"
    },
    "1155": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        736,
        782
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1156": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        736,
        782
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "1157": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        736,
        782
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1159": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        736,
        782
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1160": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        736,
        782
      ],
      "op": "RETURNDATACOPY",
      "path": "14"
    },
    "1161": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        736,
        782
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "1162": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        736,
        782
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1164": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        736,
        782
      ],
      "op": "REVERT",
      "path": "14"
    },
    "1165": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        736,
        782
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1166": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        736,
        782
      ],
      "op": "POP",
      "path": "14"
    },
    "1167": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        736,
        782
      ],
      "op": "POP",
      "path": "14"
    },
    "1168": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        736,
        782
      ],
      "op": "POP",
      "path": "14"
    },
    "1169": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        736,
        782
      ],
      "op": "POP",
      "path": "14"
    },
    "1170": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        481,
        957
      ],
      "op": "POP",
      "path": "14"
    },
    "1171": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        481,
        957
      ],
      "op": "POP",
      "path": "14"
    },
    "1172": {
      "fn": "FlashSwap.executeFlashSwap",
      "jump": "o",
      "offset": [
        481,
        957
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1173": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        695,
        950
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1174": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        812,
        816
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1176": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        812,
        816
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1177": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        812,
        816
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1178": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        812,
        816
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1179": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        812,
        816
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x100"
    },
    "1182": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        812,
        816
      ],
      "op": "EXP",
      "path": "14"
    },
    "1183": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        812,
        816
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1184": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        812,
        816
      ],
      "op": "DIV",
      "path": "14"
    },
    "1185": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1187": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1189": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1191": {
      "op": "SHL"
    },
    "1192": {
      "op": "SUB"
    },
    "1193": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        812,
        816
      ],
      "op": "AND",
      "path": "14"
    },
    "1194": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1196": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1198": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1200": {
      "op": "SHL"
    },
    "1201": {
      "op": "SUB"
    },
    "1202": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        812,
        823
      ],
      "op": "AND",
      "path": "14"
    },
    "1203": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        812,
        823
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xD21220A7"
    },
    "1208": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        812,
        825
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1210": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        812,
        825
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1211": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        812,
        825
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1212": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        812,
        825
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xFFFFFFFF"
    },
    "1217": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        812,
        825
      ],
      "op": "AND",
      "path": "14"
    },
    "1218": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        812,
        825
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE0"
    },
    "1220": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        812,
        825
      ],
      "op": "SHL",
      "path": "14"
    },
    "1221": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        812,
        825
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1222": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        812,
        825
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1223": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        812,
        825
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "1225": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        812,
        825
      ],
      "op": "ADD",
      "path": "14"
    },
    "1226": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        812,
        825
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1228": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        812,
        825
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1230": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        812,
        825
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1231": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        812,
        825
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1232": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        812,
        825
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1233": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        812,
        825
      ],
      "op": "SUB",
      "path": "14"
    },
    "1234": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        812,
        825
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1235": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        812,
        825
      ],
      "op": "DUP7",
      "path": "14"
    },
    "1236": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        812,
        825
      ],
      "op": "GAS",
      "path": "14"
    },
    "1237": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        812,
        825
      ],
      "op": "STATICCALL",
      "path": "14"
    },
    "1238": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        812,
        825
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1239": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        812,
        825
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1240": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        812,
        825
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1241": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        812,
        825
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x4E6"
    },
    "1244": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        812,
        825
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1245": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        812,
        825
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "1246": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        812,
        825
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1248": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        812,
        825
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1249": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        812,
        825
      ],
      "op": "RETURNDATACOPY",
      "path": "14"
    },
    "1250": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        812,
        825
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "1251": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        812,
        825
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1253": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        812,
        825
      ],
      "op": "REVERT",
      "path": "14"
    },
    "1254": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        812,
        825
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1255": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        812,
        825
      ],
      "op": "POP",
      "path": "14"
    },
    "1256": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        812,
        825
      ],
      "op": "POP",
      "path": "14"
    },
    "1257": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        812,
        825
      ],
      "op": "POP",
      "path": "14"
    },
    "1258": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        812,
        825
      ],
      "op": "POP",
      "path": "14"
    },
    "1259": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        812,
        825
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1261": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        812,
        825
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1262": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        812,
        825
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "1263": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        812,
        825
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1F"
    },
    "1265": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        812,
        825
      ],
      "op": "NOT",
      "path": "14"
    },
    "1266": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        812,
        825
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1F"
    },
    "1268": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        812,
        825
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1269": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        812,
        825
      ],
      "op": "ADD",
      "path": "14"
    },
    "1270": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        812,
        825
      ],
      "op": "AND",
      "path": "14"
    },
    "1271": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        812,
        825
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1272": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        812,
        825
      ],
      "op": "ADD",
      "path": "14"
    },
    "1273": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        812,
        825
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1274": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        812,
        825
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1276": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        812,
        825
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1277": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        812,
        825
      ],
      "op": "POP",
      "path": "14"
    },
    "1278": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        812,
        825
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1279": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        812,
        825
      ],
      "op": "ADD",
      "path": "14"
    },
    "1280": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        812,
        825
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1281": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        812,
        825
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x50A"
    },
    "1284": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        812,
        825
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1285": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        812,
        825
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1286": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        812,
        825
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x6E4"
    },
    "1289": {
      "fn": "FlashSwap.executeFlashSwap",
      "jump": "i",
      "offset": [
        812,
        825
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1290": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        812,
        825
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1291": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1293": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1295": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1297": {
      "op": "SHL"
    },
    "1298": {
      "op": "SUB"
    },
    "1299": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        802,
        825
      ],
      "op": "AND",
      "path": "14"
    },
    "1300": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        802,
        808
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1301": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1303": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1305": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1307": {
      "op": "SHL"
    },
    "1308": {
      "op": "SUB"
    },
    "1309": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        802,
        825
      ],
      "op": "AND",
      "path": "14"
    },
    "1310": {
      "branch": 20,
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        802,
        825
      ],
      "op": "SUB",
      "path": "14"
    },
    "1311": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        799,
        950
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x556"
    },
    "1314": {
      "branch": 20,
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        799,
        950
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1315": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        841,
        845
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 13,
      "value": "0x0"
    },
    "1317": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        841,
        845
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1318": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        841,
        845
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1319": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        841,
        887
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1321": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        841,
        887
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1322": {
      "op": "PUSH4",
      "value": "0x22C0D9F"
    },
    "1327": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1329": {
      "op": "SHL"
    },
    "1330": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        841,
        887
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1331": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        841,
        887
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1332": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1334": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1336": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1338": {
      "op": "SHL"
    },
    "1339": {
      "op": "SUB"
    },
    "1340": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        841,
        845
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1341": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        841,
        845
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1342": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        841,
        845
      ],
      "op": "AND",
      "path": "14"
    },
    "1343": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        841,
        845
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1344": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        841,
        850
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x22C0D9F"
    },
    "1349": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        841,
        850
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1350": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        841,
        887
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x45F"
    },
    "1353": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        841,
        887
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1354": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        841,
        845
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1355": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        854,
        861
      ],
      "op": "DUP6",
      "path": "14"
    },
    "1356": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        854,
        861
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1357": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        871,
        875
      ],
      "op": "ADDRESS",
      "path": "14"
    },
    "1358": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        871,
        875
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1359": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        841,
        887
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "1361": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        841,
        887
      ],
      "op": "ADD",
      "path": "14"
    },
    "1362": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        841,
        887
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x792"
    },
    "1365": {
      "fn": "FlashSwap.executeFlashSwap",
      "jump": "i",
      "offset": [
        841,
        887
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1366": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        799,
        950
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1367": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        918,
        939
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 14,
      "value": "0x40"
    },
    "1369": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        918,
        939
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1370": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1374": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1376": {
      "op": "SHL"
    },
    "1377": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        918,
        939
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1378": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        918,
        939
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1379": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1381": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        918,
        939
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "1383": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        918,
        939
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1384": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        918,
        939
      ],
      "op": "ADD",
      "path": "14"
    },
    "1385": {
      "op": "MSTORE"
    },
    "1386": {
      "op": "PUSH1",
      "value": "0xB"
    },
    "1388": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1390": {
      "op": "DUP3"
    },
    "1391": {
      "op": "ADD"
    },
    "1392": {
      "op": "MSTORE"
    },
    "1393": {
      "op": "PUSH11",
      "value": "0x2BB937B733902A37B5B2B7"
    },
    "1405": {
      "op": "PUSH1",
      "value": "0xA9"
    },
    "1407": {
      "op": "SHL"
    },
    "1408": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1410": {
      "op": "DUP3"
    },
    "1411": {
      "op": "ADD"
    },
    "1412": {
      "op": "MSTORE"
    },
    "1413": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1415": {
      "op": "ADD"
    },
    "1416": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        918,
        939
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xA4"
    },
    "1419": {
      "op": "JUMP"
    },
    "1420": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        799,
        950
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1421": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        481,
        957
      ],
      "op": "POP",
      "path": "14"
    },
    "1422": {
      "fn": "FlashSwap.executeFlashSwap",
      "offset": [
        481,
        957
      ],
      "op": "POP",
      "path": "14"
    },
    "1423": {
      "fn": "FlashSwap.executeFlashSwap",
      "jump": "o",
      "offset": [
        481,
        957
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1424": {
      "fn": "console.log",
      "offset": [
        5936,
        6072
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1425": {
      "fn": "console.log",
      "offset": [
        5997,
        6068
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 15,
      "value": "0x58C"
    },
    "1428": {
      "fn": "console.log",
      "offset": [
        6060,
        6062
      ],
      "op": "DUP3",
      "path": "20"
    },
    "1429": {
      "fn": "console.log",
      "offset": [
        6064,
        6066
      ],
      "op": "DUP3",
      "path": "20"
    },
    "1430": {
      "fn": "console.log",
      "offset": [
        6013,
        6067
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "1432": {
      "fn": "console.log",
      "offset": [
        6013,
        6067
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "1433": {
      "fn": "console.log",
      "offset": [
        6013,
        6067
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x24"
    },
    "1435": {
      "fn": "console.log",
      "offset": [
        6013,
        6067
      ],
      "op": "ADD",
      "path": "20"
    },
    "1436": {
      "fn": "console.log",
      "offset": [
        6013,
        6067
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x5A6"
    },
    "1439": {
      "fn": "console.log",
      "offset": [
        6013,
        6067
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "1440": {
      "fn": "console.log",
      "offset": [
        6013,
        6067
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "1441": {
      "fn": "console.log",
      "offset": [
        6013,
        6067
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1442": {
      "fn": "console.log",
      "offset": [
        6013,
        6067
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x7CF"
    },
    "1445": {
      "fn": "console.log",
      "jump": "i",
      "offset": [
        6013,
        6067
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1446": {
      "fn": "console.log",
      "offset": [
        6013,
        6067
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1447": {
      "fn": "console.log",
      "offset": [
        6013,
        6067
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "1449": {
      "fn": "console.log",
      "offset": [
        6013,
        6067
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1450": {
      "fn": "console.log",
      "offset": [
        6013,
        6067
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "1451": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1453": {
      "op": "NOT"
    },
    "1454": {
      "fn": "console.log",
      "offset": [
        6013,
        6067
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1455": {
      "fn": "console.log",
      "offset": [
        6013,
        6067
      ],
      "op": "DUP5",
      "path": "20"
    },
    "1456": {
      "fn": "console.log",
      "offset": [
        6013,
        6067
      ],
      "op": "SUB",
      "path": "20"
    },
    "1457": {
      "fn": "console.log",
      "offset": [
        6013,
        6067
      ],
      "op": "ADD",
      "path": "20"
    },
    "1458": {
      "fn": "console.log",
      "offset": [
        6013,
        6067
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1459": {
      "fn": "console.log",
      "offset": [
        6013,
        6067
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1460": {
      "fn": "console.log",
      "offset": [
        6013,
        6067
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "1461": {
      "fn": "console.log",
      "offset": [
        6013,
        6067
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1462": {
      "fn": "console.log",
      "offset": [
        6013,
        6067
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1463": {
      "fn": "console.log",
      "offset": [
        6013,
        6067
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "1465": {
      "fn": "console.log",
      "offset": [
        6013,
        6067
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1466": {
      "fn": "console.log",
      "offset": [
        6013,
        6067
      ],
      "op": "ADD",
      "path": "20"
    },
    "1467": {
      "fn": "console.log",
      "offset": [
        6013,
        6067
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1468": {
      "fn": "console.log",
      "offset": [
        6013,
        6067
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "1469": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1471": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1473": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1475": {
      "op": "SHL"
    },
    "1476": {
      "op": "SUB"
    },
    "1477": {
      "fn": "console.log",
      "offset": [
        6013,
        6067
      ],
      "op": "AND",
      "path": "20"
    },
    "1478": {
      "op": "PUSH4",
      "value": "0x2D839CB3"
    },
    "1483": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "1485": {
      "op": "SHL"
    },
    "1486": {
      "fn": "console.log",
      "offset": [
        6013,
        6067
      ],
      "op": "OR",
      "path": "20"
    },
    "1487": {
      "fn": "console.log",
      "offset": [
        6013,
        6067
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1488": {
      "fn": "console.log",
      "offset": [
        6013,
        6067
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1489": {
      "fn": "console._sendLogPayload",
      "offset": [
        264,
        278
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1490": {
      "fn": "console._sendLogPayload",
      "offset": [
        264,
        278
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "1491": {
      "offset": [
        129,
        171
      ],
      "op": "PUSH11",
      "path": "20",
      "value": "0x636F6E736F6C652E6C6F67"
    },
    "1503": {
      "fn": "console._sendLogPayload",
      "offset": [
        373,
        375
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "1505": {
      "fn": "console._sendLogPayload",
      "offset": [
        360,
        376
      ],
      "op": "DUP4",
      "path": "20"
    },
    "1506": {
      "fn": "console._sendLogPayload",
      "offset": [
        360,
        376
      ],
      "op": "ADD",
      "path": "20"
    },
    "1507": {
      "fn": "console._sendLogPayload",
      "offset": [
        240,
        261
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1509": {
      "fn": "console._sendLogPayload",
      "offset": [
        240,
        261
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1510": {
      "fn": "console._sendLogPayload",
      "offset": [
        264,
        278
      ],
      "op": "DUP5",
      "path": "20"
    },
    "1511": {
      "fn": "console._sendLogPayload",
      "offset": [
        360,
        376
      ],
      "op": "DUP4",
      "path": "20"
    },
    "1512": {
      "offset": [
        129,
        171
      ],
      "op": "DUP6",
      "path": "20"
    },
    "1513": {
      "fn": "console._sendLogPayload",
      "offset": [
        400,
        405
      ],
      "op": "GAS",
      "path": "20"
    },
    "1514": {
      "fn": "console._sendLogPayload",
      "offset": [
        389,
        457
      ],
      "op": "STATICCALL",
      "path": "20"
    },
    "1515": {
      "fn": "console._sendLogPayload",
      "offset": [
        380,
        457
      ],
      "op": "POP",
      "path": "20"
    },
    "1516": {
      "fn": "console._sendLogPayload",
      "offset": [
        380,
        457
      ],
      "op": "POP",
      "path": "20"
    },
    "1517": {
      "fn": "console._sendLogPayload",
      "offset": [
        335,
        461
      ],
      "op": "POP",
      "path": "20"
    },
    "1518": {
      "fn": "console._sendLogPayload",
      "offset": [
        335,
        461
      ],
      "op": "POP",
      "path": "20"
    },
    "1519": {
      "fn": "console._sendLogPayload",
      "offset": [
        176,
        464
      ],
      "op": "POP",
      "path": "20"
    },
    "1520": {
      "fn": "console._sendLogPayload",
      "jump": "o",
      "offset": [
        176,
        464
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1521": {
      "op": "JUMPDEST"
    },
    "1522": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1524": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1526": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1528": {
      "op": "SHL"
    },
    "1529": {
      "op": "SUB"
    },
    "1530": {
      "op": "DUP2"
    },
    "1531": {
      "op": "AND"
    },
    "1532": {
      "op": "DUP2"
    },
    "1533": {
      "op": "EQ"
    },
    "1534": {
      "op": "PUSH2",
      "value": "0x606"
    },
    "1537": {
      "op": "JUMPI"
    },
    "1538": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1540": {
      "op": "DUP1"
    },
    "1541": {
      "op": "REVERT"
    },
    "1542": {
      "op": "JUMPDEST"
    },
    "1543": {
      "op": "POP"
    },
    "1544": {
      "jump": "o",
      "op": "JUMP"
    },
    "1545": {
      "op": "JUMPDEST"
    },
    "1546": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1548": {
      "op": "DUP1"
    },
    "1549": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1551": {
      "op": "DUP1"
    },
    "1552": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1554": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1556": {
      "op": "DUP7"
    },
    "1557": {
      "op": "DUP9"
    },
    "1558": {
      "op": "SUB"
    },
    "1559": {
      "op": "SLT"
    },
    "1560": {
      "op": "ISZERO"
    },
    "1561": {
      "op": "PUSH2",
      "value": "0x621"
    },
    "1564": {
      "op": "JUMPI"
    },
    "1565": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1567": {
      "op": "DUP1"
    },
    "1568": {
      "op": "REVERT"
    },
    "1569": {
      "op": "JUMPDEST"
    },
    "1570": {
      "op": "DUP6"
    },
    "1571": {
      "op": "CALLDATALOAD"
    },
    "1572": {
      "op": "PUSH2",
      "value": "0x62C"
    },
    "1575": {
      "op": "DUP2"
    },
    "1576": {
      "op": "PUSH2",
      "value": "0x5F1"
    },
    "1579": {
      "jump": "i",
      "op": "JUMP"
    },
    "1580": {
      "op": "JUMPDEST"
    },
    "1581": {
      "op": "SWAP5"
    },
    "1582": {
      "op": "POP"
    },
    "1583": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1585": {
      "op": "DUP7"
    },
    "1586": {
      "op": "ADD"
    },
    "1587": {
      "op": "CALLDATALOAD"
    },
    "1588": {
      "op": "SWAP4"
    },
    "1589": {
      "op": "POP"
    },
    "1590": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1592": {
      "op": "DUP7"
    },
    "1593": {
      "op": "ADD"
    },
    "1594": {
      "op": "CALLDATALOAD"
    },
    "1595": {
      "op": "SWAP3"
    },
    "1596": {
      "op": "POP"
    },
    "1597": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1599": {
      "op": "DUP7"
    },
    "1600": {
      "op": "ADD"
    },
    "1601": {
      "op": "CALLDATALOAD"
    },
    "1602": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1611": {
      "op": "DUP1"
    },
    "1612": {
      "op": "DUP3"
    },
    "1613": {
      "op": "GT"
    },
    "1614": {
      "op": "ISZERO"
    },
    "1615": {
      "op": "PUSH2",
      "value": "0x657"
    },
    "1618": {
      "op": "JUMPI"
    },
    "1619": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1621": {
      "op": "DUP1"
    },
    "1622": {
      "op": "REVERT"
    },
    "1623": {
      "op": "JUMPDEST"
    },
    "1624": {
      "op": "DUP2"
    },
    "1625": {
      "op": "DUP9"
    },
    "1626": {
      "op": "ADD"
    },
    "1627": {
      "op": "SWAP2"
    },
    "1628": {
      "op": "POP"
    },
    "1629": {
      "op": "DUP9"
    },
    "1630": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1632": {
      "op": "DUP4"
    },
    "1633": {
      "op": "ADD"
    },
    "1634": {
      "op": "SLT"
    },
    "1635": {
      "op": "PUSH2",
      "value": "0x66B"
    },
    "1638": {
      "op": "JUMPI"
    },
    "1639": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1641": {
      "op": "DUP1"
    },
    "1642": {
      "op": "REVERT"
    },
    "1643": {
      "op": "JUMPDEST"
    },
    "1644": {
      "op": "DUP2"
    },
    "1645": {
      "op": "CALLDATALOAD"
    },
    "1646": {
      "op": "DUP2"
    },
    "1647": {
      "op": "DUP2"
    },
    "1648": {
      "op": "GT"
    },
    "1649": {
      "op": "ISZERO"
    },
    "1650": {
      "op": "PUSH2",
      "value": "0x67A"
    },
    "1653": {
      "op": "JUMPI"
    },
    "1654": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1656": {
      "op": "DUP1"
    },
    "1657": {
      "op": "REVERT"
    },
    "1658": {
      "op": "JUMPDEST"
    },
    "1659": {
      "op": "DUP10"
    },
    "1660": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1662": {
      "op": "DUP3"
    },
    "1663": {
      "op": "DUP6"
    },
    "1664": {
      "op": "ADD"
    },
    "1665": {
      "op": "ADD"
    },
    "1666": {
      "op": "GT"
    },
    "1667": {
      "op": "ISZERO"
    },
    "1668": {
      "op": "PUSH2",
      "value": "0x68C"
    },
    "1671": {
      "op": "JUMPI"
    },
    "1672": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1674": {
      "op": "DUP1"
    },
    "1675": {
      "op": "REVERT"
    },
    "1676": {
      "op": "JUMPDEST"
    },
    "1677": {
      "op": "SWAP7"
    },
    "1678": {
      "op": "SWAP10"
    },
    "1679": {
      "op": "SWAP6"
    },
    "1680": {
      "op": "SWAP9"
    },
    "1681": {
      "op": "POP"
    },
    "1682": {
      "op": "SWAP4"
    },
    "1683": {
      "op": "SWAP7"
    },
    "1684": {
      "op": "POP"
    },
    "1685": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1687": {
      "op": "ADD"
    },
    "1688": {
      "op": "SWAP5"
    },
    "1689": {
      "op": "SWAP4"
    },
    "1690": {
      "op": "SWAP3"
    },
    "1691": {
      "op": "POP"
    },
    "1692": {
      "op": "POP"
    },
    "1693": {
      "op": "POP"
    },
    "1694": {
      "jump": "o",
      "op": "JUMP"
    },
    "1695": {
      "op": "JUMPDEST"
    },
    "1696": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1698": {
      "op": "DUP1"
    },
    "1699": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1701": {
      "op": "DUP4"
    },
    "1702": {
      "op": "DUP6"
    },
    "1703": {
      "op": "SUB"
    },
    "1704": {
      "op": "SLT"
    },
    "1705": {
      "op": "ISZERO"
    },
    "1706": {
      "op": "PUSH2",
      "value": "0x6B2"
    },
    "1709": {
      "op": "JUMPI"
    },
    "1710": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1712": {
      "op": "DUP1"
    },
    "1713": {
      "op": "REVERT"
    },
    "1714": {
      "op": "JUMPDEST"
    },
    "1715": {
      "op": "DUP3"
    },
    "1716": {
      "op": "CALLDATALOAD"
    },
    "1717": {
      "op": "PUSH2",
      "value": "0x6BD"
    },
    "1720": {
      "op": "DUP2"
    },
    "1721": {
      "op": "PUSH2",
      "value": "0x5F1"
    },
    "1724": {
      "jump": "i",
      "op": "JUMP"
    },
    "1725": {
      "op": "JUMPDEST"
    },
    "1726": {
      "op": "SWAP5"
    },
    "1727": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1729": {
      "op": "SWAP4"
    },
    "1730": {
      "op": "SWAP1"
    },
    "1731": {
      "op": "SWAP4"
    },
    "1732": {
      "op": "ADD"
    },
    "1733": {
      "op": "CALLDATALOAD"
    },
    "1734": {
      "op": "SWAP4"
    },
    "1735": {
      "op": "POP"
    },
    "1736": {
      "op": "POP"
    },
    "1737": {
      "op": "POP"
    },
    "1738": {
      "jump": "o",
      "op": "JUMP"
    },
    "1739": {
      "op": "JUMPDEST"
    },
    "1740": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1742": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1744": {
      "op": "DUP3"
    },
    "1745": {
      "op": "DUP5"
    },
    "1746": {
      "op": "SUB"
    },
    "1747": {
      "op": "SLT"
    },
    "1748": {
      "op": "ISZERO"
    },
    "1749": {
      "op": "PUSH2",
      "value": "0x6DD"
    },
    "1752": {
      "op": "JUMPI"
    },
    "1753": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1755": {
      "op": "DUP1"
    },
    "1756": {
      "op": "REVERT"
    },
    "1757": {
      "op": "JUMPDEST"
    },
    "1758": {
      "op": "POP"
    },
    "1759": {
      "op": "MLOAD"
    },
    "1760": {
      "op": "SWAP2"
    },
    "1761": {
      "op": "SWAP1"
    },
    "1762": {
      "op": "POP"
    },
    "1763": {
      "jump": "o",
      "op": "JUMP"
    },
    "1764": {
      "op": "JUMPDEST"
    },
    "1765": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1767": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1769": {
      "op": "DUP3"
    },
    "1770": {
      "op": "DUP5"
    },
    "1771": {
      "op": "SUB"
    },
    "1772": {
      "op": "SLT"
    },
    "1773": {
      "op": "ISZERO"
    },
    "1774": {
      "op": "PUSH2",
      "value": "0x6F6"
    },
    "1777": {
      "op": "JUMPI"
    },
    "1778": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1780": {
      "op": "DUP1"
    },
    "1781": {
      "op": "REVERT"
    },
    "1782": {
      "op": "JUMPDEST"
    },
    "1783": {
      "op": "DUP2"
    },
    "1784": {
      "op": "MLOAD"
    },
    "1785": {
      "op": "PUSH2",
      "value": "0x701"
    },
    "1788": {
      "op": "DUP2"
    },
    "1789": {
      "op": "PUSH2",
      "value": "0x5F1"
    },
    "1792": {
      "jump": "i",
      "op": "JUMP"
    },
    "1793": {
      "op": "JUMPDEST"
    },
    "1794": {
      "op": "SWAP4"
    },
    "1795": {
      "op": "SWAP3"
    },
    "1796": {
      "op": "POP"
    },
    "1797": {
      "op": "POP"
    },
    "1798": {
      "op": "POP"
    },
    "1799": {
      "jump": "o",
      "op": "JUMP"
    },
    "1800": {
      "op": "JUMPDEST"
    },
    "1801": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1806": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1808": {
      "op": "SHL"
    },
    "1809": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1811": {
      "op": "MSTORE"
    },
    "1812": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "1814": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1816": {
      "op": "MSTORE"
    },
    "1817": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1819": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1821": {
      "op": "REVERT"
    },
    "1822": {
      "op": "JUMPDEST"
    },
    "1823": {
      "op": "DUP1"
    },
    "1824": {
      "op": "DUP3"
    },
    "1825": {
      "op": "MUL"
    },
    "1826": {
      "op": "DUP2"
    },
    "1827": {
      "op": "ISZERO"
    },
    "1828": {
      "op": "DUP3"
    },
    "1829": {
      "op": "DUP3"
    },
    "1830": {
      "op": "DIV"
    },
    "1831": {
      "op": "DUP5"
    },
    "1832": {
      "op": "EQ"
    },
    "1833": {
      "op": "OR"
    },
    "1834": {
      "op": "PUSH2",
      "value": "0x735"
    },
    "1837": {
      "op": "JUMPI"
    },
    "1838": {
      "op": "PUSH2",
      "value": "0x735"
    },
    "1841": {
      "op": "PUSH2",
      "value": "0x708"
    },
    "1844": {
      "jump": "i",
      "op": "JUMP"
    },
    "1845": {
      "op": "JUMPDEST"
    },
    "1846": {
      "op": "SWAP3"
    },
    "1847": {
      "op": "SWAP2"
    },
    "1848": {
      "op": "POP"
    },
    "1849": {
      "op": "POP"
    },
    "1850": {
      "jump": "o",
      "op": "JUMP"
    },
    "1851": {
      "op": "JUMPDEST"
    },
    "1852": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1854": {
      "op": "DUP3"
    },
    "1855": {
      "op": "PUSH2",
      "value": "0x758"
    },
    "1858": {
      "op": "JUMPI"
    },
    "1859": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1864": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1866": {
      "op": "SHL"
    },
    "1867": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1869": {
      "op": "MSTORE"
    },
    "1870": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "1872": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1874": {
      "op": "MSTORE"
    },
    "1875": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1877": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1879": {
      "op": "REVERT"
    },
    "1880": {
      "op": "JUMPDEST"
    },
    "1881": {
      "op": "POP"
    },
    "1882": {
      "op": "DIV"
    },
    "1883": {
      "op": "SWAP1"
    },
    "1884": {
      "jump": "o",
      "op": "JUMP"
    },
    "1885": {
      "op": "JUMPDEST"
    },
    "1886": {
      "op": "DUP1"
    },
    "1887": {
      "op": "DUP3"
    },
    "1888": {
      "op": "ADD"
    },
    "1889": {
      "op": "DUP1"
    },
    "1890": {
      "op": "DUP3"
    },
    "1891": {
      "op": "GT"
    },
    "1892": {
      "op": "ISZERO"
    },
    "1893": {
      "op": "PUSH2",
      "value": "0x735"
    },
    "1896": {
      "op": "JUMPI"
    },
    "1897": {
      "op": "PUSH2",
      "value": "0x735"
    },
    "1900": {
      "op": "PUSH2",
      "value": "0x708"
    },
    "1903": {
      "jump": "i",
      "op": "JUMP"
    },
    "1904": {
      "op": "JUMPDEST"
    },
    "1905": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1907": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1909": {
      "op": "DUP3"
    },
    "1910": {
      "op": "DUP5"
    },
    "1911": {
      "op": "SUB"
    },
    "1912": {
      "op": "SLT"
    },
    "1913": {
      "op": "ISZERO"
    },
    "1914": {
      "op": "PUSH2",
      "value": "0x782"
    },
    "1917": {
      "op": "JUMPI"
    },
    "1918": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1920": {
      "op": "DUP1"
    },
    "1921": {
      "op": "REVERT"
    },
    "1922": {
      "op": "JUMPDEST"
    },
    "1923": {
      "op": "DUP2"
    },
    "1924": {
      "op": "MLOAD"
    },
    "1925": {
      "op": "DUP1"
    },
    "1926": {
      "op": "ISZERO"
    },
    "1927": {
      "op": "ISZERO"
    },
    "1928": {
      "op": "DUP2"
    },
    "1929": {
      "op": "EQ"
    },
    "1930": {
      "op": "PUSH2",
      "value": "0x701"
    },
    "1933": {
      "op": "JUMPI"
    },
    "1934": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1936": {
      "op": "DUP1"
    },
    "1937": {
      "op": "REVERT"
    },
    "1938": {
      "op": "JUMPDEST"
    },
    "1939": {
      "op": "SWAP3"
    },
    "1940": {
      "op": "DUP4"
    },
    "1941": {
      "op": "MSTORE"
    },
    "1942": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1944": {
      "op": "DUP4"
    },
    "1945": {
      "op": "ADD"
    },
    "1946": {
      "op": "SWAP2"
    },
    "1947": {
      "op": "SWAP1"
    },
    "1948": {
      "op": "SWAP2"
    },
    "1949": {
      "op": "MSTORE"
    },
    "1950": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1952": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1954": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1956": {
      "op": "SHL"
    },
    "1957": {
      "op": "SUB"
    },
    "1958": {
      "op": "AND"
    },
    "1959": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1961": {
      "op": "DUP3"
    },
    "1962": {
      "op": "ADD"
    },
    "1963": {
      "op": "MSTORE"
    },
    "1964": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1966": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1968": {
      "op": "DUP3"
    },
    "1969": {
      "op": "ADD"
    },
    "1970": {
      "op": "DUP2"
    },
    "1971": {
      "op": "SWAP1"
    },
    "1972": {
      "op": "MSTORE"
    },
    "1973": {
      "op": "PUSH1",
      "value": "0x6"
    },
    "1975": {
      "op": "SWAP1"
    },
    "1976": {
      "op": "DUP3"
    },
    "1977": {
      "op": "ADD"
    },
    "1978": {
      "op": "MSTORE"
    },
    "1979": {
      "op": "PUSH6",
      "value": "0x307841414141"
    },
    "1986": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "1988": {
      "op": "SHL"
    },
    "1989": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1991": {
      "op": "DUP3"
    },
    "1992": {
      "op": "ADD"
    },
    "1993": {
      "op": "MSTORE"
    },
    "1994": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "1996": {
      "op": "ADD"
    },
    "1997": {
      "op": "SWAP1"
    },
    "1998": {
      "jump": "o",
      "op": "JUMP"
    },
    "1999": {
      "op": "JUMPDEST"
    },
    "2000": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2002": {
      "op": "DUP2"
    },
    "2003": {
      "op": "MSTORE"
    },
    "2004": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2006": {
      "op": "DUP4"
    },
    "2007": {
      "op": "MLOAD"
    },
    "2008": {
      "op": "DUP1"
    },
    "2009": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2011": {
      "op": "DUP5"
    },
    "2012": {
      "op": "ADD"
    },
    "2013": {
      "op": "MSTORE"
    },
    "2014": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2016": {
      "op": "JUMPDEST"
    },
    "2017": {
      "op": "DUP2"
    },
    "2018": {
      "op": "DUP2"
    },
    "2019": {
      "op": "LT"
    },
    "2020": {
      "op": "ISZERO"
    },
    "2021": {
      "op": "PUSH2",
      "value": "0x7FD"
    },
    "2024": {
      "op": "JUMPI"
    },
    "2025": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2027": {
      "op": "DUP2"
    },
    "2028": {
      "op": "DUP8"
    },
    "2029": {
      "op": "ADD"
    },
    "2030": {
      "op": "DUP2"
    },
    "2031": {
      "op": "ADD"
    },
    "2032": {
      "op": "MLOAD"
    },
    "2033": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2035": {
      "op": "DUP7"
    },
    "2036": {
      "op": "DUP5"
    },
    "2037": {
      "op": "ADD"
    },
    "2038": {
      "op": "ADD"
    },
    "2039": {
      "op": "MSTORE"
    },
    "2040": {
      "op": "ADD"
    },
    "2041": {
      "op": "PUSH2",
      "value": "0x7E0"
    },
    "2044": {
      "op": "JUMP"
    },
    "2045": {
      "op": "JUMPDEST"
    },
    "2046": {
      "op": "POP"
    },
    "2047": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2049": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2051": {
      "op": "DUP3"
    },
    "2052": {
      "op": "DUP6"
    },
    "2053": {
      "op": "ADD"
    },
    "2054": {
      "op": "ADD"
    },
    "2055": {
      "op": "MSTORE"
    },
    "2056": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2058": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2060": {
      "op": "NOT"
    },
    "2061": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2063": {
      "op": "DUP4"
    },
    "2064": {
      "op": "ADD"
    },
    "2065": {
      "op": "AND"
    },
    "2066": {
      "op": "DUP5"
    },
    "2067": {
      "op": "ADD"
    },
    "2068": {
      "op": "ADD"
    },
    "2069": {
      "op": "SWAP2"
    },
    "2070": {
      "op": "POP"
    },
    "2071": {
      "op": "POP"
    },
    "2072": {
      "op": "DUP3"
    },
    "2073": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2075": {
      "op": "DUP4"
    },
    "2076": {
      "op": "ADD"
    },
    "2077": {
      "op": "MSTORE"
    },
    "2078": {
      "op": "SWAP4"
    },
    "2079": {
      "op": "SWAP3"
    },
    "2080": {
      "op": "POP"
    },
    "2081": {
      "op": "POP"
    },
    "2082": {
      "op": "POP"
    },
    "2083": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "07cb63a7a3aa48aa9cc48b5cfcfb085c99fa6760",
  "source": "// SCH Course Copyright Policy (C): DO-NOT-SHARE-WITH-ANYONE\n// https://smartcontractshacking.com/#copyright-policy\npragma solidity ^0.8.13;\n\nimport \"../interfaces/IPair.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\nimport \"hardhat/console.sol\";\n\n/**\n * @title FlashSwap\n * @author JohnnyTime (https://smartcontractshacking.com)\n */\ncontract FlashSwap {\n\n    IPair pair;\n    address token;\n    constructor(address _pair) {\n        pair = IPair(_pair);\n    }\n\n    function executeFlashSwap(address _token, uint256 _amount) external {\n        console.log(\"Contract's token balance before flash swap: \", IERC20(_token).balanceOf(address(this)));\n\n        token = _token;\n\n        if(_token == pair.token0()){\n            pair.swap(_amount, 0, address(this), \"0xAAAA\");\n        } else if(_token == pair.token1()) {\n            pair.swap(0, _amount, address(this), \"0xAAAA\");\n        } else {\n            revert(\"Wrong Token\");\n        }\n\n    }\n\n    function uniswapV2Call(\n        address sender,\n        uint amount0,\n        uint amount1,\n        bytes calldata data\n    ) external {\n\n        require(msg.sender == address(pair), \"not pair\");\n        require(sender == address(this), \"error\");\n\n        console.log(\"Contract's token balance during Flash Swap: \", IERC20(token).balanceOf(address(this)));\n\n\n        uint256 fee;\n        uint256 owed;\n\n        if(pair.token0() == token){\n            fee = amount0 * 3 / 997 + 1;\n            owed = amount0 + fee;\n        } else {\n            fee = amount1 * 3 / 997 + 1;\n            owed = amount1 + fee;\n        }\n\n        console.log(\"FlashSwap fee: \", fee);\n        console.log(\"Owed: \", owed);\n\n        IERC20(token).transfer(address(pair), owed);\n    }\n}",
  "sourceMap": "351:1372:14:-:0;;;412:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;449:4;:19;;-1:-1:-1;;;;;;449:19:14;-1:-1:-1;;;;;449:19:14;;;;;;;;;;351:1372;;14:290:21;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:21;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:21:o;:::-;351:1372:14;;;;;;",
  "sourcePath": "contracts/flash-loans-3/FlashSwap.sol",
  "type": "contract"
}