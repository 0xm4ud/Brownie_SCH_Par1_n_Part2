{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "execute",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "getProposal",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "proposedAt",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "proposer",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "yes",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "no",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "processed",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastProposalId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "propose",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_treasury",
          "type": "address"
        }
      ],
      "name": "setTreasury",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "treasury",
      "outputs": [
        {
          "internalType": "contract ITheGridTreasury",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_proposalId",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_decision",
          "type": "bool"
        }
      ],
      "name": "vote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/Users/m4ud/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/access/Ownable.sol",
    "15": "/Users/m4ud/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/utils/Context.sol",
    "2": "/Users/m4ud/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/token/ERC20/ERC20.sol",
    "25": "contracts/dao-attack-2/TheGridDAO.sol",
    "3": "/Users/m4ud/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/token/ERC20/IERC20.sol",
    "6": "/Users/m4ud/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/token/ERC20/extensions/IERC20Metadata.sol"
  },
  "ast": {
    "absolutePath": "contracts/dao-attack-2/TheGridDAO.sol",
    "exportedSymbols": {
      "Context": [
        4643
      ],
      "ERC20": [
        2071
      ],
      "IERC20": [
        3218
      ],
      "IERC20Metadata": [
        4668
      ],
      "ITheGridTreasury": [
        239
      ],
      "Ownable": [
        1484
      ],
      "TheGridDAO": [
        560
      ]
    },
    "id": 561,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 229,
        "literals": [
          "solidity",
          "0.8",
          ".13"
        ],
        "nodeType": "PragmaDirective",
        "src": "116:23:25"
      },
      {
        "absolutePath": "/Users/m4ud/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 230,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 561,
        "sourceUnit": 1485,
        "src": "141:52:25",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/m4ud/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 231,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 561,
        "sourceUnit": 2072,
        "src": "194:55:25",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "ITheGridTreasury",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 239,
        "linearizedBaseContracts": [
          239
        ],
        "name": "ITheGridTreasury",
        "nameLocation": "261:16:25",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "functionSelector": "935f4c18",
            "id": 238,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "sendPayment",
            "nameLocation": "293:11:25",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 236,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 233,
                  "mutability": "mutable",
                  "name": "_receiver",
                  "nameLocation": "313:9:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 238,
                  "src": "305:17:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 232,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "305:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 235,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "329:7:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 238,
                  "src": "324:12:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 234,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "324:4:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "304:33:25"
            },
            "returnParameters": {
              "id": 237,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "346:0:25"
            },
            "scope": 239,
            "src": "284:63:25",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 561,
        "src": "251:98:25",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 241,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2071,
              "src": "461:5:25"
            },
            "id": 242,
            "nodeType": "InheritanceSpecifier",
            "src": "461:5:25"
          },
          {
            "baseName": {
              "id": 243,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1484,
              "src": "468:7:25"
            },
            "id": 244,
            "nodeType": "InheritanceSpecifier",
            "src": "468:7:25"
          }
        ],
        "canonicalName": "TheGridDAO",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 240,
          "nodeType": "StructuredDocumentation",
          "src": "351:86:25",
          "text": " @title TheGridDAO\n @author JohnnyTime (https://smartcontractshacking.com)"
        },
        "fullyImplemented": true,
        "id": 560,
        "linearizedBaseContracts": [
          560,
          1484,
          2071,
          4668,
          3218,
          4643
        ],
        "name": "TheGridDAO",
        "nameLocation": "447:10:25",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "TheGridDAO.Proposal",
            "id": 259,
            "members": [
              {
                "constant": false,
                "id": 246,
                "mutability": "mutable",
                "name": "proposedAt",
                "nameLocation": "517:10:25",
                "nodeType": "VariableDeclaration",
                "scope": 259,
                "src": "509:18:25",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 245,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "509:7:25",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 248,
                "mutability": "mutable",
                "name": "proposer",
                "nameLocation": "545:8:25",
                "nodeType": "VariableDeclaration",
                "scope": 259,
                "src": "537:16:25",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 247,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "537:7:25",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 250,
                "mutability": "mutable",
                "name": "to",
                "nameLocation": "571:2:25",
                "nodeType": "VariableDeclaration",
                "scope": 259,
                "src": "563:10:25",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 249,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "563:7:25",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 252,
                "mutability": "mutable",
                "name": "amount",
                "nameLocation": "609:6:25",
                "nodeType": "VariableDeclaration",
                "scope": 259,
                "src": "601:14:25",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 251,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "601:7:25",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 254,
                "mutability": "mutable",
                "name": "yes",
                "nameLocation": "646:3:25",
                "nodeType": "VariableDeclaration",
                "scope": 259,
                "src": "638:11:25",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 253,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "638:7:25",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 256,
                "mutability": "mutable",
                "name": "no",
                "nameLocation": "667:2:25",
                "nodeType": "VariableDeclaration",
                "scope": 259,
                "src": "659:10:25",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 255,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "659:7:25",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 258,
                "mutability": "mutable",
                "name": "processed",
                "nameLocation": "684:9:25",
                "nodeType": "VariableDeclaration",
                "scope": 259,
                "src": "679:14:25",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 257,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "679:4:25",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Proposal",
            "nameLocation": "490:8:25",
            "nodeType": "StructDefinition",
            "scope": 560,
            "src": "483:217:25",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c7f758a8",
            "id": 264,
            "mutability": "mutable",
            "name": "getProposal",
            "nameLocation": "739:11:25",
            "nodeType": "VariableDeclaration",
            "scope": 560,
            "src": "706:44:25",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$259_storage_$",
              "typeString": "mapping(uint256 => struct TheGridDAO.Proposal)"
            },
            "typeName": {
              "id": 263,
              "keyType": {
                "id": 260,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "714:4:25",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "706:25:25",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$259_storage_$",
                "typeString": "mapping(uint256 => struct TheGridDAO.Proposal)"
              },
              "valueType": {
                "id": 262,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 261,
                  "name": "Proposal",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 259,
                  "src": "722:8:25"
                },
                "referencedDeclaration": 259,
                "src": "722:8:25",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Proposal_$259_storage_ptr",
                  "typeString": "struct TheGridDAO.Proposal"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 270,
            "mutability": "mutable",
            "name": "alreadyVoted",
            "nameLocation": "808:12:25",
            "nodeType": "VariableDeclaration",
            "scope": 560,
            "src": "756:64:25",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
              "typeString": "mapping(uint256 => mapping(address => bool))"
            },
            "typeName": {
              "id": 269,
              "keyType": {
                "id": 265,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "764:4:25",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "756:42:25",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
                "typeString": "mapping(uint256 => mapping(address => bool))"
              },
              "valueType": {
                "id": 268,
                "keyType": {
                  "id": 266,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "781:7:25",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "772:25:25",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueType": {
                  "id": 267,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "792:4:25",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 273,
            "mutability": "immutable",
            "name": "VOTING_PERIOD",
            "nameLocation": "858:13:25",
            "nodeType": "VariableDeclaration",
            "scope": 560,
            "src": "832:48:25",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 271,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "832:7:25",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 272,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "874:6:25",
              "subdenomination": "days",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_86400_by_1",
                "typeString": "int_const 86400"
              },
              "value": "1"
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "74cb3041",
            "id": 275,
            "mutability": "mutable",
            "name": "lastProposalId",
            "nameLocation": "906:14:25",
            "nodeType": "VariableDeclaration",
            "scope": 560,
            "src": "891:29:25",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 274,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "891:7:25",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "61d027b3",
            "id": 278,
            "mutability": "mutable",
            "name": "treasury",
            "nameLocation": "950:8:25",
            "nodeType": "VariableDeclaration",
            "scope": 560,
            "src": "926:32:25",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ITheGridTreasury_$239",
              "typeString": "contract ITheGridTreasury"
            },
            "typeName": {
              "id": 277,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 276,
                "name": "ITheGridTreasury",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 239,
                "src": "926:16:25"
              },
              "referencedDeclaration": 239,
              "src": "926:16:25",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ITheGridTreasury_$239",
                "typeString": "contract ITheGridTreasury"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 289,
              "nodeType": "Block",
              "src": "1004:35:25",
              "statements": [
                {
                  "expression": {
                    "id": 287,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 285,
                      "name": "lastProposalId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 275,
                      "src": "1014:14:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 286,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1031:1:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1014:18:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 288,
                  "nodeType": "ExpressionStatement",
                  "src": "1014:18:25"
                }
              ]
            },
            "id": 290,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "5468652047726964",
                    "id": 281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "985:10:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_d0e0c70811675da9519cf0b51cdf4d11230ae931c63177627bf5c5a0643b9ba2",
                      "typeString": "literal_string \"The Grid\""
                    },
                    "value": "The Grid"
                  },
                  {
                    "hexValue": "475244",
                    "id": 282,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "997:5:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_086dc5f43e2e9b202846a8498f2ca1504895b0814b01e0e453aeeae4365db54d",
                      "typeString": "literal_string \"GRD\""
                    },
                    "value": "GRD"
                  }
                ],
                "id": 283,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 280,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2071,
                  "src": "979:5:25"
                },
                "nodeType": "ModifierInvocation",
                "src": "979:24:25"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 279,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "976:2:25"
            },
            "returnParameters": {
              "id": 284,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1004:0:25"
            },
            "scope": 560,
            "src": "965:74:25",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 303,
              "nodeType": "Block",
              "src": "1104:55:25",
              "statements": [
                {
                  "expression": {
                    "id": 301,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 297,
                      "name": "treasury",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 278,
                      "src": "1114:8:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ITheGridTreasury_$239",
                        "typeString": "contract ITheGridTreasury"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 299,
                          "name": "_treasury",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 292,
                          "src": "1142:9:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 298,
                        "name": "ITheGridTreasury",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 239,
                        "src": "1125:16:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ITheGridTreasury_$239_$",
                          "typeString": "type(contract ITheGridTreasury)"
                        }
                      },
                      "id": 300,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1125:27:25",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ITheGridTreasury_$239",
                        "typeString": "contract ITheGridTreasury"
                      }
                    },
                    "src": "1114:38:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ITheGridTreasury_$239",
                      "typeString": "contract ITheGridTreasury"
                    }
                  },
                  "id": 302,
                  "nodeType": "ExpressionStatement",
                  "src": "1114:38:25"
                }
              ]
            },
            "functionSelector": "f0f44260",
            "id": 304,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 295,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 294,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1403,
                  "src": "1094:9:25"
                },
                "nodeType": "ModifierInvocation",
                "src": "1094:9:25"
              }
            ],
            "name": "setTreasury",
            "nameLocation": "1054:11:25",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 293,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 292,
                  "mutability": "mutable",
                  "name": "_treasury",
                  "nameLocation": "1074:9:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 304,
                  "src": "1066:17:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 291,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1066:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1065:19:25"
            },
            "returnParameters": {
              "id": 296,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1104:0:25"
            },
            "scope": 560,
            "src": "1045:114:25",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 318,
              "nodeType": "Block",
              "src": "1226:36:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 314,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 306,
                        "src": "1242:3:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 315,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 308,
                        "src": "1247:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 313,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1888,
                      "src": "1236:5:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1236:19:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 317,
                  "nodeType": "ExpressionStatement",
                  "src": "1236:19:25"
                }
              ]
            },
            "functionSelector": "40c10f19",
            "id": 319,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 311,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 310,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1403,
                  "src": "1216:9:25"
                },
                "nodeType": "ModifierInvocation",
                "src": "1216:9:25"
              }
            ],
            "name": "mint",
            "nameLocation": "1174:4:25",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 309,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 306,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "1187:3:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 319,
                  "src": "1179:11:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 305,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1179:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 308,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1200:7:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 319,
                  "src": "1192:15:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 307,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1192:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1178:30:25"
            },
            "returnParameters": {
              "id": 312,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1226:0:25"
            },
            "scope": 560,
            "src": "1165:97:25",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 411,
              "nodeType": "Block",
              "src": "1348:623:25",
              "statements": [
                {
                  "assignments": [
                    329
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 329,
                      "mutability": "mutable",
                      "name": "proposerBalance",
                      "nameLocation": "1375:15:25",
                      "nodeType": "VariableDeclaration",
                      "scope": 411,
                      "src": "1367:23:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 328,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1367:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 334,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 331,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1403:3:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 332,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1403:10:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 330,
                      "name": "balanceOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1583,
                      "src": "1393:9:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 333,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1393:21:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1367:47:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 338,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 336,
                          "name": "proposerBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 329,
                          "src": "1432:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 337,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1450:1:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1432:19:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520646f6e2774206861766520766f74696e6720706f776572",
                        "id": 339,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1453:29:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3ac94eec6d7c424285e41c74ba957fb4198df27ad92bb221f313d8185f342bb7",
                          "typeString": "literal_string \"You don't have voting power\""
                        },
                        "value": "You don't have voting power"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3ac94eec6d7c424285e41c74ba957fb4198df27ad92bb221f313d8185f342bb7",
                          "typeString": "literal_string \"You don't have voting power\""
                        }
                      ],
                      "id": 335,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1424:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 340,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1424:59:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 341,
                  "nodeType": "ExpressionStatement",
                  "src": "1424:59:25"
                },
                {
                  "assignments": [
                    343
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 343,
                      "mutability": "mutable",
                      "name": "proposalId",
                      "nameLocation": "1502:10:25",
                      "nodeType": "VariableDeclaration",
                      "scope": 411,
                      "src": "1494:18:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 342,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1494:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 345,
                  "initialValue": {
                    "id": 344,
                    "name": "lastProposalId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 275,
                    "src": "1515:14:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1494:35:25"
                },
                {
                  "assignments": [
                    348
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 348,
                      "mutability": "mutable",
                      "name": "proposal",
                      "nameLocation": "1557:8:25",
                      "nodeType": "VariableDeclaration",
                      "scope": 411,
                      "src": "1540:25:25",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Proposal_$259_storage_ptr",
                        "typeString": "struct TheGridDAO.Proposal"
                      },
                      "typeName": {
                        "id": 347,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 346,
                          "name": "Proposal",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 259,
                          "src": "1540:8:25"
                        },
                        "referencedDeclaration": 259,
                        "src": "1540:8:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$259_storage_ptr",
                          "typeString": "struct TheGridDAO.Proposal"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 352,
                  "initialValue": {
                    "baseExpression": {
                      "id": 349,
                      "name": "getProposal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 264,
                      "src": "1568:11:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$259_storage_$",
                        "typeString": "mapping(uint256 => struct TheGridDAO.Proposal storage ref)"
                      }
                    },
                    "id": 351,
                    "indexExpression": {
                      "id": 350,
                      "name": "proposalId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 343,
                      "src": "1580:10:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1568:23:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Proposal_$259_storage",
                      "typeString": "struct TheGridDAO.Proposal storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1540:51:25"
                },
                {
                  "expression": {
                    "id": 358,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 353,
                        "name": "proposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 348,
                        "src": "1601:8:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$259_storage_ptr",
                          "typeString": "struct TheGridDAO.Proposal storage pointer"
                        }
                      },
                      "id": 355,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "proposedAt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 246,
                      "src": "1601:19:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 356,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "1623:5:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 357,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "1623:15:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1601:37:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 359,
                  "nodeType": "ExpressionStatement",
                  "src": "1601:37:25"
                },
                {
                  "expression": {
                    "id": 365,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 360,
                        "name": "proposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 348,
                        "src": "1648:8:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$259_storage_ptr",
                          "typeString": "struct TheGridDAO.Proposal storage pointer"
                        }
                      },
                      "id": 362,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "proposer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 248,
                      "src": "1648:17:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 363,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "1668:3:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 364,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1668:10:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1648:30:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 366,
                  "nodeType": "ExpressionStatement",
                  "src": "1648:30:25"
                },
                {
                  "expression": {
                    "id": 371,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 367,
                        "name": "proposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 348,
                        "src": "1688:8:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$259_storage_ptr",
                          "typeString": "struct TheGridDAO.Proposal storage pointer"
                        }
                      },
                      "id": 369,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "to",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 250,
                      "src": "1688:11:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 370,
                      "name": "_receiver",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 321,
                      "src": "1702:9:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1688:23:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 372,
                  "nodeType": "ExpressionStatement",
                  "src": "1688:23:25"
                },
                {
                  "expression": {
                    "id": 377,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 373,
                        "name": "proposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 348,
                        "src": "1721:8:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$259_storage_ptr",
                          "typeString": "struct TheGridDAO.Proposal storage pointer"
                        }
                      },
                      "id": 375,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 252,
                      "src": "1721:15:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 376,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 323,
                      "src": "1739:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1721:25:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 378,
                  "nodeType": "ExpressionStatement",
                  "src": "1721:25:25"
                },
                {
                  "expression": {
                    "id": 383,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 379,
                        "name": "proposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 348,
                        "src": "1756:8:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$259_storage_ptr",
                          "typeString": "struct TheGridDAO.Proposal storage pointer"
                        }
                      },
                      "id": 381,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "yes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 254,
                      "src": "1756:12:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 382,
                      "name": "proposerBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 329,
                      "src": "1771:15:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1756:30:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 384,
                  "nodeType": "ExpressionStatement",
                  "src": "1756:30:25"
                },
                {
                  "expression": {
                    "id": 389,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 385,
                        "name": "proposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 348,
                        "src": "1796:8:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$259_storage_ptr",
                          "typeString": "struct TheGridDAO.Proposal storage pointer"
                        }
                      },
                      "id": 387,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "no",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 256,
                      "src": "1796:11:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 388,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1810:1:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1796:15:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 390,
                  "nodeType": "ExpressionStatement",
                  "src": "1796:15:25"
                },
                {
                  "expression": {
                    "id": 395,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 391,
                        "name": "proposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 348,
                        "src": "1821:8:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$259_storage_ptr",
                          "typeString": "struct TheGridDAO.Proposal storage pointer"
                        }
                      },
                      "id": 393,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "processed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 258,
                      "src": "1821:18:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 394,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1842:5:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "1821:26:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 396,
                  "nodeType": "ExpressionStatement",
                  "src": "1821:26:25"
                },
                {
                  "expression": {
                    "id": 404,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 397,
                          "name": "alreadyVoted",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 270,
                          "src": "1866:12:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(uint256 => mapping(address => bool))"
                          }
                        },
                        "id": 401,
                        "indexExpression": {
                          "id": 398,
                          "name": "proposalId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 343,
                          "src": "1879:10:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1866:24:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 402,
                      "indexExpression": {
                        "expression": {
                          "id": 399,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1891:3:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 400,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1891:10:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1866:36:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 403,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1905:4:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1866:43:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 405,
                  "nodeType": "ExpressionStatement",
                  "src": "1866:43:25"
                },
                {
                  "expression": {
                    "id": 407,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "1920:16:25",
                    "subExpression": {
                      "id": 406,
                      "name": "lastProposalId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 275,
                      "src": "1920:14:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 408,
                  "nodeType": "ExpressionStatement",
                  "src": "1920:16:25"
                },
                {
                  "expression": {
                    "id": 409,
                    "name": "proposalId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 343,
                    "src": "1954:10:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 327,
                  "id": 410,
                  "nodeType": "Return",
                  "src": "1947:17:25"
                }
              ]
            },
            "functionSelector": "589de5df",
            "id": 412,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "propose",
            "nameLocation": "1277:7:25",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 324,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 321,
                  "mutability": "mutable",
                  "name": "_receiver",
                  "nameLocation": "1293:9:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 412,
                  "src": "1285:17:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 320,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1285:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 323,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1312:7:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 412,
                  "src": "1304:15:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 322,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1304:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1284:36:25"
            },
            "returnParameters": {
              "id": 327,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 326,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 412,
                  "src": "1339:7:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 325,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1339:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1338:9:25"
            },
            "scope": 560,
            "src": "1268:703:25",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 494,
              "nodeType": "Block",
              "src": "2034:701:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 426,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2061:38:25",
                        "subExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 420,
                              "name": "alreadyVoted",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 270,
                              "src": "2062:12:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
                                "typeString": "mapping(uint256 => mapping(address => bool))"
                              }
                            },
                            "id": 422,
                            "indexExpression": {
                              "id": 421,
                              "name": "_proposalId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 414,
                              "src": "2075:11:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2062:25:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 425,
                          "indexExpression": {
                            "expression": {
                              "id": 423,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2088:3:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 424,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2088:10:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2062:37:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416c726561647920766f746564206f6e20746869732070726f706f73616c",
                        "id": 427,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2101:32:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_de560ec7042cebae127b9d982f61a03ce62caa6c4fa67ea44996271c7314f5cb",
                          "typeString": "literal_string \"Already voted on this proposal\""
                        },
                        "value": "Already voted on this proposal"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_de560ec7042cebae127b9d982f61a03ce62caa6c4fa67ea44996271c7314f5cb",
                          "typeString": "literal_string \"Already voted on this proposal\""
                        }
                      ],
                      "id": 419,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2053:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 428,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2053:81:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 429,
                  "nodeType": "ExpressionStatement",
                  "src": "2053:81:25"
                },
                {
                  "assignments": [
                    431
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 431,
                      "mutability": "mutable",
                      "name": "voterBalance",
                      "nameLocation": "2153:12:25",
                      "nodeType": "VariableDeclaration",
                      "scope": 494,
                      "src": "2145:20:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 430,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2145:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 436,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 433,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2178:3:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 434,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2178:10:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 432,
                      "name": "balanceOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1583,
                      "src": "2168:9:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 435,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2168:21:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2145:44:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 440,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 438,
                          "name": "voterBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 431,
                          "src": "2207:12:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 439,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2222:1:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2207:16:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520646f6e2774206861766520766f74696e6720706f776572",
                        "id": 441,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2225:29:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3ac94eec6d7c424285e41c74ba957fb4198df27ad92bb221f313d8185f342bb7",
                          "typeString": "literal_string \"You don't have voting power\""
                        },
                        "value": "You don't have voting power"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3ac94eec6d7c424285e41c74ba957fb4198df27ad92bb221f313d8185f342bb7",
                          "typeString": "literal_string \"You don't have voting power\""
                        }
                      ],
                      "id": 437,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2199:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 442,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2199:56:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 443,
                  "nodeType": "ExpressionStatement",
                  "src": "2199:56:25"
                },
                {
                  "assignments": [
                    446
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 446,
                      "mutability": "mutable",
                      "name": "proposal",
                      "nameLocation": "2291:8:25",
                      "nodeType": "VariableDeclaration",
                      "scope": 494,
                      "src": "2274:25:25",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Proposal_$259_storage_ptr",
                        "typeString": "struct TheGridDAO.Proposal"
                      },
                      "typeName": {
                        "id": 445,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 444,
                          "name": "Proposal",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 259,
                          "src": "2274:8:25"
                        },
                        "referencedDeclaration": 259,
                        "src": "2274:8:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$259_storage_ptr",
                          "typeString": "struct TheGridDAO.Proposal"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 450,
                  "initialValue": {
                    "baseExpression": {
                      "id": 447,
                      "name": "getProposal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 264,
                      "src": "2302:11:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$259_storage_$",
                        "typeString": "mapping(uint256 => struct TheGridDAO.Proposal storage ref)"
                      }
                    },
                    "id": 449,
                    "indexExpression": {
                      "id": 448,
                      "name": "_proposalId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 414,
                      "src": "2314:11:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2302:24:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Proposal_$259_storage",
                      "typeString": "struct TheGridDAO.Proposal storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2274:52:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 458,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 452,
                            "name": "proposal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 446,
                            "src": "2368:8:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Proposal_$259_storage_ptr",
                              "typeString": "struct TheGridDAO.Proposal storage pointer"
                            }
                          },
                          "id": 453,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "proposer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 248,
                          "src": "2368:17:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 456,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2397:1:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 455,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2389:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 454,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2389:7:25",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 457,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2389:10:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2368:31:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "446f65736e2774206578697374",
                        "id": 459,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2401:15:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2a240ffbf308661f07cf3628344a34f29833981e72a5c13f7b771e76048ba2e6",
                          "typeString": "literal_string \"Doesn't exist\""
                        },
                        "value": "Doesn't exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2a240ffbf308661f07cf3628344a34f29833981e72a5c13f7b771e76048ba2e6",
                          "typeString": "literal_string \"Doesn't exist\""
                        }
                      ],
                      "id": 451,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2360:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 460,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2360:57:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 461,
                  "nodeType": "ExpressionStatement",
                  "src": "2360:57:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 465,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2435:19:25",
                        "subExpression": {
                          "expression": {
                            "id": 463,
                            "name": "proposal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 446,
                            "src": "2436:8:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Proposal_$259_storage_ptr",
                              "typeString": "struct TheGridDAO.Proposal storage pointer"
                            }
                          },
                          "id": 464,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "processed",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 258,
                          "src": "2436:18:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416c72656164792070726f636573736564",
                        "id": 466,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2456:19:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_98177e42a8d32100da8516f5feb71c1912405e1679aea7324bbc1b876c567fe3",
                          "typeString": "literal_string \"Already processed\""
                        },
                        "value": "Already processed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_98177e42a8d32100da8516f5feb71c1912405e1679aea7324bbc1b876c567fe3",
                          "typeString": "literal_string \"Already processed\""
                        }
                      ],
                      "id": 462,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2427:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 467,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2427:49:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 468,
                  "nodeType": "ExpressionStatement",
                  "src": "2427:49:25"
                },
                {
                  "condition": {
                    "id": 469,
                    "name": "_decision",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 416,
                    "src": "2519:9:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 483,
                    "nodeType": "Block",
                    "src": "2589:53:25",
                    "statements": [
                      {
                        "expression": {
                          "id": 481,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 477,
                              "name": "proposal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 446,
                              "src": "2603:8:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proposal_$259_storage_ptr",
                                "typeString": "struct TheGridDAO.Proposal storage pointer"
                              }
                            },
                            "id": 479,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "no",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 256,
                            "src": "2603:11:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 480,
                            "name": "voterBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 431,
                            "src": "2618:12:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2603:27:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 482,
                        "nodeType": "ExpressionStatement",
                        "src": "2603:27:25"
                      }
                    ]
                  },
                  "id": 484,
                  "nodeType": "IfStatement",
                  "src": "2516:126:25",
                  "trueBody": {
                    "id": 476,
                    "nodeType": "Block",
                    "src": "2529:54:25",
                    "statements": [
                      {
                        "expression": {
                          "id": 474,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 470,
                              "name": "proposal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 446,
                              "src": "2543:8:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proposal_$259_storage_ptr",
                                "typeString": "struct TheGridDAO.Proposal storage pointer"
                              }
                            },
                            "id": 472,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "yes",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 254,
                            "src": "2543:12:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 473,
                            "name": "voterBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 431,
                            "src": "2559:12:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2543:28:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 475,
                        "nodeType": "ExpressionStatement",
                        "src": "2543:28:25"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 492,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 485,
                          "name": "alreadyVoted",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 270,
                          "src": "2684:12:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(uint256 => mapping(address => bool))"
                          }
                        },
                        "id": 489,
                        "indexExpression": {
                          "id": 486,
                          "name": "_proposalId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 414,
                          "src": "2697:11:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2684:25:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 490,
                      "indexExpression": {
                        "expression": {
                          "id": 487,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2710:3:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 488,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2710:10:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2684:37:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 491,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2724:4:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2684:44:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 493,
                  "nodeType": "ExpressionStatement",
                  "src": "2684:44:25"
                }
              ]
            },
            "functionSelector": "c9d27afe",
            "id": 495,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "vote",
            "nameLocation": "1986:4:25",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 417,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 414,
                  "mutability": "mutable",
                  "name": "_proposalId",
                  "nameLocation": "1996:11:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 495,
                  "src": "1991:16:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 413,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1991:4:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 416,
                  "mutability": "mutable",
                  "name": "_decision",
                  "nameLocation": "2014:9:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 495,
                  "src": "2009:14:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 415,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2009:4:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1990:34:25"
            },
            "returnParameters": {
              "id": 418,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2034:0:25"
            },
            "scope": 560,
            "src": "1977:758:25",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 558,
              "nodeType": "Block",
              "src": "2777:443:25",
              "statements": [
                {
                  "assignments": [
                    502
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 502,
                      "mutability": "mutable",
                      "name": "proposal",
                      "nameLocation": "2805:8:25",
                      "nodeType": "VariableDeclaration",
                      "scope": 558,
                      "src": "2788:25:25",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Proposal_$259_storage_ptr",
                        "typeString": "struct TheGridDAO.Proposal"
                      },
                      "typeName": {
                        "id": 501,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 500,
                          "name": "Proposal",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 259,
                          "src": "2788:8:25"
                        },
                        "referencedDeclaration": 259,
                        "src": "2788:8:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$259_storage_ptr",
                          "typeString": "struct TheGridDAO.Proposal"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 506,
                  "initialValue": {
                    "baseExpression": {
                      "id": 503,
                      "name": "getProposal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 264,
                      "src": "2816:11:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$259_storage_$",
                        "typeString": "mapping(uint256 => struct TheGridDAO.Proposal storage ref)"
                      }
                    },
                    "id": 505,
                    "indexExpression": {
                      "id": 504,
                      "name": "_id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 497,
                      "src": "2828:3:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2816:16:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Proposal_$259_storage",
                      "typeString": "struct TheGridDAO.Proposal storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2788:44:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 514,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 508,
                            "name": "proposal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 502,
                            "src": "2850:8:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Proposal_$259_storage_ptr",
                              "typeString": "struct TheGridDAO.Proposal storage pointer"
                            }
                          },
                          "id": 509,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "proposer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 248,
                          "src": "2850:17:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 512,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2879:1:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 511,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2871:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 510,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2871:7:25",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 513,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2871:10:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2850:31:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "446f65736e2774206578697374",
                        "id": 515,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2883:15:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2a240ffbf308661f07cf3628344a34f29833981e72a5c13f7b771e76048ba2e6",
                          "typeString": "literal_string \"Doesn't exist\""
                        },
                        "value": "Doesn't exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2a240ffbf308661f07cf3628344a34f29833981e72a5c13f7b771e76048ba2e6",
                          "typeString": "literal_string \"Doesn't exist\""
                        }
                      ],
                      "id": 507,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2842:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 516,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2842:57:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 517,
                  "nodeType": "ExpressionStatement",
                  "src": "2842:57:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 525,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 519,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "2917:5:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 520,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "2917:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 524,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 521,
                              "name": "proposal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 502,
                              "src": "2936:8:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proposal_$259_storage_ptr",
                                "typeString": "struct TheGridDAO.Proposal storage pointer"
                              }
                            },
                            "id": 522,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "proposedAt",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 246,
                            "src": "2936:19:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 523,
                            "name": "VOTING_PERIOD",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 273,
                            "src": "2958:13:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2936:35:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2917:54:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "566f74696e67206973206e6f74206f766572",
                        "id": 526,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2973:20:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a98b06a914f7afdfe843fafb28b5d6eaafdfefb7ff17ced3d02415148ac2e7ce",
                          "typeString": "literal_string \"Voting is not over\""
                        },
                        "value": "Voting is not over"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a98b06a914f7afdfe843fafb28b5d6eaafdfefb7ff17ced3d02415148ac2e7ce",
                          "typeString": "literal_string \"Voting is not over\""
                        }
                      ],
                      "id": 518,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2909:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 527,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2909:85:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 528,
                  "nodeType": "ExpressionStatement",
                  "src": "2909:85:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 532,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "3012:19:25",
                        "subExpression": {
                          "expression": {
                            "id": 530,
                            "name": "proposal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 502,
                            "src": "3013:8:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Proposal_$259_storage_ptr",
                              "typeString": "struct TheGridDAO.Proposal storage pointer"
                            }
                          },
                          "id": 531,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "processed",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 258,
                          "src": "3013:18:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f706f736c20616c72656164792070726f636573736564",
                        "id": 533,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3033:27:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1e0071242831024530580d10a023977c42e1c65bcdb81bc232b830cda67d43f9",
                          "typeString": "literal_string \"Proposl already processed\""
                        },
                        "value": "Proposl already processed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1e0071242831024530580d10a023977c42e1c65bcdb81bc232b830cda67d43f9",
                          "typeString": "literal_string \"Proposl already processed\""
                        }
                      ],
                      "id": 529,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3004:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 534,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3004:57:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 535,
                  "nodeType": "ExpressionStatement",
                  "src": "3004:57:25"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 540,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 536,
                        "name": "proposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 502,
                        "src": "3075:8:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$259_storage_ptr",
                          "typeString": "struct TheGridDAO.Proposal storage pointer"
                        }
                      },
                      "id": 537,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "yes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 254,
                      "src": "3075:12:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "expression": {
                        "id": 538,
                        "name": "proposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 502,
                        "src": "3090:8:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$259_storage_ptr",
                          "typeString": "struct TheGridDAO.Proposal storage pointer"
                        }
                      },
                      "id": 539,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "no",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 256,
                      "src": "3090:11:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3075:26:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 551,
                  "nodeType": "IfStatement",
                  "src": "3072:106:25",
                  "trueBody": {
                    "id": 550,
                    "nodeType": "Block",
                    "src": "3103:75:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 544,
                                "name": "proposal",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 502,
                                "src": "3138:8:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proposal_$259_storage_ptr",
                                  "typeString": "struct TheGridDAO.Proposal storage pointer"
                                }
                              },
                              "id": 545,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "to",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 250,
                              "src": "3138:11:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 546,
                                "name": "proposal",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 502,
                                "src": "3151:8:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proposal_$259_storage_ptr",
                                  "typeString": "struct TheGridDAO.Proposal storage pointer"
                                }
                              },
                              "id": 547,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "amount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 252,
                              "src": "3151:15:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 541,
                              "name": "treasury",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 278,
                              "src": "3117:8:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ITheGridTreasury_$239",
                                "typeString": "contract ITheGridTreasury"
                              }
                            },
                            "id": 543,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sendPayment",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 238,
                            "src": "3117:20:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256) external"
                            }
                          },
                          "id": 548,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3117:50:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 549,
                        "nodeType": "ExpressionStatement",
                        "src": "3117:50:25"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 556,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 552,
                        "name": "proposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 502,
                        "src": "3188:8:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$259_storage_ptr",
                          "typeString": "struct TheGridDAO.Proposal storage pointer"
                        }
                      },
                      "id": 554,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "processed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 258,
                      "src": "3188:18:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 555,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3209:4:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3188:25:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 557,
                  "nodeType": "ExpressionStatement",
                  "src": "3188:25:25"
                }
              ]
            },
            "functionSelector": "fe0d94c1",
            "id": 559,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "execute",
            "nameLocation": "2750:7:25",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 498,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 497,
                  "mutability": "mutable",
                  "name": "_id",
                  "nameLocation": "2763:3:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 559,
                  "src": "2758:8:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 496,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2758:4:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2757:10:25"
            },
            "returnParameters": {
              "id": 499,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2777:0:25"
            },
            "scope": 560,
            "src": "2741:479:25",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 561,
        "src": "438:2784:25",
        "usedErrors": []
      }
    ],
    "src": "116:3108:25"
  },
  "bytecode": "",
  "bytecodeSha1": "bd0efeda9bd3049ffe2b89adcd90894a126b6104",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.13+commit.abaa5c0e"
  },
  "contractName": "TheGridDAO",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable._checkOwner": {
          "83": [
            1422,
            1445,
            true
          ]
        },
        "Ownable.transferOwnership": {
          "82": [
            2169,
            2191,
            true
          ]
        }
      },
      "15": {},
      "2": {
        "ERC20._approve": {
          "74": [
            10635,
            10654,
            true
          ],
          "75": [
            10713,
            10734,
            true
          ]
        },
        "ERC20._mint": {
          "81": [
            8650,
            8671,
            true
          ]
        },
        "ERC20._spendAllowance": {
          "76": [
            11351,
            11388,
            false
          ],
          "77": [
            11412,
            11438,
            true
          ]
        },
        "ERC20._transfer": {
          "78": [
            7599,
            7617,
            true
          ],
          "79": [
            7677,
            7693,
            true
          ],
          "80": [
            7848,
            7869,
            true
          ]
        },
        "ERC20.decreaseAllowance": {
          "73": [
            6809,
            6844,
            true
          ]
        }
      },
      "25": {
        "TheGridDAO.execute": {
          "70": [
            2917,
            2971,
            true
          ],
          "71": [
            3012,
            3031,
            true
          ],
          "72": [
            3075,
            3101,
            false
          ]
        },
        "TheGridDAO.propose": {
          "65": [
            1432,
            1451,
            true
          ]
        },
        "TheGridDAO.vote": {
          "66": [
            2061,
            2099,
            true
          ],
          "67": [
            2207,
            2223,
            true
          ],
          "68": [
            2435,
            2454,
            true
          ],
          "69": [
            2519,
            2528,
            false
          ]
        }
      },
      "3": {},
      "6": {}
    },
    "statements": {
      "0": {
        "Ownable._checkOwner": {
          "58": [
            1414,
            1482
          ]
        },
        "Ownable._transferOwnership": {
          "63": [
            2541,
            2558
          ],
          "64": [
            2568,
            2613
          ]
        },
        "Ownable.owner": {
          "3": [
            1266,
            1279
          ]
        },
        "Ownable.renounceOwnership": {
          "24": [
            1895,
            1925
          ]
        },
        "Ownable.transferOwnership": {
          "38": [
            2161,
            2234
          ],
          "39": [
            2244,
            2272
          ]
        }
      },
      "15": {
        "Context._msgSender": {
          "5": [
            712,
            729
          ]
        }
      },
      "2": {
        "ERC20._approve": {
          "45": [
            10627,
            10695
          ],
          "46": [
            10705,
            10773
          ],
          "47": [
            10784,
            10820
          ],
          "48": [
            10830,
            10867
          ]
        },
        "ERC20._mint": {
          "59": [
            8642,
            8707
          ],
          "60": [
            8778,
            8800
          ],
          "61": [
            8946,
            8974
          ],
          "62": [
            8994,
            9036
          ]
        },
        "ERC20._spendAllowance": {
          "49": [
            11404,
            11472
          ],
          "50": [
            11514,
            11565
          ]
        },
        "ERC20._transfer": {
          "51": [
            7591,
            7659
          ],
          "52": [
            7669,
            7733
          ],
          "53": [
            7840,
            7912
          ],
          "54": [
            7946,
            7984
          ],
          "55": [
            8161,
            8184
          ],
          "56": [
            8205,
            8236
          ],
          "57": [
            8247,
            8284
          ]
        },
        "ERC20.allowance": {
          "36": [
            4082,
            4116
          ]
        },
        "ERC20.approve": {
          "6": [
            4568,
            4600
          ],
          "7": [
            4610,
            4621
          ]
        },
        "ERC20.balanceOf": {
          "2": [
            3499,
            3524
          ]
        },
        "ERC20.decimals": {
          "1": [
            3166,
            3175
          ]
        },
        "ERC20.decreaseAllowance": {
          "26": [
            6801,
            6886
          ],
          "27": [
            6920,
            6980
          ]
        },
        "ERC20.increaseAllowance": {
          "11": [
            6013,
            6077
          ]
        },
        "ERC20.name": {
          "4": [
            2233,
            2245
          ]
        },
        "ERC20.symbol": {
          "25": [
            2446,
            2460
          ]
        },
        "ERC20.totalSupply": {
          "0": [
            3322,
            3341
          ]
        },
        "ERC20.transfer": {
          "28": [
            3860,
            3888
          ]
        },
        "ERC20.transferFrom": {
          "8": [
            5373,
            5411
          ],
          "9": [
            5421,
            5448
          ],
          "10": [
            5458,
            5469
          ]
        }
      },
      "25": {
        "TheGridDAO.execute": {
          "40": [
            2842,
            2899
          ],
          "41": [
            2909,
            2994
          ],
          "42": [
            3004,
            3061
          ],
          "43": [
            3117,
            3167
          ],
          "44": [
            3188,
            3213
          ]
        },
        "TheGridDAO.mint": {
          "12": [
            1236,
            1255
          ]
        },
        "TheGridDAO.propose": {
          "13": [
            1424,
            1483
          ],
          "14": [
            1601,
            1638
          ],
          "15": [
            1648,
            1678
          ],
          "16": [
            1688,
            1711
          ],
          "17": [
            1721,
            1746
          ],
          "18": [
            1756,
            1786
          ],
          "19": [
            1796,
            1811
          ],
          "20": [
            1821,
            1847
          ],
          "21": [
            1866,
            1909
          ],
          "22": [
            1920,
            1936
          ],
          "23": [
            1947,
            1964
          ]
        },
        "TheGridDAO.setTreasury": {
          "37": [
            1114,
            1152
          ]
        },
        "TheGridDAO.vote": {
          "29": [
            2053,
            2134
          ],
          "30": [
            2199,
            2255
          ],
          "31": [
            2360,
            2417
          ],
          "32": [
            2427,
            2476
          ],
          "33": [
            2543,
            2571
          ],
          "34": [
            2603,
            2630
          ],
          "35": [
            2684,
            2728
          ]
        }
      },
      "3": {},
      "6": {}
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.8.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.8.0/ERC20",
    "OpenZeppelin/openzeppelin-contracts@4.8.0/IERC20",
    "OpenZeppelin/openzeppelin-contracts@4.8.0/IERC20Metadata",
    "ITheGridTreasury",
    "OpenZeppelin/openzeppelin-contracts@4.8.0/Ownable"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106101425760003560e01c806374cb3041116100b8578063c7f758a81161007c578063c7f758a81461029b578063c9d27afe14610339578063dd62ed3e1461034c578063f0f442601461035f578063f2fde38b14610372578063fe0d94c11461038557600080fd5b806374cb3041146102535780638da5cb5b1461025c57806395d89b411461026d578063a457c2d714610275578063a9059cbb1461028857600080fd5b8063395093511161010a57806339509351146101bc57806340c10f19146101cf578063589de5df146101e457806361d027b3146101f757806370a0823114610222578063715018a61461024b57600080fd5b806306fdde0314610147578063095ea7b31461016557806318160ddd1461018857806323b872dd1461019a578063313ce567146101ad575b600080fd5b61014f610398565b60405161015c9190610fcd565b60405180910390f35b61017861017336600461103e565b61042a565b604051901515815260200161015c565b6002545b60405190815260200161015c565b6101786101a8366004611068565b610442565b6040516012815260200161015c565b6101786101ca36600461103e565b610466565b6101e26101dd36600461103e565b610488565b005b61018c6101f236600461103e565b61049e565b60095461020a906001600160a01b031681565b6040516001600160a01b03909116815260200161015c565b61018c6102303660046110a4565b6001600160a01b031660009081526020819052604090205490565b6101e2610626565b61018c60085481565b6005546001600160a01b031661020a565b61014f61063a565b61017861028336600461103e565b610649565b61017861029636600461103e565b6106c4565b6102f66102a93660046110c6565b6006602081905260009182526040909120805460018201546002830154600384015460048501546005860154959096015493956001600160a01b0393841695939092169390929060ff1687565b604080519788526001600160a01b03968716602089015294909516938601939093526060850191909152608084015260a0830152151560c082015260e00161015c565b6101e26103473660046110df565b6106d2565b61018c61035a366004611114565b6108a2565b6101e261036d3660046110a4565b6108cd565b6101e26103803660046110a4565b6108f7565b6101e26103933660046110c6565b610970565b6060600380546103a790611147565b80601f01602080910402602001604051908101604052809291908181526020018280546103d390611147565b80156104205780601f106103f557610100808354040283529160200191610420565b820191906000526020600020905b81548152906001019060200180831161040357829003601f168201915b5050505050905090565b600033610438818585610b20565b5060019392505050565b600033610450858285610c44565b61045b858585610cbe565b506001949350505050565b60003361043881858561047983836108a2565b6104839190611197565b610b20565b610490610e62565b61049a8282610ebc565b5050565b33600090815260208190526040812054600081116105035760405162461bcd60e51b815260206004820152601b60248201527f596f7520646f6e2774206861766520766f74696e6720706f776572000000000060448201526064015b60405180910390fd5b600060085490506000600660008381526020019081526020016000209050428160000181905550338160010160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550858160020160006101000a8154816001600160a01b0302191690836001600160a01b031602179055508481600301819055508281600401819055506000816005018190555060008160060160006101000a81548160ff0219169083151502179055506001600760008481526020019081526020016000206000336001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a81548160ff02191690831515021790555060086000815480929190610617906111af565b90915550919695505050505050565b61062e610e62565b6106386000610f7b565b565b6060600480546103a790611147565b6000338161065782866108a2565b9050838110156106b75760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016104fa565b61045b8286868403610b20565b600033610438818585610cbe565b600082815260076020908152604080832033845290915290205460ff161561073c5760405162461bcd60e51b815260206004820152601e60248201527f416c726561647920766f746564206f6e20746869732070726f706f73616c000060448201526064016104fa565b33600090815260208190526040902054806107995760405162461bcd60e51b815260206004820152601b60248201527f596f7520646f6e2774206861766520766f74696e6720706f776572000000000060448201526064016104fa565b600083815260066020526040902060018101546001600160a01b03166107f15760405162461bcd60e51b815260206004820152600d60248201526c111bd95cdb89dd08195e1a5cdd609a1b60448201526064016104fa565b600681015460ff161561083a5760405162461bcd60e51b8152602060048201526011602482015270105b1c9958591e481c1c9bd8d95cdcd959607a1b60448201526064016104fa565b821561085f57818160040160008282546108549190611197565b909155506108799050565b818160050160008282546108739190611197565b90915550505b50505060009081526007602090815260408083203384529091529020805460ff19166001179055565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6108d5610e62565b600980546001600160a01b0319166001600160a01b0392909216919091179055565b6108ff610e62565b6001600160a01b0381166109645760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104fa565b61096d81610f7b565b50565b600081815260066020526040902060018101546001600160a01b03166109c85760405162461bcd60e51b815260206004820152600d60248201526c111bd95cdb89dd08195e1a5cdd609a1b60448201526064016104fa565b80546109f5907f000000000000000000000000000000000000000000000000000000000000000090611197565b421015610a395760405162461bcd60e51b81526020600482015260126024820152712b37ba34b7339034b9903737ba1037bb32b960711b60448201526064016104fa565b600681015460ff1615610a8e5760405162461bcd60e51b815260206004820152601960248201527f50726f706f736c20616c72656164792070726f6365737365640000000000000060448201526064016104fa565b806005015481600401541115610b0f576009546002820154600383015460405163126be98360e31b81526001600160a01b039283166004820152602481019190915291169063935f4c1890604401600060405180830381600087803b158015610af657600080fd5b505af1158015610b0a573d6000803e3d6000fd5b505050505b600601805460ff1916600117905550565b6001600160a01b038316610b825760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016104fa565b6001600160a01b038216610be35760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016104fa565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610c5084846108a2565b90506000198114610cb85781811015610cab5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016104fa565b610cb88484848403610b20565b50505050565b6001600160a01b038316610d225760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016104fa565b6001600160a01b038216610d845760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016104fa565b6001600160a01b03831660009081526020819052604090205481811015610dfc5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016104fa565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610cb8565b6005546001600160a01b031633146106385760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104fa565b6001600160a01b038216610f125760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016104fa565b8060026000828254610f249190611197565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600060208083528351808285015260005b81811015610ffa57858101830151858201604001528201610fde565b8181111561100c576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461103957600080fd5b919050565b6000806040838503121561105157600080fd5b61105a83611022565b946020939093013593505050565b60008060006060848603121561107d57600080fd5b61108684611022565b925061109460208501611022565b9150604084013590509250925092565b6000602082840312156110b657600080fd5b6110bf82611022565b9392505050565b6000602082840312156110d857600080fd5b5035919050565b600080604083850312156110f257600080fd5b823591506020830135801515811461110957600080fd5b809150509250929050565b6000806040838503121561112757600080fd5b61113083611022565b915061113e60208401611022565b90509250929050565b600181811c9082168061115b57607f821691505b60208210810361117b57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600082198211156111aa576111aa611181565b500190565b6000600182016111c1576111c1611181565b506001019056fea264697066735822122018a23de7bb0e456f18346e2848df37ab3512fe6939685960612803dee8b472c664736f6c634300080d0033",
  "deployedSourceMap": "438:2784:25:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:98:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4431:197;;;;;;:::i;:::-;;:::i;:::-;;;1218:14:34;;1211:22;1193:41;;1181:2;1166:18;4431:197:2;1053:187:34;3242:106:2;3329:12;;3242:106;;;1391:25:34;;;1379:2;1364:18;3242:106:2;1245:177:34;5190:286:2;;;;;;:::i;:::-;;:::i;3091:91::-;;;3173:2;1902:36:34;;1890:2;1875:18;3091:91:2;1760:184:34;5871:234:2;;;;;;:::i;:::-;;:::i;1165:97:25:-;;;;;;:::i;:::-;;:::i;:::-;;1268:703;;;;;;:::i;:::-;;:::i;926:32::-;;;;;-1:-1:-1;;;;;926:32:25;;;;;;-1:-1:-1;;;;;2137:32:34;;;2119:51;;2107:2;2092:18;926:32:25;1949:227:34;3406:125:2;;;;;;:::i;:::-;-1:-1:-1;;;;;3506:18:2;3480:7;3506:18;;;;;;;;;;;;3406:125;1831:101:0;;;:::i;891:29:25:-;;;;;;1201:85:0;1273:6;;-1:-1:-1;;;;;1273:6:0;1201:85;;2365:102:2;;;:::i;6592:427::-;;;;;;:::i;:::-;;:::i;3727:189::-;;;;;;:::i;:::-;;:::i;706:44:25:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;706:44:25;;;;;;;;;;;;;;;;;;;;3074:25:34;;;-1:-1:-1;;;;;3173:15:34;;;3168:2;3153:18;;3146:43;3225:15;;;;3205:18;;;3198:43;;;;3272:2;3257:18;;3250:34;;;;3315:3;3300:19;;3293:35;3126:3;3344:19;;3337:35;3416:14;3409:22;3403:3;3388:19;;3381:51;3061:3;3046:19;706:44:25;2765:673:34;1977:758:25;;;;;;:::i;:::-;;:::i;3974:149:2:-;;;;;;:::i;:::-;;:::i;1045:114:25:-;;;;;;:::i;:::-;;:::i;2081:198:0:-;;;;;;:::i;:::-;;:::i;2741:479:25:-;;;;;;:::i;:::-;;:::i;2154:98:2:-;2208:13;2240:5;2233:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:98;:::o;4431:197::-;4514:4;719:10:15;4568:32:2;719:10:15;4584:7:2;4593:6;4568:8;:32::i;:::-;-1:-1:-1;4617:4:2;;4431:197;-1:-1:-1;;;4431:197:2:o;5190:286::-;5317:4;719:10:15;5373:38:2;5389:4;719:10:15;5404:6:2;5373:15;:38::i;:::-;5421:27;5431:4;5437:2;5441:6;5421:9;:27::i;:::-;-1:-1:-1;5465:4:2;;5190:286;-1:-1:-1;;;;5190:286:2:o;5871:234::-;5959:4;719:10:15;6013:64:2;719:10:15;6029:7:2;6066:10;6038:25;719:10:15;6029:7:2;6038:9;:25::i;:::-;:38;;;;:::i;:::-;6013:8;:64::i;1165:97:25:-;1094:13:0;:11;:13::i;:::-;1236:19:25::1;1242:3;1247:7;1236:5;:19::i;:::-;1165:97:::0;;:::o;1268:703::-;1403:10;1339:7;3506:18:2;;;;;;;;;;;1450:1:25;1432:15;:19;1424:59;;;;-1:-1:-1;;;1424:59:25;;4906:2:34;1424:59:25;;;4888:21:34;4945:2;4925:18;;;4918:30;4984:29;4964:18;;;4957:57;5031:18;;1424:59:25;;;;;;;;;1494:18;1515:14;;1494:35;;1540:25;1568:11;:23;1580:10;1568:23;;;;;;;;;;;1540:51;;1623:15;1601:8;:19;;:37;;;;1668:10;1648:8;:17;;;:30;;;;;-1:-1:-1;;;;;1648:30:25;;;;;-1:-1:-1;;;;;1648:30:25;;;;;;1702:9;1688:8;:11;;;:23;;;;;-1:-1:-1;;;;;1688:23:25;;;;;-1:-1:-1;;;;;1688:23:25;;;;;;1739:7;1721:8;:15;;:25;;;;1771:15;1756:8;:12;;:30;;;;1810:1;1796:8;:11;;:15;;;;1842:5;1821:8;:18;;;:26;;;;;;;;;;;;;;;;;;1905:4;1866:12;:24;1879:10;1866:24;;;;;;;;;;;:36;1891:10;-1:-1:-1;;;;;1866:36:25;-1:-1:-1;;;;;1866:36:25;;;;;;;;;;;;;:43;;;;;;;;;;;;;;;;;;1920:14;;:16;;;;;;;;;:::i;:::-;;;;-1:-1:-1;1954:10:25;;1268:703;-1:-1:-1;;;;;;1268:703:25:o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;2365:102:2:-;2421:13;2453:7;2446:14;;;;;:::i;6592:427::-;6685:4;719:10:15;6685:4:2;6766:25;719:10:15;6783:7:2;6766:9;:25::i;:::-;6739:52;;6829:15;6809:16;:35;;6801:85;;;;-1:-1:-1;;;6801:85:2;;5402:2:34;6801:85:2;;;5384:21:34;5441:2;5421:18;;;5414:30;5480:34;5460:18;;;5453:62;-1:-1:-1;;;5531:18:34;;;5524:35;5576:19;;6801:85:2;5200:401:34;6801:85:2;6920:60;6929:5;6936:7;6964:15;6945:16;:34;6920:8;:60::i;3727:189::-;3806:4;719:10:15;3860:28:2;719:10:15;3877:2:2;3881:6;3860:9;:28::i;1977:758:25:-;2062:25;;;;:12;:25;;;;;;;;2088:10;2062:37;;;;;;;;;;2061:38;2053:81;;;;-1:-1:-1;;;2053:81:25;;5808:2:34;2053:81:25;;;5790:21:34;5847:2;5827:18;;;5820:30;5886:32;5866:18;;;5859:60;5936:18;;2053:81:25;5606:354:34;2053:81:25;2178:10;2145:20;3506:18:2;;;;;;;;;;;2207:16:25;2199:56;;;;-1:-1:-1;;;2199:56:25;;4906:2:34;2199:56:25;;;4888:21:34;4945:2;4925:18;;;4918:30;4984:29;4964:18;;;4957:57;5031:18;;2199:56:25;4704:351:34;2199:56:25;2274:25;2302:24;;;:11;:24;;;;;2368:17;;;;-1:-1:-1;;;;;2368:17:25;2360:57;;;;-1:-1:-1;;;2360:57:25;;6167:2:34;2360:57:25;;;6149:21:34;6206:2;6186:18;;;6179:30;-1:-1:-1;;;6225:18:34;;;6218:43;6278:18;;2360:57:25;5965:337:34;2360:57:25;2436:18;;;;;;2435:19;2427:49;;;;-1:-1:-1;;;2427:49:25;;6509:2:34;2427:49:25;;;6491:21:34;6548:2;6528:18;;;6521:30;-1:-1:-1;;;6567:18:34;;;6560:47;6624:18;;2427:49:25;6307:341:34;2427:49:25;2519:9;2516:126;;;2559:12;2543:8;:12;;;:28;;;;;;;:::i;:::-;;;;-1:-1:-1;2516:126:25;;-1:-1:-1;2516:126:25;;2618:12;2603:8;:11;;;:27;;;;;;;:::i;:::-;;;;-1:-1:-1;;2516:126:25;-1:-1:-1;;;2684:25:25;;;;:12;:25;;;;;;;;2710:10;2684:37;;;;;;;:44;;-1:-1:-1;;2684:44:25;2724:4;2684:44;;;1977:758::o;3974:149:2:-;-1:-1:-1;;;;;4089:18:2;;;4063:7;4089:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3974:149::o;1045:114:25:-;1094:13:0;:11;:13::i;:::-;1114:8:25::1;:38:::0;;-1:-1:-1;;;;;;1114:38:25::1;-1:-1:-1::0;;;;;1114:38:25;;;::::1;::::0;;;::::1;::::0;;1045:114::o;2081:198:0:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:0;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:0;;6855:2:34;2161:73:0::1;::::0;::::1;6837:21:34::0;6894:2;6874:18;;;6867:30;6933:34;6913:18;;;6906:62;-1:-1:-1;;;6984:18:34;;;6977:36;7030:19;;2161:73:0::1;6653:402:34::0;2161:73:0::1;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;2741:479:25:-;2788:25;2816:16;;;:11;:16;;;;;2850:17;;;;-1:-1:-1;;;;;2850:17:25;2842:57;;;;-1:-1:-1;;;2842:57:25;;6167:2:34;2842:57:25;;;6149:21:34;6206:2;6186:18;;;6179:30;-1:-1:-1;;;6225:18:34;;;6218:43;6278:18;;2842:57:25;5965:337:34;2842:57:25;2936:19;;:35;;2958:13;;2936:35;:::i;:::-;2917:15;:54;;2909:85;;;;-1:-1:-1;;;2909:85:25;;7262:2:34;2909:85:25;;;7244:21:34;7301:2;7281:18;;;7274:30;-1:-1:-1;;;7320:18:34;;;7313:48;7378:18;;2909:85:25;7060:342:34;2909:85:25;3013:18;;;;;;3012:19;3004:57;;;;-1:-1:-1;;;3004:57:25;;7609:2:34;3004:57:25;;;7591:21:34;7648:2;7628:18;;;7621:30;7687:27;7667:18;;;7660:55;7732:18;;3004:57:25;7407:349:34;3004:57:25;3090:8;:11;;;3075:8;:12;;;:26;3072:106;;;3117:8;;3138:11;;;;3151:15;;;;3117:50;;-1:-1:-1;;;3117:50:25;;-1:-1:-1;;;;;3138:11:25;;;3117:50;;;7935:51:34;8002:18;;;7995:34;;;;3117:8:25;;;:20;;7908:18:34;;3117:50:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3072:106;3188:18;;:25;;-1:-1:-1;;3188:25:25;3209:4;3188:25;;;-1:-1:-1;2741:479:25:o;10504:370:2:-;-1:-1:-1;;;;;10635:19:2;;10627:68;;;;-1:-1:-1;;;10627:68:2;;8242:2:34;10627:68:2;;;8224:21:34;8281:2;8261:18;;;8254:30;8320:34;8300:18;;;8293:62;-1:-1:-1;;;8371:18:34;;;8364:34;8415:19;;10627:68:2;8040:400:34;10627:68:2;-1:-1:-1;;;;;10713:21:2;;10705:68;;;;-1:-1:-1;;;10705:68:2;;8647:2:34;10705:68:2;;;8629:21:34;8686:2;8666:18;;;8659:30;8725:34;8705:18;;;8698:62;-1:-1:-1;;;8776:18:34;;;8769:32;8818:19;;10705:68:2;8445:398:34;10705:68:2;-1:-1:-1;;;;;10784:18:2;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10835:32;;1391:25:34;;;10835:32:2;;1364:18:34;10835:32:2;;;;;;;10504:370;;;:::o;11155:441::-;11285:24;11312:25;11322:5;11329:7;11312:9;:25::i;:::-;11285:52;;-1:-1:-1;;11351:16:2;:37;11347:243;;11432:6;11412:16;:26;;11404:68;;;;-1:-1:-1;;;11404:68:2;;9050:2:34;11404:68:2;;;9032:21:34;9089:2;9069:18;;;9062:30;9128:31;9108:18;;;9101:59;9177:18;;11404:68:2;8848:353:34;11404:68:2;11514:51;11523:5;11530:7;11558:6;11539:16;:25;11514:8;:51::i;:::-;11275:321;11155:441;;;:::o;7473:818::-;-1:-1:-1;;;;;7599:18:2;;7591:68;;;;-1:-1:-1;;;7591:68:2;;9408:2:34;7591:68:2;;;9390:21:34;9447:2;9427:18;;;9420:30;9486:34;9466:18;;;9459:62;-1:-1:-1;;;9537:18:34;;;9530:35;9582:19;;7591:68:2;9206:401:34;7591:68:2;-1:-1:-1;;;;;7677:16:2;;7669:64;;;;-1:-1:-1;;;7669:64:2;;9814:2:34;7669:64:2;;;9796:21:34;9853:2;9833:18;;;9826:30;9892:34;9872:18;;;9865:62;-1:-1:-1;;;9943:18:34;;;9936:33;9986:19;;7669:64:2;9612:399:34;7669:64:2;-1:-1:-1;;;;;7815:15:2;;7793:19;7815:15;;;;;;;;;;;7848:21;;;;7840:72;;;;-1:-1:-1;;;7840:72:2;;10218:2:34;7840:72:2;;;10200:21:34;10257:2;10237:18;;;10230:30;10296:34;10276:18;;;10269:62;-1:-1:-1;;;10347:18:34;;;10340:36;10393:19;;7840:72:2;10016:402:34;7840:72:2;-1:-1:-1;;;;;7946:15:2;;;:9;:15;;;;;;;;;;;7964:20;;;7946:38;;8161:13;;;;;;;;;;:23;;;;;;8210:26;;1391:25:34;;;8161:13:2;;8210:26;;1364:18:34;8210:26:2;;;;;;;8247:37;12180:121;1359:130:0;1273:6;;-1:-1:-1;;;;;1273:6:0;719:10:15;1422:23:0;1414:68;;;;-1:-1:-1;;;1414:68:0;;10625:2:34;1414:68:0;;;10607:21:34;;;10644:18;;;10637:30;10703:34;10683:18;;;10676:62;10755:18;;1414:68:0;10423:356:34;8567:535:2;-1:-1:-1;;;;;8650:21:2;;8642:65;;;;-1:-1:-1;;;8642:65:2;;10986:2:34;8642:65:2;;;10968:21:34;11025:2;11005:18;;;10998:30;11064:33;11044:18;;;11037:61;11115:18;;8642:65:2;10784:355:34;8642:65:2;8794:6;8778:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8946:18:2;;:9;:18;;;;;;;;;;;:28;;;;;;8999:37;1391:25:34;;;8999:37:2;;1364:18:34;8999:37:2;;;;;;;1165:97:25;;:::o;2433:187:0:-;2525:6;;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;;2573:40;;2525:6;;;2541:17;2525:6;;2573:40;;2506:16;;2573:40;2496:124;2433:187;:::o;14:597:34:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;452:6;449:1;446:13;443:91;;;522:1;517:2;508:6;497:9;493:22;489:31;482:42;443:91;-1:-1:-1;595:2:34;574:15;-1:-1:-1;;570:29:34;555:45;;;;602:2;551:54;;14:597;-1:-1:-1;;;14:597:34:o;616:173::-;684:20;;-1:-1:-1;;;;;733:31:34;;723:42;;713:70;;779:1;776;769:12;713:70;616:173;;;:::o;794:254::-;862:6;870;923:2;911:9;902:7;898:23;894:32;891:52;;;939:1;936;929:12;891:52;962:29;981:9;962:29;:::i;:::-;952:39;1038:2;1023:18;;;;1010:32;;-1:-1:-1;;;794:254:34:o;1427:328::-;1504:6;1512;1520;1573:2;1561:9;1552:7;1548:23;1544:32;1541:52;;;1589:1;1586;1579:12;1541:52;1612:29;1631:9;1612:29;:::i;:::-;1602:39;;1660:38;1694:2;1683:9;1679:18;1660:38;:::i;:::-;1650:48;;1745:2;1734:9;1730:18;1717:32;1707:42;;1427:328;;;;;:::o;2181:186::-;2240:6;2293:2;2281:9;2272:7;2268:23;2264:32;2261:52;;;2309:1;2306;2299:12;2261:52;2332:29;2351:9;2332:29;:::i;:::-;2322:39;2181:186;-1:-1:-1;;;2181:186:34:o;2580:180::-;2639:6;2692:2;2680:9;2671:7;2667:23;2663:32;2660:52;;;2708:1;2705;2698:12;2660:52;-1:-1:-1;2731:23:34;;2580:180;-1:-1:-1;2580:180:34:o;3443:341::-;3508:6;3516;3569:2;3557:9;3548:7;3544:23;3540:32;3537:52;;;3585:1;3582;3575:12;3537:52;3621:9;3608:23;3598:33;;3681:2;3670:9;3666:18;3653:32;3728:5;3721:13;3714:21;3707:5;3704:32;3694:60;;3750:1;3747;3740:12;3694:60;3773:5;3763:15;;;3443:341;;;;;:::o;3789:260::-;3857:6;3865;3918:2;3906:9;3897:7;3893:23;3889:32;3886:52;;;3934:1;3931;3924:12;3886:52;3957:29;3976:9;3957:29;:::i;:::-;3947:39;;4005:38;4039:2;4028:9;4024:18;4005:38;:::i;:::-;3995:48;;3789:260;;;;;:::o;4054:380::-;4133:1;4129:12;;;;4176;;;4197:61;;4251:4;4243:6;4239:17;4229:27;;4197:61;4304:2;4296:6;4293:14;4273:18;4270:38;4267:161;;4350:10;4345:3;4341:20;4338:1;4331:31;4385:4;4382:1;4375:15;4413:4;4410:1;4403:15;4267:161;;4054:380;;;:::o;4439:127::-;4500:10;4495:3;4491:20;4488:1;4481:31;4531:4;4528:1;4521:15;4555:4;4552:1;4545:15;4571:128;4611:3;4642:1;4638:6;4635:1;4632:13;4629:39;;;4648:18;;:::i;:::-;-1:-1:-1;4684:9:34;;4571:128::o;5060:135::-;5099:3;5120:17;;;5117:43;;5140:18;;:::i;:::-;-1:-1:-1;5187:1:34;5176:13;;5060:135::o",
  "language": "Solidity",
  "natspec": {
    "author": "JohnnyTime (https://smartcontractshacking.com)",
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "TheGridDAO",
    "version": 1
  },
  "offset": [
    438,
    3222
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x142 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x74CB3041 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xC7F758A8 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xC7F758A8 EQ PUSH2 0x29B JUMPI DUP1 PUSH4 0xC9D27AFE EQ PUSH2 0x339 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x34C JUMPI DUP1 PUSH4 0xF0F44260 EQ PUSH2 0x35F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x372 JUMPI DUP1 PUSH4 0xFE0D94C1 EQ PUSH2 0x385 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x74CB3041 EQ PUSH2 0x253 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x26D JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x275 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x288 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x39509351 GT PUSH2 0x10A JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1BC JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1CF JUMPI DUP1 PUSH4 0x589DE5DF EQ PUSH2 0x1E4 JUMPI DUP1 PUSH4 0x61D027B3 EQ PUSH2 0x1F7 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x222 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x24B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x188 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x19A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1AD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14F PUSH2 0x398 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15C SWAP2 SWAP1 PUSH2 0xFCD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x178 PUSH2 0x173 CALLDATASIZE PUSH1 0x4 PUSH2 0x103E JUMP JUMPDEST PUSH2 0x42A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x15C JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x15C JUMP JUMPDEST PUSH2 0x178 PUSH2 0x1A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1068 JUMP JUMPDEST PUSH2 0x442 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x15C JUMP JUMPDEST PUSH2 0x178 PUSH2 0x1CA CALLDATASIZE PUSH1 0x4 PUSH2 0x103E JUMP JUMPDEST PUSH2 0x466 JUMP JUMPDEST PUSH2 0x1E2 PUSH2 0x1DD CALLDATASIZE PUSH1 0x4 PUSH2 0x103E JUMP JUMPDEST PUSH2 0x488 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x18C PUSH2 0x1F2 CALLDATASIZE PUSH1 0x4 PUSH2 0x103E JUMP JUMPDEST PUSH2 0x49E JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x20A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x15C JUMP JUMPDEST PUSH2 0x18C PUSH2 0x230 CALLDATASIZE PUSH1 0x4 PUSH2 0x10A4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1E2 PUSH2 0x626 JUMP JUMPDEST PUSH2 0x18C PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x20A JUMP JUMPDEST PUSH2 0x14F PUSH2 0x63A JUMP JUMPDEST PUSH2 0x178 PUSH2 0x283 CALLDATASIZE PUSH1 0x4 PUSH2 0x103E JUMP JUMPDEST PUSH2 0x649 JUMP JUMPDEST PUSH2 0x178 PUSH2 0x296 CALLDATASIZE PUSH1 0x4 PUSH2 0x103E JUMP JUMPDEST PUSH2 0x6C4 JUMP JUMPDEST PUSH2 0x2F6 PUSH2 0x2A9 CALLDATASIZE PUSH1 0x4 PUSH2 0x10C6 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0x5 DUP7 ADD SLOAD SWAP6 SWAP1 SWAP7 ADD SLOAD SWAP4 SWAP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP6 SWAP4 SWAP1 SWAP3 AND SWAP4 SWAP1 SWAP3 SWAP1 PUSH1 0xFF AND DUP8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP8 DUP9 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 DUP8 AND PUSH1 0x20 DUP10 ADD MSTORE SWAP5 SWAP1 SWAP6 AND SWAP4 DUP7 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x60 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 ADD PUSH2 0x15C JUMP JUMPDEST PUSH2 0x1E2 PUSH2 0x347 CALLDATASIZE PUSH1 0x4 PUSH2 0x10DF JUMP JUMPDEST PUSH2 0x6D2 JUMP JUMPDEST PUSH2 0x18C PUSH2 0x35A CALLDATASIZE PUSH1 0x4 PUSH2 0x1114 JUMP JUMPDEST PUSH2 0x8A2 JUMP JUMPDEST PUSH2 0x1E2 PUSH2 0x36D CALLDATASIZE PUSH1 0x4 PUSH2 0x10A4 JUMP JUMPDEST PUSH2 0x8CD JUMP JUMPDEST PUSH2 0x1E2 PUSH2 0x380 CALLDATASIZE PUSH1 0x4 PUSH2 0x10A4 JUMP JUMPDEST PUSH2 0x8F7 JUMP JUMPDEST PUSH2 0x1E2 PUSH2 0x393 CALLDATASIZE PUSH1 0x4 PUSH2 0x10C6 JUMP JUMPDEST PUSH2 0x970 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x3A7 SWAP1 PUSH2 0x1147 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3D3 SWAP1 PUSH2 0x1147 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x420 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3F5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x420 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x403 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x438 DUP2 DUP6 DUP6 PUSH2 0xB20 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x450 DUP6 DUP3 DUP6 PUSH2 0xC44 JUMP JUMPDEST PUSH2 0x45B DUP6 DUP6 DUP6 PUSH2 0xCBE JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x438 DUP2 DUP6 DUP6 PUSH2 0x479 DUP4 DUP4 PUSH2 0x8A2 JUMP JUMPDEST PUSH2 0x483 SWAP2 SWAP1 PUSH2 0x1197 JUMP JUMPDEST PUSH2 0xB20 JUMP JUMPDEST PUSH2 0x490 PUSH2 0xE62 JUMP JUMPDEST PUSH2 0x49A DUP3 DUP3 PUSH2 0xEBC JUMP JUMPDEST POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x0 DUP2 GT PUSH2 0x503 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520646F6E2774206861766520766F74696E6720706F7765720000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x8 SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP TIMESTAMP DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP CALLER DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP DUP6 DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP DUP5 DUP2 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP DUP3 DUP2 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH1 0x5 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH1 0x6 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x7 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x8 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x617 SWAP1 PUSH2 0x11AF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP SWAP2 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x62E PUSH2 0xE62 JUMP JUMPDEST PUSH2 0x638 PUSH1 0x0 PUSH2 0xF7B JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x3A7 SWAP1 PUSH2 0x1147 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x657 DUP3 DUP7 PUSH2 0x8A2 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x6B7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4FA JUMP JUMPDEST PUSH2 0x45B DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0xB20 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x438 DUP2 DUP6 DUP6 PUSH2 0xCBE JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x73C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416C726561647920766F746564206F6E20746869732070726F706F73616C0000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4FA JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 PUSH2 0x799 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520646F6E2774206861766520766F74696E6720706F7765720000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4FA JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x7F1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x111BD95CDB89DD08195E1A5CDD PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4FA JUMP JUMPDEST PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x83A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x105B1C9958591E481C1C9BD8D95CDCD959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4FA JUMP JUMPDEST DUP3 ISZERO PUSH2 0x85F JUMPI DUP2 DUP2 PUSH1 0x4 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x854 SWAP2 SWAP1 PUSH2 0x1197 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x879 SWAP1 POP JUMP JUMPDEST DUP2 DUP2 PUSH1 0x5 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x873 SWAP2 SWAP1 PUSH2 0x1197 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST POP POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x8D5 PUSH2 0xE62 JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x8FF PUSH2 0xE62 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x964 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4FA JUMP JUMPDEST PUSH2 0x96D DUP2 PUSH2 0xF7B JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x9C8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x111BD95CDB89DD08195E1A5CDD PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4FA JUMP JUMPDEST DUP1 SLOAD PUSH2 0x9F5 SWAP1 PUSH32 0x0 SWAP1 PUSH2 0x1197 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0xA39 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x2B37BA34B7339034B9903737BA1037BB32B9 PUSH1 0x71 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4FA JUMP JUMPDEST PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xA8E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F706F736C20616C72656164792070726F63657373656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4FA JUMP JUMPDEST DUP1 PUSH1 0x5 ADD SLOAD DUP2 PUSH1 0x4 ADD SLOAD GT ISZERO PUSH2 0xB0F JUMPI PUSH1 0x9 SLOAD PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0x126BE983 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 AND SWAP1 PUSH4 0x935F4C18 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAF6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB0A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH1 0x6 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xB82 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xBE3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC50 DUP5 DUP5 PUSH2 0x8A2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0xCB8 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xCAB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4FA JUMP JUMPDEST PUSH2 0xCB8 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0xB20 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xD22 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xD84 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xDFC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xCB8 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x638 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xF12 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4FA JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xF24 SWAP2 SWAP1 PUSH2 0x1197 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE MLOAD DUP5 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xFFA JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xFDE JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x100C JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1039 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1051 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x105A DUP4 PUSH2 0x1022 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x107D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1086 DUP5 PUSH2 0x1022 JUMP JUMPDEST SWAP3 POP PUSH2 0x1094 PUSH1 0x20 DUP6 ADD PUSH2 0x1022 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10BF DUP3 PUSH2 0x1022 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x10F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1109 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1127 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1130 DUP4 PUSH2 0x1022 JUMP JUMPDEST SWAP2 POP PUSH2 0x113E PUSH1 0x20 DUP5 ADD PUSH2 0x1022 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x115B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x117B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x11AA JUMPI PUSH2 0x11AA PUSH2 0x1181 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x11C1 JUMPI PUSH2 0x11C1 PUSH2 0x1181 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 XOR LOG2 RETURNDATASIZE 0xE7 0xBB 0xE GASLIMIT PUSH16 0x18346E2848DF37AB3512FE6939685960 PUSH2 0x2803 0xDE 0xE8 0xB4 PUSH19 0xC664736F6C634300080D003300000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        438,
        3222
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "5": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "CALLVALUE",
      "path": "25"
    },
    "6": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "DUP1",
      "path": "25"
    },
    "7": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "8": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "12": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "DUP1",
      "path": "25"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "REVERT",
      "path": "25"
    },
    "16": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "17": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "POP",
      "path": "25"
    },
    "18": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "CALLDATASIZE",
      "path": "25"
    },
    "21": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "LT",
      "path": "25"
    },
    "22": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x142"
    },
    "25": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "26": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "CALLDATALOAD",
      "path": "25"
    },
    "29": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "SHR",
      "path": "25"
    },
    "32": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "DUP1",
      "path": "25"
    },
    "33": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x74CB3041"
    },
    "38": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "GT",
      "path": "25"
    },
    "39": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xB8"
    },
    "42": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "43": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "DUP1",
      "path": "25"
    },
    "44": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0xC7F758A8"
    },
    "49": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "GT",
      "path": "25"
    },
    "50": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x7C"
    },
    "53": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "54": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "DUP1",
      "path": "25"
    },
    "55": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0xC7F758A8"
    },
    "60": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "EQ",
      "path": "25"
    },
    "61": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x29B"
    },
    "64": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "65": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "DUP1",
      "path": "25"
    },
    "66": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0xC9D27AFE"
    },
    "71": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "EQ",
      "path": "25"
    },
    "72": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x339"
    },
    "75": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "76": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "DUP1",
      "path": "25"
    },
    "77": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0xDD62ED3E"
    },
    "82": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "EQ",
      "path": "25"
    },
    "83": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x34C"
    },
    "86": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "87": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "DUP1",
      "path": "25"
    },
    "88": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0xF0F44260"
    },
    "93": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "EQ",
      "path": "25"
    },
    "94": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x35F"
    },
    "97": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "98": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "DUP1",
      "path": "25"
    },
    "99": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0xF2FDE38B"
    },
    "104": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "EQ",
      "path": "25"
    },
    "105": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x372"
    },
    "108": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "109": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "DUP1",
      "path": "25"
    },
    "110": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0xFE0D94C1"
    },
    "115": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "EQ",
      "path": "25"
    },
    "116": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x385"
    },
    "119": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "120": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "122": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "DUP1",
      "path": "25"
    },
    "123": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "REVERT",
      "path": "25"
    },
    "124": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "125": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "DUP1",
      "path": "25"
    },
    "126": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x74CB3041"
    },
    "131": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "EQ",
      "path": "25"
    },
    "132": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x253"
    },
    "135": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "136": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "DUP1",
      "path": "25"
    },
    "137": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x8DA5CB5B"
    },
    "142": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "EQ",
      "path": "25"
    },
    "143": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x25C"
    },
    "146": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "147": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "DUP1",
      "path": "25"
    },
    "148": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x95D89B41"
    },
    "153": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "EQ",
      "path": "25"
    },
    "154": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x26D"
    },
    "157": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "158": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "DUP1",
      "path": "25"
    },
    "159": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0xA457C2D7"
    },
    "164": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "EQ",
      "path": "25"
    },
    "165": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x275"
    },
    "168": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "169": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "DUP1",
      "path": "25"
    },
    "170": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0xA9059CBB"
    },
    "175": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "EQ",
      "path": "25"
    },
    "176": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x288"
    },
    "179": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "180": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "182": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "DUP1",
      "path": "25"
    },
    "183": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "REVERT",
      "path": "25"
    },
    "184": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "185": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "DUP1",
      "path": "25"
    },
    "186": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x39509351"
    },
    "191": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "GT",
      "path": "25"
    },
    "192": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x10A"
    },
    "195": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "196": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "DUP1",
      "path": "25"
    },
    "197": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x39509351"
    },
    "202": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "EQ",
      "path": "25"
    },
    "203": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1BC"
    },
    "206": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "207": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "DUP1",
      "path": "25"
    },
    "208": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x40C10F19"
    },
    "213": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "EQ",
      "path": "25"
    },
    "214": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1CF"
    },
    "217": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "218": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "DUP1",
      "path": "25"
    },
    "219": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x589DE5DF"
    },
    "224": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "EQ",
      "path": "25"
    },
    "225": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1E4"
    },
    "228": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "229": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "DUP1",
      "path": "25"
    },
    "230": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x61D027B3"
    },
    "235": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "EQ",
      "path": "25"
    },
    "236": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1F7"
    },
    "239": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "240": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "DUP1",
      "path": "25"
    },
    "241": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x70A08231"
    },
    "246": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "EQ",
      "path": "25"
    },
    "247": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x222"
    },
    "250": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "251": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "DUP1",
      "path": "25"
    },
    "252": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x715018A6"
    },
    "257": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "EQ",
      "path": "25"
    },
    "258": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x24B"
    },
    "261": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "262": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "264": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "DUP1",
      "path": "25"
    },
    "265": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "REVERT",
      "path": "25"
    },
    "266": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "267": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "DUP1",
      "path": "25"
    },
    "268": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x6FDDE03"
    },
    "273": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "EQ",
      "path": "25"
    },
    "274": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x147"
    },
    "277": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "278": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "DUP1",
      "path": "25"
    },
    "279": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x95EA7B3"
    },
    "284": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "EQ",
      "path": "25"
    },
    "285": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x165"
    },
    "288": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "289": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "DUP1",
      "path": "25"
    },
    "290": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x18160DDD"
    },
    "295": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "EQ",
      "path": "25"
    },
    "296": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x188"
    },
    "299": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "300": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "DUP1",
      "path": "25"
    },
    "301": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x23B872DD"
    },
    "306": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "EQ",
      "path": "25"
    },
    "307": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x19A"
    },
    "310": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "311": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "DUP1",
      "path": "25"
    },
    "312": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x313CE567"
    },
    "317": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "EQ",
      "path": "25"
    },
    "318": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1AD"
    },
    "321": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "322": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "323": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "325": {
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "DUP1",
      "path": "25"
    },
    "326": {
      "first_revert": true,
      "fn": null,
      "offset": [
        438,
        3222
      ],
      "op": "REVERT",
      "path": "25"
    },
    "327": {
      "fn": "ERC20.name",
      "offset": [
        2154,
        2252
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "328": {
      "fn": "ERC20.name",
      "offset": [
        2154,
        2252
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x14F"
    },
    "331": {
      "fn": "ERC20.name",
      "offset": [
        2154,
        2252
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x398"
    },
    "334": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2154,
        2252
      ],
      "op": "JUMP",
      "path": "2"
    },
    "335": {
      "fn": "ERC20.name",
      "offset": [
        2154,
        2252
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "336": {
      "fn": "ERC20.name",
      "offset": [
        2154,
        2252
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "338": {
      "fn": "ERC20.name",
      "offset": [
        2154,
        2252
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "339": {
      "fn": "ERC20.name",
      "offset": [
        2154,
        2252
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x15C"
    },
    "342": {
      "fn": "ERC20.name",
      "offset": [
        2154,
        2252
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "343": {
      "fn": "ERC20.name",
      "offset": [
        2154,
        2252
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "344": {
      "fn": "ERC20.name",
      "offset": [
        2154,
        2252
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFCD"
    },
    "347": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2154,
        2252
      ],
      "op": "JUMP",
      "path": "2"
    },
    "348": {
      "fn": "ERC20.name",
      "offset": [
        2154,
        2252
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "349": {
      "fn": "ERC20.name",
      "offset": [
        2154,
        2252
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "351": {
      "fn": "ERC20.name",
      "offset": [
        2154,
        2252
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "352": {
      "fn": "ERC20.name",
      "offset": [
        2154,
        2252
      ],
      "op": "DUP1",
      "path": "2"
    },
    "353": {
      "fn": "ERC20.name",
      "offset": [
        2154,
        2252
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "354": {
      "fn": "ERC20.name",
      "offset": [
        2154,
        2252
      ],
      "op": "SUB",
      "path": "2"
    },
    "355": {
      "fn": "ERC20.name",
      "offset": [
        2154,
        2252
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "356": {
      "fn": "ERC20.name",
      "offset": [
        2154,
        2252
      ],
      "op": "RETURN",
      "path": "2"
    },
    "357": {
      "fn": "ERC20.approve",
      "offset": [
        4431,
        4628
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "358": {
      "fn": "ERC20.approve",
      "offset": [
        4431,
        4628
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x178"
    },
    "361": {
      "fn": "ERC20.approve",
      "offset": [
        4431,
        4628
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x173"
    },
    "364": {
      "fn": "ERC20.approve",
      "offset": [
        4431,
        4628
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "365": {
      "fn": "ERC20.approve",
      "offset": [
        4431,
        4628
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "367": {
      "fn": "ERC20.approve",
      "offset": [
        4431,
        4628
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x103E"
    },
    "370": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4431,
        4628
      ],
      "op": "JUMP",
      "path": "2"
    },
    "371": {
      "fn": "ERC20.approve",
      "offset": [
        4431,
        4628
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "372": {
      "fn": "ERC20.approve",
      "offset": [
        4431,
        4628
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x42A"
    },
    "375": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4431,
        4628
      ],
      "op": "JUMP",
      "path": "2"
    },
    "376": {
      "fn": "ERC20.approve",
      "offset": [
        4431,
        4628
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "377": {
      "fn": "ERC20.approve",
      "offset": [
        4431,
        4628
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "379": {
      "fn": "ERC20.approve",
      "offset": [
        4431,
        4628
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "380": {
      "op": "SWAP1"
    },
    "381": {
      "op": "ISZERO"
    },
    "382": {
      "op": "ISZERO"
    },
    "383": {
      "op": "DUP2"
    },
    "384": {
      "op": "MSTORE"
    },
    "385": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "387": {
      "op": "ADD"
    },
    "388": {
      "fn": "ERC20.approve",
      "offset": [
        4431,
        4628
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x15C"
    },
    "391": {
      "op": "JUMP"
    },
    "392": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3242,
        3348
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "393": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3329,
        3341
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 0,
      "value": "0x2"
    },
    "395": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3329,
        3341
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "396": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3242,
        3348
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "397": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3242,
        3348
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "399": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3242,
        3348
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "400": {
      "op": "SWAP1"
    },
    "401": {
      "op": "DUP2"
    },
    "402": {
      "op": "MSTORE"
    },
    "403": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "405": {
      "op": "ADD"
    },
    "406": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3242,
        3348
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x15C"
    },
    "409": {
      "op": "JUMP"
    },
    "410": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5190,
        5476
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "411": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5190,
        5476
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x178"
    },
    "414": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5190,
        5476
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A8"
    },
    "417": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5190,
        5476
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "418": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5190,
        5476
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "420": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5190,
        5476
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1068"
    },
    "423": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5190,
        5476
      ],
      "op": "JUMP",
      "path": "2"
    },
    "424": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5190,
        5476
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "425": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5190,
        5476
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x442"
    },
    "428": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5190,
        5476
      ],
      "op": "JUMP",
      "path": "2"
    },
    "429": {
      "fn": "ERC20.decimals",
      "offset": [
        3091,
        3182
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "430": {
      "fn": "ERC20.decimals",
      "offset": [
        3091,
        3182
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "432": {
      "fn": "ERC20.decimals",
      "offset": [
        3091,
        3182
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "433": {
      "fn": "ERC20.decimals",
      "offset": [
        3173,
        3175
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 1,
      "value": "0x12"
    },
    "435": {
      "op": "DUP2"
    },
    "436": {
      "op": "MSTORE"
    },
    "437": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "439": {
      "op": "ADD"
    },
    "440": {
      "fn": "ERC20.decimals",
      "offset": [
        3091,
        3182
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x15C"
    },
    "443": {
      "op": "JUMP"
    },
    "444": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5871,
        6105
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "445": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5871,
        6105
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x178"
    },
    "448": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5871,
        6105
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1CA"
    },
    "451": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5871,
        6105
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "452": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5871,
        6105
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "454": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5871,
        6105
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x103E"
    },
    "457": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5871,
        6105
      ],
      "op": "JUMP",
      "path": "2"
    },
    "458": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5871,
        6105
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "459": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5871,
        6105
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x466"
    },
    "462": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5871,
        6105
      ],
      "op": "JUMP",
      "path": "2"
    },
    "463": {
      "fn": "TheGridDAO.mint",
      "offset": [
        1165,
        1262
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "464": {
      "fn": "TheGridDAO.mint",
      "offset": [
        1165,
        1262
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1E2"
    },
    "467": {
      "fn": "TheGridDAO.mint",
      "offset": [
        1165,
        1262
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1DD"
    },
    "470": {
      "fn": "TheGridDAO.mint",
      "offset": [
        1165,
        1262
      ],
      "op": "CALLDATASIZE",
      "path": "25"
    },
    "471": {
      "fn": "TheGridDAO.mint",
      "offset": [
        1165,
        1262
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "473": {
      "fn": "TheGridDAO.mint",
      "offset": [
        1165,
        1262
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x103E"
    },
    "476": {
      "fn": "TheGridDAO.mint",
      "jump": "i",
      "offset": [
        1165,
        1262
      ],
      "op": "JUMP",
      "path": "25"
    },
    "477": {
      "fn": "TheGridDAO.mint",
      "offset": [
        1165,
        1262
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "478": {
      "fn": "TheGridDAO.mint",
      "offset": [
        1165,
        1262
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x488"
    },
    "481": {
      "fn": "TheGridDAO.mint",
      "jump": "i",
      "offset": [
        1165,
        1262
      ],
      "op": "JUMP",
      "path": "25"
    },
    "482": {
      "fn": "TheGridDAO.mint",
      "offset": [
        1165,
        1262
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "483": {
      "fn": "TheGridDAO.mint",
      "offset": [
        1165,
        1262
      ],
      "op": "STOP",
      "path": "25"
    },
    "484": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1268,
        1971
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "485": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1268,
        1971
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x18C"
    },
    "488": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1268,
        1971
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1F2"
    },
    "491": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1268,
        1971
      ],
      "op": "CALLDATASIZE",
      "path": "25"
    },
    "492": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1268,
        1971
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "494": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1268,
        1971
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x103E"
    },
    "497": {
      "fn": "TheGridDAO.propose",
      "jump": "i",
      "offset": [
        1268,
        1971
      ],
      "op": "JUMP",
      "path": "25"
    },
    "498": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1268,
        1971
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "499": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1268,
        1971
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x49E"
    },
    "502": {
      "fn": "TheGridDAO.propose",
      "jump": "i",
      "offset": [
        1268,
        1971
      ],
      "op": "JUMP",
      "path": "25"
    },
    "503": {
      "offset": [
        926,
        958
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "504": {
      "fn": "TheGridDAO.propose",
      "offset": [
        926,
        958
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x9"
    },
    "506": {
      "fn": "TheGridDAO.propose",
      "offset": [
        926,
        958
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "507": {
      "fn": "TheGridDAO.propose",
      "offset": [
        926,
        958
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x20A"
    },
    "510": {
      "fn": "TheGridDAO.propose",
      "offset": [
        926,
        958
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "511": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "513": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "515": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "517": {
      "op": "SHL"
    },
    "518": {
      "op": "SUB"
    },
    "519": {
      "offset": [
        926,
        958
      ],
      "op": "AND",
      "path": "25"
    },
    "520": {
      "fn": "TheGridDAO.propose",
      "offset": [
        926,
        958
      ],
      "op": "DUP2",
      "path": "25"
    },
    "521": {
      "fn": "TheGridDAO.propose",
      "offset": [
        926,
        958
      ],
      "op": "JUMP",
      "path": "25"
    },
    "522": {
      "fn": "TheGridDAO.propose",
      "offset": [
        926,
        958
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "523": {
      "fn": "TheGridDAO.propose",
      "offset": [
        926,
        958
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "525": {
      "fn": "TheGridDAO.propose",
      "offset": [
        926,
        958
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "526": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "528": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "530": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "532": {
      "op": "SHL"
    },
    "533": {
      "op": "SUB"
    },
    "534": {
      "op": "SWAP1"
    },
    "535": {
      "op": "SWAP2"
    },
    "536": {
      "op": "AND"
    },
    "537": {
      "op": "DUP2"
    },
    "538": {
      "op": "MSTORE"
    },
    "539": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "541": {
      "op": "ADD"
    },
    "542": {
      "offset": [
        926,
        958
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x15C"
    },
    "545": {
      "op": "JUMP"
    },
    "546": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3406,
        3531
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "547": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3406,
        3531
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x18C"
    },
    "550": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3406,
        3531
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x230"
    },
    "553": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3406,
        3531
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "554": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3406,
        3531
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "556": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3406,
        3531
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x10A4"
    },
    "559": {
      "fn": "ERC20.balanceOf",
      "jump": "i",
      "offset": [
        3406,
        3531
      ],
      "op": "JUMP",
      "path": "2"
    },
    "560": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3406,
        3531
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "561": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "563": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "565": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "567": {
      "op": "SHL"
    },
    "568": {
      "op": "SUB"
    },
    "569": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3506,
        3524
      ],
      "op": "AND",
      "path": "2",
      "statement": 2
    },
    "570": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3480,
        3487
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "572": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3506,
        3524
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "573": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3506,
        3524
      ],
      "op": "DUP2",
      "path": "2"
    },
    "574": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3506,
        3524
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "575": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3506,
        3524
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "577": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3506,
        3524
      ],
      "op": "DUP2",
      "path": "2"
    },
    "578": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3506,
        3524
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "579": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3506,
        3524
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "580": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3506,
        3524
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "582": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3506,
        3524
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "583": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3506,
        3524
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "584": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3506,
        3524
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "585": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3506,
        3524
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "586": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3406,
        3531
      ],
      "op": "JUMP",
      "path": "2"
    },
    "587": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "588": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E2"
    },
    "591": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x626"
    },
    "594": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1831,
        1932
      ],
      "op": "JUMP",
      "path": "0"
    },
    "595": {
      "offset": [
        891,
        920
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "596": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        891,
        920
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x18C"
    },
    "599": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        891,
        920
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "601": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        891,
        920
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "602": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        891,
        920
      ],
      "op": "DUP2",
      "path": "25"
    },
    "603": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        891,
        920
      ],
      "op": "JUMP",
      "path": "25"
    },
    "604": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "605": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 3,
      "value": "0x5"
    },
    "607": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "608": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "610": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "612": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "614": {
      "op": "SHL"
    },
    "615": {
      "op": "SUB"
    },
    "616": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "AND",
      "path": "0"
    },
    "617": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x20A"
    },
    "620": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "JUMP",
      "path": "0"
    },
    "621": {
      "fn": "ERC20.symbol",
      "offset": [
        2365,
        2467
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "622": {
      "fn": "ERC20.symbol",
      "offset": [
        2365,
        2467
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x14F"
    },
    "625": {
      "fn": "ERC20.symbol",
      "offset": [
        2365,
        2467
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x63A"
    },
    "628": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        2365,
        2467
      ],
      "op": "JUMP",
      "path": "2"
    },
    "629": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6592,
        7019
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "630": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6592,
        7019
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x178"
    },
    "633": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6592,
        7019
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x283"
    },
    "636": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6592,
        7019
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "637": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6592,
        7019
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "639": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6592,
        7019
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x103E"
    },
    "642": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6592,
        7019
      ],
      "op": "JUMP",
      "path": "2"
    },
    "643": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6592,
        7019
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "644": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6592,
        7019
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x649"
    },
    "647": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6592,
        7019
      ],
      "op": "JUMP",
      "path": "2"
    },
    "648": {
      "fn": "ERC20.transfer",
      "offset": [
        3727,
        3916
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "649": {
      "fn": "ERC20.transfer",
      "offset": [
        3727,
        3916
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x178"
    },
    "652": {
      "fn": "ERC20.transfer",
      "offset": [
        3727,
        3916
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x296"
    },
    "655": {
      "fn": "ERC20.transfer",
      "offset": [
        3727,
        3916
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "656": {
      "fn": "ERC20.transfer",
      "offset": [
        3727,
        3916
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "658": {
      "fn": "ERC20.transfer",
      "offset": [
        3727,
        3916
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x103E"
    },
    "661": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3727,
        3916
      ],
      "op": "JUMP",
      "path": "2"
    },
    "662": {
      "fn": "ERC20.transfer",
      "offset": [
        3727,
        3916
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "663": {
      "fn": "ERC20.transfer",
      "offset": [
        3727,
        3916
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6C4"
    },
    "666": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3727,
        3916
      ],
      "op": "JUMP",
      "path": "2"
    },
    "667": {
      "offset": [
        706,
        750
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "668": {
      "fn": "ERC20.transfer",
      "offset": [
        706,
        750
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2F6"
    },
    "671": {
      "fn": "ERC20.transfer",
      "offset": [
        706,
        750
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2A9"
    },
    "674": {
      "fn": "ERC20.transfer",
      "offset": [
        706,
        750
      ],
      "op": "CALLDATASIZE",
      "path": "25"
    },
    "675": {
      "fn": "ERC20.transfer",
      "offset": [
        706,
        750
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "677": {
      "fn": "ERC20.transfer",
      "offset": [
        706,
        750
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x10C6"
    },
    "680": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        706,
        750
      ],
      "op": "JUMP",
      "path": "25"
    },
    "681": {
      "fn": "ERC20.transfer",
      "offset": [
        706,
        750
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "682": {
      "fn": "ERC20.transfer",
      "offset": [
        706,
        750
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x6"
    },
    "684": {
      "fn": "ERC20.transfer",
      "offset": [
        706,
        750
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "686": {
      "fn": "ERC20.transfer",
      "offset": [
        706,
        750
      ],
      "op": "DUP2",
      "path": "25"
    },
    "687": {
      "fn": "ERC20.transfer",
      "offset": [
        706,
        750
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "688": {
      "fn": "ERC20.transfer",
      "offset": [
        706,
        750
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "689": {
      "fn": "ERC20.transfer",
      "offset": [
        706,
        750
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "691": {
      "fn": "ERC20.transfer",
      "offset": [
        706,
        750
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "692": {
      "fn": "ERC20.transfer",
      "offset": [
        706,
        750
      ],
      "op": "DUP3",
      "path": "25"
    },
    "693": {
      "fn": "ERC20.transfer",
      "offset": [
        706,
        750
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "694": {
      "fn": "ERC20.transfer",
      "offset": [
        706,
        750
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "696": {
      "fn": "ERC20.transfer",
      "offset": [
        706,
        750
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "697": {
      "fn": "ERC20.transfer",
      "offset": [
        706,
        750
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "698": {
      "fn": "ERC20.transfer",
      "offset": [
        706,
        750
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "699": {
      "fn": "ERC20.transfer",
      "offset": [
        706,
        750
      ],
      "op": "DUP1",
      "path": "25"
    },
    "700": {
      "fn": "ERC20.transfer",
      "offset": [
        706,
        750
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "701": {
      "fn": "ERC20.transfer",
      "offset": [
        706,
        750
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1"
    },
    "703": {
      "fn": "ERC20.transfer",
      "offset": [
        706,
        750
      ],
      "op": "DUP3",
      "path": "25"
    },
    "704": {
      "fn": "ERC20.transfer",
      "offset": [
        706,
        750
      ],
      "op": "ADD",
      "path": "25"
    },
    "705": {
      "fn": "ERC20.transfer",
      "offset": [
        706,
        750
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "706": {
      "fn": "ERC20.transfer",
      "offset": [
        706,
        750
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x2"
    },
    "708": {
      "fn": "ERC20.transfer",
      "offset": [
        706,
        750
      ],
      "op": "DUP4",
      "path": "25"
    },
    "709": {
      "fn": "ERC20.transfer",
      "offset": [
        706,
        750
      ],
      "op": "ADD",
      "path": "25"
    },
    "710": {
      "fn": "ERC20.transfer",
      "offset": [
        706,
        750
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "711": {
      "fn": "ERC20.transfer",
      "offset": [
        706,
        750
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x3"
    },
    "713": {
      "fn": "ERC20.transfer",
      "offset": [
        706,
        750
      ],
      "op": "DUP5",
      "path": "25"
    },
    "714": {
      "fn": "ERC20.transfer",
      "offset": [
        706,
        750
      ],
      "op": "ADD",
      "path": "25"
    },
    "715": {
      "fn": "ERC20.transfer",
      "offset": [
        706,
        750
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "716": {
      "fn": "ERC20.transfer",
      "offset": [
        706,
        750
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "718": {
      "fn": "ERC20.transfer",
      "offset": [
        706,
        750
      ],
      "op": "DUP6",
      "path": "25"
    },
    "719": {
      "fn": "ERC20.transfer",
      "offset": [
        706,
        750
      ],
      "op": "ADD",
      "path": "25"
    },
    "720": {
      "fn": "ERC20.transfer",
      "offset": [
        706,
        750
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "721": {
      "fn": "ERC20.transfer",
      "offset": [
        706,
        750
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x5"
    },
    "723": {
      "fn": "ERC20.transfer",
      "offset": [
        706,
        750
      ],
      "op": "DUP7",
      "path": "25"
    },
    "724": {
      "fn": "ERC20.transfer",
      "offset": [
        706,
        750
      ],
      "op": "ADD",
      "path": "25"
    },
    "725": {
      "fn": "ERC20.transfer",
      "offset": [
        706,
        750
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "726": {
      "fn": "ERC20.transfer",
      "offset": [
        706,
        750
      ],
      "op": "SWAP6",
      "path": "25"
    },
    "727": {
      "fn": "ERC20.transfer",
      "offset": [
        706,
        750
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "728": {
      "fn": "ERC20.transfer",
      "offset": [
        706,
        750
      ],
      "op": "SWAP7",
      "path": "25"
    },
    "729": {
      "fn": "ERC20.transfer",
      "offset": [
        706,
        750
      ],
      "op": "ADD",
      "path": "25"
    },
    "730": {
      "fn": "ERC20.transfer",
      "offset": [
        706,
        750
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "731": {
      "fn": "ERC20.transfer",
      "offset": [
        706,
        750
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "732": {
      "fn": "ERC20.transfer",
      "offset": [
        706,
        750
      ],
      "op": "SWAP6",
      "path": "25"
    },
    "733": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "735": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "737": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "739": {
      "op": "SHL"
    },
    "740": {
      "op": "SUB"
    },
    "741": {
      "offset": [
        706,
        750
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "742": {
      "fn": "ERC20.transfer",
      "offset": [
        706,
        750
      ],
      "op": "DUP5",
      "path": "25"
    },
    "743": {
      "fn": "ERC20.transfer",
      "offset": [
        706,
        750
      ],
      "op": "AND",
      "path": "25"
    },
    "744": {
      "fn": "ERC20.transfer",
      "offset": [
        706,
        750
      ],
      "op": "SWAP6",
      "path": "25"
    },
    "745": {
      "fn": "ERC20.transfer",
      "offset": [
        706,
        750
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "746": {
      "fn": "ERC20.transfer",
      "offset": [
        706,
        750
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "747": {
      "fn": "ERC20.transfer",
      "offset": [
        706,
        750
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "748": {
      "fn": "ERC20.transfer",
      "offset": [
        706,
        750
      ],
      "op": "AND",
      "path": "25"
    },
    "749": {
      "fn": "ERC20.transfer",
      "offset": [
        706,
        750
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "750": {
      "fn": "ERC20.transfer",
      "offset": [
        706,
        750
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "751": {
      "fn": "ERC20.transfer",
      "offset": [
        706,
        750
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "752": {
      "fn": "ERC20.transfer",
      "offset": [
        706,
        750
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "753": {
      "fn": "ERC20.transfer",
      "offset": [
        706,
        750
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "755": {
      "fn": "ERC20.transfer",
      "offset": [
        706,
        750
      ],
      "op": "AND",
      "path": "25"
    },
    "756": {
      "fn": "ERC20.transfer",
      "offset": [
        706,
        750
      ],
      "op": "DUP8",
      "path": "25"
    },
    "757": {
      "fn": "ERC20.transfer",
      "offset": [
        706,
        750
      ],
      "op": "JUMP",
      "path": "25"
    },
    "758": {
      "fn": "ERC20.transfer",
      "offset": [
        706,
        750
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "759": {
      "fn": "ERC20.transfer",
      "offset": [
        706,
        750
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "761": {
      "fn": "ERC20.transfer",
      "offset": [
        706,
        750
      ],
      "op": "DUP1",
      "path": "25"
    },
    "762": {
      "fn": "ERC20.transfer",
      "offset": [
        706,
        750
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "763": {
      "op": "SWAP8"
    },
    "764": {
      "op": "DUP9"
    },
    "765": {
      "op": "MSTORE"
    },
    "766": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "768": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "770": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "772": {
      "op": "SHL"
    },
    "773": {
      "op": "SUB"
    },
    "774": {
      "op": "SWAP7"
    },
    "775": {
      "op": "DUP8"
    },
    "776": {
      "op": "AND"
    },
    "777": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "779": {
      "op": "DUP10"
    },
    "780": {
      "op": "ADD"
    },
    "781": {
      "op": "MSTORE"
    },
    "782": {
      "op": "SWAP5"
    },
    "783": {
      "op": "SWAP1"
    },
    "784": {
      "op": "SWAP6"
    },
    "785": {
      "op": "AND"
    },
    "786": {
      "op": "SWAP4"
    },
    "787": {
      "op": "DUP7"
    },
    "788": {
      "op": "ADD"
    },
    "789": {
      "op": "SWAP4"
    },
    "790": {
      "op": "SWAP1"
    },
    "791": {
      "op": "SWAP4"
    },
    "792": {
      "op": "MSTORE"
    },
    "793": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "795": {
      "op": "DUP6"
    },
    "796": {
      "op": "ADD"
    },
    "797": {
      "op": "SWAP2"
    },
    "798": {
      "op": "SWAP1"
    },
    "799": {
      "op": "SWAP2"
    },
    "800": {
      "op": "MSTORE"
    },
    "801": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "803": {
      "op": "DUP5"
    },
    "804": {
      "op": "ADD"
    },
    "805": {
      "op": "MSTORE"
    },
    "806": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "808": {
      "op": "DUP4"
    },
    "809": {
      "op": "ADD"
    },
    "810": {
      "op": "MSTORE"
    },
    "811": {
      "op": "ISZERO"
    },
    "812": {
      "op": "ISZERO"
    },
    "813": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "815": {
      "op": "DUP3"
    },
    "816": {
      "op": "ADD"
    },
    "817": {
      "op": "MSTORE"
    },
    "818": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "820": {
      "op": "ADD"
    },
    "821": {
      "offset": [
        706,
        750
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x15C"
    },
    "824": {
      "op": "JUMP"
    },
    "825": {
      "fn": "TheGridDAO.vote",
      "offset": [
        1977,
        2735
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "826": {
      "fn": "TheGridDAO.vote",
      "offset": [
        1977,
        2735
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1E2"
    },
    "829": {
      "fn": "TheGridDAO.vote",
      "offset": [
        1977,
        2735
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x347"
    },
    "832": {
      "fn": "TheGridDAO.vote",
      "offset": [
        1977,
        2735
      ],
      "op": "CALLDATASIZE",
      "path": "25"
    },
    "833": {
      "fn": "TheGridDAO.vote",
      "offset": [
        1977,
        2735
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "835": {
      "fn": "TheGridDAO.vote",
      "offset": [
        1977,
        2735
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x10DF"
    },
    "838": {
      "fn": "TheGridDAO.vote",
      "jump": "i",
      "offset": [
        1977,
        2735
      ],
      "op": "JUMP",
      "path": "25"
    },
    "839": {
      "fn": "TheGridDAO.vote",
      "offset": [
        1977,
        2735
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "840": {
      "fn": "TheGridDAO.vote",
      "offset": [
        1977,
        2735
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x6D2"
    },
    "843": {
      "fn": "TheGridDAO.vote",
      "jump": "i",
      "offset": [
        1977,
        2735
      ],
      "op": "JUMP",
      "path": "25"
    },
    "844": {
      "fn": "ERC20.allowance",
      "offset": [
        3974,
        4123
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "845": {
      "fn": "ERC20.allowance",
      "offset": [
        3974,
        4123
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x18C"
    },
    "848": {
      "fn": "ERC20.allowance",
      "offset": [
        3974,
        4123
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x35A"
    },
    "851": {
      "fn": "ERC20.allowance",
      "offset": [
        3974,
        4123
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "852": {
      "fn": "ERC20.allowance",
      "offset": [
        3974,
        4123
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "854": {
      "fn": "ERC20.allowance",
      "offset": [
        3974,
        4123
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1114"
    },
    "857": {
      "fn": "ERC20.allowance",
      "jump": "i",
      "offset": [
        3974,
        4123
      ],
      "op": "JUMP",
      "path": "2"
    },
    "858": {
      "fn": "ERC20.allowance",
      "offset": [
        3974,
        4123
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "859": {
      "fn": "ERC20.allowance",
      "offset": [
        3974,
        4123
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8A2"
    },
    "862": {
      "fn": "ERC20.allowance",
      "jump": "i",
      "offset": [
        3974,
        4123
      ],
      "op": "JUMP",
      "path": "2"
    },
    "863": {
      "fn": "TheGridDAO.setTreasury",
      "offset": [
        1045,
        1159
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "864": {
      "fn": "TheGridDAO.setTreasury",
      "offset": [
        1045,
        1159
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1E2"
    },
    "867": {
      "fn": "TheGridDAO.setTreasury",
      "offset": [
        1045,
        1159
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x36D"
    },
    "870": {
      "fn": "TheGridDAO.setTreasury",
      "offset": [
        1045,
        1159
      ],
      "op": "CALLDATASIZE",
      "path": "25"
    },
    "871": {
      "fn": "TheGridDAO.setTreasury",
      "offset": [
        1045,
        1159
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "873": {
      "fn": "TheGridDAO.setTreasury",
      "offset": [
        1045,
        1159
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x10A4"
    },
    "876": {
      "fn": "TheGridDAO.setTreasury",
      "jump": "i",
      "offset": [
        1045,
        1159
      ],
      "op": "JUMP",
      "path": "25"
    },
    "877": {
      "fn": "TheGridDAO.setTreasury",
      "offset": [
        1045,
        1159
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "878": {
      "fn": "TheGridDAO.setTreasury",
      "offset": [
        1045,
        1159
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x8CD"
    },
    "881": {
      "fn": "TheGridDAO.setTreasury",
      "jump": "i",
      "offset": [
        1045,
        1159
      ],
      "op": "JUMP",
      "path": "25"
    },
    "882": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "883": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E2"
    },
    "886": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x380"
    },
    "889": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "890": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "892": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10A4"
    },
    "895": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMP",
      "path": "0"
    },
    "896": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "897": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8F7"
    },
    "900": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMP",
      "path": "0"
    },
    "901": {
      "fn": "TheGridDAO.execute",
      "offset": [
        2741,
        3220
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "902": {
      "fn": "TheGridDAO.execute",
      "offset": [
        2741,
        3220
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1E2"
    },
    "905": {
      "fn": "TheGridDAO.execute",
      "offset": [
        2741,
        3220
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x393"
    },
    "908": {
      "fn": "TheGridDAO.execute",
      "offset": [
        2741,
        3220
      ],
      "op": "CALLDATASIZE",
      "path": "25"
    },
    "909": {
      "fn": "TheGridDAO.execute",
      "offset": [
        2741,
        3220
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "911": {
      "fn": "TheGridDAO.execute",
      "offset": [
        2741,
        3220
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x10C6"
    },
    "914": {
      "fn": "TheGridDAO.execute",
      "jump": "i",
      "offset": [
        2741,
        3220
      ],
      "op": "JUMP",
      "path": "25"
    },
    "915": {
      "fn": "TheGridDAO.execute",
      "offset": [
        2741,
        3220
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "916": {
      "fn": "TheGridDAO.execute",
      "offset": [
        2741,
        3220
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x970"
    },
    "919": {
      "fn": "TheGridDAO.execute",
      "jump": "i",
      "offset": [
        2741,
        3220
      ],
      "op": "JUMP",
      "path": "25"
    },
    "920": {
      "fn": "ERC20.name",
      "offset": [
        2154,
        2252
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "921": {
      "fn": "ERC20.name",
      "offset": [
        2208,
        2221
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "923": {
      "fn": "ERC20.name",
      "offset": [
        2240,
        2245
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 4,
      "value": "0x3"
    },
    "925": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "DUP1",
      "path": "2"
    },
    "926": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "927": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3A7"
    },
    "930": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "931": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1147"
    },
    "934": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2233,
        2245
      ],
      "op": "JUMP",
      "path": "2"
    },
    "935": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "936": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "DUP1",
      "path": "2"
    },
    "937": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "939": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "ADD",
      "path": "2"
    },
    "940": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "942": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "DUP1",
      "path": "2"
    },
    "943": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "944": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "DIV",
      "path": "2"
    },
    "945": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "MUL",
      "path": "2"
    },
    "946": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "948": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "ADD",
      "path": "2"
    },
    "949": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "951": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "952": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "953": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "DUP2",
      "path": "2"
    },
    "954": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "ADD",
      "path": "2"
    },
    "955": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "957": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "958": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "DUP1",
      "path": "2"
    },
    "959": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "960": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "961": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "962": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "DUP2",
      "path": "2"
    },
    "963": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "DUP2",
      "path": "2"
    },
    "964": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "965": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "967": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "ADD",
      "path": "2"
    },
    "968": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "DUP3",
      "path": "2"
    },
    "969": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "DUP1",
      "path": "2"
    },
    "970": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "971": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3D3"
    },
    "974": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "975": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1147"
    },
    "978": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2233,
        2245
      ],
      "op": "JUMP",
      "path": "2"
    },
    "979": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "980": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "DUP1",
      "path": "2"
    },
    "981": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "982": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x420"
    },
    "985": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "986": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "DUP1",
      "path": "2"
    },
    "987": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "989": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "LT",
      "path": "2"
    },
    "990": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3F5"
    },
    "993": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "994": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "997": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "DUP1",
      "path": "2"
    },
    "998": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "DUP4",
      "path": "2"
    },
    "999": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1000": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "DIV",
      "path": "2"
    },
    "1001": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "MUL",
      "path": "2"
    },
    "1002": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1003": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1004": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1005": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1007": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "ADD",
      "path": "2"
    },
    "1008": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1009": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x420"
    },
    "1012": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1013": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1014": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1015": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "ADD",
      "path": "2"
    },
    "1016": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1017": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1018": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1020": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1021": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1023": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1025": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1026": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1027": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1028": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1029": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1030": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1031": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1032": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1033": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1035": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "ADD",
      "path": "2"
    },
    "1036": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1037": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1039": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "ADD",
      "path": "2"
    },
    "1040": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1041": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1042": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "GT",
      "path": "2"
    },
    "1043": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x403"
    },
    "1046": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1047": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1048": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1049": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "SUB",
      "path": "2"
    },
    "1050": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1052": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "AND",
      "path": "2"
    },
    "1053": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1054": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "ADD",
      "path": "2"
    },
    "1055": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1056": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1057": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "POP",
      "path": "2"
    },
    "1058": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "POP",
      "path": "2"
    },
    "1059": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "POP",
      "path": "2"
    },
    "1060": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "POP",
      "path": "2"
    },
    "1061": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "POP",
      "path": "2"
    },
    "1062": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1063": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "POP",
      "path": "2"
    },
    "1064": {
      "fn": "ERC20.name",
      "offset": [
        2154,
        2252
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1065": {
      "fn": "ERC20.name",
      "jump": "o",
      "offset": [
        2154,
        2252
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1066": {
      "fn": "ERC20.approve",
      "offset": [
        4431,
        4628
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1067": {
      "fn": "ERC20.approve",
      "offset": [
        4514,
        4518
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1069": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "15",
      "statement": 5
    },
    "1070": {
      "fn": "ERC20.approve",
      "offset": [
        4568,
        4600
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 6,
      "value": "0x438"
    },
    "1073": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1074": {
      "fn": "ERC20.approve",
      "offset": [
        4584,
        4591
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1075": {
      "fn": "ERC20.approve",
      "offset": [
        4593,
        4599
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1076": {
      "fn": "ERC20.approve",
      "offset": [
        4568,
        4576
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB20"
    },
    "1079": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4568,
        4600
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1080": {
      "fn": "ERC20.approve",
      "offset": [
        4568,
        4600
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1081": {
      "op": "POP"
    },
    "1082": {
      "fn": "ERC20.approve",
      "offset": [
        4617,
        4621
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 7,
      "value": "0x1"
    },
    "1084": {
      "fn": "ERC20.approve",
      "offset": [
        4617,
        4621
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "1085": {
      "fn": "ERC20.approve",
      "offset": [
        4431,
        4628
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1086": {
      "op": "POP"
    },
    "1087": {
      "op": "POP"
    },
    "1088": {
      "op": "POP"
    },
    "1089": {
      "fn": "ERC20.approve",
      "jump": "o",
      "offset": [
        4431,
        4628
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1090": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5190,
        5476
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1091": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5317,
        5321
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1093": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "15"
    },
    "1094": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5373,
        5411
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 8,
      "value": "0x450"
    },
    "1097": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5389,
        5393
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1098": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1099": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5404,
        5410
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1100": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5373,
        5388
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC44"
    },
    "1103": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5373,
        5411
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1104": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5373,
        5411
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1105": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5421,
        5448
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 9,
      "value": "0x45B"
    },
    "1108": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5431,
        5435
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1109": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5437,
        5439
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1110": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5441,
        5447
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1111": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5421,
        5430
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCBE"
    },
    "1114": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5421,
        5448
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1115": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5421,
        5448
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1116": {
      "op": "POP"
    },
    "1117": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5465,
        5469
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 10,
      "value": "0x1"
    },
    "1119": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5465,
        5469
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "1120": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5190,
        5476
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "1121": {
      "op": "POP"
    },
    "1122": {
      "op": "POP"
    },
    "1123": {
      "op": "POP"
    },
    "1124": {
      "op": "POP"
    },
    "1125": {
      "fn": "ERC20.transferFrom",
      "jump": "o",
      "offset": [
        5190,
        5476
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1126": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5871,
        6105
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1127": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5959,
        5963
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1129": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "15"
    },
    "1130": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6013,
        6077
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 11,
      "value": "0x438"
    },
    "1133": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1134": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6029,
        6036
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1135": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6066,
        6076
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1136": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6038,
        6063
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x479"
    },
    "1139": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "DUP4",
      "path": "15"
    },
    "1140": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6029,
        6036
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1141": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6038,
        6047
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8A2"
    },
    "1144": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        6038,
        6063
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1145": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6038,
        6063
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1146": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6038,
        6076
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x483"
    },
    "1149": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6038,
        6076
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1150": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6038,
        6076
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1151": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6038,
        6076
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1197"
    },
    "1154": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        6038,
        6076
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1155": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6038,
        6076
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1156": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6013,
        6021
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB20"
    },
    "1159": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        6013,
        6077
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1160": {
      "fn": "TheGridDAO.mint",
      "offset": [
        1165,
        1262
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "1161": {
      "offset": [
        1094,
        1107
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x490"
    },
    "1164": {
      "offset": [
        1094,
        1105
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE62"
    },
    "1167": {
      "jump": "i",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1168": {
      "fn": "TheGridDAO.mint",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1169": {
      "fn": "TheGridDAO.mint",
      "offset": [
        1236,
        1255
      ],
      "op": "PUSH2",
      "path": "25",
      "statement": 12,
      "value": "0x49A"
    },
    "1172": {
      "fn": "TheGridDAO.mint",
      "offset": [
        1242,
        1245
      ],
      "op": "DUP3",
      "path": "25"
    },
    "1173": {
      "fn": "TheGridDAO.mint",
      "offset": [
        1247,
        1254
      ],
      "op": "DUP3",
      "path": "25"
    },
    "1174": {
      "fn": "TheGridDAO.mint",
      "offset": [
        1236,
        1241
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xEBC"
    },
    "1177": {
      "fn": "TheGridDAO.mint",
      "jump": "i",
      "offset": [
        1236,
        1255
      ],
      "op": "JUMP",
      "path": "25"
    },
    "1178": {
      "fn": "TheGridDAO.mint",
      "offset": [
        1236,
        1255
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "1179": {
      "fn": "TheGridDAO.mint",
      "offset": [
        1165,
        1262
      ],
      "op": "POP",
      "path": "25"
    },
    "1180": {
      "fn": "TheGridDAO.mint",
      "offset": [
        1165,
        1262
      ],
      "op": "POP",
      "path": "25"
    },
    "1181": {
      "fn": "TheGridDAO.mint",
      "jump": "o",
      "offset": [
        1165,
        1262
      ],
      "op": "JUMP",
      "path": "25"
    },
    "1182": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1268,
        1971
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "1183": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1403,
        1413
      ],
      "op": "CALLER",
      "path": "25"
    },
    "1184": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1339,
        1346
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "1186": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3506,
        3524
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1187": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3506,
        3524
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1188": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3506,
        3524
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1189": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3506,
        3524
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1191": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3506,
        3524
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1192": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3506,
        3524
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1193": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3506,
        3524
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1194": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3506,
        3524
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1196": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3506,
        3524
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1197": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3506,
        3524
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1198": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3506,
        3524
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1199": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1450,
        1451
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 13,
      "value": "0x0"
    },
    "1201": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1432,
        1447
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1202": {
      "branch": 65,
      "fn": "TheGridDAO.propose",
      "offset": [
        1432,
        1451
      ],
      "op": "GT",
      "path": "25"
    },
    "1203": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1424,
        1483
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x503"
    },
    "1206": {
      "branch": 65,
      "fn": "TheGridDAO.propose",
      "offset": [
        1424,
        1483
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "1207": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1424,
        1483
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "1209": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1424,
        1483
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "1210": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1214": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1216": {
      "op": "SHL"
    },
    "1217": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1424,
        1483
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1218": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1424,
        1483
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "1219": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1221": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1424,
        1483
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "1223": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1424,
        1483
      ],
      "op": "DUP3",
      "path": "25"
    },
    "1224": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1424,
        1483
      ],
      "op": "ADD",
      "path": "25"
    },
    "1225": {
      "op": "MSTORE"
    },
    "1226": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "1228": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1230": {
      "op": "DUP3"
    },
    "1231": {
      "op": "ADD"
    },
    "1232": {
      "op": "MSTORE"
    },
    "1233": {
      "op": "PUSH32",
      "value": "0x596F7520646F6E2774206861766520766F74696E6720706F7765720000000000"
    },
    "1266": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1268": {
      "op": "DUP3"
    },
    "1269": {
      "op": "ADD"
    },
    "1270": {
      "op": "MSTORE"
    },
    "1271": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1273": {
      "op": "ADD"
    },
    "1274": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1424,
        1483
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "1275": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1424,
        1483
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "1277": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1424,
        1483
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "1278": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1424,
        1483
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1279": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1424,
        1483
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "1280": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1424,
        1483
      ],
      "op": "SUB",
      "path": "25"
    },
    "1281": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1424,
        1483
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1282": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1424,
        1483
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "25"
    },
    "1283": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1424,
        1483
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "1284": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1494,
        1512
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "1286": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1515,
        1529
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "1288": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1515,
        1529
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "1289": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1494,
        1529
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1290": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1494,
        1529
      ],
      "op": "POP",
      "path": "25"
    },
    "1291": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1540,
        1565
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "1293": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1568,
        1579
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x6"
    },
    "1295": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1568,
        1591
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "1297": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1580,
        1590
      ],
      "op": "DUP4",
      "path": "25"
    },
    "1298": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1568,
        1591
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1299": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1568,
        1591
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "1300": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1568,
        1591
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "1302": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1568,
        1591
      ],
      "op": "ADD",
      "path": "25"
    },
    "1303": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1568,
        1591
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1304": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1568,
        1591
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1305": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1568,
        1591
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "1306": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1568,
        1591
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "1308": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1568,
        1591
      ],
      "op": "ADD",
      "path": "25"
    },
    "1309": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1568,
        1591
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "1311": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1568,
        1591
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "1312": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1540,
        1591
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1313": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1540,
        1591
      ],
      "op": "POP",
      "path": "25"
    },
    "1314": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1623,
        1638
      ],
      "op": "TIMESTAMP",
      "path": "25",
      "statement": 14
    },
    "1315": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1601,
        1609
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1316": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1601,
        1620
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "1318": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1601,
        1620
      ],
      "op": "ADD",
      "path": "25"
    },
    "1319": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1601,
        1638
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1320": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1601,
        1638
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1321": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1601,
        1638
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "1322": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1601,
        1638
      ],
      "op": "POP",
      "path": "25"
    },
    "1323": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1668,
        1678
      ],
      "op": "CALLER",
      "path": "25",
      "statement": 15
    },
    "1324": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1648,
        1656
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1325": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1648,
        1665
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1"
    },
    "1327": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1648,
        1665
      ],
      "op": "ADD",
      "path": "25"
    },
    "1328": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1648,
        1665
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "1330": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1648,
        1678
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x100"
    },
    "1333": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1648,
        1678
      ],
      "op": "EXP",
      "path": "25"
    },
    "1334": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1648,
        1678
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1335": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1648,
        1678
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "1336": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1648,
        1678
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1337": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1339": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1341": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1343": {
      "op": "SHL"
    },
    "1344": {
      "op": "SUB"
    },
    "1345": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1648,
        1678
      ],
      "op": "MUL",
      "path": "25"
    },
    "1346": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1648,
        1678
      ],
      "op": "NOT",
      "path": "25"
    },
    "1347": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1648,
        1678
      ],
      "op": "AND",
      "path": "25"
    },
    "1348": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1648,
        1678
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1349": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1648,
        1678
      ],
      "op": "DUP4",
      "path": "25"
    },
    "1350": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1352": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1354": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1356": {
      "op": "SHL"
    },
    "1357": {
      "op": "SUB"
    },
    "1358": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1648,
        1678
      ],
      "op": "AND",
      "path": "25"
    },
    "1359": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1648,
        1678
      ],
      "op": "MUL",
      "path": "25"
    },
    "1360": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1648,
        1678
      ],
      "op": "OR",
      "path": "25"
    },
    "1361": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1648,
        1678
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1362": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1648,
        1678
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "1363": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1648,
        1678
      ],
      "op": "POP",
      "path": "25"
    },
    "1364": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1702,
        1711
      ],
      "op": "DUP6",
      "path": "25",
      "statement": 16
    },
    "1365": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1688,
        1696
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1366": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1688,
        1699
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x2"
    },
    "1368": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1688,
        1699
      ],
      "op": "ADD",
      "path": "25"
    },
    "1369": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1688,
        1699
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "1371": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1688,
        1711
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x100"
    },
    "1374": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1688,
        1711
      ],
      "op": "EXP",
      "path": "25"
    },
    "1375": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1688,
        1711
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1376": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1688,
        1711
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "1377": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1688,
        1711
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1378": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1380": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1382": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1384": {
      "op": "SHL"
    },
    "1385": {
      "op": "SUB"
    },
    "1386": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1688,
        1711
      ],
      "op": "MUL",
      "path": "25"
    },
    "1387": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1688,
        1711
      ],
      "op": "NOT",
      "path": "25"
    },
    "1388": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1688,
        1711
      ],
      "op": "AND",
      "path": "25"
    },
    "1389": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1688,
        1711
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1390": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1688,
        1711
      ],
      "op": "DUP4",
      "path": "25"
    },
    "1391": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1393": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1395": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1397": {
      "op": "SHL"
    },
    "1398": {
      "op": "SUB"
    },
    "1399": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1688,
        1711
      ],
      "op": "AND",
      "path": "25"
    },
    "1400": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1688,
        1711
      ],
      "op": "MUL",
      "path": "25"
    },
    "1401": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1688,
        1711
      ],
      "op": "OR",
      "path": "25"
    },
    "1402": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1688,
        1711
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1403": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1688,
        1711
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "1404": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1688,
        1711
      ],
      "op": "POP",
      "path": "25"
    },
    "1405": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1739,
        1746
      ],
      "op": "DUP5",
      "path": "25",
      "statement": 17
    },
    "1406": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1721,
        1729
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1407": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1721,
        1736
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x3"
    },
    "1409": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1721,
        1736
      ],
      "op": "ADD",
      "path": "25"
    },
    "1410": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1721,
        1746
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1411": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1721,
        1746
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1412": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1721,
        1746
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "1413": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1721,
        1746
      ],
      "op": "POP",
      "path": "25"
    },
    "1414": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1771,
        1786
      ],
      "op": "DUP3",
      "path": "25",
      "statement": 18
    },
    "1415": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1756,
        1764
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1416": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1756,
        1768
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "1418": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1756,
        1768
      ],
      "op": "ADD",
      "path": "25"
    },
    "1419": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1756,
        1786
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1420": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1756,
        1786
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1421": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1756,
        1786
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "1422": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1756,
        1786
      ],
      "op": "POP",
      "path": "25"
    },
    "1423": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1810,
        1811
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 19,
      "value": "0x0"
    },
    "1425": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1796,
        1804
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1426": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1796,
        1807
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x5"
    },
    "1428": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1796,
        1807
      ],
      "op": "ADD",
      "path": "25"
    },
    "1429": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1796,
        1811
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1430": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1796,
        1811
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1431": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1796,
        1811
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "1432": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1796,
        1811
      ],
      "op": "POP",
      "path": "25"
    },
    "1433": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1842,
        1847
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 20,
      "value": "0x0"
    },
    "1435": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1821,
        1829
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1436": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1821,
        1839
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x6"
    },
    "1438": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1821,
        1839
      ],
      "op": "ADD",
      "path": "25"
    },
    "1439": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1821,
        1839
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "1441": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1821,
        1847
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x100"
    },
    "1444": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1821,
        1847
      ],
      "op": "EXP",
      "path": "25"
    },
    "1445": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1821,
        1847
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1446": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1821,
        1847
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "1447": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1821,
        1847
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1448": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1821,
        1847
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "1450": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1821,
        1847
      ],
      "op": "MUL",
      "path": "25"
    },
    "1451": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1821,
        1847
      ],
      "op": "NOT",
      "path": "25"
    },
    "1452": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1821,
        1847
      ],
      "op": "AND",
      "path": "25"
    },
    "1453": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1821,
        1847
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1454": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1821,
        1847
      ],
      "op": "DUP4",
      "path": "25"
    },
    "1455": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1821,
        1847
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "1456": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1821,
        1847
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "1457": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1821,
        1847
      ],
      "op": "MUL",
      "path": "25"
    },
    "1458": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1821,
        1847
      ],
      "op": "OR",
      "path": "25"
    },
    "1459": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1821,
        1847
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1460": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1821,
        1847
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "1461": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1821,
        1847
      ],
      "op": "POP",
      "path": "25"
    },
    "1462": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1905,
        1909
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 21,
      "value": "0x1"
    },
    "1464": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1866,
        1878
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x7"
    },
    "1466": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1866,
        1890
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "1468": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1879,
        1889
      ],
      "op": "DUP5",
      "path": "25"
    },
    "1469": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1866,
        1890
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1470": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1866,
        1890
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "1471": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1866,
        1890
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "1473": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1866,
        1890
      ],
      "op": "ADD",
      "path": "25"
    },
    "1474": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1866,
        1890
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1475": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1866,
        1890
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1476": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1866,
        1890
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "1477": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1866,
        1890
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "1479": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1866,
        1890
      ],
      "op": "ADD",
      "path": "25"
    },
    "1480": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1866,
        1890
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "1482": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1866,
        1890
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "1483": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1866,
        1902
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "1485": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1891,
        1901
      ],
      "op": "CALLER",
      "path": "25"
    },
    "1486": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1488": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1490": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1492": {
      "op": "SHL"
    },
    "1493": {
      "op": "SUB"
    },
    "1494": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1866,
        1902
      ],
      "op": "AND",
      "path": "25"
    },
    "1495": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1497": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1499": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1501": {
      "op": "SHL"
    },
    "1502": {
      "op": "SUB"
    },
    "1503": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1866,
        1902
      ],
      "op": "AND",
      "path": "25"
    },
    "1504": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1866,
        1902
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1505": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1866,
        1902
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "1506": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1866,
        1902
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "1508": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1866,
        1902
      ],
      "op": "ADD",
      "path": "25"
    },
    "1509": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1866,
        1902
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1510": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1866,
        1902
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1511": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1866,
        1902
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "1512": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1866,
        1902
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "1514": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1866,
        1902
      ],
      "op": "ADD",
      "path": "25"
    },
    "1515": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1866,
        1902
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "1517": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1866,
        1902
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "1518": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1866,
        1902
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "1520": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1866,
        1909
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x100"
    },
    "1523": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1866,
        1909
      ],
      "op": "EXP",
      "path": "25"
    },
    "1524": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1866,
        1909
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1525": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1866,
        1909
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "1526": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1866,
        1909
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1527": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1866,
        1909
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "1529": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1866,
        1909
      ],
      "op": "MUL",
      "path": "25"
    },
    "1530": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1866,
        1909
      ],
      "op": "NOT",
      "path": "25"
    },
    "1531": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1866,
        1909
      ],
      "op": "AND",
      "path": "25"
    },
    "1532": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1866,
        1909
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1533": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1866,
        1909
      ],
      "op": "DUP4",
      "path": "25"
    },
    "1534": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1866,
        1909
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "1535": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1866,
        1909
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "1536": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1866,
        1909
      ],
      "op": "MUL",
      "path": "25"
    },
    "1537": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1866,
        1909
      ],
      "op": "OR",
      "path": "25"
    },
    "1538": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1866,
        1909
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1539": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1866,
        1909
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "1540": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1866,
        1909
      ],
      "op": "POP",
      "path": "25"
    },
    "1541": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1920,
        1934
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 22,
      "value": "0x8"
    },
    "1543": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1920,
        1934
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "1545": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1920,
        1936
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1546": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1920,
        1936
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "1547": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1920,
        1936
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1548": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1920,
        1936
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "1549": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1920,
        1936
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "1550": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1920,
        1936
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1551": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1920,
        1936
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x617"
    },
    "1554": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1920,
        1936
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1555": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1920,
        1936
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x11AF"
    },
    "1558": {
      "fn": "TheGridDAO.propose",
      "jump": "i",
      "offset": [
        1920,
        1936
      ],
      "op": "JUMP",
      "path": "25"
    },
    "1559": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1920,
        1936
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "1560": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1920,
        1936
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1561": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1920,
        1936
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "1562": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1920,
        1936
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "1563": {
      "op": "POP"
    },
    "1564": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1954,
        1964
      ],
      "op": "SWAP2",
      "path": "25",
      "statement": 23
    },
    "1565": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1954,
        1964
      ],
      "op": "SWAP7",
      "path": "25"
    },
    "1566": {
      "fn": "TheGridDAO.propose",
      "offset": [
        1268,
        1971
      ],
      "op": "SWAP6",
      "path": "25"
    },
    "1567": {
      "op": "POP"
    },
    "1568": {
      "op": "POP"
    },
    "1569": {
      "op": "POP"
    },
    "1570": {
      "op": "POP"
    },
    "1571": {
      "op": "POP"
    },
    "1572": {
      "op": "POP"
    },
    "1573": {
      "fn": "TheGridDAO.propose",
      "jump": "o",
      "offset": [
        1268,
        1971
      ],
      "op": "JUMP",
      "path": "25"
    },
    "1574": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1575": {
      "offset": [
        1094,
        1107
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x62E"
    },
    "1578": {
      "offset": [
        1094,
        1105
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE62"
    },
    "1581": {
      "jump": "i",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1582": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1583": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1895,
        1925
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 24,
      "value": "0x638"
    },
    "1586": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1922,
        1923
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1588": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1895,
        1913
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF7B"
    },
    "1591": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1895,
        1925
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1592": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1895,
        1925
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1593": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1831,
        1932
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1594": {
      "fn": "ERC20.symbol",
      "offset": [
        2365,
        2467
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1595": {
      "fn": "ERC20.symbol",
      "offset": [
        2421,
        2434
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "1597": {
      "fn": "ERC20.symbol",
      "offset": [
        2453,
        2460
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 25,
      "value": "0x4"
    },
    "1599": {
      "fn": "ERC20.symbol",
      "offset": [
        2446,
        2460
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1600": {
      "fn": "ERC20.symbol",
      "offset": [
        2446,
        2460
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1601": {
      "fn": "ERC20.symbol",
      "offset": [
        2446,
        2460
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3A7"
    },
    "1604": {
      "fn": "ERC20.symbol",
      "offset": [
        2446,
        2460
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1605": {
      "fn": "ERC20.symbol",
      "offset": [
        2446,
        2460
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1147"
    },
    "1608": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        2446,
        2460
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1609": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6592,
        7019
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1610": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6685,
        6689
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1612": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "15"
    },
    "1613": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6685,
        6689
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1614": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6766,
        6791
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x657"
    },
    "1617": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1618": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6783,
        6790
      ],
      "op": "DUP7",
      "path": "2"
    },
    "1619": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6766,
        6775
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8A2"
    },
    "1622": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6766,
        6791
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1623": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6766,
        6791
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1624": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6739,
        6791
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1625": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6739,
        6791
      ],
      "op": "POP",
      "path": "2"
    },
    "1626": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6829,
        6844
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 26
    },
    "1627": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6809,
        6825
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1628": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6809,
        6844
      ],
      "op": "LT",
      "path": "2"
    },
    "1629": {
      "branch": 73,
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6809,
        6844
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1630": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6801,
        6886
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6B7"
    },
    "1633": {
      "branch": 73,
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6801,
        6886
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1634": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6801,
        6886
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1636": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6801,
        6886
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1637": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1641": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1643": {
      "op": "SHL"
    },
    "1644": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6801,
        6886
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1645": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6801,
        6886
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1646": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1648": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6801,
        6886
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1650": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6801,
        6886
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1651": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6801,
        6886
      ],
      "op": "ADD",
      "path": "2"
    },
    "1652": {
      "op": "MSTORE"
    },
    "1653": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "1655": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1657": {
      "op": "DUP3"
    },
    "1658": {
      "op": "ADD"
    },
    "1659": {
      "op": "MSTORE"
    },
    "1660": {
      "op": "PUSH32",
      "value": "0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
    },
    "1693": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1695": {
      "op": "DUP3"
    },
    "1696": {
      "op": "ADD"
    },
    "1697": {
      "op": "MSTORE"
    },
    "1698": {
      "op": "PUSH5",
      "value": "0x207A65726F"
    },
    "1704": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "1706": {
      "op": "SHL"
    },
    "1707": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1709": {
      "op": "DUP3"
    },
    "1710": {
      "op": "ADD"
    },
    "1711": {
      "op": "MSTORE"
    },
    "1712": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1714": {
      "op": "ADD"
    },
    "1715": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6801,
        6886
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4FA"
    },
    "1718": {
      "op": "JUMP"
    },
    "1719": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6801,
        6886
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1720": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6920,
        6980
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 27,
      "value": "0x45B"
    },
    "1723": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6929,
        6934
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1724": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6936,
        6943
      ],
      "op": "DUP7",
      "path": "2"
    },
    "1725": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6964,
        6979
      ],
      "op": "DUP7",
      "path": "2"
    },
    "1726": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6945,
        6961
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1727": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6945,
        6979
      ],
      "op": "SUB",
      "path": "2"
    },
    "1728": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6920,
        6928
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB20"
    },
    "1731": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6920,
        6980
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1732": {
      "fn": "ERC20.transfer",
      "offset": [
        3727,
        3916
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1733": {
      "fn": "ERC20.transfer",
      "offset": [
        3806,
        3810
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1735": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "15"
    },
    "1736": {
      "fn": "ERC20.transfer",
      "offset": [
        3860,
        3888
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 28,
      "value": "0x438"
    },
    "1739": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1740": {
      "fn": "ERC20.transfer",
      "offset": [
        3877,
        3879
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1741": {
      "fn": "ERC20.transfer",
      "offset": [
        3881,
        3887
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1742": {
      "fn": "ERC20.transfer",
      "offset": [
        3860,
        3869
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCBE"
    },
    "1745": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3860,
        3888
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1746": {
      "fn": "TheGridDAO.vote",
      "offset": [
        1977,
        2735
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "1747": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2062,
        2087
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 29,
      "value": "0x0"
    },
    "1749": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2062,
        2087
      ],
      "op": "DUP3",
      "path": "25"
    },
    "1750": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2062,
        2087
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1751": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2062,
        2087
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "1752": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2062,
        2074
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x7"
    },
    "1754": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2062,
        2087
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "1756": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2062,
        2087
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1757": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2062,
        2087
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1758": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2062,
        2087
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "1759": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2062,
        2087
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "1761": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2062,
        2087
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1762": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2062,
        2087
      ],
      "op": "DUP4",
      "path": "25"
    },
    "1763": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2062,
        2087
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "1764": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2088,
        2098
      ],
      "op": "CALLER",
      "path": "25"
    },
    "1765": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2062,
        2099
      ],
      "op": "DUP5",
      "path": "25"
    },
    "1766": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2062,
        2099
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "1767": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2062,
        2099
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1768": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2062,
        2099
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "1769": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2062,
        2099
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "1770": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2062,
        2099
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1771": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2062,
        2099
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "1772": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2062,
        2099
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "1773": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2062,
        2099
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "1775": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2062,
        2099
      ],
      "op": "AND",
      "path": "25"
    },
    "1776": {
      "branch": 66,
      "fn": "TheGridDAO.vote",
      "offset": [
        2061,
        2099
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "1777": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2053,
        2134
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x73C"
    },
    "1780": {
      "branch": 66,
      "fn": "TheGridDAO.vote",
      "offset": [
        2053,
        2134
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "1781": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2053,
        2134
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "1783": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2053,
        2134
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "1784": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1788": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1790": {
      "op": "SHL"
    },
    "1791": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2053,
        2134
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1792": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2053,
        2134
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "1793": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1795": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2053,
        2134
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "1797": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2053,
        2134
      ],
      "op": "DUP3",
      "path": "25"
    },
    "1798": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2053,
        2134
      ],
      "op": "ADD",
      "path": "25"
    },
    "1799": {
      "op": "MSTORE"
    },
    "1800": {
      "op": "PUSH1",
      "value": "0x1E"
    },
    "1802": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1804": {
      "op": "DUP3"
    },
    "1805": {
      "op": "ADD"
    },
    "1806": {
      "op": "MSTORE"
    },
    "1807": {
      "op": "PUSH32",
      "value": "0x416C726561647920766F746564206F6E20746869732070726F706F73616C0000"
    },
    "1840": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1842": {
      "op": "DUP3"
    },
    "1843": {
      "op": "ADD"
    },
    "1844": {
      "op": "MSTORE"
    },
    "1845": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1847": {
      "op": "ADD"
    },
    "1848": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2053,
        2134
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x4FA"
    },
    "1851": {
      "op": "JUMP"
    },
    "1852": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2053,
        2134
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "1853": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2178,
        2188
      ],
      "op": "CALLER",
      "path": "25"
    },
    "1854": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2145,
        2165
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "1856": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3506,
        3524
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1857": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3506,
        3524
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1858": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3506,
        3524
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1859": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3506,
        3524
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1861": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3506,
        3524
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1862": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3506,
        3524
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1863": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3506,
        3524
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1864": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3506,
        3524
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1866": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3506,
        3524
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1867": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3506,
        3524
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1868": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3506,
        3524
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1869": {
      "branch": 67,
      "fn": "TheGridDAO.vote",
      "offset": [
        2207,
        2223
      ],
      "op": "DUP1",
      "path": "25",
      "statement": 30
    },
    "1870": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2199,
        2255
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x799"
    },
    "1873": {
      "branch": 67,
      "fn": "TheGridDAO.vote",
      "offset": [
        2199,
        2255
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "1874": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2199,
        2255
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "1876": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2199,
        2255
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "1877": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1881": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1883": {
      "op": "SHL"
    },
    "1884": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2199,
        2255
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1885": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2199,
        2255
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "1886": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1888": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2199,
        2255
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "1890": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2199,
        2255
      ],
      "op": "DUP3",
      "path": "25"
    },
    "1891": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2199,
        2255
      ],
      "op": "ADD",
      "path": "25"
    },
    "1892": {
      "op": "MSTORE"
    },
    "1893": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "1895": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1897": {
      "op": "DUP3"
    },
    "1898": {
      "op": "ADD"
    },
    "1899": {
      "op": "MSTORE"
    },
    "1900": {
      "op": "PUSH32",
      "value": "0x596F7520646F6E2774206861766520766F74696E6720706F7765720000000000"
    },
    "1933": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1935": {
      "op": "DUP3"
    },
    "1936": {
      "op": "ADD"
    },
    "1937": {
      "op": "MSTORE"
    },
    "1938": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1940": {
      "op": "ADD"
    },
    "1941": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2199,
        2255
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x4FA"
    },
    "1944": {
      "op": "JUMP"
    },
    "1945": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2199,
        2255
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "1946": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2274,
        2299
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "1948": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2302,
        2326
      ],
      "op": "DUP4",
      "path": "25"
    },
    "1949": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2302,
        2326
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1950": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2302,
        2326
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "1951": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2302,
        2313
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x6"
    },
    "1953": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2302,
        2326
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "1955": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2302,
        2326
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "1956": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2302,
        2326
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "1958": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2302,
        2326
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1959": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2302,
        2326
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "1960": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2368,
        2385
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 31,
      "value": "0x1"
    },
    "1962": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2368,
        2385
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1963": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2368,
        2385
      ],
      "op": "ADD",
      "path": "25"
    },
    "1964": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2368,
        2385
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "1965": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1967": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1969": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1971": {
      "op": "SHL"
    },
    "1972": {
      "op": "SUB"
    },
    "1973": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2368,
        2385
      ],
      "op": "AND",
      "path": "25"
    },
    "1974": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2360,
        2417
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x7F1"
    },
    "1977": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2360,
        2417
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "1978": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2360,
        2417
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "1980": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2360,
        2417
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "1981": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1985": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1987": {
      "op": "SHL"
    },
    "1988": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2360,
        2417
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1989": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2360,
        2417
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "1990": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1992": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2360,
        2417
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "1994": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2360,
        2417
      ],
      "op": "DUP3",
      "path": "25"
    },
    "1995": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2360,
        2417
      ],
      "op": "ADD",
      "path": "25"
    },
    "1996": {
      "op": "MSTORE"
    },
    "1997": {
      "op": "PUSH1",
      "value": "0xD"
    },
    "1999": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2001": {
      "op": "DUP3"
    },
    "2002": {
      "op": "ADD"
    },
    "2003": {
      "op": "MSTORE"
    },
    "2004": {
      "op": "PUSH13",
      "value": "0x111BD95CDB89DD08195E1A5CDD"
    },
    "2018": {
      "op": "PUSH1",
      "value": "0x9A"
    },
    "2020": {
      "op": "SHL"
    },
    "2021": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2023": {
      "op": "DUP3"
    },
    "2024": {
      "op": "ADD"
    },
    "2025": {
      "op": "MSTORE"
    },
    "2026": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2028": {
      "op": "ADD"
    },
    "2029": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2360,
        2417
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x4FA"
    },
    "2032": {
      "op": "JUMP"
    },
    "2033": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2360,
        2417
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "2034": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2436,
        2454
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 32,
      "value": "0x6"
    },
    "2036": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2436,
        2454
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2037": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2436,
        2454
      ],
      "op": "ADD",
      "path": "25"
    },
    "2038": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2436,
        2454
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "2039": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2436,
        2454
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "2041": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2436,
        2454
      ],
      "op": "AND",
      "path": "25"
    },
    "2042": {
      "branch": 68,
      "fn": "TheGridDAO.vote",
      "offset": [
        2435,
        2454
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "2043": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2427,
        2476
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x83A"
    },
    "2046": {
      "branch": 68,
      "fn": "TheGridDAO.vote",
      "offset": [
        2427,
        2476
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "2047": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2427,
        2476
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "2049": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2427,
        2476
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "2050": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2054": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2056": {
      "op": "SHL"
    },
    "2057": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2427,
        2476
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2058": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2427,
        2476
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "2059": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2061": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2427,
        2476
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "2063": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2427,
        2476
      ],
      "op": "DUP3",
      "path": "25"
    },
    "2064": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2427,
        2476
      ],
      "op": "ADD",
      "path": "25"
    },
    "2065": {
      "op": "MSTORE"
    },
    "2066": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "2068": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2070": {
      "op": "DUP3"
    },
    "2071": {
      "op": "ADD"
    },
    "2072": {
      "op": "MSTORE"
    },
    "2073": {
      "op": "PUSH17",
      "value": "0x105B1C9958591E481C1C9BD8D95CDCD959"
    },
    "2091": {
      "op": "PUSH1",
      "value": "0x7A"
    },
    "2093": {
      "op": "SHL"
    },
    "2094": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2096": {
      "op": "DUP3"
    },
    "2097": {
      "op": "ADD"
    },
    "2098": {
      "op": "MSTORE"
    },
    "2099": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2101": {
      "op": "ADD"
    },
    "2102": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2427,
        2476
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x4FA"
    },
    "2105": {
      "op": "JUMP"
    },
    "2106": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2427,
        2476
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "2107": {
      "branch": 69,
      "fn": "TheGridDAO.vote",
      "offset": [
        2519,
        2528
      ],
      "op": "DUP3",
      "path": "25"
    },
    "2108": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2516,
        2642
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "2109": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2516,
        2642
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x85F"
    },
    "2112": {
      "branch": 69,
      "fn": "TheGridDAO.vote",
      "offset": [
        2516,
        2642
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "2113": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2559,
        2571
      ],
      "op": "DUP2",
      "path": "25",
      "statement": 33
    },
    "2114": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2543,
        2551
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2115": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2543,
        2555
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "2117": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2543,
        2555
      ],
      "op": "ADD",
      "path": "25"
    },
    "2118": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2543,
        2555
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "2120": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2543,
        2571
      ],
      "op": "DUP3",
      "path": "25"
    },
    "2121": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2543,
        2571
      ],
      "op": "DUP3",
      "path": "25"
    },
    "2122": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2543,
        2571
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "2123": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2543,
        2571
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x854"
    },
    "2126": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2543,
        2571
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "2127": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2543,
        2571
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "2128": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2543,
        2571
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1197"
    },
    "2131": {
      "fn": "TheGridDAO.vote",
      "jump": "i",
      "offset": [
        2543,
        2571
      ],
      "op": "JUMP",
      "path": "25"
    },
    "2132": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2543,
        2571
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "2133": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2543,
        2571
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "2134": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2543,
        2571
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "2135": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2543,
        2571
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "2136": {
      "op": "POP"
    },
    "2137": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2516,
        2642
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x879"
    },
    "2140": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2516,
        2642
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "2141": {
      "op": "POP"
    },
    "2142": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2516,
        2642
      ],
      "op": "JUMP",
      "path": "25"
    },
    "2143": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2516,
        2642
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "2144": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2618,
        2630
      ],
      "op": "DUP2",
      "path": "25",
      "statement": 34
    },
    "2145": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2603,
        2611
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2146": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2603,
        2614
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x5"
    },
    "2148": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2603,
        2614
      ],
      "op": "ADD",
      "path": "25"
    },
    "2149": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2603,
        2614
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "2151": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2603,
        2630
      ],
      "op": "DUP3",
      "path": "25"
    },
    "2152": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2603,
        2630
      ],
      "op": "DUP3",
      "path": "25"
    },
    "2153": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2603,
        2630
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "2154": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2603,
        2630
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x873"
    },
    "2157": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2603,
        2630
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "2158": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2603,
        2630
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "2159": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2603,
        2630
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1197"
    },
    "2162": {
      "fn": "TheGridDAO.vote",
      "jump": "i",
      "offset": [
        2603,
        2630
      ],
      "op": "JUMP",
      "path": "25"
    },
    "2163": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2603,
        2630
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "2164": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2603,
        2630
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "2165": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2603,
        2630
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "2166": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2603,
        2630
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "2167": {
      "op": "POP"
    },
    "2168": {
      "op": "POP"
    },
    "2169": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2516,
        2642
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "2170": {
      "op": "POP"
    },
    "2171": {
      "op": "POP"
    },
    "2172": {
      "op": "POP"
    },
    "2173": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2684,
        2709
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 35,
      "value": "0x0"
    },
    "2175": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2684,
        2709
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "2176": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2684,
        2709
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2177": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2684,
        2709
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "2178": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2684,
        2696
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x7"
    },
    "2180": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2684,
        2709
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "2182": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2684,
        2709
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "2183": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2684,
        2709
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2184": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2684,
        2709
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "2185": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2684,
        2709
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "2187": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2684,
        2709
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2188": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2684,
        2709
      ],
      "op": "DUP4",
      "path": "25"
    },
    "2189": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2684,
        2709
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "2190": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2710,
        2720
      ],
      "op": "CALLER",
      "path": "25"
    },
    "2191": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2684,
        2721
      ],
      "op": "DUP5",
      "path": "25"
    },
    "2192": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2684,
        2721
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "2193": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2684,
        2721
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "2194": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2684,
        2721
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "2195": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2684,
        2721
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "2196": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2684,
        2721
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "2197": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2684,
        2721
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "2198": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2684,
        2728
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2199": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2684,
        2728
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "2200": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2202": {
      "op": "NOT"
    },
    "2203": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2684,
        2728
      ],
      "op": "AND",
      "path": "25"
    },
    "2204": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2724,
        2728
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1"
    },
    "2206": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2684,
        2728
      ],
      "op": "OR",
      "path": "25"
    },
    "2207": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2684,
        2728
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "2208": {
      "fn": "TheGridDAO.vote",
      "offset": [
        2684,
        2728
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "2209": {
      "fn": "TheGridDAO.vote",
      "jump": "o",
      "offset": [
        1977,
        2735
      ],
      "op": "JUMP",
      "path": "25"
    },
    "2210": {
      "fn": "ERC20.allowance",
      "offset": [
        3974,
        4123
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2211": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2213": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2215": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2217": {
      "op": "SHL"
    },
    "2218": {
      "op": "SUB"
    },
    "2219": {
      "fn": "ERC20.allowance",
      "offset": [
        4089,
        4107
      ],
      "op": "SWAP2",
      "path": "2",
      "statement": 36
    },
    "2220": {
      "fn": "ERC20.allowance",
      "offset": [
        4089,
        4107
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2221": {
      "fn": "ERC20.allowance",
      "offset": [
        4089,
        4107
      ],
      "op": "AND",
      "path": "2"
    },
    "2222": {
      "fn": "ERC20.allowance",
      "offset": [
        4063,
        4070
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2224": {
      "fn": "ERC20.allowance",
      "offset": [
        4089,
        4107
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2225": {
      "fn": "ERC20.allowance",
      "offset": [
        4089,
        4107
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2226": {
      "fn": "ERC20.allowance",
      "offset": [
        4089,
        4107
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2227": {
      "fn": "ERC20.allowance",
      "offset": [
        4089,
        4100
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "2229": {
      "fn": "ERC20.allowance",
      "offset": [
        4089,
        4107
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2231": {
      "fn": "ERC20.allowance",
      "offset": [
        4089,
        4107
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2232": {
      "fn": "ERC20.allowance",
      "offset": [
        4089,
        4107
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2233": {
      "fn": "ERC20.allowance",
      "offset": [
        4089,
        4107
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2234": {
      "fn": "ERC20.allowance",
      "offset": [
        4089,
        4107
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2236": {
      "fn": "ERC20.allowance",
      "offset": [
        4089,
        4107
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2237": {
      "fn": "ERC20.allowance",
      "offset": [
        4089,
        4107
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2238": {
      "fn": "ERC20.allowance",
      "offset": [
        4089,
        4107
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2239": {
      "fn": "ERC20.allowance",
      "offset": [
        4089,
        4116
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "2240": {
      "fn": "ERC20.allowance",
      "offset": [
        4089,
        4116
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2241": {
      "fn": "ERC20.allowance",
      "offset": [
        4089,
        4116
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "2242": {
      "fn": "ERC20.allowance",
      "offset": [
        4089,
        4116
      ],
      "op": "AND",
      "path": "2"
    },
    "2243": {
      "fn": "ERC20.allowance",
      "offset": [
        4089,
        4116
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2244": {
      "fn": "ERC20.allowance",
      "offset": [
        4089,
        4116
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2245": {
      "fn": "ERC20.allowance",
      "offset": [
        4089,
        4116
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2246": {
      "fn": "ERC20.allowance",
      "offset": [
        4089,
        4116
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2247": {
      "fn": "ERC20.allowance",
      "offset": [
        4089,
        4116
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2248": {
      "fn": "ERC20.allowance",
      "offset": [
        4089,
        4116
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2249": {
      "fn": "ERC20.allowance",
      "offset": [
        4089,
        4116
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2250": {
      "fn": "ERC20.allowance",
      "offset": [
        4089,
        4116
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2251": {
      "fn": "ERC20.allowance",
      "offset": [
        4089,
        4116
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2252": {
      "fn": "ERC20.allowance",
      "jump": "o",
      "offset": [
        3974,
        4123
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2253": {
      "fn": "TheGridDAO.setTreasury",
      "offset": [
        1045,
        1159
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "2254": {
      "offset": [
        1094,
        1107
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8D5"
    },
    "2257": {
      "offset": [
        1094,
        1105
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE62"
    },
    "2260": {
      "jump": "i",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2261": {
      "fn": "TheGridDAO.setTreasury",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2262": {
      "fn": "TheGridDAO.setTreasury",
      "offset": [
        1114,
        1122
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 37,
      "value": "0x9"
    },
    "2264": {
      "fn": "TheGridDAO.setTreasury",
      "offset": [
        1114,
        1152
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2265": {
      "fn": "TheGridDAO.setTreasury",
      "offset": [
        1114,
        1152
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "2266": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2268": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2270": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2272": {
      "op": "SHL"
    },
    "2273": {
      "op": "SUB"
    },
    "2274": {
      "op": "NOT"
    },
    "2275": {
      "fn": "TheGridDAO.setTreasury",
      "offset": [
        1114,
        1152
      ],
      "op": "AND",
      "path": "25"
    },
    "2276": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2278": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2280": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2282": {
      "op": "SHL"
    },
    "2283": {
      "op": "SUB"
    },
    "2284": {
      "fn": "TheGridDAO.setTreasury",
      "offset": [
        1114,
        1152
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "2285": {
      "fn": "TheGridDAO.setTreasury",
      "offset": [
        1114,
        1152
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "2286": {
      "fn": "TheGridDAO.setTreasury",
      "offset": [
        1114,
        1152
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "2287": {
      "fn": "TheGridDAO.setTreasury",
      "offset": [
        1114,
        1152
      ],
      "op": "AND",
      "path": "25"
    },
    "2288": {
      "fn": "TheGridDAO.setTreasury",
      "offset": [
        1114,
        1152
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "2289": {
      "fn": "TheGridDAO.setTreasury",
      "offset": [
        1114,
        1152
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "2290": {
      "fn": "TheGridDAO.setTreasury",
      "offset": [
        1114,
        1152
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "2291": {
      "fn": "TheGridDAO.setTreasury",
      "offset": [
        1114,
        1152
      ],
      "op": "OR",
      "path": "25"
    },
    "2292": {
      "fn": "TheGridDAO.setTreasury",
      "offset": [
        1114,
        1152
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "2293": {
      "fn": "TheGridDAO.setTreasury",
      "offset": [
        1114,
        1152
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "2294": {
      "fn": "TheGridDAO.setTreasury",
      "jump": "o",
      "offset": [
        1045,
        1159
      ],
      "op": "JUMP",
      "path": "25"
    },
    "2295": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2296": {
      "offset": [
        1094,
        1107
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8FF"
    },
    "2299": {
      "offset": [
        1094,
        1105
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE62"
    },
    "2302": {
      "jump": "i",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2303": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2304": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2306": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2308": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2310": {
      "op": "SHL"
    },
    "2311": {
      "op": "SUB"
    },
    "2312": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2169,
        2191
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 38
    },
    "2313": {
      "branch": 82,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2169,
        2191
      ],
      "op": "AND",
      "path": "0"
    },
    "2314": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x964"
    },
    "2317": {
      "branch": 82,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2318": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2320": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2321": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2325": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2327": {
      "op": "SHL"
    },
    "2328": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2329": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2330": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2332": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2334": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2335": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "ADD",
      "path": "0"
    },
    "2336": {
      "op": "MSTORE"
    },
    "2337": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "2339": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2341": {
      "op": "DUP3"
    },
    "2342": {
      "op": "ADD"
    },
    "2343": {
      "op": "MSTORE"
    },
    "2344": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "2377": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2379": {
      "op": "DUP3"
    },
    "2380": {
      "op": "ADD"
    },
    "2381": {
      "op": "MSTORE"
    },
    "2382": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "2389": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "2391": {
      "op": "SHL"
    },
    "2392": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2394": {
      "op": "DUP3"
    },
    "2395": {
      "op": "ADD"
    },
    "2396": {
      "op": "MSTORE"
    },
    "2397": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2399": {
      "op": "ADD"
    },
    "2400": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4FA"
    },
    "2403": {
      "op": "JUMP"
    },
    "2404": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2405": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2244,
        2272
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 39,
      "value": "0x96D"
    },
    "2408": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2263,
        2271
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2409": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2244,
        2262
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF7B"
    },
    "2412": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2244,
        2272
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2413": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2244,
        2272
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2414": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "POP",
      "path": "0"
    },
    "2415": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2416": {
      "fn": "TheGridDAO.execute",
      "offset": [
        2741,
        3220
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "2417": {
      "fn": "TheGridDAO.execute",
      "offset": [
        2788,
        2813
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "2419": {
      "fn": "TheGridDAO.execute",
      "offset": [
        2816,
        2832
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2420": {
      "fn": "TheGridDAO.execute",
      "offset": [
        2816,
        2832
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2421": {
      "fn": "TheGridDAO.execute",
      "offset": [
        2816,
        2832
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "2422": {
      "fn": "TheGridDAO.execute",
      "offset": [
        2816,
        2827
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x6"
    },
    "2424": {
      "fn": "TheGridDAO.execute",
      "offset": [
        2816,
        2832
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "2426": {
      "fn": "TheGridDAO.execute",
      "offset": [
        2816,
        2832
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "2427": {
      "fn": "TheGridDAO.execute",
      "offset": [
        2816,
        2832
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "2429": {
      "fn": "TheGridDAO.execute",
      "offset": [
        2816,
        2832
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "2430": {
      "fn": "TheGridDAO.execute",
      "offset": [
        2816,
        2832
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "2431": {
      "fn": "TheGridDAO.execute",
      "offset": [
        2850,
        2867
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 40,
      "value": "0x1"
    },
    "2433": {
      "fn": "TheGridDAO.execute",
      "offset": [
        2850,
        2867
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2434": {
      "fn": "TheGridDAO.execute",
      "offset": [
        2850,
        2867
      ],
      "op": "ADD",
      "path": "25"
    },
    "2435": {
      "fn": "TheGridDAO.execute",
      "offset": [
        2850,
        2867
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "2436": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2438": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2440": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2442": {
      "op": "SHL"
    },
    "2443": {
      "op": "SUB"
    },
    "2444": {
      "fn": "TheGridDAO.execute",
      "offset": [
        2850,
        2867
      ],
      "op": "AND",
      "path": "25"
    },
    "2445": {
      "fn": "TheGridDAO.execute",
      "offset": [
        2842,
        2899
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x9C8"
    },
    "2448": {
      "fn": "TheGridDAO.execute",
      "offset": [
        2842,
        2899
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "2449": {
      "fn": "TheGridDAO.execute",
      "offset": [
        2842,
        2899
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "2451": {
      "fn": "TheGridDAO.execute",
      "offset": [
        2842,
        2899
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "2452": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2456": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2458": {
      "op": "SHL"
    },
    "2459": {
      "fn": "TheGridDAO.execute",
      "offset": [
        2842,
        2899
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2460": {
      "fn": "TheGridDAO.execute",
      "offset": [
        2842,
        2899
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "2461": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2463": {
      "fn": "TheGridDAO.execute",
      "offset": [
        2842,
        2899
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "2465": {
      "fn": "TheGridDAO.execute",
      "offset": [
        2842,
        2899
      ],
      "op": "DUP3",
      "path": "25"
    },
    "2466": {
      "fn": "TheGridDAO.execute",
      "offset": [
        2842,
        2899
      ],
      "op": "ADD",
      "path": "25"
    },
    "2467": {
      "op": "MSTORE"
    },
    "2468": {
      "op": "PUSH1",
      "value": "0xD"
    },
    "2470": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2472": {
      "op": "DUP3"
    },
    "2473": {
      "op": "ADD"
    },
    "2474": {
      "op": "MSTORE"
    },
    "2475": {
      "op": "PUSH13",
      "value": "0x111BD95CDB89DD08195E1A5CDD"
    },
    "2489": {
      "op": "PUSH1",
      "value": "0x9A"
    },
    "2491": {
      "op": "SHL"
    },
    "2492": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2494": {
      "op": "DUP3"
    },
    "2495": {
      "op": "ADD"
    },
    "2496": {
      "op": "MSTORE"
    },
    "2497": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2499": {
      "op": "ADD"
    },
    "2500": {
      "fn": "TheGridDAO.execute",
      "offset": [
        2842,
        2899
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x4FA"
    },
    "2503": {
      "op": "JUMP"
    },
    "2504": {
      "fn": "TheGridDAO.execute",
      "offset": [
        2842,
        2899
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "2505": {
      "fn": "TheGridDAO.execute",
      "offset": [
        2936,
        2955
      ],
      "op": "DUP1",
      "path": "25",
      "statement": 41
    },
    "2506": {
      "fn": "TheGridDAO.execute",
      "offset": [
        2936,
        2955
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "2507": {
      "fn": "TheGridDAO.execute",
      "offset": [
        2936,
        2971
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x9F5"
    },
    "2510": {
      "fn": "TheGridDAO.execute",
      "offset": [
        2936,
        2971
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "2511": {
      "fn": "TheGridDAO.execute",
      "offset": [
        2958,
        2971
      ],
      "op": "PUSH32",
      "path": "25",
      "value": "0x0"
    },
    "2544": {
      "fn": "TheGridDAO.execute",
      "offset": [
        2958,
        2971
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "2545": {
      "fn": "TheGridDAO.execute",
      "offset": [
        2936,
        2971
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1197"
    },
    "2548": {
      "fn": "TheGridDAO.execute",
      "jump": "i",
      "offset": [
        2936,
        2971
      ],
      "op": "JUMP",
      "path": "25"
    },
    "2549": {
      "fn": "TheGridDAO.execute",
      "offset": [
        2936,
        2971
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "2550": {
      "fn": "TheGridDAO.execute",
      "offset": [
        2917,
        2932
      ],
      "op": "TIMESTAMP",
      "path": "25"
    },
    "2551": {
      "fn": "TheGridDAO.execute",
      "offset": [
        2917,
        2971
      ],
      "op": "LT",
      "path": "25"
    },
    "2552": {
      "branch": 70,
      "fn": "TheGridDAO.execute",
      "offset": [
        2917,
        2971
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "2553": {
      "fn": "TheGridDAO.execute",
      "offset": [
        2909,
        2994
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xA39"
    },
    "2556": {
      "branch": 70,
      "fn": "TheGridDAO.execute",
      "offset": [
        2909,
        2994
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "2557": {
      "fn": "TheGridDAO.execute",
      "offset": [
        2909,
        2994
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "2559": {
      "fn": "TheGridDAO.execute",
      "offset": [
        2909,
        2994
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "2560": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2564": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2566": {
      "op": "SHL"
    },
    "2567": {
      "fn": "TheGridDAO.execute",
      "offset": [
        2909,
        2994
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2568": {
      "fn": "TheGridDAO.execute",
      "offset": [
        2909,
        2994
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "2569": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2571": {
      "fn": "TheGridDAO.execute",
      "offset": [
        2909,
        2994
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "2573": {
      "fn": "TheGridDAO.execute",
      "offset": [
        2909,
        2994
      ],
      "op": "DUP3",
      "path": "25"
    },
    "2574": {
      "fn": "TheGridDAO.execute",
      "offset": [
        2909,
        2994
      ],
      "op": "ADD",
      "path": "25"
    },
    "2575": {
      "op": "MSTORE"
    },
    "2576": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "2578": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2580": {
      "op": "DUP3"
    },
    "2581": {
      "op": "ADD"
    },
    "2582": {
      "op": "MSTORE"
    },
    "2583": {
      "op": "PUSH18",
      "value": "0x2B37BA34B7339034B9903737BA1037BB32B9"
    },
    "2602": {
      "op": "PUSH1",
      "value": "0x71"
    },
    "2604": {
      "op": "SHL"
    },
    "2605": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2607": {
      "op": "DUP3"
    },
    "2608": {
      "op": "ADD"
    },
    "2609": {
      "op": "MSTORE"
    },
    "2610": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2612": {
      "op": "ADD"
    },
    "2613": {
      "fn": "TheGridDAO.execute",
      "offset": [
        2909,
        2994
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x4FA"
    },
    "2616": {
      "op": "JUMP"
    },
    "2617": {
      "fn": "TheGridDAO.execute",
      "offset": [
        2909,
        2994
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "2618": {
      "fn": "TheGridDAO.execute",
      "offset": [
        3013,
        3031
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 42,
      "value": "0x6"
    },
    "2620": {
      "fn": "TheGridDAO.execute",
      "offset": [
        3013,
        3031
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2621": {
      "fn": "TheGridDAO.execute",
      "offset": [
        3013,
        3031
      ],
      "op": "ADD",
      "path": "25"
    },
    "2622": {
      "fn": "TheGridDAO.execute",
      "offset": [
        3013,
        3031
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "2623": {
      "fn": "TheGridDAO.execute",
      "offset": [
        3013,
        3031
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "2625": {
      "fn": "TheGridDAO.execute",
      "offset": [
        3013,
        3031
      ],
      "op": "AND",
      "path": "25"
    },
    "2626": {
      "branch": 71,
      "fn": "TheGridDAO.execute",
      "offset": [
        3012,
        3031
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "2627": {
      "fn": "TheGridDAO.execute",
      "offset": [
        3004,
        3061
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xA8E"
    },
    "2630": {
      "branch": 71,
      "fn": "TheGridDAO.execute",
      "offset": [
        3004,
        3061
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "2631": {
      "fn": "TheGridDAO.execute",
      "offset": [
        3004,
        3061
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "2633": {
      "fn": "TheGridDAO.execute",
      "offset": [
        3004,
        3061
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "2634": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2638": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2640": {
      "op": "SHL"
    },
    "2641": {
      "fn": "TheGridDAO.execute",
      "offset": [
        3004,
        3061
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2642": {
      "fn": "TheGridDAO.execute",
      "offset": [
        3004,
        3061
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "2643": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2645": {
      "fn": "TheGridDAO.execute",
      "offset": [
        3004,
        3061
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "2647": {
      "fn": "TheGridDAO.execute",
      "offset": [
        3004,
        3061
      ],
      "op": "DUP3",
      "path": "25"
    },
    "2648": {
      "fn": "TheGridDAO.execute",
      "offset": [
        3004,
        3061
      ],
      "op": "ADD",
      "path": "25"
    },
    "2649": {
      "op": "MSTORE"
    },
    "2650": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "2652": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2654": {
      "op": "DUP3"
    },
    "2655": {
      "op": "ADD"
    },
    "2656": {
      "op": "MSTORE"
    },
    "2657": {
      "op": "PUSH32",
      "value": "0x50726F706F736C20616C72656164792070726F63657373656400000000000000"
    },
    "2690": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2692": {
      "op": "DUP3"
    },
    "2693": {
      "op": "ADD"
    },
    "2694": {
      "op": "MSTORE"
    },
    "2695": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2697": {
      "op": "ADD"
    },
    "2698": {
      "fn": "TheGridDAO.execute",
      "offset": [
        3004,
        3061
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x4FA"
    },
    "2701": {
      "op": "JUMP"
    },
    "2702": {
      "fn": "TheGridDAO.execute",
      "offset": [
        3004,
        3061
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "2703": {
      "fn": "TheGridDAO.execute",
      "offset": [
        3090,
        3098
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2704": {
      "fn": "TheGridDAO.execute",
      "offset": [
        3090,
        3101
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x5"
    },
    "2706": {
      "fn": "TheGridDAO.execute",
      "offset": [
        3090,
        3101
      ],
      "op": "ADD",
      "path": "25"
    },
    "2707": {
      "fn": "TheGridDAO.execute",
      "offset": [
        3090,
        3101
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "2708": {
      "fn": "TheGridDAO.execute",
      "offset": [
        3075,
        3083
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2709": {
      "fn": "TheGridDAO.execute",
      "offset": [
        3075,
        3087
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "2711": {
      "fn": "TheGridDAO.execute",
      "offset": [
        3075,
        3087
      ],
      "op": "ADD",
      "path": "25"
    },
    "2712": {
      "fn": "TheGridDAO.execute",
      "offset": [
        3075,
        3087
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "2713": {
      "branch": 72,
      "fn": "TheGridDAO.execute",
      "offset": [
        3075,
        3101
      ],
      "op": "GT",
      "path": "25"
    },
    "2714": {
      "fn": "TheGridDAO.execute",
      "offset": [
        3072,
        3178
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "2715": {
      "fn": "TheGridDAO.execute",
      "offset": [
        3072,
        3178
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xB0F"
    },
    "2718": {
      "branch": 72,
      "fn": "TheGridDAO.execute",
      "offset": [
        3072,
        3178
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "2719": {
      "fn": "TheGridDAO.execute",
      "offset": [
        3117,
        3125
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 43,
      "value": "0x9"
    },
    "2721": {
      "fn": "TheGridDAO.execute",
      "offset": [
        3117,
        3125
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "2722": {
      "fn": "TheGridDAO.execute",
      "offset": [
        3138,
        3149
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x2"
    },
    "2724": {
      "fn": "TheGridDAO.execute",
      "offset": [
        3138,
        3149
      ],
      "op": "DUP3",
      "path": "25"
    },
    "2725": {
      "fn": "TheGridDAO.execute",
      "offset": [
        3138,
        3149
      ],
      "op": "ADD",
      "path": "25"
    },
    "2726": {
      "fn": "TheGridDAO.execute",
      "offset": [
        3138,
        3149
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "2727": {
      "fn": "TheGridDAO.execute",
      "offset": [
        3151,
        3166
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x3"
    },
    "2729": {
      "fn": "TheGridDAO.execute",
      "offset": [
        3151,
        3166
      ],
      "op": "DUP4",
      "path": "25"
    },
    "2730": {
      "fn": "TheGridDAO.execute",
      "offset": [
        3151,
        3166
      ],
      "op": "ADD",
      "path": "25"
    },
    "2731": {
      "fn": "TheGridDAO.execute",
      "offset": [
        3151,
        3166
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "2732": {
      "fn": "TheGridDAO.execute",
      "offset": [
        3117,
        3167
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "2734": {
      "fn": "TheGridDAO.execute",
      "offset": [
        3117,
        3167
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "2735": {
      "op": "PUSH4",
      "value": "0x126BE983"
    },
    "2740": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "2742": {
      "op": "SHL"
    },
    "2743": {
      "fn": "TheGridDAO.execute",
      "offset": [
        3117,
        3167
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2744": {
      "fn": "TheGridDAO.execute",
      "offset": [
        3117,
        3167
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "2745": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2747": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2749": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2751": {
      "op": "SHL"
    },
    "2752": {
      "op": "SUB"
    },
    "2753": {
      "fn": "TheGridDAO.execute",
      "offset": [
        3138,
        3149
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "2754": {
      "fn": "TheGridDAO.execute",
      "offset": [
        3138,
        3149
      ],
      "op": "DUP4",
      "path": "25"
    },
    "2755": {
      "fn": "TheGridDAO.execute",
      "offset": [
        3138,
        3149
      ],
      "op": "AND",
      "path": "25"
    },
    "2756": {
      "fn": "TheGridDAO.execute",
      "offset": [
        3117,
        3167
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "2758": {
      "fn": "TheGridDAO.execute",
      "offset": [
        3117,
        3167
      ],
      "op": "DUP3",
      "path": "25"
    },
    "2759": {
      "fn": "TheGridDAO.execute",
      "offset": [
        3117,
        3167
      ],
      "op": "ADD",
      "path": "25"
    },
    "2760": {
      "op": "MSTORE"
    },
    "2761": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2763": {
      "op": "DUP2"
    },
    "2764": {
      "op": "ADD"
    },
    "2765": {
      "op": "SWAP2"
    },
    "2766": {
      "op": "SWAP1"
    },
    "2767": {
      "op": "SWAP2"
    },
    "2768": {
      "op": "MSTORE"
    },
    "2769": {
      "fn": "TheGridDAO.execute",
      "offset": [
        3117,
        3125
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "2770": {
      "fn": "TheGridDAO.execute",
      "offset": [
        3117,
        3125
      ],
      "op": "AND",
      "path": "25"
    },
    "2771": {
      "fn": "TheGridDAO.execute",
      "offset": [
        3117,
        3125
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "2772": {
      "fn": "TheGridDAO.execute",
      "offset": [
        3117,
        3137
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x935F4C18"
    },
    "2777": {
      "fn": "TheGridDAO.execute",
      "offset": [
        3117,
        3137
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "2778": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2780": {
      "op": "ADD"
    },
    "2781": {
      "fn": "TheGridDAO.execute",
      "offset": [
        3117,
        3167
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "2783": {
      "fn": "TheGridDAO.execute",
      "offset": [
        3117,
        3167
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "2785": {
      "fn": "TheGridDAO.execute",
      "offset": [
        3117,
        3167
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "2786": {
      "fn": "TheGridDAO.execute",
      "offset": [
        3117,
        3167
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2787": {
      "fn": "TheGridDAO.execute",
      "offset": [
        3117,
        3167
      ],
      "op": "DUP4",
      "path": "25"
    },
    "2788": {
      "fn": "TheGridDAO.execute",
      "offset": [
        3117,
        3167
      ],
      "op": "SUB",
      "path": "25"
    },
    "2789": {
      "fn": "TheGridDAO.execute",
      "offset": [
        3117,
        3167
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2790": {
      "fn": "TheGridDAO.execute",
      "offset": [
        3117,
        3167
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "2792": {
      "fn": "TheGridDAO.execute",
      "offset": [
        3117,
        3167
      ],
      "op": "DUP8",
      "path": "25"
    },
    "2793": {
      "fn": "TheGridDAO.execute",
      "offset": [
        3117,
        3167
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2794": {
      "fn": "TheGridDAO.execute",
      "offset": [
        3117,
        3167
      ],
      "op": "EXTCODESIZE",
      "path": "25"
    },
    "2795": {
      "fn": "TheGridDAO.execute",
      "offset": [
        3117,
        3167
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "2796": {
      "fn": "TheGridDAO.execute",
      "offset": [
        3117,
        3167
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2797": {
      "fn": "TheGridDAO.execute",
      "offset": [
        3117,
        3167
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "2798": {
      "fn": "TheGridDAO.execute",
      "offset": [
        3117,
        3167
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xAF6"
    },
    "2801": {
      "fn": "TheGridDAO.execute",
      "offset": [
        3117,
        3167
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "2802": {
      "fn": "TheGridDAO.execute",
      "offset": [
        3117,
        3167
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "2804": {
      "fn": "TheGridDAO.execute",
      "offset": [
        3117,
        3167
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2805": {
      "fn": "TheGridDAO.execute",
      "offset": [
        3117,
        3167
      ],
      "op": "REVERT",
      "path": "25"
    },
    "2806": {
      "fn": "TheGridDAO.execute",
      "offset": [
        3117,
        3167
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "2807": {
      "fn": "TheGridDAO.execute",
      "offset": [
        3117,
        3167
      ],
      "op": "POP",
      "path": "25"
    },
    "2808": {
      "fn": "TheGridDAO.execute",
      "offset": [
        3117,
        3167
      ],
      "op": "GAS",
      "path": "25"
    },
    "2809": {
      "fn": "TheGridDAO.execute",
      "offset": [
        3117,
        3167
      ],
      "op": "CALL",
      "path": "25"
    },
    "2810": {
      "fn": "TheGridDAO.execute",
      "offset": [
        3117,
        3167
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "2811": {
      "fn": "TheGridDAO.execute",
      "offset": [
        3117,
        3167
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2812": {
      "fn": "TheGridDAO.execute",
      "offset": [
        3117,
        3167
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "2813": {
      "fn": "TheGridDAO.execute",
      "offset": [
        3117,
        3167
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xB0A"
    },
    "2816": {
      "fn": "TheGridDAO.execute",
      "offset": [
        3117,
        3167
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "2817": {
      "fn": "TheGridDAO.execute",
      "offset": [
        3117,
        3167
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "2818": {
      "fn": "TheGridDAO.execute",
      "offset": [
        3117,
        3167
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "2820": {
      "fn": "TheGridDAO.execute",
      "offset": [
        3117,
        3167
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2821": {
      "fn": "TheGridDAO.execute",
      "offset": [
        3117,
        3167
      ],
      "op": "RETURNDATACOPY",
      "path": "25"
    },
    "2822": {
      "fn": "TheGridDAO.execute",
      "offset": [
        3117,
        3167
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "2823": {
      "fn": "TheGridDAO.execute",
      "offset": [
        3117,
        3167
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "2825": {
      "fn": "TheGridDAO.execute",
      "offset": [
        3117,
        3167
      ],
      "op": "REVERT",
      "path": "25"
    },
    "2826": {
      "fn": "TheGridDAO.execute",
      "offset": [
        3117,
        3167
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "2827": {
      "fn": "TheGridDAO.execute",
      "offset": [
        3117,
        3167
      ],
      "op": "POP",
      "path": "25"
    },
    "2828": {
      "fn": "TheGridDAO.execute",
      "offset": [
        3117,
        3167
      ],
      "op": "POP",
      "path": "25"
    },
    "2829": {
      "fn": "TheGridDAO.execute",
      "offset": [
        3117,
        3167
      ],
      "op": "POP",
      "path": "25"
    },
    "2830": {
      "fn": "TheGridDAO.execute",
      "offset": [
        3117,
        3167
      ],
      "op": "POP",
      "path": "25"
    },
    "2831": {
      "fn": "TheGridDAO.execute",
      "offset": [
        3072,
        3178
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "2832": {
      "fn": "TheGridDAO.execute",
      "offset": [
        3188,
        3206
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 44,
      "value": "0x6"
    },
    "2834": {
      "fn": "TheGridDAO.execute",
      "offset": [
        3188,
        3206
      ],
      "op": "ADD",
      "path": "25"
    },
    "2835": {
      "fn": "TheGridDAO.execute",
      "offset": [
        3188,
        3213
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2836": {
      "fn": "TheGridDAO.execute",
      "offset": [
        3188,
        3213
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "2837": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2839": {
      "op": "NOT"
    },
    "2840": {
      "fn": "TheGridDAO.execute",
      "offset": [
        3188,
        3213
      ],
      "op": "AND",
      "path": "25"
    },
    "2841": {
      "fn": "TheGridDAO.execute",
      "offset": [
        3209,
        3213
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1"
    },
    "2843": {
      "fn": "TheGridDAO.execute",
      "offset": [
        3188,
        3213
      ],
      "op": "OR",
      "path": "25"
    },
    "2844": {
      "fn": "TheGridDAO.execute",
      "offset": [
        3188,
        3213
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "2845": {
      "fn": "TheGridDAO.execute",
      "offset": [
        3188,
        3213
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "2846": {
      "op": "POP"
    },
    "2847": {
      "fn": "TheGridDAO.execute",
      "jump": "o",
      "offset": [
        2741,
        3220
      ],
      "op": "JUMP",
      "path": "25"
    },
    "2848": {
      "fn": "ERC20._approve",
      "offset": [
        10504,
        10874
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2849": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2851": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2853": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2855": {
      "op": "SHL"
    },
    "2856": {
      "op": "SUB"
    },
    "2857": {
      "fn": "ERC20._approve",
      "offset": [
        10635,
        10654
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 45
    },
    "2858": {
      "branch": 74,
      "fn": "ERC20._approve",
      "offset": [
        10635,
        10654
      ],
      "op": "AND",
      "path": "2"
    },
    "2859": {
      "fn": "ERC20._approve",
      "offset": [
        10627,
        10695
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB82"
    },
    "2862": {
      "branch": 74,
      "fn": "ERC20._approve",
      "offset": [
        10627,
        10695
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2863": {
      "fn": "ERC20._approve",
      "offset": [
        10627,
        10695
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2865": {
      "fn": "ERC20._approve",
      "offset": [
        10627,
        10695
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2866": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2870": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2872": {
      "op": "SHL"
    },
    "2873": {
      "fn": "ERC20._approve",
      "offset": [
        10627,
        10695
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2874": {
      "fn": "ERC20._approve",
      "offset": [
        10627,
        10695
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2875": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2877": {
      "fn": "ERC20._approve",
      "offset": [
        10627,
        10695
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2879": {
      "fn": "ERC20._approve",
      "offset": [
        10627,
        10695
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2880": {
      "fn": "ERC20._approve",
      "offset": [
        10627,
        10695
      ],
      "op": "ADD",
      "path": "2"
    },
    "2881": {
      "op": "MSTORE"
    },
    "2882": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2884": {
      "op": "DUP1"
    },
    "2885": {
      "op": "DUP3"
    },
    "2886": {
      "op": "ADD"
    },
    "2887": {
      "op": "MSTORE"
    },
    "2888": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
    },
    "2921": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2923": {
      "op": "DUP3"
    },
    "2924": {
      "op": "ADD"
    },
    "2925": {
      "op": "MSTORE"
    },
    "2926": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "2931": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2933": {
      "op": "SHL"
    },
    "2934": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2936": {
      "op": "DUP3"
    },
    "2937": {
      "op": "ADD"
    },
    "2938": {
      "op": "MSTORE"
    },
    "2939": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2941": {
      "op": "ADD"
    },
    "2942": {
      "fn": "ERC20._approve",
      "offset": [
        10627,
        10695
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4FA"
    },
    "2945": {
      "op": "JUMP"
    },
    "2946": {
      "fn": "ERC20._approve",
      "offset": [
        10627,
        10695
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2947": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2949": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2951": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2953": {
      "op": "SHL"
    },
    "2954": {
      "op": "SUB"
    },
    "2955": {
      "fn": "ERC20._approve",
      "offset": [
        10713,
        10734
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 46
    },
    "2956": {
      "branch": 75,
      "fn": "ERC20._approve",
      "offset": [
        10713,
        10734
      ],
      "op": "AND",
      "path": "2"
    },
    "2957": {
      "fn": "ERC20._approve",
      "offset": [
        10705,
        10773
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBE3"
    },
    "2960": {
      "branch": 75,
      "fn": "ERC20._approve",
      "offset": [
        10705,
        10773
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2961": {
      "fn": "ERC20._approve",
      "offset": [
        10705,
        10773
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2963": {
      "fn": "ERC20._approve",
      "offset": [
        10705,
        10773
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2964": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2968": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2970": {
      "op": "SHL"
    },
    "2971": {
      "fn": "ERC20._approve",
      "offset": [
        10705,
        10773
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2972": {
      "fn": "ERC20._approve",
      "offset": [
        10705,
        10773
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2973": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2975": {
      "fn": "ERC20._approve",
      "offset": [
        10705,
        10773
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2977": {
      "fn": "ERC20._approve",
      "offset": [
        10705,
        10773
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2978": {
      "fn": "ERC20._approve",
      "offset": [
        10705,
        10773
      ],
      "op": "ADD",
      "path": "2"
    },
    "2979": {
      "op": "MSTORE"
    },
    "2980": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "2982": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2984": {
      "op": "DUP3"
    },
    "2985": {
      "op": "ADD"
    },
    "2986": {
      "op": "MSTORE"
    },
    "2987": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F766520746F20746865207A65726F206164647265"
    },
    "3020": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3022": {
      "op": "DUP3"
    },
    "3023": {
      "op": "ADD"
    },
    "3024": {
      "op": "MSTORE"
    },
    "3025": {
      "op": "PUSH2",
      "value": "0x7373"
    },
    "3028": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "3030": {
      "op": "SHL"
    },
    "3031": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3033": {
      "op": "DUP3"
    },
    "3034": {
      "op": "ADD"
    },
    "3035": {
      "op": "MSTORE"
    },
    "3036": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3038": {
      "op": "ADD"
    },
    "3039": {
      "fn": "ERC20._approve",
      "offset": [
        10705,
        10773
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4FA"
    },
    "3042": {
      "op": "JUMP"
    },
    "3043": {
      "fn": "ERC20._approve",
      "offset": [
        10705,
        10773
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3044": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3046": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3048": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3050": {
      "op": "SHL"
    },
    "3051": {
      "op": "SUB"
    },
    "3052": {
      "fn": "ERC20._approve",
      "offset": [
        10784,
        10802
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 47
    },
    "3053": {
      "fn": "ERC20._approve",
      "offset": [
        10784,
        10802
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3054": {
      "fn": "ERC20._approve",
      "offset": [
        10784,
        10802
      ],
      "op": "AND",
      "path": "2"
    },
    "3055": {
      "fn": "ERC20._approve",
      "offset": [
        10784,
        10802
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3057": {
      "fn": "ERC20._approve",
      "offset": [
        10784,
        10802
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3058": {
      "fn": "ERC20._approve",
      "offset": [
        10784,
        10802
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3059": {
      "fn": "ERC20._approve",
      "offset": [
        10784,
        10802
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3060": {
      "fn": "ERC20._approve",
      "offset": [
        10784,
        10795
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "3062": {
      "fn": "ERC20._approve",
      "offset": [
        10784,
        10802
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3064": {
      "fn": "ERC20._approve",
      "offset": [
        10784,
        10802
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3065": {
      "fn": "ERC20._approve",
      "offset": [
        10784,
        10802
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3066": {
      "fn": "ERC20._approve",
      "offset": [
        10784,
        10802
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3067": {
      "fn": "ERC20._approve",
      "offset": [
        10784,
        10802
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3069": {
      "fn": "ERC20._approve",
      "offset": [
        10784,
        10802
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3070": {
      "fn": "ERC20._approve",
      "offset": [
        10784,
        10802
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3071": {
      "fn": "ERC20._approve",
      "offset": [
        10784,
        10802
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3072": {
      "fn": "ERC20._approve",
      "offset": [
        10784,
        10811
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "3073": {
      "fn": "ERC20._approve",
      "offset": [
        10784,
        10811
      ],
      "op": "DUP8",
      "path": "2"
    },
    "3074": {
      "fn": "ERC20._approve",
      "offset": [
        10784,
        10811
      ],
      "op": "AND",
      "path": "2"
    },
    "3075": {
      "fn": "ERC20._approve",
      "offset": [
        10784,
        10811
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3076": {
      "fn": "ERC20._approve",
      "offset": [
        10784,
        10811
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3077": {
      "fn": "ERC20._approve",
      "offset": [
        10784,
        10811
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3078": {
      "fn": "ERC20._approve",
      "offset": [
        10784,
        10811
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "3079": {
      "fn": "ERC20._approve",
      "offset": [
        10784,
        10811
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3080": {
      "fn": "ERC20._approve",
      "offset": [
        10784,
        10811
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3081": {
      "fn": "ERC20._approve",
      "offset": [
        10784,
        10811
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3082": {
      "fn": "ERC20._approve",
      "offset": [
        10784,
        10811
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3083": {
      "fn": "ERC20._approve",
      "offset": [
        10784,
        10811
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3084": {
      "fn": "ERC20._approve",
      "offset": [
        10784,
        10811
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3085": {
      "fn": "ERC20._approve",
      "offset": [
        10784,
        10820
      ],
      "op": "DUP6",
      "path": "2"
    },
    "3086": {
      "fn": "ERC20._approve",
      "offset": [
        10784,
        10820
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3087": {
      "fn": "ERC20._approve",
      "offset": [
        10784,
        10820
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "3088": {
      "fn": "ERC20._approve",
      "offset": [
        10835,
        10867
      ],
      "op": "SWAP1",
      "path": "2",
      "statement": 48
    },
    "3089": {
      "fn": "ERC20._approve",
      "offset": [
        10835,
        10867
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3090": {
      "op": "DUP5"
    },
    "3091": {
      "op": "DUP2"
    },
    "3092": {
      "op": "MSTORE"
    },
    "3093": {
      "fn": "ERC20._approve",
      "offset": [
        10835,
        10867
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "3126": {
      "fn": "ERC20._approve",
      "offset": [
        10835,
        10867
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3127": {
      "op": "ADD"
    },
    "3128": {
      "fn": "ERC20._approve",
      "offset": [
        10835,
        10867
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3130": {
      "fn": "ERC20._approve",
      "offset": [
        10835,
        10867
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3131": {
      "fn": "ERC20._approve",
      "offset": [
        10835,
        10867
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3132": {
      "fn": "ERC20._approve",
      "offset": [
        10835,
        10867
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3133": {
      "fn": "ERC20._approve",
      "offset": [
        10835,
        10867
      ],
      "op": "SUB",
      "path": "2"
    },
    "3134": {
      "fn": "ERC20._approve",
      "offset": [
        10835,
        10867
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3135": {
      "fn": "ERC20._approve",
      "offset": [
        10835,
        10867
      ],
      "op": "LOG3",
      "path": "2"
    },
    "3136": {
      "fn": "ERC20._approve",
      "offset": [
        10504,
        10874
      ],
      "op": "POP",
      "path": "2"
    },
    "3137": {
      "fn": "ERC20._approve",
      "offset": [
        10504,
        10874
      ],
      "op": "POP",
      "path": "2"
    },
    "3138": {
      "fn": "ERC20._approve",
      "offset": [
        10504,
        10874
      ],
      "op": "POP",
      "path": "2"
    },
    "3139": {
      "fn": "ERC20._approve",
      "jump": "o",
      "offset": [
        10504,
        10874
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3140": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11155,
        11596
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3141": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11285,
        11309
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3143": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11312,
        11337
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC50"
    },
    "3146": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11322,
        11327
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3147": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11329,
        11336
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3148": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11312,
        11321
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8A2"
    },
    "3151": {
      "fn": "ERC20._spendAllowance",
      "jump": "i",
      "offset": [
        11312,
        11337
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3152": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11312,
        11337
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3153": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11285,
        11337
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3154": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11285,
        11337
      ],
      "op": "POP",
      "path": "2"
    },
    "3155": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3157": {
      "op": "NOT"
    },
    "3158": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11351,
        11367
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3159": {
      "branch": 76,
      "fn": "ERC20._spendAllowance",
      "offset": [
        11351,
        11388
      ],
      "op": "EQ",
      "path": "2"
    },
    "3160": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11347,
        11590
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCB8"
    },
    "3163": {
      "branch": 76,
      "fn": "ERC20._spendAllowance",
      "offset": [
        11347,
        11590
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3164": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11432,
        11438
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 49
    },
    "3165": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11412,
        11428
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3166": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11412,
        11438
      ],
      "op": "LT",
      "path": "2"
    },
    "3167": {
      "branch": 77,
      "fn": "ERC20._spendAllowance",
      "offset": [
        11412,
        11438
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3168": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11404,
        11472
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCAB"
    },
    "3171": {
      "branch": 77,
      "fn": "ERC20._spendAllowance",
      "offset": [
        11404,
        11472
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3172": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11404,
        11472
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3174": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11404,
        11472
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3175": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3179": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3181": {
      "op": "SHL"
    },
    "3182": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11404,
        11472
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3183": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11404,
        11472
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3184": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3186": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11404,
        11472
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3188": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11404,
        11472
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3189": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11404,
        11472
      ],
      "op": "ADD",
      "path": "2"
    },
    "3190": {
      "op": "MSTORE"
    },
    "3191": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "3193": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3195": {
      "op": "DUP3"
    },
    "3196": {
      "op": "ADD"
    },
    "3197": {
      "op": "MSTORE"
    },
    "3198": {
      "op": "PUSH32",
      "value": "0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
    },
    "3231": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3233": {
      "op": "DUP3"
    },
    "3234": {
      "op": "ADD"
    },
    "3235": {
      "op": "MSTORE"
    },
    "3236": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3238": {
      "op": "ADD"
    },
    "3239": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11404,
        11472
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4FA"
    },
    "3242": {
      "op": "JUMP"
    },
    "3243": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11404,
        11472
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3244": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11514,
        11565
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 50,
      "value": "0xCB8"
    },
    "3247": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11523,
        11528
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3248": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11530,
        11537
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3249": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11558,
        11564
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3250": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11539,
        11555
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3251": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11539,
        11564
      ],
      "op": "SUB",
      "path": "2"
    },
    "3252": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11514,
        11522
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB20"
    },
    "3255": {
      "fn": "ERC20._spendAllowance",
      "jump": "i",
      "offset": [
        11514,
        11565
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3256": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11514,
        11565
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3257": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11275,
        11596
      ],
      "op": "POP",
      "path": "2"
    },
    "3258": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11155,
        11596
      ],
      "op": "POP",
      "path": "2"
    },
    "3259": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11155,
        11596
      ],
      "op": "POP",
      "path": "2"
    },
    "3260": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11155,
        11596
      ],
      "op": "POP",
      "path": "2"
    },
    "3261": {
      "fn": "ERC20._spendAllowance",
      "jump": "o",
      "offset": [
        11155,
        11596
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3262": {
      "fn": "ERC20._transfer",
      "offset": [
        7473,
        8291
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3263": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3265": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3267": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3269": {
      "op": "SHL"
    },
    "3270": {
      "op": "SUB"
    },
    "3271": {
      "fn": "ERC20._transfer",
      "offset": [
        7599,
        7617
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 51
    },
    "3272": {
      "branch": 78,
      "fn": "ERC20._transfer",
      "offset": [
        7599,
        7617
      ],
      "op": "AND",
      "path": "2"
    },
    "3273": {
      "fn": "ERC20._transfer",
      "offset": [
        7591,
        7659
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD22"
    },
    "3276": {
      "branch": 78,
      "fn": "ERC20._transfer",
      "offset": [
        7591,
        7659
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3277": {
      "fn": "ERC20._transfer",
      "offset": [
        7591,
        7659
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3279": {
      "fn": "ERC20._transfer",
      "offset": [
        7591,
        7659
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3280": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3284": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3286": {
      "op": "SHL"
    },
    "3287": {
      "fn": "ERC20._transfer",
      "offset": [
        7591,
        7659
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3288": {
      "fn": "ERC20._transfer",
      "offset": [
        7591,
        7659
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3289": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3291": {
      "fn": "ERC20._transfer",
      "offset": [
        7591,
        7659
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3293": {
      "fn": "ERC20._transfer",
      "offset": [
        7591,
        7659
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3294": {
      "fn": "ERC20._transfer",
      "offset": [
        7591,
        7659
      ],
      "op": "ADD",
      "path": "2"
    },
    "3295": {
      "op": "MSTORE"
    },
    "3296": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "3298": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3300": {
      "op": "DUP3"
    },
    "3301": {
      "op": "ADD"
    },
    "3302": {
      "op": "MSTORE"
    },
    "3303": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E736665722066726F6D20746865207A65726F206164"
    },
    "3336": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3338": {
      "op": "DUP3"
    },
    "3339": {
      "op": "ADD"
    },
    "3340": {
      "op": "MSTORE"
    },
    "3341": {
      "op": "PUSH5",
      "value": "0x6472657373"
    },
    "3347": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "3349": {
      "op": "SHL"
    },
    "3350": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3352": {
      "op": "DUP3"
    },
    "3353": {
      "op": "ADD"
    },
    "3354": {
      "op": "MSTORE"
    },
    "3355": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3357": {
      "op": "ADD"
    },
    "3358": {
      "fn": "ERC20._transfer",
      "offset": [
        7591,
        7659
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4FA"
    },
    "3361": {
      "op": "JUMP"
    },
    "3362": {
      "fn": "ERC20._transfer",
      "offset": [
        7591,
        7659
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3363": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3365": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3367": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3369": {
      "op": "SHL"
    },
    "3370": {
      "op": "SUB"
    },
    "3371": {
      "fn": "ERC20._transfer",
      "offset": [
        7677,
        7693
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 52
    },
    "3372": {
      "branch": 79,
      "fn": "ERC20._transfer",
      "offset": [
        7677,
        7693
      ],
      "op": "AND",
      "path": "2"
    },
    "3373": {
      "fn": "ERC20._transfer",
      "offset": [
        7669,
        7733
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD84"
    },
    "3376": {
      "branch": 79,
      "fn": "ERC20._transfer",
      "offset": [
        7669,
        7733
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3377": {
      "fn": "ERC20._transfer",
      "offset": [
        7669,
        7733
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3379": {
      "fn": "ERC20._transfer",
      "offset": [
        7669,
        7733
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3380": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3384": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3386": {
      "op": "SHL"
    },
    "3387": {
      "fn": "ERC20._transfer",
      "offset": [
        7669,
        7733
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3388": {
      "fn": "ERC20._transfer",
      "offset": [
        7669,
        7733
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3389": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3391": {
      "fn": "ERC20._transfer",
      "offset": [
        7669,
        7733
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3393": {
      "fn": "ERC20._transfer",
      "offset": [
        7669,
        7733
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3394": {
      "fn": "ERC20._transfer",
      "offset": [
        7669,
        7733
      ],
      "op": "ADD",
      "path": "2"
    },
    "3395": {
      "op": "MSTORE"
    },
    "3396": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "3398": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3400": {
      "op": "DUP3"
    },
    "3401": {
      "op": "ADD"
    },
    "3402": {
      "op": "MSTORE"
    },
    "3403": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220746F20746865207A65726F2061646472"
    },
    "3436": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3438": {
      "op": "DUP3"
    },
    "3439": {
      "op": "ADD"
    },
    "3440": {
      "op": "MSTORE"
    },
    "3441": {
      "op": "PUSH3",
      "value": "0x657373"
    },
    "3445": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "3447": {
      "op": "SHL"
    },
    "3448": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3450": {
      "op": "DUP3"
    },
    "3451": {
      "op": "ADD"
    },
    "3452": {
      "op": "MSTORE"
    },
    "3453": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3455": {
      "op": "ADD"
    },
    "3456": {
      "fn": "ERC20._transfer",
      "offset": [
        7669,
        7733
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4FA"
    },
    "3459": {
      "op": "JUMP"
    },
    "3460": {
      "fn": "ERC20._transfer",
      "offset": [
        7669,
        7733
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3461": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3463": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3465": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3467": {
      "op": "SHL"
    },
    "3468": {
      "op": "SUB"
    },
    "3469": {
      "fn": "ERC20._transfer",
      "offset": [
        7815,
        7830
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3470": {
      "fn": "ERC20._transfer",
      "offset": [
        7815,
        7830
      ],
      "op": "AND",
      "path": "2"
    },
    "3471": {
      "fn": "ERC20._transfer",
      "offset": [
        7793,
        7812
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3473": {
      "fn": "ERC20._transfer",
      "offset": [
        7815,
        7830
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3474": {
      "fn": "ERC20._transfer",
      "offset": [
        7815,
        7830
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3475": {
      "fn": "ERC20._transfer",
      "offset": [
        7815,
        7830
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3476": {
      "fn": "ERC20._transfer",
      "offset": [
        7815,
        7830
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3478": {
      "fn": "ERC20._transfer",
      "offset": [
        7815,
        7830
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3479": {
      "fn": "ERC20._transfer",
      "offset": [
        7815,
        7830
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3480": {
      "fn": "ERC20._transfer",
      "offset": [
        7815,
        7830
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3481": {
      "fn": "ERC20._transfer",
      "offset": [
        7815,
        7830
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3483": {
      "fn": "ERC20._transfer",
      "offset": [
        7815,
        7830
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3484": {
      "fn": "ERC20._transfer",
      "offset": [
        7815,
        7830
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3485": {
      "fn": "ERC20._transfer",
      "offset": [
        7815,
        7830
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3486": {
      "fn": "ERC20._transfer",
      "offset": [
        7848,
        7869
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 53
    },
    "3487": {
      "fn": "ERC20._transfer",
      "offset": [
        7848,
        7869
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3488": {
      "fn": "ERC20._transfer",
      "offset": [
        7848,
        7869
      ],
      "op": "LT",
      "path": "2"
    },
    "3489": {
      "branch": 80,
      "fn": "ERC20._transfer",
      "offset": [
        7848,
        7869
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3490": {
      "fn": "ERC20._transfer",
      "offset": [
        7840,
        7912
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xDFC"
    },
    "3493": {
      "branch": 80,
      "fn": "ERC20._transfer",
      "offset": [
        7840,
        7912
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3494": {
      "fn": "ERC20._transfer",
      "offset": [
        7840,
        7912
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3496": {
      "fn": "ERC20._transfer",
      "offset": [
        7840,
        7912
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3497": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3501": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3503": {
      "op": "SHL"
    },
    "3504": {
      "fn": "ERC20._transfer",
      "offset": [
        7840,
        7912
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3505": {
      "fn": "ERC20._transfer",
      "offset": [
        7840,
        7912
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3506": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3508": {
      "fn": "ERC20._transfer",
      "offset": [
        7840,
        7912
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3510": {
      "fn": "ERC20._transfer",
      "offset": [
        7840,
        7912
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3511": {
      "fn": "ERC20._transfer",
      "offset": [
        7840,
        7912
      ],
      "op": "ADD",
      "path": "2"
    },
    "3512": {
      "op": "MSTORE"
    },
    "3513": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "3515": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3517": {
      "op": "DUP3"
    },
    "3518": {
      "op": "ADD"
    },
    "3519": {
      "op": "MSTORE"
    },
    "3520": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220616D6F756E7420657863656564732062"
    },
    "3553": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3555": {
      "op": "DUP3"
    },
    "3556": {
      "op": "ADD"
    },
    "3557": {
      "op": "MSTORE"
    },
    "3558": {
      "op": "PUSH6",
      "value": "0x616C616E6365"
    },
    "3565": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "3567": {
      "op": "SHL"
    },
    "3568": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3570": {
      "op": "DUP3"
    },
    "3571": {
      "op": "ADD"
    },
    "3572": {
      "op": "MSTORE"
    },
    "3573": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3575": {
      "op": "ADD"
    },
    "3576": {
      "fn": "ERC20._transfer",
      "offset": [
        7840,
        7912
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4FA"
    },
    "3579": {
      "op": "JUMP"
    },
    "3580": {
      "fn": "ERC20._transfer",
      "offset": [
        7840,
        7912
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3581": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3583": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3585": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3587": {
      "op": "SHL"
    },
    "3588": {
      "op": "SUB"
    },
    "3589": {
      "fn": "ERC20._transfer",
      "offset": [
        7946,
        7961
      ],
      "op": "DUP5",
      "path": "2",
      "statement": 54
    },
    "3590": {
      "fn": "ERC20._transfer",
      "offset": [
        7946,
        7961
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3591": {
      "fn": "ERC20._transfer",
      "offset": [
        7946,
        7961
      ],
      "op": "AND",
      "path": "2"
    },
    "3592": {
      "fn": "ERC20._transfer",
      "offset": [
        7946,
        7955
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3594": {
      "fn": "ERC20._transfer",
      "offset": [
        7946,
        7961
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3595": {
      "fn": "ERC20._transfer",
      "offset": [
        7946,
        7961
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3596": {
      "fn": "ERC20._transfer",
      "offset": [
        7946,
        7961
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3597": {
      "fn": "ERC20._transfer",
      "offset": [
        7946,
        7961
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3599": {
      "fn": "ERC20._transfer",
      "offset": [
        7946,
        7961
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3600": {
      "fn": "ERC20._transfer",
      "offset": [
        7946,
        7961
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3601": {
      "fn": "ERC20._transfer",
      "offset": [
        7946,
        7961
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3602": {
      "fn": "ERC20._transfer",
      "offset": [
        7946,
        7961
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3604": {
      "fn": "ERC20._transfer",
      "offset": [
        7946,
        7961
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3605": {
      "fn": "ERC20._transfer",
      "offset": [
        7946,
        7961
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3606": {
      "fn": "ERC20._transfer",
      "offset": [
        7946,
        7961
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3607": {
      "fn": "ERC20._transfer",
      "offset": [
        7964,
        7984
      ],
      "op": "DUP8",
      "path": "2"
    },
    "3608": {
      "fn": "ERC20._transfer",
      "offset": [
        7964,
        7984
      ],
      "op": "DUP8",
      "path": "2"
    },
    "3609": {
      "fn": "ERC20._transfer",
      "offset": [
        7964,
        7984
      ],
      "op": "SUB",
      "path": "2"
    },
    "3610": {
      "fn": "ERC20._transfer",
      "offset": [
        7946,
        7984
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3611": {
      "fn": "ERC20._transfer",
      "offset": [
        7946,
        7984
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "3612": {
      "fn": "ERC20._transfer",
      "offset": [
        8161,
        8174
      ],
      "op": "SWAP4",
      "path": "2",
      "statement": 55
    },
    "3613": {
      "fn": "ERC20._transfer",
      "offset": [
        8161,
        8174
      ],
      "op": "DUP8",
      "path": "2"
    },
    "3614": {
      "fn": "ERC20._transfer",
      "offset": [
        8161,
        8174
      ],
      "op": "AND",
      "path": "2"
    },
    "3615": {
      "fn": "ERC20._transfer",
      "offset": [
        8161,
        8174
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3616": {
      "fn": "ERC20._transfer",
      "offset": [
        8161,
        8174
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3617": {
      "fn": "ERC20._transfer",
      "offset": [
        8161,
        8174
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3618": {
      "fn": "ERC20._transfer",
      "offset": [
        8161,
        8174
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3619": {
      "fn": "ERC20._transfer",
      "offset": [
        8161,
        8174
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3620": {
      "fn": "ERC20._transfer",
      "offset": [
        8161,
        8174
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3621": {
      "fn": "ERC20._transfer",
      "offset": [
        8161,
        8174
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3622": {
      "fn": "ERC20._transfer",
      "offset": [
        8161,
        8184
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3623": {
      "fn": "ERC20._transfer",
      "offset": [
        8161,
        8184
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3624": {
      "fn": "ERC20._transfer",
      "offset": [
        8161,
        8184
      ],
      "op": "DUP8",
      "path": "2"
    },
    "3625": {
      "fn": "ERC20._transfer",
      "offset": [
        8161,
        8184
      ],
      "op": "ADD",
      "path": "2"
    },
    "3626": {
      "fn": "ERC20._transfer",
      "offset": [
        8161,
        8184
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3627": {
      "fn": "ERC20._transfer",
      "offset": [
        8161,
        8184
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "3628": {
      "fn": "ERC20._transfer",
      "offset": [
        8210,
        8236
      ],
      "op": "SWAP3",
      "path": "2",
      "statement": 56
    },
    "3629": {
      "fn": "ERC20._transfer",
      "offset": [
        8210,
        8236
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3630": {
      "op": "DUP6"
    },
    "3631": {
      "op": "DUP2"
    },
    "3632": {
      "op": "MSTORE"
    },
    "3633": {
      "fn": "ERC20._transfer",
      "offset": [
        8161,
        8174
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3634": {
      "fn": "ERC20._transfer",
      "offset": [
        8161,
        8174
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3635": {
      "fn": "ERC20._transfer",
      "offset": [
        8210,
        8236
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "3668": {
      "fn": "ERC20._transfer",
      "offset": [
        8210,
        8236
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3669": {
      "op": "ADD"
    },
    "3670": {
      "fn": "ERC20._transfer",
      "offset": [
        8210,
        8236
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3672": {
      "fn": "ERC20._transfer",
      "offset": [
        8210,
        8236
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3673": {
      "fn": "ERC20._transfer",
      "offset": [
        8210,
        8236
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3674": {
      "fn": "ERC20._transfer",
      "offset": [
        8210,
        8236
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3675": {
      "fn": "ERC20._transfer",
      "offset": [
        8210,
        8236
      ],
      "op": "SUB",
      "path": "2"
    },
    "3676": {
      "fn": "ERC20._transfer",
      "offset": [
        8210,
        8236
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3677": {
      "fn": "ERC20._transfer",
      "offset": [
        8210,
        8236
      ],
      "op": "LOG3",
      "path": "2"
    },
    "3678": {
      "fn": "ERC20._transfer",
      "offset": [
        8247,
        8284
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 57,
      "value": "0xCB8"
    },
    "3681": {
      "fn": "ERC20._beforeTokenTransfer",
      "offset": [
        12180,
        12301
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3682": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1359,
        1489
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3683": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "3685": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3686": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3688": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3690": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3692": {
      "op": "SHL"
    },
    "3693": {
      "op": "SUB"
    },
    "3694": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "AND",
      "path": "0"
    },
    "3695": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "15"
    },
    "3696": {
      "branch": 83,
      "fn": "Ownable._checkOwner",
      "offset": [
        1422,
        1445
      ],
      "op": "EQ",
      "path": "0",
      "statement": 58
    },
    "3697": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x638"
    },
    "3700": {
      "branch": 83,
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3701": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3703": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3704": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3708": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3710": {
      "op": "SHL"
    },
    "3711": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3712": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3713": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3715": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3717": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3718": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "ADD",
      "path": "0"
    },
    "3719": {
      "op": "DUP2"
    },
    "3720": {
      "op": "SWAP1"
    },
    "3721": {
      "op": "MSTORE"
    },
    "3722": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3724": {
      "op": "DUP3"
    },
    "3725": {
      "op": "ADD"
    },
    "3726": {
      "op": "MSTORE"
    },
    "3727": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "3760": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3762": {
      "op": "DUP3"
    },
    "3763": {
      "op": "ADD"
    },
    "3764": {
      "op": "MSTORE"
    },
    "3765": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3767": {
      "op": "ADD"
    },
    "3768": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4FA"
    },
    "3771": {
      "op": "JUMP"
    },
    "3772": {
      "fn": "ERC20._mint",
      "offset": [
        8567,
        9102
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3773": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3775": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3777": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3779": {
      "op": "SHL"
    },
    "3780": {
      "op": "SUB"
    },
    "3781": {
      "fn": "ERC20._mint",
      "offset": [
        8650,
        8671
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 59
    },
    "3782": {
      "branch": 81,
      "fn": "ERC20._mint",
      "offset": [
        8650,
        8671
      ],
      "op": "AND",
      "path": "2"
    },
    "3783": {
      "fn": "ERC20._mint",
      "offset": [
        8642,
        8707
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF12"
    },
    "3786": {
      "branch": 81,
      "fn": "ERC20._mint",
      "offset": [
        8642,
        8707
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3787": {
      "fn": "ERC20._mint",
      "offset": [
        8642,
        8707
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3789": {
      "fn": "ERC20._mint",
      "offset": [
        8642,
        8707
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3790": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3794": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3796": {
      "op": "SHL"
    },
    "3797": {
      "fn": "ERC20._mint",
      "offset": [
        8642,
        8707
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3798": {
      "fn": "ERC20._mint",
      "offset": [
        8642,
        8707
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3799": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3801": {
      "fn": "ERC20._mint",
      "offset": [
        8642,
        8707
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3803": {
      "fn": "ERC20._mint",
      "offset": [
        8642,
        8707
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3804": {
      "fn": "ERC20._mint",
      "offset": [
        8642,
        8707
      ],
      "op": "ADD",
      "path": "2"
    },
    "3805": {
      "op": "MSTORE"
    },
    "3806": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3808": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3810": {
      "op": "DUP3"
    },
    "3811": {
      "op": "ADD"
    },
    "3812": {
      "op": "MSTORE"
    },
    "3813": {
      "op": "PUSH32",
      "value": "0x45524332303A206D696E7420746F20746865207A65726F206164647265737300"
    },
    "3846": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3848": {
      "op": "DUP3"
    },
    "3849": {
      "op": "ADD"
    },
    "3850": {
      "op": "MSTORE"
    },
    "3851": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3853": {
      "op": "ADD"
    },
    "3854": {
      "fn": "ERC20._mint",
      "offset": [
        8642,
        8707
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4FA"
    },
    "3857": {
      "op": "JUMP"
    },
    "3858": {
      "fn": "ERC20._mint",
      "offset": [
        8642,
        8707
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3859": {
      "fn": "ERC20._mint",
      "offset": [
        8794,
        8800
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 60
    },
    "3860": {
      "fn": "ERC20._mint",
      "offset": [
        8778,
        8790
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "3862": {
      "fn": "ERC20._mint",
      "offset": [
        8778,
        8790
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3864": {
      "fn": "ERC20._mint",
      "offset": [
        8778,
        8800
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3865": {
      "fn": "ERC20._mint",
      "offset": [
        8778,
        8800
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3866": {
      "fn": "ERC20._mint",
      "offset": [
        8778,
        8800
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3867": {
      "fn": "ERC20._mint",
      "offset": [
        8778,
        8800
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF24"
    },
    "3870": {
      "fn": "ERC20._mint",
      "offset": [
        8778,
        8800
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3871": {
      "fn": "ERC20._mint",
      "offset": [
        8778,
        8800
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3872": {
      "fn": "ERC20._mint",
      "offset": [
        8778,
        8800
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1197"
    },
    "3875": {
      "fn": "ERC20._mint",
      "jump": "i",
      "offset": [
        8778,
        8800
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3876": {
      "fn": "ERC20._mint",
      "offset": [
        8778,
        8800
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3877": {
      "fn": "ERC20._mint",
      "offset": [
        8778,
        8800
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3878": {
      "fn": "ERC20._mint",
      "offset": [
        8778,
        8800
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3879": {
      "fn": "ERC20._mint",
      "offset": [
        8778,
        8800
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "3880": {
      "op": "POP"
    },
    "3881": {
      "op": "POP"
    },
    "3882": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3884": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3886": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3888": {
      "op": "SHL"
    },
    "3889": {
      "op": "SUB"
    },
    "3890": {
      "fn": "ERC20._mint",
      "offset": [
        8946,
        8964
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 61
    },
    "3891": {
      "fn": "ERC20._mint",
      "offset": [
        8946,
        8964
      ],
      "op": "AND",
      "path": "2"
    },
    "3892": {
      "fn": "ERC20._mint",
      "offset": [
        8946,
        8955
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3894": {
      "fn": "ERC20._mint",
      "offset": [
        8946,
        8964
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3895": {
      "fn": "ERC20._mint",
      "offset": [
        8946,
        8964
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3896": {
      "fn": "ERC20._mint",
      "offset": [
        8946,
        8964
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3897": {
      "fn": "ERC20._mint",
      "offset": [
        8946,
        8964
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3899": {
      "fn": "ERC20._mint",
      "offset": [
        8946,
        8964
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3900": {
      "fn": "ERC20._mint",
      "offset": [
        8946,
        8964
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3901": {
      "fn": "ERC20._mint",
      "offset": [
        8946,
        8964
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3902": {
      "fn": "ERC20._mint",
      "offset": [
        8946,
        8964
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3904": {
      "fn": "ERC20._mint",
      "offset": [
        8946,
        8964
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3905": {
      "fn": "ERC20._mint",
      "offset": [
        8946,
        8964
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3906": {
      "fn": "ERC20._mint",
      "offset": [
        8946,
        8964
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3907": {
      "fn": "ERC20._mint",
      "offset": [
        8946,
        8974
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3908": {
      "fn": "ERC20._mint",
      "offset": [
        8946,
        8974
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3909": {
      "fn": "ERC20._mint",
      "offset": [
        8946,
        8974
      ],
      "op": "DUP7",
      "path": "2"
    },
    "3910": {
      "fn": "ERC20._mint",
      "offset": [
        8946,
        8974
      ],
      "op": "ADD",
      "path": "2"
    },
    "3911": {
      "fn": "ERC20._mint",
      "offset": [
        8946,
        8974
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3912": {
      "fn": "ERC20._mint",
      "offset": [
        8946,
        8974
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "3913": {
      "fn": "ERC20._mint",
      "offset": [
        8999,
        9036
      ],
      "op": "MLOAD",
      "path": "2",
      "statement": 62
    },
    "3914": {
      "op": "DUP5"
    },
    "3915": {
      "op": "DUP2"
    },
    "3916": {
      "op": "MSTORE"
    },
    "3917": {
      "fn": "ERC20._mint",
      "offset": [
        8999,
        9036
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "3950": {
      "fn": "ERC20._mint",
      "offset": [
        8999,
        9036
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3951": {
      "op": "ADD"
    },
    "3952": {
      "fn": "ERC20._mint",
      "offset": [
        8999,
        9036
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3954": {
      "fn": "ERC20._mint",
      "offset": [
        8999,
        9036
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3955": {
      "fn": "ERC20._mint",
      "offset": [
        8999,
        9036
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3956": {
      "fn": "ERC20._mint",
      "offset": [
        8999,
        9036
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3957": {
      "fn": "ERC20._mint",
      "offset": [
        8999,
        9036
      ],
      "op": "SUB",
      "path": "2"
    },
    "3958": {
      "fn": "ERC20._mint",
      "offset": [
        8999,
        9036
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3959": {
      "fn": "ERC20._mint",
      "offset": [
        8999,
        9036
      ],
      "op": "LOG3",
      "path": "2"
    },
    "3960": {
      "fn": "TheGridDAO.mint",
      "offset": [
        1165,
        1262
      ],
      "op": "POP",
      "path": "25"
    },
    "3961": {
      "fn": "TheGridDAO.mint",
      "offset": [
        1165,
        1262
      ],
      "op": "POP",
      "path": "25"
    },
    "3962": {
      "fn": "TheGridDAO.mint",
      "jump": "o",
      "offset": [
        1165,
        1262
      ],
      "op": "JUMP",
      "path": "25"
    },
    "3963": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2433,
        2620
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3964": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "3966": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3967": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3968": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3970": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3972": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3974": {
      "op": "SHL"
    },
    "3975": {
      "op": "SUB"
    },
    "3976": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 63
    },
    "3977": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3978": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "AND",
      "path": "0"
    },
    "3979": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3981": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3983": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3985": {
      "op": "SHL"
    },
    "3986": {
      "op": "SUB"
    },
    "3987": {
      "op": "NOT"
    },
    "3988": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3989": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "AND",
      "path": "0"
    },
    "3990": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3991": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "OR",
      "path": "0"
    },
    "3992": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3993": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "3994": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3995": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2573,
        2613
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 64,
      "value": "0x40"
    },
    "3997": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2573,
        2613
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3998": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3999": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "AND",
      "path": "0"
    },
    "4000": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4001": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4002": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4003": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4004": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2573,
        2613
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "4037": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2573,
        2613
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4038": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2506,
        2522
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4040": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2506,
        2522
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4041": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2573,
        2613
      ],
      "op": "LOG3",
      "path": "0"
    },
    "4042": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2496,
        2620
      ],
      "op": "POP",
      "path": "0"
    },
    "4043": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2433,
        2620
      ],
      "op": "POP",
      "path": "0"
    },
    "4044": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        2433,
        2620
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4045": {
      "op": "JUMPDEST"
    },
    "4046": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4048": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4050": {
      "op": "DUP1"
    },
    "4051": {
      "op": "DUP4"
    },
    "4052": {
      "op": "MSTORE"
    },
    "4053": {
      "op": "DUP4"
    },
    "4054": {
      "op": "MLOAD"
    },
    "4055": {
      "op": "DUP1"
    },
    "4056": {
      "op": "DUP3"
    },
    "4057": {
      "op": "DUP6"
    },
    "4058": {
      "op": "ADD"
    },
    "4059": {
      "op": "MSTORE"
    },
    "4060": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4062": {
      "op": "JUMPDEST"
    },
    "4063": {
      "op": "DUP2"
    },
    "4064": {
      "op": "DUP2"
    },
    "4065": {
      "op": "LT"
    },
    "4066": {
      "op": "ISZERO"
    },
    "4067": {
      "op": "PUSH2",
      "value": "0xFFA"
    },
    "4070": {
      "op": "JUMPI"
    },
    "4071": {
      "op": "DUP6"
    },
    "4072": {
      "op": "DUP2"
    },
    "4073": {
      "op": "ADD"
    },
    "4074": {
      "op": "DUP4"
    },
    "4075": {
      "op": "ADD"
    },
    "4076": {
      "op": "MLOAD"
    },
    "4077": {
      "op": "DUP6"
    },
    "4078": {
      "op": "DUP3"
    },
    "4079": {
      "op": "ADD"
    },
    "4080": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4082": {
      "op": "ADD"
    },
    "4083": {
      "op": "MSTORE"
    },
    "4084": {
      "op": "DUP3"
    },
    "4085": {
      "op": "ADD"
    },
    "4086": {
      "op": "PUSH2",
      "value": "0xFDE"
    },
    "4089": {
      "op": "JUMP"
    },
    "4090": {
      "op": "JUMPDEST"
    },
    "4091": {
      "op": "DUP2"
    },
    "4092": {
      "op": "DUP2"
    },
    "4093": {
      "op": "GT"
    },
    "4094": {
      "op": "ISZERO"
    },
    "4095": {
      "op": "PUSH2",
      "value": "0x100C"
    },
    "4098": {
      "op": "JUMPI"
    },
    "4099": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4101": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4103": {
      "op": "DUP4"
    },
    "4104": {
      "op": "DUP8"
    },
    "4105": {
      "op": "ADD"
    },
    "4106": {
      "op": "ADD"
    },
    "4107": {
      "op": "MSTORE"
    },
    "4108": {
      "op": "JUMPDEST"
    },
    "4109": {
      "op": "POP"
    },
    "4110": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4112": {
      "op": "ADD"
    },
    "4113": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4115": {
      "op": "NOT"
    },
    "4116": {
      "op": "AND"
    },
    "4117": {
      "op": "SWAP3"
    },
    "4118": {
      "op": "SWAP1"
    },
    "4119": {
      "op": "SWAP3"
    },
    "4120": {
      "op": "ADD"
    },
    "4121": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4123": {
      "op": "ADD"
    },
    "4124": {
      "op": "SWAP4"
    },
    "4125": {
      "op": "SWAP3"
    },
    "4126": {
      "op": "POP"
    },
    "4127": {
      "op": "POP"
    },
    "4128": {
      "op": "POP"
    },
    "4129": {
      "jump": "o",
      "op": "JUMP"
    },
    "4130": {
      "op": "JUMPDEST"
    },
    "4131": {
      "op": "DUP1"
    },
    "4132": {
      "op": "CALLDATALOAD"
    },
    "4133": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4135": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4137": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4139": {
      "op": "SHL"
    },
    "4140": {
      "op": "SUB"
    },
    "4141": {
      "op": "DUP2"
    },
    "4142": {
      "op": "AND"
    },
    "4143": {
      "op": "DUP2"
    },
    "4144": {
      "op": "EQ"
    },
    "4145": {
      "op": "PUSH2",
      "value": "0x1039"
    },
    "4148": {
      "op": "JUMPI"
    },
    "4149": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4151": {
      "op": "DUP1"
    },
    "4152": {
      "op": "REVERT"
    },
    "4153": {
      "op": "JUMPDEST"
    },
    "4154": {
      "op": "SWAP2"
    },
    "4155": {
      "op": "SWAP1"
    },
    "4156": {
      "op": "POP"
    },
    "4157": {
      "jump": "o",
      "op": "JUMP"
    },
    "4158": {
      "op": "JUMPDEST"
    },
    "4159": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4161": {
      "op": "DUP1"
    },
    "4162": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4164": {
      "op": "DUP4"
    },
    "4165": {
      "op": "DUP6"
    },
    "4166": {
      "op": "SUB"
    },
    "4167": {
      "op": "SLT"
    },
    "4168": {
      "op": "ISZERO"
    },
    "4169": {
      "op": "PUSH2",
      "value": "0x1051"
    },
    "4172": {
      "op": "JUMPI"
    },
    "4173": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4175": {
      "op": "DUP1"
    },
    "4176": {
      "op": "REVERT"
    },
    "4177": {
      "op": "JUMPDEST"
    },
    "4178": {
      "op": "PUSH2",
      "value": "0x105A"
    },
    "4181": {
      "op": "DUP4"
    },
    "4182": {
      "op": "PUSH2",
      "value": "0x1022"
    },
    "4185": {
      "jump": "i",
      "op": "JUMP"
    },
    "4186": {
      "op": "JUMPDEST"
    },
    "4187": {
      "op": "SWAP5"
    },
    "4188": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4190": {
      "op": "SWAP4"
    },
    "4191": {
      "op": "SWAP1"
    },
    "4192": {
      "op": "SWAP4"
    },
    "4193": {
      "op": "ADD"
    },
    "4194": {
      "op": "CALLDATALOAD"
    },
    "4195": {
      "op": "SWAP4"
    },
    "4196": {
      "op": "POP"
    },
    "4197": {
      "op": "POP"
    },
    "4198": {
      "op": "POP"
    },
    "4199": {
      "jump": "o",
      "op": "JUMP"
    },
    "4200": {
      "op": "JUMPDEST"
    },
    "4201": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4203": {
      "op": "DUP1"
    },
    "4204": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4206": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4208": {
      "op": "DUP5"
    },
    "4209": {
      "op": "DUP7"
    },
    "4210": {
      "op": "SUB"
    },
    "4211": {
      "op": "SLT"
    },
    "4212": {
      "op": "ISZERO"
    },
    "4213": {
      "op": "PUSH2",
      "value": "0x107D"
    },
    "4216": {
      "op": "JUMPI"
    },
    "4217": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4219": {
      "op": "DUP1"
    },
    "4220": {
      "op": "REVERT"
    },
    "4221": {
      "op": "JUMPDEST"
    },
    "4222": {
      "op": "PUSH2",
      "value": "0x1086"
    },
    "4225": {
      "op": "DUP5"
    },
    "4226": {
      "op": "PUSH2",
      "value": "0x1022"
    },
    "4229": {
      "jump": "i",
      "op": "JUMP"
    },
    "4230": {
      "op": "JUMPDEST"
    },
    "4231": {
      "op": "SWAP3"
    },
    "4232": {
      "op": "POP"
    },
    "4233": {
      "op": "PUSH2",
      "value": "0x1094"
    },
    "4236": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4238": {
      "op": "DUP6"
    },
    "4239": {
      "op": "ADD"
    },
    "4240": {
      "op": "PUSH2",
      "value": "0x1022"
    },
    "4243": {
      "jump": "i",
      "op": "JUMP"
    },
    "4244": {
      "op": "JUMPDEST"
    },
    "4245": {
      "op": "SWAP2"
    },
    "4246": {
      "op": "POP"
    },
    "4247": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4249": {
      "op": "DUP5"
    },
    "4250": {
      "op": "ADD"
    },
    "4251": {
      "op": "CALLDATALOAD"
    },
    "4252": {
      "op": "SWAP1"
    },
    "4253": {
      "op": "POP"
    },
    "4254": {
      "op": "SWAP3"
    },
    "4255": {
      "op": "POP"
    },
    "4256": {
      "op": "SWAP3"
    },
    "4257": {
      "op": "POP"
    },
    "4258": {
      "op": "SWAP3"
    },
    "4259": {
      "jump": "o",
      "op": "JUMP"
    },
    "4260": {
      "op": "JUMPDEST"
    },
    "4261": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4263": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4265": {
      "op": "DUP3"
    },
    "4266": {
      "op": "DUP5"
    },
    "4267": {
      "op": "SUB"
    },
    "4268": {
      "op": "SLT"
    },
    "4269": {
      "op": "ISZERO"
    },
    "4270": {
      "op": "PUSH2",
      "value": "0x10B6"
    },
    "4273": {
      "op": "JUMPI"
    },
    "4274": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4276": {
      "op": "DUP1"
    },
    "4277": {
      "op": "REVERT"
    },
    "4278": {
      "op": "JUMPDEST"
    },
    "4279": {
      "op": "PUSH2",
      "value": "0x10BF"
    },
    "4282": {
      "op": "DUP3"
    },
    "4283": {
      "op": "PUSH2",
      "value": "0x1022"
    },
    "4286": {
      "jump": "i",
      "op": "JUMP"
    },
    "4287": {
      "op": "JUMPDEST"
    },
    "4288": {
      "op": "SWAP4"
    },
    "4289": {
      "op": "SWAP3"
    },
    "4290": {
      "op": "POP"
    },
    "4291": {
      "op": "POP"
    },
    "4292": {
      "op": "POP"
    },
    "4293": {
      "jump": "o",
      "op": "JUMP"
    },
    "4294": {
      "op": "JUMPDEST"
    },
    "4295": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4297": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4299": {
      "op": "DUP3"
    },
    "4300": {
      "op": "DUP5"
    },
    "4301": {
      "op": "SUB"
    },
    "4302": {
      "op": "SLT"
    },
    "4303": {
      "op": "ISZERO"
    },
    "4304": {
      "op": "PUSH2",
      "value": "0x10D8"
    },
    "4307": {
      "op": "JUMPI"
    },
    "4308": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4310": {
      "op": "DUP1"
    },
    "4311": {
      "op": "REVERT"
    },
    "4312": {
      "op": "JUMPDEST"
    },
    "4313": {
      "op": "POP"
    },
    "4314": {
      "op": "CALLDATALOAD"
    },
    "4315": {
      "op": "SWAP2"
    },
    "4316": {
      "op": "SWAP1"
    },
    "4317": {
      "op": "POP"
    },
    "4318": {
      "jump": "o",
      "op": "JUMP"
    },
    "4319": {
      "op": "JUMPDEST"
    },
    "4320": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4322": {
      "op": "DUP1"
    },
    "4323": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4325": {
      "op": "DUP4"
    },
    "4326": {
      "op": "DUP6"
    },
    "4327": {
      "op": "SUB"
    },
    "4328": {
      "op": "SLT"
    },
    "4329": {
      "op": "ISZERO"
    },
    "4330": {
      "op": "PUSH2",
      "value": "0x10F2"
    },
    "4333": {
      "op": "JUMPI"
    },
    "4334": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4336": {
      "op": "DUP1"
    },
    "4337": {
      "op": "REVERT"
    },
    "4338": {
      "op": "JUMPDEST"
    },
    "4339": {
      "op": "DUP3"
    },
    "4340": {
      "op": "CALLDATALOAD"
    },
    "4341": {
      "op": "SWAP2"
    },
    "4342": {
      "op": "POP"
    },
    "4343": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4345": {
      "op": "DUP4"
    },
    "4346": {
      "op": "ADD"
    },
    "4347": {
      "op": "CALLDATALOAD"
    },
    "4348": {
      "op": "DUP1"
    },
    "4349": {
      "op": "ISZERO"
    },
    "4350": {
      "op": "ISZERO"
    },
    "4351": {
      "op": "DUP2"
    },
    "4352": {
      "op": "EQ"
    },
    "4353": {
      "op": "PUSH2",
      "value": "0x1109"
    },
    "4356": {
      "op": "JUMPI"
    },
    "4357": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4359": {
      "op": "DUP1"
    },
    "4360": {
      "op": "REVERT"
    },
    "4361": {
      "op": "JUMPDEST"
    },
    "4362": {
      "op": "DUP1"
    },
    "4363": {
      "op": "SWAP2"
    },
    "4364": {
      "op": "POP"
    },
    "4365": {
      "op": "POP"
    },
    "4366": {
      "op": "SWAP3"
    },
    "4367": {
      "op": "POP"
    },
    "4368": {
      "op": "SWAP3"
    },
    "4369": {
      "op": "SWAP1"
    },
    "4370": {
      "op": "POP"
    },
    "4371": {
      "jump": "o",
      "op": "JUMP"
    },
    "4372": {
      "op": "JUMPDEST"
    },
    "4373": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4375": {
      "op": "DUP1"
    },
    "4376": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4378": {
      "op": "DUP4"
    },
    "4379": {
      "op": "DUP6"
    },
    "4380": {
      "op": "SUB"
    },
    "4381": {
      "op": "SLT"
    },
    "4382": {
      "op": "ISZERO"
    },
    "4383": {
      "op": "PUSH2",
      "value": "0x1127"
    },
    "4386": {
      "op": "JUMPI"
    },
    "4387": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4389": {
      "op": "DUP1"
    },
    "4390": {
      "op": "REVERT"
    },
    "4391": {
      "op": "JUMPDEST"
    },
    "4392": {
      "op": "PUSH2",
      "value": "0x1130"
    },
    "4395": {
      "op": "DUP4"
    },
    "4396": {
      "op": "PUSH2",
      "value": "0x1022"
    },
    "4399": {
      "jump": "i",
      "op": "JUMP"
    },
    "4400": {
      "op": "JUMPDEST"
    },
    "4401": {
      "op": "SWAP2"
    },
    "4402": {
      "op": "POP"
    },
    "4403": {
      "op": "PUSH2",
      "value": "0x113E"
    },
    "4406": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4408": {
      "op": "DUP5"
    },
    "4409": {
      "op": "ADD"
    },
    "4410": {
      "op": "PUSH2",
      "value": "0x1022"
    },
    "4413": {
      "jump": "i",
      "op": "JUMP"
    },
    "4414": {
      "op": "JUMPDEST"
    },
    "4415": {
      "op": "SWAP1"
    },
    "4416": {
      "op": "POP"
    },
    "4417": {
      "op": "SWAP3"
    },
    "4418": {
      "op": "POP"
    },
    "4419": {
      "op": "SWAP3"
    },
    "4420": {
      "op": "SWAP1"
    },
    "4421": {
      "op": "POP"
    },
    "4422": {
      "jump": "o",
      "op": "JUMP"
    },
    "4423": {
      "op": "JUMPDEST"
    },
    "4424": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4426": {
      "op": "DUP2"
    },
    "4427": {
      "op": "DUP2"
    },
    "4428": {
      "op": "SHR"
    },
    "4429": {
      "op": "SWAP1"
    },
    "4430": {
      "op": "DUP3"
    },
    "4431": {
      "op": "AND"
    },
    "4432": {
      "op": "DUP1"
    },
    "4433": {
      "op": "PUSH2",
      "value": "0x115B"
    },
    "4436": {
      "op": "JUMPI"
    },
    "4437": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "4439": {
      "op": "DUP3"
    },
    "4440": {
      "op": "AND"
    },
    "4441": {
      "op": "SWAP2"
    },
    "4442": {
      "op": "POP"
    },
    "4443": {
      "op": "JUMPDEST"
    },
    "4444": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4446": {
      "op": "DUP3"
    },
    "4447": {
      "op": "LT"
    },
    "4448": {
      "op": "DUP2"
    },
    "4449": {
      "op": "SUB"
    },
    "4450": {
      "op": "PUSH2",
      "value": "0x117B"
    },
    "4453": {
      "op": "JUMPI"
    },
    "4454": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4459": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4461": {
      "op": "SHL"
    },
    "4462": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4464": {
      "op": "MSTORE"
    },
    "4465": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "4467": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4469": {
      "op": "MSTORE"
    },
    "4470": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4472": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4474": {
      "op": "REVERT"
    },
    "4475": {
      "op": "JUMPDEST"
    },
    "4476": {
      "op": "POP"
    },
    "4477": {
      "op": "SWAP2"
    },
    "4478": {
      "op": "SWAP1"
    },
    "4479": {
      "op": "POP"
    },
    "4480": {
      "jump": "o",
      "op": "JUMP"
    },
    "4481": {
      "op": "JUMPDEST"
    },
    "4482": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4487": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4489": {
      "op": "SHL"
    },
    "4490": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4492": {
      "op": "MSTORE"
    },
    "4493": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "4495": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4497": {
      "op": "MSTORE"
    },
    "4498": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4500": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4502": {
      "op": "REVERT"
    },
    "4503": {
      "op": "JUMPDEST"
    },
    "4504": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4506": {
      "op": "DUP3"
    },
    "4507": {
      "op": "NOT"
    },
    "4508": {
      "op": "DUP3"
    },
    "4509": {
      "op": "GT"
    },
    "4510": {
      "op": "ISZERO"
    },
    "4511": {
      "op": "PUSH2",
      "value": "0x11AA"
    },
    "4514": {
      "op": "JUMPI"
    },
    "4515": {
      "op": "PUSH2",
      "value": "0x11AA"
    },
    "4518": {
      "op": "PUSH2",
      "value": "0x1181"
    },
    "4521": {
      "jump": "i",
      "op": "JUMP"
    },
    "4522": {
      "op": "JUMPDEST"
    },
    "4523": {
      "op": "POP"
    },
    "4524": {
      "op": "ADD"
    },
    "4525": {
      "op": "SWAP1"
    },
    "4526": {
      "jump": "o",
      "op": "JUMP"
    },
    "4527": {
      "op": "JUMPDEST"
    },
    "4528": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4530": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4532": {
      "op": "DUP3"
    },
    "4533": {
      "op": "ADD"
    },
    "4534": {
      "op": "PUSH2",
      "value": "0x11C1"
    },
    "4537": {
      "op": "JUMPI"
    },
    "4538": {
      "op": "PUSH2",
      "value": "0x11C1"
    },
    "4541": {
      "op": "PUSH2",
      "value": "0x1181"
    },
    "4544": {
      "jump": "i",
      "op": "JUMP"
    },
    "4545": {
      "op": "JUMPDEST"
    },
    "4546": {
      "op": "POP"
    },
    "4547": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4549": {
      "op": "ADD"
    },
    "4550": {
      "op": "SWAP1"
    },
    "4551": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "e9549e5f71c7aa3ed95770a3a57c2b576574cb41",
  "source": "// SCH Course Copyright Policy (C): DO-NOT-SHARE-WITH-ANYONE\n// https://smartcontractshacking.com/#copyright-policy\npragma solidity 0.8.13;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n\ninterface ITheGridTreasury {\n    function sendPayment(address _receiver, uint _amount) external;\n}\n\n/**\n * @title TheGridDAO\n * @author JohnnyTime (https://smartcontractshacking.com)\n */\ncontract TheGridDAO is ERC20, Ownable {\n\n    struct Proposal {\n        uint256 proposedAt;\n        address proposer;\n        address to; // Target Address\n        uint256 amount; // msg.value\n        uint256 yes;\n        uint256 no;\n        bool processed;\n    }\n\n    mapping(uint => Proposal) public getProposal;\n    mapping(uint => mapping (address => bool)) internal alreadyVoted; \n    \n    uint256 private immutable VOTING_PERIOD = 1 days;\n    \n    uint256 public lastProposalId;\n    ITheGridTreasury public treasury;\n\n    constructor() ERC20(\"The Grid\", \"GRD\") {\n        lastProposalId = 1;\n    }\n\n    function setTreasury(address _treasury) external onlyOwner {\n        treasury = ITheGridTreasury(_treasury);\n    }\n\n    function mint(address _to, uint256 _amount) public onlyOwner {\n        _mint(_to, _amount);\n    }\n\n    function propose(address _receiver, uint256 _amount) external returns (uint256) {\n        \n        uint256 proposerBalance = balanceOf(msg.sender);\n        require(proposerBalance > 0, \"You don't have voting power\");\n\n        uint256 proposalId = lastProposalId;\n\n        Proposal storage proposal = getProposal[proposalId];\n        proposal.proposedAt = block.timestamp;\n        proposal.proposer = msg.sender;\n        proposal.to = _receiver;\n        proposal.amount = _amount;\n        proposal.yes = proposerBalance;\n        proposal.no = 0;\n        proposal.processed = false;\n        \n        alreadyVoted[proposalId][msg.sender] = true;\n\n        lastProposalId++;\n\n        return proposalId;\n    }\n\n    function vote(uint _proposalId, bool _decision) external {\n        \n        require(!alreadyVoted[_proposalId][msg.sender], \"Already voted on this proposal\");\n\n        uint256 voterBalance = balanceOf(msg.sender);\n        require(voterBalance > 0, \"You don't have voting power\");\n        \n        Proposal storage proposal = getProposal[_proposalId];\n\n        // Some checks\n        require(proposal.proposer != address(0), \"Doesn't exist\");\n        require(!proposal.processed, \"Already processed\");\n        \n        // Add votes\n        if(_decision){\n            proposal.yes += voterBalance; \n        } else {\n            proposal.no += voterBalance; \n        }\n        \n        // Update voted\n        alreadyVoted[_proposalId][msg.sender] = true;\n    }\n\n    function execute(uint _id) external {\n\n        Proposal storage proposal = getProposal[_id];\n        require(proposal.proposer != address(0), \"Doesn't exist\");\n        require(block.timestamp >= proposal.proposedAt + VOTING_PERIOD, \"Voting is not over\");\n        require(!proposal.processed, \"Proposl already processed\");\n\n        if(proposal.yes > proposal.no) {\n            treasury.sendPayment(proposal.to, proposal.amount);\n        }\n\n        proposal.processed = true;\n    }\n}\n\n",
  "sourceMap": "438:2784:25:-:0;;;874:6;832:48;;965:74;;;;;;;;;;1976:113:2;;;;;;;;;;;;;-1:-1:-1;;;1976:113:2;;;;;;;;;;;;;;;;-1:-1:-1;;;1976:113:2;;;2050:5;2042;:13;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2065:17:2;;;;:7;;:17;;;;;:::i;:::-;;1976:113;;936:32:0;955:12;:10;;;:12;;:::i;:::-;936:18;:32::i;:::-;1031:1:25::1;1014:14;:18:::0;438:2784;;640:96:15;719:10;;640:96::o;2433:187:0:-;2525:6;;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;;2573:40;;2525:6;;;2541:17;2525:6;;2573:40;;2506:16;;2573:40;2496:124;2433:187;:::o;438:2784:25:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;438:2784:25;;;-1:-1:-1;438:2784:25;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:380:34;93:1;89:12;;;;136;;;157:61;;211:4;203:6;199:17;189:27;;157:61;264:2;256:6;253:14;233:18;230:38;227:161;;310:10;305:3;301:20;298:1;291:31;345:4;342:1;335:15;373:4;370:1;363:15;227:161;;14:380;;;:::o;:::-;438:2784:25;;;;;;;;;;;;",
  "sourcePath": "contracts/dao-attack-2/TheGridDAO.sol",
  "type": "contract"
}