{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "destAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "encodedCalldata",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "result",
          "type": "bytes"
        }
      ],
      "name": "Executed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "NewOperator",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "OperatorRemoved",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "CALL_OPERATION",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DELEGATECALL_OPERATION",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "addOperator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_destAddress",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_encodedCalldata",
          "type": "bytes"
        },
        {
          "internalType": "uint8",
          "name": "operation",
          "type": "uint8"
        }
      ],
      "name": "execute",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_destAddress",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_encodedCalldata",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "executeWithValue",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_operators",
          "type": "address[]"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initialized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC1155BatchReceived",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC1155Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC721Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "operators",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "removeOperator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "allSourcePaths": {
    "10": "/Users/m4ud/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/token/ERC721/utils/ERC721Holder.sol",
    "13": "/Users/m4ud/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/utils/introspection/ERC165.sol",
    "15": "/Users/m4ud/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/utils/introspection/IERC165.sol",
    "17": "contracts/call-attacks-3/CryptoKeeper.sol",
    "18": "contracts/call-attacks-3/ICryptoKeeper.sol",
    "2": "/Users/m4ud/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/security/ReentrancyGuard.sol",
    "3": "/Users/m4ud/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/token/ERC1155/IERC1155Receiver.sol",
    "4": "/Users/m4ud/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/token/ERC1155/utils/ERC1155Holder.sol",
    "5": "/Users/m4ud/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/token/ERC1155/utils/ERC1155Receiver.sol",
    "9": "/Users/m4ud/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/token/ERC721/IERC721Receiver.sol"
  },
  "ast": {
    "absolutePath": "contracts/call-attacks-3/CryptoKeeper.sol",
    "exportedSymbols": {
      "CallHelpers": [
        161
      ],
      "CryptoKeeper": [
        471
      ],
      "ERC1155Holder": [
        2911
      ],
      "ERC1155Receiver": [
        4768
      ],
      "ERC165": [
        2962
      ],
      "ERC721Holder": [
        2938
      ],
      "ICryptoKeeper": [
        512
      ],
      "IERC1155Receiver": [
        4852
      ],
      "IERC165": [
        4734
      ],
      "IERC721Receiver": [
        4786
      ],
      "ReentrancyGuard": [
        2860
      ]
    },
    "id": 472,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 131,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".13"
        ],
        "nodeType": "PragmaDirective",
        "src": "116:24:17"
      },
      {
        "absolutePath": "/Users/m4ud/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/security/ReentrancyGuard.sol",
        "file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "id": 132,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 472,
        "sourceUnit": 2861,
        "src": "142:62:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/m4ud/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/utils/introspection/ERC165.sol",
        "file": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
        "id": 133,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 472,
        "sourceUnit": 2963,
        "src": "205:64:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/m4ud/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/token/ERC721/utils/ERC721Holder.sol",
        "file": "@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol",
        "id": 134,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 472,
        "sourceUnit": 2939,
        "src": "270:69:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/m4ud/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/token/ERC1155/utils/ERC1155Holder.sol",
        "file": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol",
        "id": 135,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 472,
        "sourceUnit": 2912,
        "src": "340:71:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/call-attacks-3/ICryptoKeeper.sol",
        "file": "./ICryptoKeeper.sol",
        "id": 136,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 472,
        "sourceUnit": 513,
        "src": "412:29:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "CallHelpers",
        "contractDependencies": [],
        "contractKind": "library",
        "fullyImplemented": true,
        "id": 161,
        "linearizedBaseContracts": [
          161
        ],
        "name": "CallHelpers",
        "nameLocation": "451:11:17",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 159,
              "nodeType": "Block",
              "src": "569:214:17",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 143,
                        "name": "_returnData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 138,
                        "src": "583:11:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 144,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "595:6:17",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "583:18:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "3638",
                      "id": 145,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "604:2:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_68_by_1",
                        "typeString": "int_const 68"
                      },
                      "value": "68"
                    },
                    "src": "583:23:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 149,
                  "nodeType": "IfStatement",
                  "src": "579:67:17",
                  "trueBody": {
                    "expression": {
                      "hexValue": "5472616e73616374696f6e2072657665727465642073696c656e746c79",
                      "id": 147,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "615:31:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_d0b1e7612ebe87924453e5d4581b9067879655587bae8a2dfee438433699b890",
                        "typeString": "literal_string \"Transaction reverted silently\""
                      },
                      "value": "Transaction reverted silently"
                    },
                    "functionReturnParameters": 142,
                    "id": 148,
                    "nodeType": "Return",
                    "src": "608:38:17"
                  }
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "666:61:17",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "680:37:17",
                        "value": {
                          "arguments": [
                            {
                              "name": "_returnData",
                              "nodeType": "YulIdentifier",
                              "src": "699:11:17"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "712:4:17",
                              "type": "",
                              "value": "0x04"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "695:3:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "695:22:17"
                        },
                        "variableNames": [
                          {
                            "name": "_returnData",
                            "nodeType": "YulIdentifier",
                            "src": "680:11:17"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 138,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "680:11:17",
                      "valueSize": 1
                    },
                    {
                      "declaration": 138,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "699:11:17",
                      "valueSize": 1
                    }
                  ],
                  "id": 150,
                  "nodeType": "InlineAssembly",
                  "src": "657:70:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 153,
                        "name": "_returnData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 138,
                        "src": "754:11:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 155,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "768:6:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                              "typeString": "type(string storage pointer)"
                            },
                            "typeName": {
                              "id": 154,
                              "name": "string",
                              "nodeType": "ElementaryTypeName",
                              "src": "768:6:17",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 156,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "767:8:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                          "typeString": "type(string storage pointer)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                          "typeString": "type(string storage pointer)"
                        }
                      ],
                      "expression": {
                        "id": 151,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "743:3:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 152,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "747:6:17",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "743:10:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "743:33:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 142,
                  "id": 158,
                  "nodeType": "Return",
                  "src": "736:40:17"
                }
              ]
            },
            "id": 160,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRevertMsg",
            "nameLocation": "478:12:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 139,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 138,
                  "mutability": "mutable",
                  "name": "_returnData",
                  "nameLocation": "513:11:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 160,
                  "src": "500:24:17",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 137,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "500:5:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "490:40:17"
            },
            "returnParameters": {
              "id": 142,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 141,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 160,
                  "src": "554:13:17",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 140,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "554:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "553:15:17"
            },
            "scope": 161,
            "src": "469:314:17",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 472,
        "src": "443:342:17",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 162,
              "name": "ICryptoKeeper",
              "nameLocations": [
                "816:13:17"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 512,
              "src": "816:13:17"
            },
            "id": 163,
            "nodeType": "InheritanceSpecifier",
            "src": "816:13:17"
          },
          {
            "baseName": {
              "id": 164,
              "name": "ERC165",
              "nameLocations": [
                "835:6:17"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2962,
              "src": "835:6:17"
            },
            "id": 165,
            "nodeType": "InheritanceSpecifier",
            "src": "835:6:17"
          },
          {
            "baseName": {
              "id": 166,
              "name": "ERC721Holder",
              "nameLocations": [
                "847:12:17"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2938,
              "src": "847:12:17"
            },
            "id": 167,
            "nodeType": "InheritanceSpecifier",
            "src": "847:12:17"
          },
          {
            "baseName": {
              "id": 168,
              "name": "ERC1155Holder",
              "nameLocations": [
                "865:13:17"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2911,
              "src": "865:13:17"
            },
            "id": 169,
            "nodeType": "InheritanceSpecifier",
            "src": "865:13:17"
          },
          {
            "baseName": {
              "id": 170,
              "name": "ReentrancyGuard",
              "nameLocations": [
                "884:15:17"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2860,
              "src": "884:15:17"
            },
            "id": 171,
            "nodeType": "InheritanceSpecifier",
            "src": "884:15:17"
          }
        ],
        "canonicalName": "CryptoKeeper",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 471,
        "linearizedBaseContracts": [
          471,
          2860,
          2911,
          4768,
          4852,
          2938,
          2962,
          4734,
          4786,
          512
        ],
        "name": "CryptoKeeper",
        "nameLocation": "796:12:17",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "global": false,
            "id": 174,
            "libraryName": {
              "id": 172,
              "name": "CallHelpers",
              "nameLocations": [
                "912:11:17"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 161,
              "src": "912:11:17"
            },
            "nodeType": "UsingForDirective",
            "src": "906:28:17",
            "typeName": {
              "id": 173,
              "name": "bytes",
              "nodeType": "ElementaryTypeName",
              "src": "928:5:17",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes_storage_ptr",
                "typeString": "bytes"
              }
            }
          },
          {
            "constant": true,
            "functionSelector": "d3f43c78",
            "id": 177,
            "mutability": "constant",
            "name": "CALL_OPERATION",
            "nameLocation": "962:14:17",
            "nodeType": "VariableDeclaration",
            "scope": 471,
            "src": "940:40:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 175,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "940:5:17",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 176,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "979:1:17",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "48f33103",
            "id": 180,
            "mutability": "constant",
            "name": "DELEGATECALL_OPERATION",
            "nameLocation": "1008:22:17",
            "nodeType": "VariableDeclaration",
            "scope": 471,
            "src": "986:48:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 178,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "986:5:17",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "hexValue": "32",
              "id": 179,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1033:1:17",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2_by_1",
                "typeString": "int_const 2"
              },
              "value": "2"
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "eventSelector": "4e2058815a1087a94d8a92ecdce2f91d1370aa8c270ef97b0f28e0a3c6f68a87",
            "id": 192,
            "name": "Executed",
            "nameLocation": "1047:8:17",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 191,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 182,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "caller",
                  "nameLocation": "1073:6:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 192,
                  "src": "1065:14:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 181,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1065:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 184,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "destAddress",
                  "nameLocation": "1097:11:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 192,
                  "src": "1089:19:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 183,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1089:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 186,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "encodedCalldata",
                  "nameLocation": "1124:15:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 192,
                  "src": "1118:21:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 185,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1118:5:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 188,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "1157:5:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 192,
                  "src": "1149:13:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 187,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1149:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 190,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "result",
                  "nameLocation": "1178:6:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 192,
                  "src": "1172:12:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 189,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1172:5:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1055:135:17"
            },
            "src": "1041:150:17"
          },
          {
            "anonymous": false,
            "eventSelector": "da12ee837e6978172aaf54b16145ffe08414fd8710092ef033c71b8eb6ec189a",
            "id": 196,
            "name": "NewOperator",
            "nameLocation": "1202:11:17",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 195,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 194,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "1222:8:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 196,
                  "src": "1214:16:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 193,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1214:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1213:18:17"
            },
            "src": "1196:36:17"
          },
          {
            "anonymous": false,
            "eventSelector": "80c0b871b97b595b16a7741c1b06fed0c6f6f558639f18ccbce50724325dc40d",
            "id": 200,
            "name": "OperatorRemoved",
            "nameLocation": "1243:15:17",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 199,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 198,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "1267:8:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 200,
                  "src": "1259:16:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 197,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1259:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1258:18:17"
            },
            "src": "1237:40:17"
          },
          {
            "constant": false,
            "functionSelector": "158ef93e",
            "id": 203,
            "mutability": "mutable",
            "name": "initialized",
            "nameLocation": "1295:11:17",
            "nodeType": "VariableDeclaration",
            "scope": 471,
            "src": "1283:31:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 201,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1283:4:17",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "66616c7365",
              "id": 202,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1309:5:17",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "13e7c9d8",
            "id": 207,
            "mutability": "mutable",
            "name": "operators",
            "nameLocation": "1352:9:17",
            "nodeType": "VariableDeclaration",
            "scope": 471,
            "src": "1320:41:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 206,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 204,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1328:7:17",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1320:24:17",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 205,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1339:4:17",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 215,
              "nodeType": "Block",
              "src": "1393:67:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 210,
                        "name": "initialized",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 203,
                        "src": "1411:11:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420696e697469616c697a6564",
                        "id": 211,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1424:17:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6ae2314e839d4d9cfe442dd3a2386a5c83b76bbc48be45cca60d84c71c4359b2",
                          "typeString": "literal_string \"Not initialized\""
                        },
                        "value": "Not initialized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6ae2314e839d4d9cfe442dd3a2386a5c83b76bbc48be45cca60d84c71c4359b2",
                          "typeString": "literal_string \"Not initialized\""
                        }
                      ],
                      "id": 209,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1403:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 212,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1403:39:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 213,
                  "nodeType": "ExpressionStatement",
                  "src": "1403:39:17"
                },
                {
                  "id": 214,
                  "nodeType": "PlaceholderStatement",
                  "src": "1452:1:17"
                }
              ]
            },
            "id": 216,
            "name": "isInitialized",
            "nameLocation": "1377:13:17",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 208,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1390:2:17"
            },
            "src": "1368:92:17",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 228,
              "nodeType": "Block",
              "src": "1506:75:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 221,
                          "name": "operators",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 207,
                          "src": "1524:9:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 223,
                        "indexExpression": {
                          "id": 222,
                          "name": "_account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 218,
                          "src": "1534:8:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1524:19:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420616e206f70657261746f72",
                        "id": 224,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1545:17:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f35fd4a738eebd3d8a43ee8cffeb2e7d69b74cccb38138604c5588639da8e775",
                          "typeString": "literal_string \"Not an operator\""
                        },
                        "value": "Not an operator"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f35fd4a738eebd3d8a43ee8cffeb2e7d69b74cccb38138604c5588639da8e775",
                          "typeString": "literal_string \"Not an operator\""
                        }
                      ],
                      "id": 220,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1516:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1516:47:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 226,
                  "nodeType": "ExpressionStatement",
                  "src": "1516:47:17"
                },
                {
                  "id": 227,
                  "nodeType": "PlaceholderStatement",
                  "src": "1573:1:17"
                }
              ]
            },
            "id": 229,
            "name": "onlyOperator",
            "nameLocation": "1475:12:17",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 219,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 218,
                  "mutability": "mutable",
                  "name": "_account",
                  "nameLocation": "1496:8:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 229,
                  "src": "1488:16:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 217,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1488:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1487:18:17"
            },
            "src": "1466:115:17",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              479
            ],
            "body": {
              "id": 274,
              "nodeType": "Block",
              "src": "1647:322:17",
              "statements": [
                {
                  "expression": {
                    "id": 237,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 235,
                      "name": "initialized",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 203,
                      "src": "1666:11:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 236,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1680:4:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1666:18:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 238,
                  "nodeType": "ExpressionStatement",
                  "src": "1666:18:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 243,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 240,
                            "name": "_operators",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 232,
                            "src": "1716:10:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                              "typeString": "address[] calldata"
                            }
                          },
                          "id": 241,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1727:6:17",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "1716:17:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "hexValue": "3130",
                          "id": 242,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1737:2:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "src": "1716:23:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616e277420736574206d6f7265207468616e203130206f70657261746f7273206174206f6e6365",
                        "id": 244,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1753:42:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_930af2e14d276e4fdaf6237148fcf88390d68f7bd0ef2cefea71fb755233159a",
                          "typeString": "literal_string \"Can't set more than 10 operators at once\""
                        },
                        "value": "Can't set more than 10 operators at once"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_930af2e14d276e4fdaf6237148fcf88390d68f7bd0ef2cefea71fb755233159a",
                          "typeString": "literal_string \"Can't set more than 10 operators at once\""
                        }
                      ],
                      "id": 239,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1695:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1695:110:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 246,
                  "nodeType": "ExpressionStatement",
                  "src": "1695:110:17"
                },
                {
                  "body": {
                    "id": 272,
                    "nodeType": "Block",
                    "src": "1862:101:17",
                    "statements": [
                      {
                        "expression": {
                          "id": 264,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 258,
                              "name": "operators",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 207,
                              "src": "1876:9:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 262,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 259,
                                "name": "_operators",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 232,
                                "src": "1886:10:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                  "typeString": "address[] calldata"
                                }
                              },
                              "id": 261,
                              "indexExpression": {
                                "id": 260,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 248,
                                "src": "1897:1:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1886:13:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1876:24:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 263,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1903:4:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "1876:31:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 265,
                        "nodeType": "ExpressionStatement",
                        "src": "1876:31:17"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 267,
                                "name": "_operators",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 232,
                                "src": "1938:10:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                  "typeString": "address[] calldata"
                                }
                              },
                              "id": 269,
                              "indexExpression": {
                                "id": 268,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 248,
                                "src": "1949:1:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1938:13:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 266,
                            "name": "NewOperator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 196,
                            "src": "1926:11:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 270,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1926:26:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 271,
                        "nodeType": "EmitStatement",
                        "src": "1921:31:17"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 254,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 251,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 248,
                      "src": "1834:1:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 252,
                        "name": "_operators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 232,
                        "src": "1838:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      },
                      "id": 253,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1849:6:17",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1838:17:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1834:21:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 273,
                  "initializationExpression": {
                    "assignments": [
                      248
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 248,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "1827:1:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 273,
                        "src": "1821:7:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 247,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "1821:5:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 250,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 249,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1831:1:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1821:11:17"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 256,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1857:3:17",
                      "subExpression": {
                        "id": 255,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 248,
                        "src": "1857:1:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "id": 257,
                    "nodeType": "ExpressionStatement",
                    "src": "1857:3:17"
                  },
                  "nodeType": "ForStatement",
                  "src": "1816:147:17"
                }
              ]
            },
            "functionSelector": "a224cee7",
            "id": 275,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initialize",
            "nameLocation": "1596:10:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 233,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 232,
                  "mutability": "mutable",
                  "name": "_operators",
                  "nameLocation": "1626:10:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 275,
                  "src": "1607:29:17",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 230,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1607:7:17",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 231,
                    "nodeType": "ArrayTypeName",
                    "src": "1607:9:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1606:31:17"
            },
            "returnParameters": {
              "id": 234,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1647:0:17"
            },
            "scope": 471,
            "src": "1587:382:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              490
            ],
            "body": {
              "id": 299,
              "nodeType": "Block",
              "src": "2174:78:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 293,
                        "name": "_destAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 277,
                        "src": "2200:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 294,
                        "name": "_encodedCalldata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 279,
                        "src": "2214:16:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 295,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2232:1:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 296,
                        "name": "operation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 281,
                        "src": "2235:9:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "id": 292,
                      "name": "_execute",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 403,
                      "src": "2191:8:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_calldata_ptr_$_t_uint256_$_t_uint8_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (address,bytes calldata,uint256,uint8) returns (bytes memory)"
                      }
                    },
                    "id": 297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2191:54:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "functionReturnParameters": 291,
                  "id": 298,
                  "nodeType": "Return",
                  "src": "2184:61:17"
                }
              ]
            },
            "functionSelector": "a22b6e8b",
            "id": 300,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 284,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 283,
                  "name": "isInitialized",
                  "nameLocations": [
                    "2112:13:17"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 216,
                  "src": "2112:13:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "2112:13:17"
              },
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 286,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "2139:3:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 287,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "2143:6:17",
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "2139:10:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 288,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 285,
                  "name": "onlyOperator",
                  "nameLocations": [
                    "2126:12:17"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 229,
                  "src": "2126:12:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "2126:24:17"
              }
            ],
            "name": "execute",
            "nameLocation": "1984:7:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 282,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 277,
                  "mutability": "mutable",
                  "name": "_destAddress",
                  "nameLocation": "2009:12:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 300,
                  "src": "2001:20:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 276,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2001:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 279,
                  "mutability": "mutable",
                  "name": "_encodedCalldata",
                  "nameLocation": "2046:16:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 300,
                  "src": "2031:31:17",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 278,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2031:5:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 281,
                  "mutability": "mutable",
                  "name": "operation",
                  "nameLocation": "2078:9:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 300,
                  "src": "2072:15:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 280,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2072:5:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1991:102:17"
            },
            "returnParameters": {
              "id": 291,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 290,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 300,
                  "src": "2160:12:17",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 289,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2160:5:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2159:14:17"
            },
            "scope": 471,
            "src": "1975:277:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              501
            ],
            "body": {
              "id": 324,
              "nodeType": "Block",
              "src": "2476:88:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 318,
                        "name": "_destAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 302,
                        "src": "2502:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 319,
                        "name": "_encodedCalldata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 304,
                        "src": "2516:16:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "id": 320,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 306,
                        "src": "2534:6:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 321,
                        "name": "CALL_OPERATION",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 177,
                        "src": "2542:14:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "id": 317,
                      "name": "_execute",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 403,
                      "src": "2493:8:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_calldata_ptr_$_t_uint256_$_t_uint8_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (address,bytes calldata,uint256,uint8) returns (bytes memory)"
                      }
                    },
                    "id": 322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2493:64:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "functionReturnParameters": 316,
                  "id": 323,
                  "nodeType": "Return",
                  "src": "2486:71:17"
                }
              ]
            },
            "functionSelector": "fa4bb79d",
            "id": 325,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 309,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 308,
                  "name": "isInitialized",
                  "nameLocations": [
                    "2410:13:17"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 216,
                  "src": "2410:13:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "2410:13:17"
              },
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 311,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "2437:3:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 312,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "2441:6:17",
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "2437:10:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 313,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 310,
                  "name": "onlyOperator",
                  "nameLocations": [
                    "2424:12:17"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 229,
                  "src": "2424:12:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "2424:24:17"
              }
            ],
            "name": "executeWithValue",
            "nameLocation": "2267:16:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 307,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 302,
                  "mutability": "mutable",
                  "name": "_destAddress",
                  "nameLocation": "2301:12:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 325,
                  "src": "2293:20:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 301,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2293:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 304,
                  "mutability": "mutable",
                  "name": "_encodedCalldata",
                  "nameLocation": "2338:16:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 325,
                  "src": "2323:31:17",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 303,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2323:5:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 306,
                  "mutability": "mutable",
                  "name": "_value",
                  "nameLocation": "2372:6:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 325,
                  "src": "2364:14:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 305,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2364:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2283:101:17"
            },
            "returnParameters": {
              "id": 316,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 315,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 325,
                  "src": "2458:12:17",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 314,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2458:5:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2457:14:17"
            },
            "scope": 471,
            "src": "2258:306:17",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 402,
              "nodeType": "Block",
              "src": "2758:673:17",
              "statements": [
                {
                  "assignments": [
                    341
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 341,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "2774:7:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 402,
                      "src": "2769:12:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 340,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2769:4:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 342,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2769:12:17"
                },
                {
                  "assignments": [
                    344
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 344,
                      "mutability": "mutable",
                      "name": "result",
                      "nameLocation": "2804:6:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 402,
                      "src": "2791:19:17",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 343,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "2791:5:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 345,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2791:19:17"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 348,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 346,
                      "name": "operation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 333,
                      "src": "2824:9:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 347,
                      "name": "CALL_OPERATION",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 177,
                      "src": "2837:14:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "2824:27:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "id": 363,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 361,
                        "name": "operation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 333,
                        "src": "2988:9:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "id": 362,
                        "name": "DELEGATECALL_OPERATION",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 180,
                        "src": "3001:22:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "src": "2988:35:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "id": 378,
                      "nodeType": "Block",
                      "src": "3119:50:17",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "hexValue": "57726f6e67206f7065726174696f6e",
                                "id": 375,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3140:17:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_db66763b0d1c40159244b11c73b06dcaa801345729de269a44614c445547d0a4",
                                  "typeString": "literal_string \"Wrong operation\""
                                },
                                "value": "Wrong operation"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_db66763b0d1c40159244b11c73b06dcaa801345729de269a44614c445547d0a4",
                                  "typeString": "literal_string \"Wrong operation\""
                                }
                              ],
                              "id": 374,
                              "name": "revert",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                -19,
                                -19
                              ],
                              "referencedDeclaration": -19,
                              "src": "3133:6:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (string memory) pure"
                              }
                            },
                            "id": 376,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3133:25:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 377,
                          "nodeType": "ExpressionStatement",
                          "src": "3133:25:17"
                        }
                      ]
                    },
                    "id": 379,
                    "nodeType": "IfStatement",
                    "src": "2984:185:17",
                    "trueBody": {
                      "id": 373,
                      "nodeType": "Block",
                      "src": "3025:88:17",
                      "statements": [
                        {
                          "expression": {
                            "id": 371,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "components": [
                                {
                                  "id": 364,
                                  "name": "success",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 341,
                                  "src": "3040:7:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                {
                                  "id": 365,
                                  "name": "result",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 344,
                                  "src": "3049:6:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "id": 366,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "nodeType": "TupleExpression",
                              "src": "3039:17:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "tuple(bool,bytes memory)"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "arguments": [
                                {
                                  "id": 369,
                                  "name": "_encodedCalldata",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 329,
                                  "src": "3085:16:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_calldata_ptr",
                                    "typeString": "bytes calldata"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_calldata_ptr",
                                    "typeString": "bytes calldata"
                                  }
                                ],
                                "expression": {
                                  "id": 367,
                                  "name": "_destAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 327,
                                  "src": "3059:12:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "id": 368,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3072:12:17",
                                "memberName": "delegatecall",
                                "nodeType": "MemberAccess",
                                "src": "3059:25:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes memory) returns (bool,bytes memory)"
                                }
                              },
                              "id": 370,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3059:43:17",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "tuple(bool,bytes memory)"
                              }
                            },
                            "src": "3039:63:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 372,
                          "nodeType": "ExpressionStatement",
                          "src": "3039:63:17"
                        }
                      ]
                    }
                  },
                  "id": 380,
                  "nodeType": "IfStatement",
                  "src": "2821:348:17",
                  "trueBody": {
                    "id": 360,
                    "nodeType": "Block",
                    "src": "2853:125:17",
                    "statements": [
                      {
                        "expression": {
                          "id": 358,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "id": 349,
                                "name": "success",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 341,
                                "src": "2868:7:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "id": 350,
                                "name": "result",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 344,
                                "src": "2877:6:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "id": 351,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "2867:17:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "tuple(bool,bytes memory)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 356,
                                "name": "_encodedCalldata",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 329,
                                "src": "2937:16:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_calldata_ptr",
                                  "typeString": "bytes calldata"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_calldata_ptr",
                                  "typeString": "bytes calldata"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_calldata_ptr",
                                    "typeString": "bytes calldata"
                                  }
                                ],
                                "expression": {
                                  "id": 352,
                                  "name": "_destAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 327,
                                  "src": "2887:12:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "id": 353,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2900:4:17",
                                "memberName": "call",
                                "nodeType": "MemberAccess",
                                "src": "2887:17:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                }
                              },
                              "id": 355,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "names": [
                                "value"
                              ],
                              "nodeType": "FunctionCallOptions",
                              "options": [
                                {
                                  "id": 354,
                                  "name": "_value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 331,
                                  "src": "2912:6:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "src": "2887:32:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 357,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2887:80:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "tuple(bool,bytes memory)"
                            }
                          },
                          "src": "2867:100:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 359,
                        "nodeType": "ExpressionStatement",
                        "src": "2867:100:17"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "id": 382,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "3183:8:17",
                    "subExpression": {
                      "id": 381,
                      "name": "success",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 341,
                      "src": "3184:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 390,
                  "nodeType": "IfStatement",
                  "src": "3179:68:17",
                  "trueBody": {
                    "id": 389,
                    "nodeType": "Block",
                    "src": "3193:54:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 384,
                                  "name": "result",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 344,
                                  "src": "3214:6:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                },
                                "id": 385,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3221:12:17",
                                "memberName": "getRevertMsg",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 160,
                                "src": "3214:19:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes memory) pure returns (string memory)"
                                }
                              },
                              "id": 386,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3214:21:17",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 383,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -19,
                              -19
                            ],
                            "referencedDeclaration": -19,
                            "src": "3207:6:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 387,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3207:29:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 388,
                        "nodeType": "ExpressionStatement",
                        "src": "3207:29:17"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 392,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3284:3:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 393,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3288:6:17",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3284:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 394,
                        "name": "_destAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 327,
                        "src": "3308:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 395,
                        "name": "_encodedCalldata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 329,
                        "src": "3334:16:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "id": 396,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 331,
                        "src": "3364:6:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 397,
                        "name": "result",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 344,
                        "src": "3384:6:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 391,
                      "name": "Executed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 192,
                      "src": "3262:8:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,bytes memory,uint256,bytes memory)"
                      }
                    },
                    "id": 398,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3262:138:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 399,
                  "nodeType": "EmitStatement",
                  "src": "3257:143:17"
                },
                {
                  "expression": {
                    "id": 400,
                    "name": "result",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 344,
                    "src": "3418:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "functionReturnParameters": 339,
                  "id": 401,
                  "nodeType": "Return",
                  "src": "3411:13:17"
                }
              ]
            },
            "id": 403,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 336,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 335,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "2722:12:17"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2836,
                  "src": "2722:12:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "2722:12:17"
              }
            ],
            "name": "_execute",
            "nameLocation": "2579:8:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 334,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 327,
                  "mutability": "mutable",
                  "name": "_destAddress",
                  "nameLocation": "2605:12:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 403,
                  "src": "2597:20:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 326,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2597:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 329,
                  "mutability": "mutable",
                  "name": "_encodedCalldata",
                  "nameLocation": "2642:16:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 403,
                  "src": "2627:31:17",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 328,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2627:5:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 331,
                  "mutability": "mutable",
                  "name": "_value",
                  "nameLocation": "2676:6:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 403,
                  "src": "2668:14:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 330,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2668:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 333,
                  "mutability": "mutable",
                  "name": "operation",
                  "nameLocation": "2698:9:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 403,
                  "src": "2692:15:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 332,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2692:5:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2587:126:17"
            },
            "returnParameters": {
              "id": 339,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 338,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 403,
                  "src": "2744:12:17",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 337,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2744:5:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2743:14:17"
            },
            "scope": 471,
            "src": "2570:861:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "baseFunctions": [
              506
            ],
            "body": {
              "id": 422,
              "nodeType": "Block",
              "src": "3510:79:17",
              "statements": [
                {
                  "expression": {
                    "id": 416,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 412,
                        "name": "operators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 207,
                        "src": "3520:9:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 414,
                      "indexExpression": {
                        "id": 413,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 405,
                        "src": "3530:8:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3520:19:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 415,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3542:4:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3520:26:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 417,
                  "nodeType": "ExpressionStatement",
                  "src": "3520:26:17"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 419,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 405,
                        "src": "3573:8:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 418,
                      "name": "NewOperator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 196,
                      "src": "3561:11:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 420,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3561:21:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 421,
                  "nodeType": "EmitStatement",
                  "src": "3556:26:17"
                }
              ]
            },
            "functionSelector": "9870d7fe",
            "id": 423,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 408,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "3498:3:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 409,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "3502:6:17",
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "3498:10:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 410,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 407,
                  "name": "onlyOperator",
                  "nameLocations": [
                    "3485:12:17"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 229,
                  "src": "3485:12:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "3485:24:17"
              }
            ],
            "name": "addOperator",
            "nameLocation": "3446:11:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 406,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 405,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "3466:8:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 423,
                  "src": "3458:16:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 404,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3458:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3457:18:17"
            },
            "returnParameters": {
              "id": 411,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3510:0:17"
            },
            "scope": 471,
            "src": "3437:152:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              511
            ],
            "body": {
              "id": 442,
              "nodeType": "Block",
              "src": "3671:84:17",
              "statements": [
                {
                  "expression": {
                    "id": 436,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 432,
                        "name": "operators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 207,
                        "src": "3681:9:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 434,
                      "indexExpression": {
                        "id": 433,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 425,
                        "src": "3691:8:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3681:19:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 435,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3703:5:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "3681:27:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 437,
                  "nodeType": "ExpressionStatement",
                  "src": "3681:27:17"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 439,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 425,
                        "src": "3739:8:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 438,
                      "name": "OperatorRemoved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 200,
                      "src": "3723:15:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 440,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3723:25:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 441,
                  "nodeType": "EmitStatement",
                  "src": "3718:30:17"
                }
              ]
            },
            "functionSelector": "ac8a584a",
            "id": 443,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 428,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "3659:3:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 429,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "3663:6:17",
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "3659:10:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 430,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 427,
                  "name": "onlyOperator",
                  "nameLocations": [
                    "3646:12:17"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 229,
                  "src": "3646:12:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "3646:24:17"
              }
            ],
            "name": "removeOperator",
            "nameLocation": "3604:14:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 426,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 425,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "3627:8:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 443,
                  "src": "3619:16:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 424,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3619:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3618:18:17"
            },
            "returnParameters": {
              "id": 431,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3671:0:17"
            },
            "scope": 471,
            "src": "3595:160:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              2961,
              4767
            ],
            "body": {
              "id": 465,
              "nodeType": "Block",
              "src": "3921:134:17",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 463,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "id": 458,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 453,
                        "name": "interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 445,
                        "src": "3950:11:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 455,
                              "name": "ICryptoKeeper",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 512,
                              "src": "3970:13:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ICryptoKeeper_$512_$",
                                "typeString": "type(contract ICryptoKeeper)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_contract$_ICryptoKeeper_$512_$",
                                "typeString": "type(contract ICryptoKeeper)"
                              }
                            ],
                            "id": 454,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "3965:4:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 456,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3965:19:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_contract$_ICryptoKeeper_$512",
                            "typeString": "type(contract ICryptoKeeper)"
                          }
                        },
                        "id": 457,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "3985:11:17",
                        "memberName": "interfaceId",
                        "nodeType": "MemberAccess",
                        "src": "3965:31:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "src": "3950:46:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 461,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 445,
                          "src": "4036:11:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "expression": {
                          "id": 459,
                          "name": "super",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -25,
                          "src": "4012:5:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_super$_CryptoKeeper_$471_$",
                            "typeString": "type(contract super CryptoKeeper)"
                          }
                        },
                        "id": 460,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4018:17:17",
                        "memberName": "supportsInterface",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4767,
                        "src": "4012:23:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                          "typeString": "function (bytes4) view returns (bool)"
                        }
                      },
                      "id": 462,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4012:36:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3950:98:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 452,
                  "id": 464,
                  "nodeType": "Return",
                  "src": "3931:117:17"
                }
              ]
            },
            "functionSelector": "01ffc9a7",
            "id": 466,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "3770:17:17",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 449,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 447,
                  "name": "ERC165",
                  "nameLocations": [
                    "3869:6:17"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2962,
                  "src": "3869:6:17"
                },
                {
                  "id": 448,
                  "name": "ERC1155Receiver",
                  "nameLocations": [
                    "3877:15:17"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4768,
                  "src": "3877:15:17"
                }
              ],
              "src": "3860:33:17"
            },
            "parameters": {
              "id": 446,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 445,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "3795:11:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 466,
                  "src": "3788:18:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 444,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "3788:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3787:20:17"
            },
            "returnParameters": {
              "id": 452,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 451,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 466,
                  "src": "3911:4:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 450,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3911:4:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3910:6:17"
            },
            "scope": 471,
            "src": "3761:294:17",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 469,
              "nodeType": "Block",
              "src": "4092:2:17",
              "statements": []
            },
            "id": 470,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 467,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4072:2:17"
            },
            "returnParameters": {
              "id": 468,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4092:0:17"
            },
            "scope": 471,
            "src": "4065:29:17",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 472,
        "src": "787:3309:17",
        "usedErrors": []
      }
    ],
    "src": "116:3980:17"
  },
  "bytecode": "",
  "bytecodeSha1": "bda3920fd281e1518da541a579907a6cc93823d8",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.19+commit.7dd6d404"
  },
  "contractName": "CryptoKeeper",
  "coverageMap": {
    "branches": {
      "10": {},
      "13": {},
      "15": {},
      "17": {
        "CallHelpers.getRevertMsg": {
          "31": [
            583,
            606,
            false
          ]
        },
        "CryptoKeeper._execute": {
          "28": [
            2824,
            2851,
            false
          ],
          "29": [
            2988,
            3023,
            false
          ],
          "30": [
            3184,
            3191,
            false
          ]
        },
        "CryptoKeeper.executeWithValue": {
          "26": [
            1411,
            1422,
            true
          ],
          "27": [
            1524,
            1543,
            true
          ]
        },
        "CryptoKeeper.initialize": {
          "25": [
            1716,
            1739,
            true
          ]
        }
      },
      "18": {},
      "2": {
        "ReentrancyGuard._nonReentrantBefore": {
          "32": [
            2468,
            2487,
            true
          ]
        }
      },
      "3": {},
      "4": {},
      "5": {},
      "9": {}
    },
    "statements": {
      "10": {},
      "13": {
        "ERC165.supportsInterface": {
          "13": [
            930,
            977
          ]
        }
      },
      "15": {},
      "17": {
        "CallHelpers.getRevertMsg": {
          "23": [
            608,
            646
          ],
          "24": [
            736,
            776
          ]
        },
        "CryptoKeeper._execute": {
          "14": [
            2867,
            2967
          ],
          "15": [
            3039,
            3102
          ],
          "16": [
            3133,
            3158
          ],
          "17": [
            3207,
            3236
          ],
          "18": [
            3257,
            3400
          ],
          "19": [
            3411,
            3424
          ]
        },
        "CryptoKeeper.addOperator": {
          "1": [
            3520,
            3546
          ],
          "2": [
            3556,
            3582
          ]
        },
        "CryptoKeeper.execute": {
          "8": [
            2184,
            2245
          ]
        },
        "CryptoKeeper.executeWithValue": {
          "11": [
            2486,
            2557
          ]
        },
        "CryptoKeeper.initialize": {
          "3": [
            1666,
            1684
          ],
          "4": [
            1695,
            1805
          ],
          "5": [
            1876,
            1907
          ],
          "6": [
            1921,
            1952
          ],
          "7": [
            1857,
            1860
          ]
        },
        "CryptoKeeper.removeOperator": {
          "9": [
            3681,
            3708
          ],
          "10": [
            3718,
            3748
          ]
        },
        "CryptoKeeper.supportsInterface": {
          "0": [
            3931,
            4048
          ]
        }
      },
      "18": {},
      "2": {
        "ReentrancyGuard._nonReentrantAfter": {
          "20": [
            2809,
            2831
          ]
        },
        "ReentrancyGuard._nonReentrantBefore": {
          "21": [
            2460,
            2523
          ],
          "22": [
            2598,
            2616
          ]
        }
      },
      "3": {},
      "4": {},
      "5": {
        "ERC1155Receiver.supportsInterface": {
          "12": [
            505,
            601
          ]
        }
      },
      "9": {}
    }
  },
  "dependencies": [
    "CallHelpers",
    "OpenZeppelin/openzeppelin-contracts@4.8.0/ERC1155Holder",
    "OpenZeppelin/openzeppelin-contracts@4.8.0/ERC1155Receiver",
    "OpenZeppelin/openzeppelin-contracts@4.8.0/ERC165",
    "OpenZeppelin/openzeppelin-contracts@4.8.0/ERC721Holder",
    "ICryptoKeeper",
    "OpenZeppelin/openzeppelin-contracts@4.8.0/IERC1155Receiver",
    "OpenZeppelin/openzeppelin-contracts@4.8.0/IERC165",
    "OpenZeppelin/openzeppelin-contracts@4.8.0/IERC721Receiver",
    "OpenZeppelin/openzeppelin-contracts@4.8.0/ReentrancyGuard"
  ],
  "deployedBytecode": "6080604052600436106100c65760003560e01c8063a224cee71161007f578063bc197c8111610059578063bc197c811461024b578063d3f43c781461026b578063f23a6e6114610280578063fa4bb79d146102ac57600080fd5b8063a224cee7146101de578063a22b6e8b146101fe578063ac8a584a1461022b57600080fd5b806301ffc9a7146100d257806313e7c9d814610107578063150b7a0214610137578063158ef93e1461017b57806348f33103146101955780639870d7fe146101bc57600080fd5b366100cd57005b600080fd5b3480156100de57600080fd5b506100f26100ed3660046108f2565b6102bf565b60405190151581526020015b60405180910390f35b34801561011357600080fd5b506100f261012236600461093f565b60026020526000908152604090205460ff1681565b34801561014357600080fd5b50610162610152366004610a1f565b630a85bd0160e11b949350505050565b6040516001600160e01b031990911681526020016100fe565b34801561018757600080fd5b506001546100f29060ff1681565b3480156101a157600080fd5b506101aa600281565b60405160ff90911681526020016100fe565b3480156101c857600080fd5b506101dc6101d736600461093f565b6102ea565b005b3480156101ea57600080fd5b506101dc6101f9366004610a87565b61037e565b34801561020a57600080fd5b5061021e610219366004610b45565b6104cf565b6040516100fe9190610c01565b34801561023757600080fd5b506101dc61024636600461093f565b61055d565b34801561025757600080fd5b50610162610266366004610c94565b6105dd565b34801561027757600080fd5b506101aa600181565b34801561028c57600080fd5b5061016261029b366004610d3e565b63f23a6e6160e01b95945050505050565b61021e6102ba366004610da3565b6105ef565b60006001600160e01b0319821663cebe984560e01b14806102e457506102e482610673565b92915050565b3360008181526002602052604090205460ff166103225760405162461bcd60e51b815260040161031990610dfd565b60405180910390fd5b6001600160a01b038216600081815260026020908152604091829020805460ff1916600117905590519182527fda12ee837e6978172aaf54b16145ffe08414fd8710092ef033c71b8eb6ec189a91015b60405180910390a15050565b6001805460ff191681179055600a8111156103ec5760405162461bcd60e51b815260206004820152602860248201527f43616e277420736574206d6f7265207468616e203130206f70657261746f7273604482015267206174206f6e636560c01b6064820152608401610319565b60005b60ff81168211156104ca5760016002600085858560ff1681811061041557610415610e26565b905060200201602081019061042a919061093f565b6001600160a01b031681526020810191909152604001600020805460ff19169115159190911790557fda12ee837e6978172aaf54b16145ffe08414fd8710092ef033c71b8eb6ec189a838360ff841681811061048857610488610e26565b905060200201602081019061049d919061093f565b6040516001600160a01b03909116815260200160405180910390a1806104c281610e3c565b9150506103ef565b505050565b60015460609060ff166105165760405162461bcd60e51b815260206004820152600f60248201526e139bdd081a5b9a5d1a585b1a5e9959608a1b6044820152606401610319565b3360008181526002602052604090205460ff166105455760405162461bcd60e51b815260040161031990610dfd565b6105538686866000876106a8565b9695505050505050565b3360008181526002602052604090205460ff1661058c5760405162461bcd60e51b815260040161031990610dfd565b6001600160a01b038216600081815260026020908152604091829020805460ff1916905590519182527f80c0b871b97b595b16a7741c1b06fed0c6f6f558639f18ccbce50724325dc40d9101610372565b63bc197c8160e01b5b95945050505050565b60015460609060ff166106365760405162461bcd60e51b815260206004820152600f60248201526e139bdd081a5b9a5d1a585b1a5e9959608a1b6044820152606401610319565b3360008181526002602052604090205460ff166106655760405162461bcd60e51b815260040161031990610dfd565b6105538686868660016106a8565b60006001600160e01b03198216630271189760e51b14806102e457506301ffc9a760e01b6001600160e01b03198316146102e4565b60606106b261083a565b6000606060001960ff85160161072a57876001600160a01b03168588886040516106dd929190610e69565b60006040518083038185875af1925050503d806000811461071a576040519150601f19603f3d011682016040523d82523d6000602084013e61071f565b606091505b5090925090506107c5565b60011960ff85160161078b57876001600160a01b03168787604051610750929190610e69565b600060405180830381855af49150503d806000811461071a576040519150601f19603f3d011682016040523d82523d6000602084013e61071f565b60405162461bcd60e51b815260206004820152600f60248201526e2bb937b7339037b832b930ba34b7b760891b6044820152606401610319565b816107ec576107d381610893565b60405162461bcd60e51b81526004016103199190610c01565b7f4e2058815a1087a94d8a92ecdce2f91d1370aa8c270ef97b0f28e0a3c6f68a8733898989898660405161082596959493929190610e79565b60405180910390a19150506105e66001600055565b60026000540361088c5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610319565b6002600055565b60606044825110156108d857505060408051808201909152601d81527f5472616e73616374696f6e2072657665727465642073696c656e746c79000000602082015290565b600482019150818060200190518101906102e49190610ee2565b60006020828403121561090457600080fd5b81356001600160e01b03198116811461091c57600080fd5b9392505050565b80356001600160a01b038116811461093a57600080fd5b919050565b60006020828403121561095157600080fd5b61091c82610923565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156109995761099961095a565b604052919050565b600067ffffffffffffffff8211156109bb576109bb61095a565b50601f01601f191660200190565b600082601f8301126109da57600080fd5b81356109ed6109e8826109a1565b610970565b818152846020838601011115610a0257600080fd5b816020850160208301376000918101602001919091529392505050565b60008060008060808587031215610a3557600080fd5b610a3e85610923565b9350610a4c60208601610923565b925060408501359150606085013567ffffffffffffffff811115610a6f57600080fd5b610a7b878288016109c9565b91505092959194509250565b60008060208385031215610a9a57600080fd5b823567ffffffffffffffff80821115610ab257600080fd5b818501915085601f830112610ac657600080fd5b813581811115610ad557600080fd5b8660208260051b8501011115610aea57600080fd5b60209290920196919550909350505050565b60008083601f840112610b0e57600080fd5b50813567ffffffffffffffff811115610b2657600080fd5b602083019150836020828501011115610b3e57600080fd5b9250929050565b60008060008060608587031215610b5b57600080fd5b610b6485610923565b9350602085013567ffffffffffffffff811115610b8057600080fd5b610b8c87828801610afc565b909450925050604085013560ff81168114610ba657600080fd5b939692955090935050565b60005b83811015610bcc578181015183820152602001610bb4565b50506000910152565b60008151808452610bed816020860160208601610bb1565b601f01601f19169290920160200192915050565b60208152600061091c6020830184610bd5565b600082601f830112610c2557600080fd5b8135602067ffffffffffffffff821115610c4157610c4161095a565b8160051b610c50828201610970565b9283528481018201928281019087851115610c6a57600080fd5b83870192505b84831015610c8957823582529183019190830190610c70565b979650505050505050565b600080600080600060a08688031215610cac57600080fd5b610cb586610923565b9450610cc360208701610923565b9350604086013567ffffffffffffffff80821115610ce057600080fd5b610cec89838a01610c14565b94506060880135915080821115610d0257600080fd5b610d0e89838a01610c14565b93506080880135915080821115610d2457600080fd5b50610d31888289016109c9565b9150509295509295909350565b600080600080600060a08688031215610d5657600080fd5b610d5f86610923565b9450610d6d60208701610923565b93506040860135925060608601359150608086013567ffffffffffffffff811115610d9757600080fd5b610d31888289016109c9565b60008060008060608587031215610db957600080fd5b610dc285610923565b9350602085013567ffffffffffffffff811115610dde57600080fd5b610dea87828801610afc565b9598909750949560400135949350505050565b6020808252600f908201526e2737ba1030b71037b832b930ba37b960891b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b600060ff821660ff8103610e6057634e487b7160e01b600052601160045260246000fd5b60010192915050565b8183823760009101908152919050565b6001600160a01b0387811682528616602082015260a06040820181905281018490526000848660c0840137600060c08684010152601f19601f860116820184606084015260c0838203016080840152610ed560c0820185610bd5565b9998505050505050505050565b600060208284031215610ef457600080fd5b815167ffffffffffffffff811115610f0b57600080fd5b8201601f81018413610f1c57600080fd5b8051610f2a6109e8826109a1565b818152856020838501011115610f3f57600080fd5b6105e6826020830160208601610bb156fea2646970667358221220fa326bae5110e6656283754401fbf4c40daf44e91ad577424171a0f57614b57c64736f6c63430008130033",
  "deployedSourceMap": "787:3309:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3761:294;;;;;;;;;;-1:-1:-1;3761:294:17;;;;;:::i;:::-;;:::i;:::-;;;470:14:31;;463:22;445:41;;433:2;418:18;3761:294:17;;;;;;;;1320:41;;;;;;;;;;-1:-1:-1;1320:41:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;588:200:10;;;;;;;;;;-1:-1:-1;588:200:10;;;;;:::i;:::-;-1:-1:-1;;;588:200:10;;;;;;;;;;-1:-1:-1;;;;;;2640:33:31;;;2622:52;;2610:2;2595:18;588:200:10;2478:202:31;1283:31:17;;;;;;;;;;-1:-1:-1;1283:31:17;;;;;;;;986:48;;;;;;;;;;;;1033:1;986:48;;;;;2857:4:31;2845:17;;;2827:36;;2815:2;2800:18;986:48:17;2685:184:31;3437:152:17;;;;;;;;;;-1:-1:-1;3437:152:17;;;;;:::i;:::-;;:::i;:::-;;1587:382;;;;;;;;;;-1:-1:-1;1587:382:17;;;;;:::i;:::-;;:::i;1975:277::-;;;;;;;;;;-1:-1:-1;1975:277:17;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3595:160::-;;;;;;;;;;-1:-1:-1;3595:160:17;;;;;:::i;:::-;;:::i;724:247:4:-;;;;;;;;;;-1:-1:-1;724:247:4;;;;;:::i;:::-;;:::i;940:40:17:-;;;;;;;;;;;;979:1;940:40;;499:219:4;;;;;;;;;;-1:-1:-1;499:219:4;;;;;:::i;:::-;-1:-1:-1;;;499:219:4;;;;;;;;2258:306:17;;;;;;:::i;:::-;;:::i;3761:294::-;3911:4;-1:-1:-1;;;;;;3950:46:17;;-1:-1:-1;;;3950:46:17;;:98;;;4012:36;4036:11;4012:23;:36::i;:::-;3931:117;3761:294;-1:-1:-1;;3761:294:17:o;3437:152::-;3498:10;1524:19;;;;:9;:19;;;;;;;;1516:47;;;;-1:-1:-1;;;1516:47:17;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;3520:19:17;::::1;;::::0;;;:9:::1;:19;::::0;;;;;;;;:26;;-1:-1:-1;;3520:26:17::1;3542:4;3520:26;::::0;;3561:21;;8565:51:31;;;3561:21:17::1;::::0;8538:18:31;3561:21:17::1;;;;;;;;3437:152:::0;;:::o;1587:382::-;1680:4;1666:18;;-1:-1:-1;;1666:18:17;;;;;1737:2;1716:23;;;1695:110;;;;-1:-1:-1;;;1695:110:17;;8829:2:31;1695:110:17;;;8811:21:31;8868:2;8848:18;;;8841:30;8907:34;8887:18;;;8880:62;-1:-1:-1;;;8958:18:31;;;8951:38;9006:19;;1695:110:17;8627:404:31;1695:110:17;1821:7;1816:147;1834:21;;;;-1:-1:-1;1816:147:17;;;1903:4;1876:9;:24;1886:10;;1897:1;1886:13;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1876:24:17;;;;;;;;;;;;-1:-1:-1;1876:24:17;:31;;-1:-1:-1;;1876:31:17;;;;;;;;;;1926:26;1938:10;;1876:31;1938:13;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;1926:26;;-1:-1:-1;;;;;8583:32:31;;;8565:51;;8553:2;8538:18;1926:26:17;;;;;;;1857:3;;;;:::i;:::-;;;;1816:147;;;;1587:382;;:::o;1975:277::-;1411:11;;2160:12;;1411:11;;1403:39;;;;-1:-1:-1;;;1403:39:17;;9647:2:31;1403:39:17;;;9629:21:31;9686:2;9666:18;;;9659:30;-1:-1:-1;;;9705:18:31;;;9698:45;9760:18;;1403:39:17;9445:339:31;1403:39:17;2139:10:::1;1524:19;::::0;;;:9:::1;:19;::::0;;;;;::::1;;1516:47;;;;-1:-1:-1::0;;;1516:47:17::1;;;;;;;:::i;:::-;2191:54:::2;2200:12;2214:16;;2232:1;2235:9;2191:8;:54::i;:::-;2184:61:::0;1975:277;-1:-1:-1;;;;;;1975:277:17:o;3595:160::-;3659:10;1524:19;;;;:9;:19;;;;;;;;1516:47;;;;-1:-1:-1;;;1516:47:17;;;;;;;:::i;:::-;-1:-1:-1;;;;;3681:19:17;::::1;3703:5;3681:19:::0;;;:9:::1;:19;::::0;;;;;;;;:27;;-1:-1:-1;;3681:27:17::1;::::0;;3723:25;;8565:51:31;;;3723:25:17::1;::::0;8538:18:31;3723:25:17::1;8419:203:31::0;724:247:4;-1:-1:-1;;;724:247:4;;;;;;;;:::o;2258:306:17:-;1411:11;;2458:12;;1411:11;;1403:39;;;;-1:-1:-1;;;1403:39:17;;9647:2:31;1403:39:17;;;9629:21:31;9686:2;9666:18;;;9659:30;-1:-1:-1;;;9705:18:31;;;9698:45;9760:18;;1403:39:17;9445:339:31;1403:39:17;2437:10:::1;1524:19;::::0;;;:9:::1;:19;::::0;;;;;::::1;;1516:47;;;;-1:-1:-1::0;;;1516:47:17::1;;;;;;;:::i;:::-;2493:64:::2;2502:12;2516:16;;2534:6;979:1;2493:8;:64::i;387:221:5:-:0;489:4;-1:-1:-1;;;;;;512:49:5;;-1:-1:-1;;;512:49:5;;:89;;-1:-1:-1;;;;;;;;;;937:40:13;;;565:36:5;829:155:13;2570:861:17;2744:12;2261:21:2;:19;:21::i;:::-;2769:12:17::1;2791:19;-1:-1:-1::0;;2824:27:17::1;::::0;::::1;::::0;2821:348:::1;;2887:12;-1:-1:-1::0;;;;;2887:17:17::1;2912:6;2937:16;;2887:80;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;2867:100:17;;-1:-1:-1;2867:100:17;-1:-1:-1;2821:348:17::1;;;-1:-1:-1::0;;2988:35:17::1;::::0;::::1;::::0;2984:185:::1;;3059:12;-1:-1:-1::0;;;;;3059:25:17::1;3085:16;;3059:43;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2984:185;3133:25;::::0;-1:-1:-1;;;3133:25:17;;10267:2:31;3133:25:17::1;::::0;::::1;10249:21:31::0;10306:2;10286:18;;;10279:30;-1:-1:-1;;;10325:18:31;;;10318:45;10380:18;;3133:25:17::1;10065:339:31::0;2984:185:17::1;3184:7;3179:68;;3214:21;:6;:19;:21::i;:::-;3207:29;;-1:-1:-1::0;;;3207:29:17::1;;;;;;;;:::i;3179:68::-;3262:138;3284:10;3308:12;3334:16;;3364:6;3384;3262:138;;;;;;;;;;;:::i;:::-;;;;;;;;3418:6:::0;-1:-1:-1;;2303:20:2;1716:1;2809:7;:22;2629:209;2336:287;1759:1;2468:7;;:19;2460:63;;;;-1:-1:-1;;;2460:63:2;;11661:2:31;2460:63:2;;;11643:21:31;11700:2;11680:18;;;11673:30;11739:33;11719:18;;;11712:61;11790:18;;2460:63:2;11459:355:31;2460:63:2;1759:1;2598:7;:18;2336:287::o;469:314:17:-;554:13;604:2;583:11;:18;:23;579:67;;;-1:-1:-1;;608:38:17;;;;;;;;;;;;;;;;;;469:314::o;579:67::-;712:4;699:11;695:22;680:37;;754:11;743:33;;;;;;;;;;;;:::i;14:286:31:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:31;;209:43;;199:71;;266:1;263;256:12;199:71;289:5;14:286;-1:-1:-1;;;14:286:31:o;497:173::-;565:20;;-1:-1:-1;;;;;614:31:31;;604:42;;594:70;;660:1;657;650:12;594:70;497:173;;;:::o;675:186::-;734:6;787:2;775:9;766:7;762:23;758:32;755:52;;;803:1;800;793:12;755:52;826:29;845:9;826:29;:::i;866:127::-;927:10;922:3;918:20;915:1;908:31;958:4;955:1;948:15;982:4;979:1;972:15;998:275;1069:2;1063:9;1134:2;1115:13;;-1:-1:-1;;1111:27:31;1099:40;;1169:18;1154:34;;1190:22;;;1151:62;1148:88;;;1216:18;;:::i;:::-;1252:2;1245:22;998:275;;-1:-1:-1;998:275:31:o;1278:186::-;1326:4;1359:18;1351:6;1348:30;1345:56;;;1381:18;;:::i;:::-;-1:-1:-1;1447:2:31;1426:15;-1:-1:-1;;1422:29:31;1453:4;1418:40;;1278:186::o;1469:462::-;1511:5;1564:3;1557:4;1549:6;1545:17;1541:27;1531:55;;1582:1;1579;1572:12;1531:55;1618:6;1605:20;1649:48;1665:31;1693:2;1665:31;:::i;:::-;1649:48;:::i;:::-;1722:2;1713:7;1706:19;1768:3;1761:4;1756:2;1748:6;1744:15;1740:26;1737:35;1734:55;;;1785:1;1782;1775:12;1734:55;1850:2;1843:4;1835:6;1831:17;1824:4;1815:7;1811:18;1798:55;1898:1;1873:16;;;1891:4;1869:27;1862:38;;;;1877:7;1469:462;-1:-1:-1;;;1469:462:31:o;1936:537::-;2031:6;2039;2047;2055;2108:3;2096:9;2087:7;2083:23;2079:33;2076:53;;;2125:1;2122;2115:12;2076:53;2148:29;2167:9;2148:29;:::i;:::-;2138:39;;2196:38;2230:2;2219:9;2215:18;2196:38;:::i;:::-;2186:48;;2281:2;2270:9;2266:18;2253:32;2243:42;;2336:2;2325:9;2321:18;2308:32;2363:18;2355:6;2352:30;2349:50;;;2395:1;2392;2385:12;2349:50;2418:49;2459:7;2450:6;2439:9;2435:22;2418:49;:::i;:::-;2408:59;;;1936:537;;;;;;;:::o;2874:615::-;2960:6;2968;3021:2;3009:9;3000:7;2996:23;2992:32;2989:52;;;3037:1;3034;3027:12;2989:52;3077:9;3064:23;3106:18;3147:2;3139:6;3136:14;3133:34;;;3163:1;3160;3153:12;3133:34;3201:6;3190:9;3186:22;3176:32;;3246:7;3239:4;3235:2;3231:13;3227:27;3217:55;;3268:1;3265;3258:12;3217:55;3308:2;3295:16;3334:2;3326:6;3323:14;3320:34;;;3350:1;3347;3340:12;3320:34;3403:7;3398:2;3388:6;3385:1;3381:14;3377:2;3373:23;3369:32;3366:45;3363:65;;;3424:1;3421;3414:12;3363:65;3455:2;3447:11;;;;;3477:6;;-1:-1:-1;2874:615:31;;-1:-1:-1;;;;2874:615:31:o;3494:347::-;3545:8;3555:6;3609:3;3602:4;3594:6;3590:17;3586:27;3576:55;;3627:1;3624;3617:12;3576:55;-1:-1:-1;3650:20:31;;3693:18;3682:30;;3679:50;;;3725:1;3722;3715:12;3679:50;3762:4;3754:6;3750:17;3738:29;;3814:3;3807:4;3798:6;3790;3786:19;3782:30;3779:39;3776:59;;;3831:1;3828;3821:12;3776:59;3494:347;;;;;:::o;3846:640::-;3932:6;3940;3948;3956;4009:2;3997:9;3988:7;3984:23;3980:32;3977:52;;;4025:1;4022;4015:12;3977:52;4048:29;4067:9;4048:29;:::i;:::-;4038:39;;4128:2;4117:9;4113:18;4100:32;4155:18;4147:6;4144:30;4141:50;;;4187:1;4184;4177:12;4141:50;4226:58;4276:7;4267:6;4256:9;4252:22;4226:58;:::i;:::-;4303:8;;-1:-1:-1;4200:84:31;-1:-1:-1;;4388:2:31;4373:18;;4360:32;4432:4;4421:16;;4411:27;;4401:55;;4452:1;4449;4442:12;4401:55;3846:640;;;;-1:-1:-1;3846:640:31;;-1:-1:-1;;3846:640:31:o;4491:250::-;4576:1;4586:113;4600:6;4597:1;4594:13;4586:113;;;4676:11;;;4670:18;4657:11;;;4650:39;4622:2;4615:10;4586:113;;;-1:-1:-1;;4733:1:31;4715:16;;4708:27;4491:250::o;4746:270::-;4787:3;4825:5;4819:12;4852:6;4847:3;4840:19;4868:76;4937:6;4930:4;4925:3;4921:14;4914:4;4907:5;4903:16;4868:76;:::i;:::-;4998:2;4977:15;-1:-1:-1;;4973:29:31;4964:39;;;;5005:4;4960:50;;4746:270;-1:-1:-1;;4746:270:31:o;5021:217::-;5168:2;5157:9;5150:21;5131:4;5188:44;5228:2;5217:9;5213:18;5205:6;5188:44;:::i;5243:712::-;5297:5;5350:3;5343:4;5335:6;5331:17;5327:27;5317:55;;5368:1;5365;5358:12;5317:55;5404:6;5391:20;5430:4;5453:18;5449:2;5446:26;5443:52;;;5475:18;;:::i;:::-;5521:2;5518:1;5514:10;5544:28;5568:2;5564;5560:11;5544:28;:::i;:::-;5606:15;;;5676;;;5672:24;;;5637:12;;;;5708:15;;;5705:35;;;5736:1;5733;5726:12;5705:35;5772:2;5764:6;5760:15;5749:26;;5784:142;5800:6;5795:3;5792:15;5784:142;;;5866:17;;5854:30;;5817:12;;;;5904;;;;5784:142;;;5944:5;5243:712;-1:-1:-1;;;;;;;5243:712:31:o;5960:943::-;6114:6;6122;6130;6138;6146;6199:3;6187:9;6178:7;6174:23;6170:33;6167:53;;;6216:1;6213;6206:12;6167:53;6239:29;6258:9;6239:29;:::i;:::-;6229:39;;6287:38;6321:2;6310:9;6306:18;6287:38;:::i;:::-;6277:48;;6376:2;6365:9;6361:18;6348:32;6399:18;6440:2;6432:6;6429:14;6426:34;;;6456:1;6453;6446:12;6426:34;6479:61;6532:7;6523:6;6512:9;6508:22;6479:61;:::i;:::-;6469:71;;6593:2;6582:9;6578:18;6565:32;6549:48;;6622:2;6612:8;6609:16;6606:36;;;6638:1;6635;6628:12;6606:36;6661:63;6716:7;6705:8;6694:9;6690:24;6661:63;:::i;:::-;6651:73;;6777:3;6766:9;6762:19;6749:33;6733:49;;6807:2;6797:8;6794:16;6791:36;;;6823:1;6820;6813:12;6791:36;;6846:51;6889:7;6878:8;6867:9;6863:24;6846:51;:::i;:::-;6836:61;;;5960:943;;;;;;;;:::o;6908:606::-;7012:6;7020;7028;7036;7044;7097:3;7085:9;7076:7;7072:23;7068:33;7065:53;;;7114:1;7111;7104:12;7065:53;7137:29;7156:9;7137:29;:::i;:::-;7127:39;;7185:38;7219:2;7208:9;7204:18;7185:38;:::i;:::-;7175:48;;7270:2;7259:9;7255:18;7242:32;7232:42;;7321:2;7310:9;7306:18;7293:32;7283:42;;7376:3;7365:9;7361:19;7348:33;7404:18;7396:6;7393:30;7390:50;;;7436:1;7433;7426:12;7390:50;7459:49;7500:7;7491:6;7480:9;7476:22;7459:49;:::i;7519:551::-;7607:6;7615;7623;7631;7684:2;7672:9;7663:7;7659:23;7655:32;7652:52;;;7700:1;7697;7690:12;7652:52;7723:29;7742:9;7723:29;:::i;:::-;7713:39;;7803:2;7792:9;7788:18;7775:32;7830:18;7822:6;7819:30;7816:50;;;7862:1;7859;7852:12;7816:50;7901:58;7951:7;7942:6;7931:9;7927:22;7901:58;:::i;:::-;7519:551;;7978:8;;-1:-1:-1;7875:84:31;;8060:2;8045:18;8032:32;;7519:551;-1:-1:-1;;;;7519:551:31:o;8075:339::-;8277:2;8259:21;;;8316:2;8296:18;;;8289:30;-1:-1:-1;;;8350:2:31;8335:18;;8328:45;8405:2;8390:18;;8075:339::o;9036:127::-;9097:10;9092:3;9088:20;9085:1;9078:31;9128:4;9125:1;9118:15;9152:4;9149:1;9142:15;9168:272;9205:3;9249:4;9242:5;9238:16;9278:4;9269:7;9266:17;9263:140;;9325:10;9320:3;9316:20;9313:1;9306:31;9360:4;9357:1;9350:15;9388:4;9385:1;9378:15;9263:140;9432:1;9419:15;;9168:272;-1:-1:-1;;9168:272:31:o;9789:271::-;9972:6;9964;9959:3;9946:33;9928:3;9998:16;;10023:13;;;9998:16;9789:271;-1:-1:-1;9789:271:31:o;10633:821::-;-1:-1:-1;;;;;10958:15:31;;;10940:34;;11010:15;;11005:2;10990:18;;10983:43;10920:3;11057:2;11042:18;;11035:31;;;11082:19;;11075:35;;;10883:4;11103:6;11153;11147:3;11132:19;;11119:49;11218:1;11212:3;11203:6;11192:9;11188:22;11184:32;11177:43;11279:2;11275:7;11270:2;11262:6;11258:15;11254:29;11243:9;11239:45;11320:6;11315:2;11304:9;11300:18;11293:34;11388:3;11376:9;11372:2;11368:18;11364:28;11358:3;11347:9;11343:19;11336:57;11410:38;11443:3;11439:2;11435:12;11427:6;11410:38;:::i;:::-;11402:46;10633:821;-1:-1:-1;;;;;;;;;10633:821:31:o;11819:648::-;11899:6;11952:2;11940:9;11931:7;11927:23;11923:32;11920:52;;;11968:1;11965;11958:12;11920:52;12001:9;11995:16;12034:18;12026:6;12023:30;12020:50;;;12066:1;12063;12056:12;12020:50;12089:22;;12142:4;12134:13;;12130:27;-1:-1:-1;12120:55:31;;12171:1;12168;12161:12;12120:55;12200:2;12194:9;12225:48;12241:31;12269:2;12241:31;:::i;12225:48::-;12296:2;12289:5;12282:17;12336:7;12331:2;12326;12322;12318:11;12314:20;12311:33;12308:53;;;12357:1;12354;12347:12;12308:53;12370:67;12434:2;12429;12422:5;12418:14;12413:2;12409;12405:11;12370:67;:::i",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "onERC721Received(address,address,uint256,bytes)": {
        "details": "See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`."
      }
    },
    "version": 1
  },
  "offset": [
    787,
    4096
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xC6 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA224CEE7 GT PUSH2 0x7F JUMPI DUP1 PUSH4 0xBC197C81 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xBC197C81 EQ PUSH2 0x24B JUMPI DUP1 PUSH4 0xD3F43C78 EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0x280 JUMPI DUP1 PUSH4 0xFA4BB79D EQ PUSH2 0x2AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA224CEE7 EQ PUSH2 0x1DE JUMPI DUP1 PUSH4 0xA22B6E8B EQ PUSH2 0x1FE JUMPI DUP1 PUSH4 0xAC8A584A EQ PUSH2 0x22B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD2 JUMPI DUP1 PUSH4 0x13E7C9D8 EQ PUSH2 0x107 JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x137 JUMPI DUP1 PUSH4 0x158EF93E EQ PUSH2 0x17B JUMPI DUP1 PUSH4 0x48F33103 EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0x9870D7FE EQ PUSH2 0x1BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0xCD JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF2 PUSH2 0xED CALLDATASIZE PUSH1 0x4 PUSH2 0x8F2 JUMP JUMPDEST PUSH2 0x2BF JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x113 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF2 PUSH2 0x122 CALLDATASIZE PUSH1 0x4 PUSH2 0x93F JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x143 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x162 PUSH2 0x152 CALLDATASIZE PUSH1 0x4 PUSH2 0xA1F JUMP JUMPDEST PUSH4 0xA85BD01 PUSH1 0xE1 SHL SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xFE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x187 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0xF2 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AA PUSH1 0x2 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xFE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DC PUSH2 0x1D7 CALLDATASIZE PUSH1 0x4 PUSH2 0x93F JUMP JUMPDEST PUSH2 0x2EA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DC PUSH2 0x1F9 CALLDATASIZE PUSH1 0x4 PUSH2 0xA87 JUMP JUMPDEST PUSH2 0x37E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21E PUSH2 0x219 CALLDATASIZE PUSH1 0x4 PUSH2 0xB45 JUMP JUMPDEST PUSH2 0x4CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFE SWAP2 SWAP1 PUSH2 0xC01 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x237 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DC PUSH2 0x246 CALLDATASIZE PUSH1 0x4 PUSH2 0x93F JUMP JUMPDEST PUSH2 0x55D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x257 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x162 PUSH2 0x266 CALLDATASIZE PUSH1 0x4 PUSH2 0xC94 JUMP JUMPDEST PUSH2 0x5DD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x277 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AA PUSH1 0x1 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x162 PUSH2 0x29B CALLDATASIZE PUSH1 0x4 PUSH2 0xD3E JUMP JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x21E PUSH2 0x2BA CALLDATASIZE PUSH1 0x4 PUSH2 0xDA3 JUMP JUMPDEST PUSH2 0x5EF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0xCEBE9845 PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x2E4 JUMPI POP PUSH2 0x2E4 DUP3 PUSH2 0x673 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x322 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x319 SWAP1 PUSH2 0xDFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE SWAP1 MLOAD SWAP2 DUP3 MSTORE PUSH32 0xDA12EE837E6978172AAF54B16145FFE08414FD8710092EF033C71B8EB6EC189A SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF NOT AND DUP2 OR SWAP1 SSTORE PUSH1 0xA DUP2 GT ISZERO PUSH2 0x3EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E277420736574206D6F7265207468616E203130206F70657261746F7273 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x206174206F6E6365 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x319 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0xFF DUP2 AND DUP3 GT ISZERO PUSH2 0x4CA JUMPI PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 DUP6 DUP6 DUP6 PUSH1 0xFF AND DUP2 DUP2 LT PUSH2 0x415 JUMPI PUSH2 0x415 PUSH2 0xE26 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x42A SWAP2 SWAP1 PUSH2 0x93F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH32 0xDA12EE837E6978172AAF54B16145FFE08414FD8710092EF033C71B8EB6EC189A DUP4 DUP4 PUSH1 0xFF DUP5 AND DUP2 DUP2 LT PUSH2 0x488 JUMPI PUSH2 0x488 PUSH2 0xE26 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x49D SWAP2 SWAP1 PUSH2 0x93F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP1 PUSH2 0x4C2 DUP2 PUSH2 0xE3C JUMP JUMPDEST SWAP2 POP POP PUSH2 0x3EF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x60 SWAP1 PUSH1 0xFF AND PUSH2 0x516 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x139BDD081A5B9A5D1A585B1A5E9959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x319 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x545 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x319 SWAP1 PUSH2 0xDFD JUMP JUMPDEST PUSH2 0x553 DUP7 DUP7 DUP7 PUSH1 0x0 DUP8 PUSH2 0x6A8 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x58C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x319 SWAP1 PUSH2 0xDFD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE SWAP1 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x80C0B871B97B595B16A7741C1B06FED0C6F6F558639F18CCBCE50724325DC40D SWAP2 ADD PUSH2 0x372 JUMP JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x60 SWAP1 PUSH1 0xFF AND PUSH2 0x636 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x139BDD081A5B9A5D1A585B1A5E9959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x319 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x665 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x319 SWAP1 PUSH2 0xDFD JUMP JUMPDEST PUSH2 0x553 DUP7 DUP7 DUP7 DUP7 PUSH1 0x1 PUSH2 0x6A8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x2711897 PUSH1 0xE5 SHL EQ DUP1 PUSH2 0x2E4 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x2E4 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x6B2 PUSH2 0x83A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 NOT PUSH1 0xFF DUP6 AND ADD PUSH2 0x72A JUMPI DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH2 0x6DD SWAP3 SWAP2 SWAP1 PUSH2 0xE69 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x71A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x71F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x7C5 JUMP JUMPDEST PUSH1 0x1 NOT PUSH1 0xFF DUP6 AND ADD PUSH2 0x78B JUMPI DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x750 SWAP3 SWAP2 SWAP1 PUSH2 0xE69 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x71A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x71F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x2BB937B7339037B832B930BA34B7B7 PUSH1 0x89 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x319 JUMP JUMPDEST DUP2 PUSH2 0x7EC JUMPI PUSH2 0x7D3 DUP2 PUSH2 0x893 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x319 SWAP2 SWAP1 PUSH2 0xC01 JUMP JUMPDEST PUSH32 0x4E2058815A1087A94D8A92ECDCE2F91D1370AA8C270EF97B0F28E0A3C6F68A87 CALLER DUP10 DUP10 DUP10 DUP10 DUP7 PUSH1 0x40 MLOAD PUSH2 0x825 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xE79 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 SWAP2 POP POP PUSH2 0x5E6 PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD SUB PUSH2 0x88C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x319 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x44 DUP3 MLOAD LT ISZERO PUSH2 0x8D8 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1D DUP2 MSTORE PUSH32 0x5472616E73616374696F6E2072657665727465642073696C656E746C79000000 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP3 ADD SWAP2 POP DUP2 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x2E4 SWAP2 SWAP1 PUSH2 0xEE2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x904 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x91C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x93A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x951 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x91C DUP3 PUSH2 0x923 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x999 JUMPI PUSH2 0x999 PUSH2 0x95A JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x9BB JUMPI PUSH2 0x9BB PUSH2 0x95A JUMP JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x9DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x9ED PUSH2 0x9E8 DUP3 PUSH2 0x9A1 JUMP JUMPDEST PUSH2 0x970 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0xA02 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xA35 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA3E DUP6 PUSH2 0x923 JUMP JUMPDEST SWAP4 POP PUSH2 0xA4C PUSH1 0x20 DUP7 ADD PUSH2 0x923 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA7B DUP8 DUP3 DUP9 ADD PUSH2 0x9C9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA9A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xAB2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xAC6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xAD5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0xAEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0xB0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB26 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0xB3E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xB5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB64 DUP6 PUSH2 0x923 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB80 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB8C DUP8 DUP3 DUP9 ADD PUSH2 0xAFC JUMP JUMPDEST SWAP1 SWAP5 POP SWAP3 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0xBA6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xBCC JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xBB4 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xBED DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xBB1 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x91C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xBD5 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xC25 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xC41 JUMPI PUSH2 0xC41 PUSH2 0x95A JUMP JUMPDEST DUP2 PUSH1 0x5 SHL PUSH2 0xC50 DUP3 DUP3 ADD PUSH2 0x970 JUMP JUMPDEST SWAP3 DUP4 MSTORE DUP5 DUP2 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP1 DUP8 DUP6 GT ISZERO PUSH2 0xC6A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP8 ADD SWAP3 POP JUMPDEST DUP5 DUP4 LT ISZERO PUSH2 0xC89 JUMPI DUP3 CALLDATALOAD DUP3 MSTORE SWAP2 DUP4 ADD SWAP2 SWAP1 DUP4 ADD SWAP1 PUSH2 0xC70 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xCAC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCB5 DUP7 PUSH2 0x923 JUMP JUMPDEST SWAP5 POP PUSH2 0xCC3 PUSH1 0x20 DUP8 ADD PUSH2 0x923 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xCE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCEC DUP10 DUP4 DUP11 ADD PUSH2 0xC14 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xD02 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD0E DUP10 DUP4 DUP11 ADD PUSH2 0xC14 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xD24 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD31 DUP9 DUP3 DUP10 ADD PUSH2 0x9C9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xD56 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD5F DUP7 PUSH2 0x923 JUMP JUMPDEST SWAP5 POP PUSH2 0xD6D PUSH1 0x20 DUP8 ADD PUSH2 0x923 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD31 DUP9 DUP3 DUP10 ADD PUSH2 0x9C9 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xDB9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC2 DUP6 PUSH2 0x923 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xDDE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDEA DUP8 DUP3 DUP9 ADD PUSH2 0xAFC JUMP JUMPDEST SWAP6 SWAP9 SWAP1 SWAP8 POP SWAP5 SWAP6 PUSH1 0x40 ADD CALLDATALOAD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xF SWAP1 DUP3 ADD MSTORE PUSH15 0x2737BA1030B71037B832B930BA37B9 PUSH1 0x89 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP2 SUB PUSH2 0xE60 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 DUP4 DUP3 CALLDATACOPY PUSH1 0x0 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND DUP3 MSTORE DUP7 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x0 DUP5 DUP7 PUSH1 0xC0 DUP5 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0xC0 DUP7 DUP5 ADD ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP7 ADD AND DUP3 ADD DUP5 PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0xC0 DUP4 DUP3 SUB ADD PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0xED5 PUSH1 0xC0 DUP3 ADD DUP6 PUSH2 0xBD5 JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xF0B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0xF1C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH2 0xF2A PUSH2 0x9E8 DUP3 PUSH2 0x9A1 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP6 PUSH1 0x20 DUP4 DUP6 ADD ADD GT ISZERO PUSH2 0xF3F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5E6 DUP3 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xBB1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STATICCALL ORIGIN PUSH12 0xAE5110E6656283754401FBF4 0xC4 0xD 0xAF DIFFICULTY 0xE9 BYTE 0xD5 PUSH24 0x424171A0F57614B57C64736F6C6343000813003300000000 ",
  "pcMap": {
    "0": {
      "offset": [
        787,
        4096
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        787,
        4096
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        787,
        4096
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "5": {
      "fn": null,
      "offset": [
        787,
        4096
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        787,
        4096
      ],
      "op": "CALLDATASIZE",
      "path": "17"
    },
    "8": {
      "fn": null,
      "offset": [
        787,
        4096
      ],
      "op": "LT",
      "path": "17"
    },
    "9": {
      "fn": null,
      "offset": [
        787,
        4096
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xC6"
    },
    "12": {
      "fn": null,
      "offset": [
        787,
        4096
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "13": {
      "fn": null,
      "offset": [
        787,
        4096
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        787,
        4096
      ],
      "op": "CALLDATALOAD",
      "path": "17"
    },
    "16": {
      "fn": null,
      "offset": [
        787,
        4096
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        787,
        4096
      ],
      "op": "SHR",
      "path": "17"
    },
    "19": {
      "fn": null,
      "offset": [
        787,
        4096
      ],
      "op": "DUP1",
      "path": "17"
    },
    "20": {
      "fn": null,
      "offset": [
        787,
        4096
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xA224CEE7"
    },
    "25": {
      "fn": null,
      "offset": [
        787,
        4096
      ],
      "op": "GT",
      "path": "17"
    },
    "26": {
      "fn": null,
      "offset": [
        787,
        4096
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x7F"
    },
    "29": {
      "fn": null,
      "offset": [
        787,
        4096
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "30": {
      "fn": null,
      "offset": [
        787,
        4096
      ],
      "op": "DUP1",
      "path": "17"
    },
    "31": {
      "fn": null,
      "offset": [
        787,
        4096
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xBC197C81"
    },
    "36": {
      "fn": null,
      "offset": [
        787,
        4096
      ],
      "op": "GT",
      "path": "17"
    },
    "37": {
      "fn": null,
      "offset": [
        787,
        4096
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x59"
    },
    "40": {
      "fn": null,
      "offset": [
        787,
        4096
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "41": {
      "fn": null,
      "offset": [
        787,
        4096
      ],
      "op": "DUP1",
      "path": "17"
    },
    "42": {
      "fn": null,
      "offset": [
        787,
        4096
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xBC197C81"
    },
    "47": {
      "fn": null,
      "offset": [
        787,
        4096
      ],
      "op": "EQ",
      "path": "17"
    },
    "48": {
      "fn": null,
      "offset": [
        787,
        4096
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x24B"
    },
    "51": {
      "fn": null,
      "offset": [
        787,
        4096
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "52": {
      "fn": null,
      "offset": [
        787,
        4096
      ],
      "op": "DUP1",
      "path": "17"
    },
    "53": {
      "fn": null,
      "offset": [
        787,
        4096
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xD3F43C78"
    },
    "58": {
      "fn": null,
      "offset": [
        787,
        4096
      ],
      "op": "EQ",
      "path": "17"
    },
    "59": {
      "fn": null,
      "offset": [
        787,
        4096
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x26B"
    },
    "62": {
      "fn": null,
      "offset": [
        787,
        4096
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "63": {
      "fn": null,
      "offset": [
        787,
        4096
      ],
      "op": "DUP1",
      "path": "17"
    },
    "64": {
      "fn": null,
      "offset": [
        787,
        4096
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xF23A6E61"
    },
    "69": {
      "fn": null,
      "offset": [
        787,
        4096
      ],
      "op": "EQ",
      "path": "17"
    },
    "70": {
      "fn": null,
      "offset": [
        787,
        4096
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x280"
    },
    "73": {
      "fn": null,
      "offset": [
        787,
        4096
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "74": {
      "fn": null,
      "offset": [
        787,
        4096
      ],
      "op": "DUP1",
      "path": "17"
    },
    "75": {
      "fn": null,
      "offset": [
        787,
        4096
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xFA4BB79D"
    },
    "80": {
      "fn": null,
      "offset": [
        787,
        4096
      ],
      "op": "EQ",
      "path": "17"
    },
    "81": {
      "fn": null,
      "offset": [
        787,
        4096
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2AC"
    },
    "84": {
      "fn": null,
      "offset": [
        787,
        4096
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "85": {
      "fn": null,
      "offset": [
        787,
        4096
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "87": {
      "fn": null,
      "offset": [
        787,
        4096
      ],
      "op": "DUP1",
      "path": "17"
    },
    "88": {
      "fn": null,
      "offset": [
        787,
        4096
      ],
      "op": "REVERT",
      "path": "17"
    },
    "89": {
      "fn": null,
      "offset": [
        787,
        4096
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "90": {
      "fn": null,
      "offset": [
        787,
        4096
      ],
      "op": "DUP1",
      "path": "17"
    },
    "91": {
      "fn": null,
      "offset": [
        787,
        4096
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xA224CEE7"
    },
    "96": {
      "fn": null,
      "offset": [
        787,
        4096
      ],
      "op": "EQ",
      "path": "17"
    },
    "97": {
      "fn": null,
      "offset": [
        787,
        4096
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1DE"
    },
    "100": {
      "fn": null,
      "offset": [
        787,
        4096
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "101": {
      "fn": null,
      "offset": [
        787,
        4096
      ],
      "op": "DUP1",
      "path": "17"
    },
    "102": {
      "fn": null,
      "offset": [
        787,
        4096
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xA22B6E8B"
    },
    "107": {
      "fn": null,
      "offset": [
        787,
        4096
      ],
      "op": "EQ",
      "path": "17"
    },
    "108": {
      "fn": null,
      "offset": [
        787,
        4096
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1FE"
    },
    "111": {
      "fn": null,
      "offset": [
        787,
        4096
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "112": {
      "fn": null,
      "offset": [
        787,
        4096
      ],
      "op": "DUP1",
      "path": "17"
    },
    "113": {
      "fn": null,
      "offset": [
        787,
        4096
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xAC8A584A"
    },
    "118": {
      "fn": null,
      "offset": [
        787,
        4096
      ],
      "op": "EQ",
      "path": "17"
    },
    "119": {
      "fn": null,
      "offset": [
        787,
        4096
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x22B"
    },
    "122": {
      "fn": null,
      "offset": [
        787,
        4096
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "123": {
      "fn": null,
      "offset": [
        787,
        4096
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "125": {
      "fn": null,
      "offset": [
        787,
        4096
      ],
      "op": "DUP1",
      "path": "17"
    },
    "126": {
      "fn": null,
      "offset": [
        787,
        4096
      ],
      "op": "REVERT",
      "path": "17"
    },
    "127": {
      "fn": null,
      "offset": [
        787,
        4096
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "128": {
      "fn": null,
      "offset": [
        787,
        4096
      ],
      "op": "DUP1",
      "path": "17"
    },
    "129": {
      "fn": null,
      "offset": [
        787,
        4096
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x1FFC9A7"
    },
    "134": {
      "fn": null,
      "offset": [
        787,
        4096
      ],
      "op": "EQ",
      "path": "17"
    },
    "135": {
      "fn": null,
      "offset": [
        787,
        4096
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xD2"
    },
    "138": {
      "fn": null,
      "offset": [
        787,
        4096
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "139": {
      "fn": null,
      "offset": [
        787,
        4096
      ],
      "op": "DUP1",
      "path": "17"
    },
    "140": {
      "fn": null,
      "offset": [
        787,
        4096
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x13E7C9D8"
    },
    "145": {
      "fn": null,
      "offset": [
        787,
        4096
      ],
      "op": "EQ",
      "path": "17"
    },
    "146": {
      "fn": null,
      "offset": [
        787,
        4096
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x107"
    },
    "149": {
      "fn": null,
      "offset": [
        787,
        4096
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "150": {
      "fn": null,
      "offset": [
        787,
        4096
      ],
      "op": "DUP1",
      "path": "17"
    },
    "151": {
      "fn": null,
      "offset": [
        787,
        4096
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x150B7A02"
    },
    "156": {
      "fn": null,
      "offset": [
        787,
        4096
      ],
      "op": "EQ",
      "path": "17"
    },
    "157": {
      "fn": null,
      "offset": [
        787,
        4096
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x137"
    },
    "160": {
      "fn": null,
      "offset": [
        787,
        4096
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "161": {
      "fn": null,
      "offset": [
        787,
        4096
      ],
      "op": "DUP1",
      "path": "17"
    },
    "162": {
      "fn": null,
      "offset": [
        787,
        4096
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x158EF93E"
    },
    "167": {
      "fn": null,
      "offset": [
        787,
        4096
      ],
      "op": "EQ",
      "path": "17"
    },
    "168": {
      "fn": null,
      "offset": [
        787,
        4096
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x17B"
    },
    "171": {
      "fn": null,
      "offset": [
        787,
        4096
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "172": {
      "fn": null,
      "offset": [
        787,
        4096
      ],
      "op": "DUP1",
      "path": "17"
    },
    "173": {
      "fn": null,
      "offset": [
        787,
        4096
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x48F33103"
    },
    "178": {
      "fn": null,
      "offset": [
        787,
        4096
      ],
      "op": "EQ",
      "path": "17"
    },
    "179": {
      "fn": null,
      "offset": [
        787,
        4096
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x195"
    },
    "182": {
      "fn": null,
      "offset": [
        787,
        4096
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "183": {
      "fn": null,
      "offset": [
        787,
        4096
      ],
      "op": "DUP1",
      "path": "17"
    },
    "184": {
      "fn": null,
      "offset": [
        787,
        4096
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x9870D7FE"
    },
    "189": {
      "fn": null,
      "offset": [
        787,
        4096
      ],
      "op": "EQ",
      "path": "17"
    },
    "190": {
      "fn": null,
      "offset": [
        787,
        4096
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1BC"
    },
    "193": {
      "fn": null,
      "offset": [
        787,
        4096
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "194": {
      "fn": null,
      "offset": [
        787,
        4096
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "196": {
      "fn": null,
      "offset": [
        787,
        4096
      ],
      "op": "DUP1",
      "path": "17"
    },
    "197": {
      "fn": null,
      "offset": [
        787,
        4096
      ],
      "op": "REVERT",
      "path": "17"
    },
    "198": {
      "fn": null,
      "offset": [
        787,
        4096
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "199": {
      "fn": null,
      "offset": [
        787,
        4096
      ],
      "op": "CALLDATASIZE",
      "path": "17"
    },
    "200": {
      "fn": null,
      "offset": [
        787,
        4096
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xCD"
    },
    "203": {
      "fn": null,
      "offset": [
        787,
        4096
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "204": {
      "fn": null,
      "offset": [
        787,
        4096
      ],
      "op": "STOP",
      "path": "17"
    },
    "205": {
      "fn": null,
      "offset": [
        787,
        4096
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "206": {
      "fn": null,
      "offset": [
        787,
        4096
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "208": {
      "fn": null,
      "offset": [
        787,
        4096
      ],
      "op": "DUP1",
      "path": "17"
    },
    "209": {
      "first_revert": true,
      "fn": null,
      "offset": [
        787,
        4096
      ],
      "op": "REVERT",
      "path": "17"
    },
    "210": {
      "fn": "CryptoKeeper.supportsInterface",
      "offset": [
        3761,
        4055
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "211": {
      "fn": "CryptoKeeper.supportsInterface",
      "offset": [
        3761,
        4055
      ],
      "op": "CALLVALUE",
      "path": "17"
    },
    "212": {
      "fn": "CryptoKeeper.supportsInterface",
      "offset": [
        3761,
        4055
      ],
      "op": "DUP1",
      "path": "17"
    },
    "213": {
      "fn": "CryptoKeeper.supportsInterface",
      "offset": [
        3761,
        4055
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "214": {
      "fn": "CryptoKeeper.supportsInterface",
      "offset": [
        3761,
        4055
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xDE"
    },
    "217": {
      "fn": "CryptoKeeper.supportsInterface",
      "offset": [
        3761,
        4055
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "218": {
      "fn": "CryptoKeeper.supportsInterface",
      "offset": [
        3761,
        4055
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "220": {
      "fn": "CryptoKeeper.supportsInterface",
      "offset": [
        3761,
        4055
      ],
      "op": "DUP1",
      "path": "17"
    },
    "221": {
      "fn": "CryptoKeeper.supportsInterface",
      "offset": [
        3761,
        4055
      ],
      "op": "REVERT",
      "path": "17"
    },
    "222": {
      "fn": "CryptoKeeper.supportsInterface",
      "offset": [
        3761,
        4055
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "223": {
      "op": "POP"
    },
    "224": {
      "fn": "CryptoKeeper.supportsInterface",
      "offset": [
        3761,
        4055
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xF2"
    },
    "227": {
      "fn": "CryptoKeeper.supportsInterface",
      "offset": [
        3761,
        4055
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xED"
    },
    "230": {
      "fn": "CryptoKeeper.supportsInterface",
      "offset": [
        3761,
        4055
      ],
      "op": "CALLDATASIZE",
      "path": "17"
    },
    "231": {
      "fn": "CryptoKeeper.supportsInterface",
      "offset": [
        3761,
        4055
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "233": {
      "fn": "CryptoKeeper.supportsInterface",
      "offset": [
        3761,
        4055
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x8F2"
    },
    "236": {
      "fn": "CryptoKeeper.supportsInterface",
      "jump": "i",
      "offset": [
        3761,
        4055
      ],
      "op": "JUMP",
      "path": "17"
    },
    "237": {
      "fn": "CryptoKeeper.supportsInterface",
      "offset": [
        3761,
        4055
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "238": {
      "fn": "CryptoKeeper.supportsInterface",
      "offset": [
        3761,
        4055
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2BF"
    },
    "241": {
      "fn": "CryptoKeeper.supportsInterface",
      "jump": "i",
      "offset": [
        3761,
        4055
      ],
      "op": "JUMP",
      "path": "17"
    },
    "242": {
      "fn": "CryptoKeeper.supportsInterface",
      "offset": [
        3761,
        4055
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "243": {
      "fn": "CryptoKeeper.supportsInterface",
      "offset": [
        3761,
        4055
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "245": {
      "fn": "CryptoKeeper.supportsInterface",
      "offset": [
        3761,
        4055
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "246": {
      "op": "SWAP1"
    },
    "247": {
      "op": "ISZERO"
    },
    "248": {
      "op": "ISZERO"
    },
    "249": {
      "op": "DUP2"
    },
    "250": {
      "op": "MSTORE"
    },
    "251": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "253": {
      "op": "ADD"
    },
    "254": {
      "fn": "CryptoKeeper.supportsInterface",
      "offset": [
        3761,
        4055
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "255": {
      "fn": "CryptoKeeper.supportsInterface",
      "offset": [
        3761,
        4055
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "257": {
      "fn": "CryptoKeeper.supportsInterface",
      "offset": [
        3761,
        4055
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "258": {
      "fn": "CryptoKeeper.supportsInterface",
      "offset": [
        3761,
        4055
      ],
      "op": "DUP1",
      "path": "17"
    },
    "259": {
      "fn": "CryptoKeeper.supportsInterface",
      "offset": [
        3761,
        4055
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "260": {
      "fn": "CryptoKeeper.supportsInterface",
      "offset": [
        3761,
        4055
      ],
      "op": "SUB",
      "path": "17"
    },
    "261": {
      "fn": "CryptoKeeper.supportsInterface",
      "offset": [
        3761,
        4055
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "262": {
      "fn": "CryptoKeeper.supportsInterface",
      "offset": [
        3761,
        4055
      ],
      "op": "RETURN",
      "path": "17"
    },
    "263": {
      "offset": [
        1320,
        1361
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "264": {
      "fn": "CryptoKeeper.supportsInterface",
      "offset": [
        1320,
        1361
      ],
      "op": "CALLVALUE",
      "path": "17"
    },
    "265": {
      "fn": "CryptoKeeper.supportsInterface",
      "offset": [
        1320,
        1361
      ],
      "op": "DUP1",
      "path": "17"
    },
    "266": {
      "fn": "CryptoKeeper.supportsInterface",
      "offset": [
        1320,
        1361
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "267": {
      "fn": "CryptoKeeper.supportsInterface",
      "offset": [
        1320,
        1361
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x113"
    },
    "270": {
      "fn": "CryptoKeeper.supportsInterface",
      "offset": [
        1320,
        1361
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "271": {
      "fn": "CryptoKeeper.supportsInterface",
      "offset": [
        1320,
        1361
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "273": {
      "fn": "CryptoKeeper.supportsInterface",
      "offset": [
        1320,
        1361
      ],
      "op": "DUP1",
      "path": "17"
    },
    "274": {
      "fn": "CryptoKeeper.supportsInterface",
      "offset": [
        1320,
        1361
      ],
      "op": "REVERT",
      "path": "17"
    },
    "275": {
      "fn": "CryptoKeeper.supportsInterface",
      "offset": [
        1320,
        1361
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "276": {
      "op": "POP"
    },
    "277": {
      "offset": [
        1320,
        1361
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xF2"
    },
    "280": {
      "fn": "CryptoKeeper.supportsInterface",
      "offset": [
        1320,
        1361
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x122"
    },
    "283": {
      "fn": "CryptoKeeper.supportsInterface",
      "offset": [
        1320,
        1361
      ],
      "op": "CALLDATASIZE",
      "path": "17"
    },
    "284": {
      "fn": "CryptoKeeper.supportsInterface",
      "offset": [
        1320,
        1361
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "286": {
      "fn": "CryptoKeeper.supportsInterface",
      "offset": [
        1320,
        1361
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x93F"
    },
    "289": {
      "fn": "CryptoKeeper.supportsInterface",
      "jump": "i",
      "offset": [
        1320,
        1361
      ],
      "op": "JUMP",
      "path": "17"
    },
    "290": {
      "fn": "CryptoKeeper.supportsInterface",
      "offset": [
        1320,
        1361
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "291": {
      "fn": "CryptoKeeper.supportsInterface",
      "offset": [
        1320,
        1361
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x2"
    },
    "293": {
      "fn": "CryptoKeeper.supportsInterface",
      "offset": [
        1320,
        1361
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "295": {
      "fn": "CryptoKeeper.supportsInterface",
      "offset": [
        1320,
        1361
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "296": {
      "fn": "CryptoKeeper.supportsInterface",
      "offset": [
        1320,
        1361
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "298": {
      "fn": "CryptoKeeper.supportsInterface",
      "offset": [
        1320,
        1361
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "299": {
      "fn": "CryptoKeeper.supportsInterface",
      "offset": [
        1320,
        1361
      ],
      "op": "DUP2",
      "path": "17"
    },
    "300": {
      "fn": "CryptoKeeper.supportsInterface",
      "offset": [
        1320,
        1361
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "301": {
      "fn": "CryptoKeeper.supportsInterface",
      "offset": [
        1320,
        1361
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "303": {
      "fn": "CryptoKeeper.supportsInterface",
      "offset": [
        1320,
        1361
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "304": {
      "fn": "CryptoKeeper.supportsInterface",
      "offset": [
        1320,
        1361
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "305": {
      "fn": "CryptoKeeper.supportsInterface",
      "offset": [
        1320,
        1361
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "306": {
      "fn": "CryptoKeeper.supportsInterface",
      "offset": [
        1320,
        1361
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xFF"
    },
    "308": {
      "fn": "CryptoKeeper.supportsInterface",
      "offset": [
        1320,
        1361
      ],
      "op": "AND",
      "path": "17"
    },
    "309": {
      "fn": "CryptoKeeper.supportsInterface",
      "offset": [
        1320,
        1361
      ],
      "op": "DUP2",
      "path": "17"
    },
    "310": {
      "fn": "CryptoKeeper.supportsInterface",
      "offset": [
        1320,
        1361
      ],
      "op": "JUMP",
      "path": "17"
    },
    "311": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        588,
        788
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "312": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        588,
        788
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "313": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        588,
        788
      ],
      "op": "DUP1",
      "path": "10"
    },
    "314": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        588,
        788
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "315": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        588,
        788
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x143"
    },
    "318": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        588,
        788
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "319": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        588,
        788
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "321": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        588,
        788
      ],
      "op": "DUP1",
      "path": "10"
    },
    "322": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        588,
        788
      ],
      "op": "REVERT",
      "path": "10"
    },
    "323": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        588,
        788
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "324": {
      "op": "POP"
    },
    "325": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        588,
        788
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x162"
    },
    "328": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        588,
        788
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x152"
    },
    "331": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        588,
        788
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "332": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        588,
        788
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "334": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        588,
        788
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA1F"
    },
    "337": {
      "fn": "ERC721Holder.onERC721Received",
      "jump": "i",
      "offset": [
        588,
        788
      ],
      "op": "JUMP",
      "path": "10"
    },
    "338": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        588,
        788
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "339": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "344": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "346": {
      "op": "SHL"
    },
    "347": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        588,
        788
      ],
      "op": "SWAP5",
      "path": "10"
    },
    "348": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        588,
        788
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "349": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        588,
        788
      ],
      "op": "POP",
      "path": "10"
    },
    "350": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        588,
        788
      ],
      "op": "POP",
      "path": "10"
    },
    "351": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        588,
        788
      ],
      "op": "POP",
      "path": "10"
    },
    "352": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        588,
        788
      ],
      "op": "POP",
      "path": "10"
    },
    "353": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        588,
        788
      ],
      "op": "JUMP",
      "path": "10"
    },
    "354": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        588,
        788
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "355": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        588,
        788
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "357": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        588,
        788
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "358": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "360": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "362": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "364": {
      "op": "SHL"
    },
    "365": {
      "op": "SUB"
    },
    "366": {
      "op": "NOT"
    },
    "367": {
      "op": "SWAP1"
    },
    "368": {
      "op": "SWAP2"
    },
    "369": {
      "op": "AND"
    },
    "370": {
      "op": "DUP2"
    },
    "371": {
      "op": "MSTORE"
    },
    "372": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "374": {
      "op": "ADD"
    },
    "375": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        588,
        788
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xFE"
    },
    "378": {
      "op": "JUMP"
    },
    "379": {
      "offset": [
        1283,
        1314
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "380": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        1283,
        1314
      ],
      "op": "CALLVALUE",
      "path": "17"
    },
    "381": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        1283,
        1314
      ],
      "op": "DUP1",
      "path": "17"
    },
    "382": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        1283,
        1314
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "383": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        1283,
        1314
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x187"
    },
    "386": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        1283,
        1314
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "387": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        1283,
        1314
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "389": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        1283,
        1314
      ],
      "op": "DUP1",
      "path": "17"
    },
    "390": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        1283,
        1314
      ],
      "op": "REVERT",
      "path": "17"
    },
    "391": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        1283,
        1314
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "392": {
      "op": "POP"
    },
    "393": {
      "offset": [
        1283,
        1314
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1"
    },
    "395": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        1283,
        1314
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "396": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        1283,
        1314
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xF2"
    },
    "399": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        1283,
        1314
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "400": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        1283,
        1314
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xFF"
    },
    "402": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        1283,
        1314
      ],
      "op": "AND",
      "path": "17"
    },
    "403": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        1283,
        1314
      ],
      "op": "DUP2",
      "path": "17"
    },
    "404": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        1283,
        1314
      ],
      "op": "JUMP",
      "path": "17"
    },
    "405": {
      "offset": [
        986,
        1034
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "406": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        986,
        1034
      ],
      "op": "CALLVALUE",
      "path": "17"
    },
    "407": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        986,
        1034
      ],
      "op": "DUP1",
      "path": "17"
    },
    "408": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        986,
        1034
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "409": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        986,
        1034
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1A1"
    },
    "412": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        986,
        1034
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "413": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        986,
        1034
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "415": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        986,
        1034
      ],
      "op": "DUP1",
      "path": "17"
    },
    "416": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        986,
        1034
      ],
      "op": "REVERT",
      "path": "17"
    },
    "417": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        986,
        1034
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "418": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        986,
        1034
      ],
      "op": "POP",
      "path": "17"
    },
    "419": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        986,
        1034
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1AA"
    },
    "422": {
      "offset": [
        1033,
        1034
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x2"
    },
    "424": {
      "offset": [
        986,
        1034
      ],
      "op": "DUP2",
      "path": "17"
    },
    "425": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        986,
        1034
      ],
      "op": "JUMP",
      "path": "17"
    },
    "426": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        986,
        1034
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "427": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        986,
        1034
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "429": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        986,
        1034
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "430": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "432": {
      "op": "SWAP1"
    },
    "433": {
      "op": "SWAP2"
    },
    "434": {
      "op": "AND"
    },
    "435": {
      "op": "DUP2"
    },
    "436": {
      "op": "MSTORE"
    },
    "437": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "439": {
      "op": "ADD"
    },
    "440": {
      "offset": [
        986,
        1034
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xFE"
    },
    "443": {
      "op": "JUMP"
    },
    "444": {
      "fn": "CryptoKeeper.addOperator",
      "offset": [
        3437,
        3589
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "445": {
      "fn": "CryptoKeeper.addOperator",
      "offset": [
        3437,
        3589
      ],
      "op": "CALLVALUE",
      "path": "17"
    },
    "446": {
      "fn": "CryptoKeeper.addOperator",
      "offset": [
        3437,
        3589
      ],
      "op": "DUP1",
      "path": "17"
    },
    "447": {
      "fn": "CryptoKeeper.addOperator",
      "offset": [
        3437,
        3589
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "448": {
      "fn": "CryptoKeeper.addOperator",
      "offset": [
        3437,
        3589
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1C8"
    },
    "451": {
      "fn": "CryptoKeeper.addOperator",
      "offset": [
        3437,
        3589
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "452": {
      "fn": "CryptoKeeper.addOperator",
      "offset": [
        3437,
        3589
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "454": {
      "fn": "CryptoKeeper.addOperator",
      "offset": [
        3437,
        3589
      ],
      "op": "DUP1",
      "path": "17"
    },
    "455": {
      "fn": "CryptoKeeper.addOperator",
      "offset": [
        3437,
        3589
      ],
      "op": "REVERT",
      "path": "17"
    },
    "456": {
      "fn": "CryptoKeeper.addOperator",
      "offset": [
        3437,
        3589
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "457": {
      "op": "POP"
    },
    "458": {
      "fn": "CryptoKeeper.addOperator",
      "offset": [
        3437,
        3589
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1DC"
    },
    "461": {
      "fn": "CryptoKeeper.addOperator",
      "offset": [
        3437,
        3589
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1D7"
    },
    "464": {
      "fn": "CryptoKeeper.addOperator",
      "offset": [
        3437,
        3589
      ],
      "op": "CALLDATASIZE",
      "path": "17"
    },
    "465": {
      "fn": "CryptoKeeper.addOperator",
      "offset": [
        3437,
        3589
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "467": {
      "fn": "CryptoKeeper.addOperator",
      "offset": [
        3437,
        3589
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x93F"
    },
    "470": {
      "fn": "CryptoKeeper.addOperator",
      "jump": "i",
      "offset": [
        3437,
        3589
      ],
      "op": "JUMP",
      "path": "17"
    },
    "471": {
      "fn": "CryptoKeeper.addOperator",
      "offset": [
        3437,
        3589
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "472": {
      "fn": "CryptoKeeper.addOperator",
      "offset": [
        3437,
        3589
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2EA"
    },
    "475": {
      "fn": "CryptoKeeper.addOperator",
      "jump": "i",
      "offset": [
        3437,
        3589
      ],
      "op": "JUMP",
      "path": "17"
    },
    "476": {
      "fn": "CryptoKeeper.addOperator",
      "offset": [
        3437,
        3589
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "477": {
      "fn": "CryptoKeeper.addOperator",
      "offset": [
        3437,
        3589
      ],
      "op": "STOP",
      "path": "17"
    },
    "478": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1587,
        1969
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "479": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1587,
        1969
      ],
      "op": "CALLVALUE",
      "path": "17"
    },
    "480": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1587,
        1969
      ],
      "op": "DUP1",
      "path": "17"
    },
    "481": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1587,
        1969
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "482": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1587,
        1969
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1EA"
    },
    "485": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1587,
        1969
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "486": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1587,
        1969
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "488": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1587,
        1969
      ],
      "op": "DUP1",
      "path": "17"
    },
    "489": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1587,
        1969
      ],
      "op": "REVERT",
      "path": "17"
    },
    "490": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1587,
        1969
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "491": {
      "op": "POP"
    },
    "492": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1587,
        1969
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1DC"
    },
    "495": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1587,
        1969
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1F9"
    },
    "498": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1587,
        1969
      ],
      "op": "CALLDATASIZE",
      "path": "17"
    },
    "499": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1587,
        1969
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "501": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1587,
        1969
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xA87"
    },
    "504": {
      "fn": "CryptoKeeper.initialize",
      "jump": "i",
      "offset": [
        1587,
        1969
      ],
      "op": "JUMP",
      "path": "17"
    },
    "505": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1587,
        1969
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "506": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1587,
        1969
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x37E"
    },
    "509": {
      "fn": "CryptoKeeper.initialize",
      "jump": "i",
      "offset": [
        1587,
        1969
      ],
      "op": "JUMP",
      "path": "17"
    },
    "510": {
      "fn": "CryptoKeeper.execute",
      "offset": [
        1975,
        2252
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "511": {
      "fn": "CryptoKeeper.execute",
      "offset": [
        1975,
        2252
      ],
      "op": "CALLVALUE",
      "path": "17"
    },
    "512": {
      "fn": "CryptoKeeper.execute",
      "offset": [
        1975,
        2252
      ],
      "op": "DUP1",
      "path": "17"
    },
    "513": {
      "fn": "CryptoKeeper.execute",
      "offset": [
        1975,
        2252
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "514": {
      "fn": "CryptoKeeper.execute",
      "offset": [
        1975,
        2252
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x20A"
    },
    "517": {
      "fn": "CryptoKeeper.execute",
      "offset": [
        1975,
        2252
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "518": {
      "fn": "CryptoKeeper.execute",
      "offset": [
        1975,
        2252
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "520": {
      "fn": "CryptoKeeper.execute",
      "offset": [
        1975,
        2252
      ],
      "op": "DUP1",
      "path": "17"
    },
    "521": {
      "fn": "CryptoKeeper.execute",
      "offset": [
        1975,
        2252
      ],
      "op": "REVERT",
      "path": "17"
    },
    "522": {
      "fn": "CryptoKeeper.execute",
      "offset": [
        1975,
        2252
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "523": {
      "op": "POP"
    },
    "524": {
      "fn": "CryptoKeeper.execute",
      "offset": [
        1975,
        2252
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x21E"
    },
    "527": {
      "fn": "CryptoKeeper.execute",
      "offset": [
        1975,
        2252
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x219"
    },
    "530": {
      "fn": "CryptoKeeper.execute",
      "offset": [
        1975,
        2252
      ],
      "op": "CALLDATASIZE",
      "path": "17"
    },
    "531": {
      "fn": "CryptoKeeper.execute",
      "offset": [
        1975,
        2252
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "533": {
      "fn": "CryptoKeeper.execute",
      "offset": [
        1975,
        2252
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xB45"
    },
    "536": {
      "fn": "CryptoKeeper.execute",
      "jump": "i",
      "offset": [
        1975,
        2252
      ],
      "op": "JUMP",
      "path": "17"
    },
    "537": {
      "fn": "CryptoKeeper.execute",
      "offset": [
        1975,
        2252
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "538": {
      "fn": "CryptoKeeper.execute",
      "offset": [
        1975,
        2252
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x4CF"
    },
    "541": {
      "fn": "CryptoKeeper.execute",
      "jump": "i",
      "offset": [
        1975,
        2252
      ],
      "op": "JUMP",
      "path": "17"
    },
    "542": {
      "fn": "CryptoKeeper.execute",
      "offset": [
        1975,
        2252
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "543": {
      "fn": "CryptoKeeper.execute",
      "offset": [
        1975,
        2252
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "545": {
      "fn": "CryptoKeeper.execute",
      "offset": [
        1975,
        2252
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "546": {
      "fn": "CryptoKeeper.execute",
      "offset": [
        1975,
        2252
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xFE"
    },
    "549": {
      "fn": "CryptoKeeper.execute",
      "offset": [
        1975,
        2252
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "550": {
      "fn": "CryptoKeeper.execute",
      "offset": [
        1975,
        2252
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "551": {
      "fn": "CryptoKeeper.execute",
      "offset": [
        1975,
        2252
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xC01"
    },
    "554": {
      "fn": "CryptoKeeper.execute",
      "jump": "i",
      "offset": [
        1975,
        2252
      ],
      "op": "JUMP",
      "path": "17"
    },
    "555": {
      "fn": "CryptoKeeper.removeOperator",
      "offset": [
        3595,
        3755
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "556": {
      "fn": "CryptoKeeper.removeOperator",
      "offset": [
        3595,
        3755
      ],
      "op": "CALLVALUE",
      "path": "17"
    },
    "557": {
      "fn": "CryptoKeeper.removeOperator",
      "offset": [
        3595,
        3755
      ],
      "op": "DUP1",
      "path": "17"
    },
    "558": {
      "fn": "CryptoKeeper.removeOperator",
      "offset": [
        3595,
        3755
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "559": {
      "fn": "CryptoKeeper.removeOperator",
      "offset": [
        3595,
        3755
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x237"
    },
    "562": {
      "fn": "CryptoKeeper.removeOperator",
      "offset": [
        3595,
        3755
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "563": {
      "fn": "CryptoKeeper.removeOperator",
      "offset": [
        3595,
        3755
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "565": {
      "fn": "CryptoKeeper.removeOperator",
      "offset": [
        3595,
        3755
      ],
      "op": "DUP1",
      "path": "17"
    },
    "566": {
      "fn": "CryptoKeeper.removeOperator",
      "offset": [
        3595,
        3755
      ],
      "op": "REVERT",
      "path": "17"
    },
    "567": {
      "fn": "CryptoKeeper.removeOperator",
      "offset": [
        3595,
        3755
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "568": {
      "op": "POP"
    },
    "569": {
      "fn": "CryptoKeeper.removeOperator",
      "offset": [
        3595,
        3755
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1DC"
    },
    "572": {
      "fn": "CryptoKeeper.removeOperator",
      "offset": [
        3595,
        3755
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x246"
    },
    "575": {
      "fn": "CryptoKeeper.removeOperator",
      "offset": [
        3595,
        3755
      ],
      "op": "CALLDATASIZE",
      "path": "17"
    },
    "576": {
      "fn": "CryptoKeeper.removeOperator",
      "offset": [
        3595,
        3755
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "578": {
      "fn": "CryptoKeeper.removeOperator",
      "offset": [
        3595,
        3755
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x93F"
    },
    "581": {
      "fn": "CryptoKeeper.removeOperator",
      "jump": "i",
      "offset": [
        3595,
        3755
      ],
      "op": "JUMP",
      "path": "17"
    },
    "582": {
      "fn": "CryptoKeeper.removeOperator",
      "offset": [
        3595,
        3755
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "583": {
      "fn": "CryptoKeeper.removeOperator",
      "offset": [
        3595,
        3755
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x55D"
    },
    "586": {
      "fn": "CryptoKeeper.removeOperator",
      "jump": "i",
      "offset": [
        3595,
        3755
      ],
      "op": "JUMP",
      "path": "17"
    },
    "587": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        724,
        971
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "588": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        724,
        971
      ],
      "op": "CALLVALUE",
      "path": "4"
    },
    "589": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        724,
        971
      ],
      "op": "DUP1",
      "path": "4"
    },
    "590": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        724,
        971
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "591": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        724,
        971
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x257"
    },
    "594": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        724,
        971
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "595": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        724,
        971
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "597": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        724,
        971
      ],
      "op": "DUP1",
      "path": "4"
    },
    "598": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        724,
        971
      ],
      "op": "REVERT",
      "path": "4"
    },
    "599": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        724,
        971
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "600": {
      "op": "POP"
    },
    "601": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        724,
        971
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x162"
    },
    "604": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        724,
        971
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x266"
    },
    "607": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        724,
        971
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "608": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        724,
        971
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "610": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        724,
        971
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC94"
    },
    "613": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "jump": "i",
      "offset": [
        724,
        971
      ],
      "op": "JUMP",
      "path": "4"
    },
    "614": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        724,
        971
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "615": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        724,
        971
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x5DD"
    },
    "618": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "jump": "i",
      "offset": [
        724,
        971
      ],
      "op": "JUMP",
      "path": "4"
    },
    "619": {
      "offset": [
        940,
        980
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "620": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        940,
        980
      ],
      "op": "CALLVALUE",
      "path": "17"
    },
    "621": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        940,
        980
      ],
      "op": "DUP1",
      "path": "17"
    },
    "622": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        940,
        980
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "623": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        940,
        980
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x277"
    },
    "626": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        940,
        980
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "627": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        940,
        980
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "629": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        940,
        980
      ],
      "op": "DUP1",
      "path": "17"
    },
    "630": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        940,
        980
      ],
      "op": "REVERT",
      "path": "17"
    },
    "631": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        940,
        980
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "632": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        940,
        980
      ],
      "op": "POP",
      "path": "17"
    },
    "633": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        940,
        980
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1AA"
    },
    "636": {
      "offset": [
        979,
        980
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1"
    },
    "638": {
      "offset": [
        940,
        980
      ],
      "op": "DUP2",
      "path": "17"
    },
    "639": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        940,
        980
      ],
      "op": "JUMP",
      "path": "17"
    },
    "640": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        499,
        718
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "641": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        499,
        718
      ],
      "op": "CALLVALUE",
      "path": "4"
    },
    "642": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        499,
        718
      ],
      "op": "DUP1",
      "path": "4"
    },
    "643": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        499,
        718
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "644": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        499,
        718
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x28C"
    },
    "647": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        499,
        718
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "648": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        499,
        718
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "650": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        499,
        718
      ],
      "op": "DUP1",
      "path": "4"
    },
    "651": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        499,
        718
      ],
      "op": "REVERT",
      "path": "4"
    },
    "652": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        499,
        718
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "653": {
      "op": "POP"
    },
    "654": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        499,
        718
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x162"
    },
    "657": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        499,
        718
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x29B"
    },
    "660": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        499,
        718
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "661": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        499,
        718
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "663": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        499,
        718
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xD3E"
    },
    "666": {
      "fn": "ERC1155Holder.onERC1155Received",
      "jump": "i",
      "offset": [
        499,
        718
      ],
      "op": "JUMP",
      "path": "4"
    },
    "667": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        499,
        718
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "668": {
      "op": "PUSH4",
      "value": "0xF23A6E61"
    },
    "673": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "675": {
      "op": "SHL"
    },
    "676": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        499,
        718
      ],
      "op": "SWAP6",
      "path": "4"
    },
    "677": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        499,
        718
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "678": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        499,
        718
      ],
      "op": "POP",
      "path": "4"
    },
    "679": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        499,
        718
      ],
      "op": "POP",
      "path": "4"
    },
    "680": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        499,
        718
      ],
      "op": "POP",
      "path": "4"
    },
    "681": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        499,
        718
      ],
      "op": "POP",
      "path": "4"
    },
    "682": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        499,
        718
      ],
      "op": "POP",
      "path": "4"
    },
    "683": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        499,
        718
      ],
      "op": "JUMP",
      "path": "4"
    },
    "684": {
      "fn": "CryptoKeeper.executeWithValue",
      "offset": [
        2258,
        2564
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "685": {
      "fn": "CryptoKeeper.executeWithValue",
      "offset": [
        2258,
        2564
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x21E"
    },
    "688": {
      "fn": "CryptoKeeper.executeWithValue",
      "offset": [
        2258,
        2564
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2BA"
    },
    "691": {
      "fn": "CryptoKeeper.executeWithValue",
      "offset": [
        2258,
        2564
      ],
      "op": "CALLDATASIZE",
      "path": "17"
    },
    "692": {
      "fn": "CryptoKeeper.executeWithValue",
      "offset": [
        2258,
        2564
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "694": {
      "fn": "CryptoKeeper.executeWithValue",
      "offset": [
        2258,
        2564
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xDA3"
    },
    "697": {
      "fn": "CryptoKeeper.executeWithValue",
      "jump": "i",
      "offset": [
        2258,
        2564
      ],
      "op": "JUMP",
      "path": "17"
    },
    "698": {
      "fn": "CryptoKeeper.executeWithValue",
      "offset": [
        2258,
        2564
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "699": {
      "fn": "CryptoKeeper.executeWithValue",
      "offset": [
        2258,
        2564
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x5EF"
    },
    "702": {
      "fn": "CryptoKeeper.executeWithValue",
      "jump": "i",
      "offset": [
        2258,
        2564
      ],
      "op": "JUMP",
      "path": "17"
    },
    "703": {
      "fn": "CryptoKeeper.supportsInterface",
      "offset": [
        3761,
        4055
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "704": {
      "fn": "CryptoKeeper.supportsInterface",
      "offset": [
        3911,
        3915
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "706": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "708": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "710": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "712": {
      "op": "SHL"
    },
    "713": {
      "op": "SUB"
    },
    "714": {
      "op": "NOT"
    },
    "715": {
      "fn": "CryptoKeeper.supportsInterface",
      "offset": [
        3950,
        3996
      ],
      "op": "DUP3",
      "path": "17",
      "statement": 0
    },
    "716": {
      "fn": "CryptoKeeper.supportsInterface",
      "offset": [
        3950,
        3996
      ],
      "op": "AND",
      "path": "17"
    },
    "717": {
      "op": "PUSH4",
      "value": "0xCEBE9845"
    },
    "722": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "724": {
      "op": "SHL"
    },
    "725": {
      "fn": "CryptoKeeper.supportsInterface",
      "offset": [
        3950,
        3996
      ],
      "op": "EQ",
      "path": "17"
    },
    "726": {
      "fn": "CryptoKeeper.supportsInterface",
      "offset": [
        3950,
        3996
      ],
      "op": "DUP1",
      "path": "17"
    },
    "727": {
      "fn": "CryptoKeeper.supportsInterface",
      "offset": [
        3950,
        4048
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2E4"
    },
    "730": {
      "fn": "CryptoKeeper.supportsInterface",
      "offset": [
        3950,
        4048
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "731": {
      "fn": "CryptoKeeper.supportsInterface",
      "offset": [
        3950,
        4048
      ],
      "op": "POP",
      "path": "17"
    },
    "732": {
      "fn": "CryptoKeeper.supportsInterface",
      "offset": [
        4012,
        4048
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2E4"
    },
    "735": {
      "fn": "CryptoKeeper.supportsInterface",
      "offset": [
        4036,
        4047
      ],
      "op": "DUP3",
      "path": "17"
    },
    "736": {
      "fn": "CryptoKeeper.supportsInterface",
      "offset": [
        4012,
        4035
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x673"
    },
    "739": {
      "fn": "CryptoKeeper.supportsInterface",
      "jump": "i",
      "offset": [
        4012,
        4048
      ],
      "op": "JUMP",
      "path": "17"
    },
    "740": {
      "fn": "CryptoKeeper.supportsInterface",
      "offset": [
        4012,
        4048
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "741": {
      "fn": "CryptoKeeper.supportsInterface",
      "offset": [
        3931,
        4048
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "742": {
      "fn": "CryptoKeeper.supportsInterface",
      "offset": [
        3761,
        4055
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "743": {
      "op": "POP"
    },
    "744": {
      "op": "POP"
    },
    "745": {
      "fn": "CryptoKeeper.supportsInterface",
      "jump": "o",
      "offset": [
        3761,
        4055
      ],
      "op": "JUMP",
      "path": "17"
    },
    "746": {
      "fn": "CryptoKeeper.addOperator",
      "offset": [
        3437,
        3589
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "747": {
      "fn": "CryptoKeeper.addOperator",
      "offset": [
        3498,
        3508
      ],
      "op": "CALLER",
      "path": "17"
    },
    "748": {
      "offset": [
        1524,
        1543
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "750": {
      "fn": "CryptoKeeper.addOperator",
      "offset": [
        1524,
        1543
      ],
      "op": "DUP2",
      "path": "17"
    },
    "751": {
      "fn": "CryptoKeeper.addOperator",
      "offset": [
        1524,
        1543
      ],
      "op": "DUP2",
      "path": "17"
    },
    "752": {
      "fn": "CryptoKeeper.addOperator",
      "offset": [
        1524,
        1543
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "753": {
      "offset": [
        1524,
        1533
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x2"
    },
    "755": {
      "offset": [
        1524,
        1543
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "757": {
      "fn": "CryptoKeeper.addOperator",
      "offset": [
        1524,
        1543
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "758": {
      "fn": "CryptoKeeper.addOperator",
      "offset": [
        1524,
        1543
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "760": {
      "fn": "CryptoKeeper.addOperator",
      "offset": [
        1524,
        1543
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "761": {
      "fn": "CryptoKeeper.addOperator",
      "offset": [
        1524,
        1543
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "762": {
      "fn": "CryptoKeeper.addOperator",
      "offset": [
        1524,
        1543
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "763": {
      "fn": "CryptoKeeper.addOperator",
      "offset": [
        1524,
        1543
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xFF"
    },
    "765": {
      "fn": "CryptoKeeper.addOperator",
      "offset": [
        1524,
        1543
      ],
      "op": "AND",
      "path": "17"
    },
    "766": {
      "offset": [
        1516,
        1563
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x322"
    },
    "769": {
      "offset": [
        1516,
        1563
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "770": {
      "fn": "CryptoKeeper.addOperator",
      "offset": [
        1516,
        1563
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "772": {
      "fn": "CryptoKeeper.addOperator",
      "offset": [
        1516,
        1563
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "773": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "777": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "779": {
      "op": "SHL"
    },
    "780": {
      "offset": [
        1516,
        1563
      ],
      "op": "DUP2",
      "path": "17"
    },
    "781": {
      "fn": "CryptoKeeper.addOperator",
      "offset": [
        1516,
        1563
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "782": {
      "fn": "CryptoKeeper.addOperator",
      "offset": [
        1516,
        1563
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "784": {
      "fn": "CryptoKeeper.addOperator",
      "offset": [
        1516,
        1563
      ],
      "op": "ADD",
      "path": "17"
    },
    "785": {
      "fn": "CryptoKeeper.addOperator",
      "offset": [
        1516,
        1563
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x319"
    },
    "788": {
      "fn": "CryptoKeeper.addOperator",
      "offset": [
        1516,
        1563
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "789": {
      "fn": "CryptoKeeper.addOperator",
      "offset": [
        1516,
        1563
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xDFD"
    },
    "792": {
      "fn": "CryptoKeeper.addOperator",
      "jump": "i",
      "offset": [
        1516,
        1563
      ],
      "op": "JUMP",
      "path": "17"
    },
    "793": {
      "fn": "CryptoKeeper.addOperator",
      "offset": [
        1516,
        1563
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "794": {
      "fn": "CryptoKeeper.addOperator",
      "offset": [
        1516,
        1563
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "796": {
      "fn": "CryptoKeeper.addOperator",
      "offset": [
        1516,
        1563
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "797": {
      "fn": "CryptoKeeper.addOperator",
      "offset": [
        1516,
        1563
      ],
      "op": "DUP1",
      "path": "17"
    },
    "798": {
      "fn": "CryptoKeeper.addOperator",
      "offset": [
        1516,
        1563
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "799": {
      "fn": "CryptoKeeper.addOperator",
      "offset": [
        1516,
        1563
      ],
      "op": "SUB",
      "path": "17"
    },
    "800": {
      "fn": "CryptoKeeper.addOperator",
      "offset": [
        1516,
        1563
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "801": {
      "fn": "CryptoKeeper.addOperator",
      "offset": [
        1516,
        1563
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "17"
    },
    "802": {
      "fn": "CryptoKeeper.addOperator",
      "offset": [
        1516,
        1563
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "803": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "805": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "807": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "809": {
      "op": "SHL"
    },
    "810": {
      "op": "SUB"
    },
    "811": {
      "fn": "CryptoKeeper.addOperator",
      "offset": [
        3520,
        3539
      ],
      "op": "DUP3",
      "path": "17",
      "statement": 1
    },
    "812": {
      "fn": "CryptoKeeper.addOperator",
      "offset": [
        3520,
        3539
      ],
      "op": "AND",
      "path": "17"
    },
    "813": {
      "fn": "CryptoKeeper.addOperator",
      "offset": [
        3520,
        3539
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "815": {
      "fn": "CryptoKeeper.addOperator",
      "offset": [
        3520,
        3539
      ],
      "op": "DUP2",
      "path": "17"
    },
    "816": {
      "fn": "CryptoKeeper.addOperator",
      "offset": [
        3520,
        3539
      ],
      "op": "DUP2",
      "path": "17"
    },
    "817": {
      "fn": "CryptoKeeper.addOperator",
      "offset": [
        3520,
        3539
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "818": {
      "fn": "CryptoKeeper.addOperator",
      "offset": [
        3520,
        3529
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x2"
    },
    "820": {
      "fn": "CryptoKeeper.addOperator",
      "offset": [
        3520,
        3539
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "822": {
      "fn": "CryptoKeeper.addOperator",
      "offset": [
        3520,
        3539
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "823": {
      "fn": "CryptoKeeper.addOperator",
      "offset": [
        3520,
        3539
      ],
      "op": "DUP2",
      "path": "17"
    },
    "824": {
      "fn": "CryptoKeeper.addOperator",
      "offset": [
        3520,
        3539
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "825": {
      "fn": "CryptoKeeper.addOperator",
      "offset": [
        3520,
        3539
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "827": {
      "fn": "CryptoKeeper.addOperator",
      "offset": [
        3520,
        3539
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "828": {
      "fn": "CryptoKeeper.addOperator",
      "offset": [
        3520,
        3539
      ],
      "op": "DUP3",
      "path": "17"
    },
    "829": {
      "fn": "CryptoKeeper.addOperator",
      "offset": [
        3520,
        3539
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "830": {
      "fn": "CryptoKeeper.addOperator",
      "offset": [
        3520,
        3539
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "831": {
      "fn": "CryptoKeeper.addOperator",
      "offset": [
        3520,
        3546
      ],
      "op": "DUP1",
      "path": "17"
    },
    "832": {
      "fn": "CryptoKeeper.addOperator",
      "offset": [
        3520,
        3546
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "833": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "835": {
      "op": "NOT"
    },
    "836": {
      "fn": "CryptoKeeper.addOperator",
      "offset": [
        3520,
        3546
      ],
      "op": "AND",
      "path": "17"
    },
    "837": {
      "fn": "CryptoKeeper.addOperator",
      "offset": [
        3542,
        3546
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1"
    },
    "839": {
      "fn": "CryptoKeeper.addOperator",
      "offset": [
        3520,
        3546
      ],
      "op": "OR",
      "path": "17"
    },
    "840": {
      "fn": "CryptoKeeper.addOperator",
      "offset": [
        3520,
        3546
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "841": {
      "fn": "CryptoKeeper.addOperator",
      "offset": [
        3520,
        3546
      ],
      "op": "SSTORE",
      "path": "17"
    },
    "842": {
      "fn": "CryptoKeeper.addOperator",
      "offset": [
        3561,
        3582
      ],
      "op": "SWAP1",
      "path": "17",
      "statement": 2
    },
    "843": {
      "fn": "CryptoKeeper.addOperator",
      "offset": [
        3561,
        3582
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "844": {
      "op": "SWAP2"
    },
    "845": {
      "op": "DUP3"
    },
    "846": {
      "op": "MSTORE"
    },
    "847": {
      "fn": "CryptoKeeper.addOperator",
      "offset": [
        3561,
        3582
      ],
      "op": "PUSH32",
      "path": "17",
      "value": "0xDA12EE837E6978172AAF54B16145FFE08414FD8710092EF033C71B8EB6EC189A"
    },
    "880": {
      "fn": "CryptoKeeper.addOperator",
      "offset": [
        3561,
        3582
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "881": {
      "op": "ADD"
    },
    "882": {
      "fn": "CryptoKeeper.addOperator",
      "offset": [
        3561,
        3582
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "883": {
      "fn": "CryptoKeeper.addOperator",
      "offset": [
        3561,
        3582
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "885": {
      "fn": "CryptoKeeper.addOperator",
      "offset": [
        3561,
        3582
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "886": {
      "fn": "CryptoKeeper.addOperator",
      "offset": [
        3561,
        3582
      ],
      "op": "DUP1",
      "path": "17"
    },
    "887": {
      "fn": "CryptoKeeper.addOperator",
      "offset": [
        3561,
        3582
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "888": {
      "fn": "CryptoKeeper.addOperator",
      "offset": [
        3561,
        3582
      ],
      "op": "SUB",
      "path": "17"
    },
    "889": {
      "fn": "CryptoKeeper.addOperator",
      "offset": [
        3561,
        3582
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "890": {
      "fn": "CryptoKeeper.addOperator",
      "offset": [
        3561,
        3582
      ],
      "op": "LOG1",
      "path": "17"
    },
    "891": {
      "fn": "CryptoKeeper.addOperator",
      "offset": [
        3437,
        3589
      ],
      "op": "POP",
      "path": "17"
    },
    "892": {
      "fn": "CryptoKeeper.addOperator",
      "offset": [
        3437,
        3589
      ],
      "op": "POP",
      "path": "17"
    },
    "893": {
      "fn": "CryptoKeeper.addOperator",
      "jump": "o",
      "offset": [
        3437,
        3589
      ],
      "op": "JUMP",
      "path": "17"
    },
    "894": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1587,
        1969
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "895": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1680,
        1684
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 3,
      "value": "0x1"
    },
    "897": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1666,
        1684
      ],
      "op": "DUP1",
      "path": "17"
    },
    "898": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1666,
        1684
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "899": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "901": {
      "op": "NOT"
    },
    "902": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1666,
        1684
      ],
      "op": "AND",
      "path": "17"
    },
    "903": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1666,
        1684
      ],
      "op": "DUP2",
      "path": "17"
    },
    "904": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1666,
        1684
      ],
      "op": "OR",
      "path": "17"
    },
    "905": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1666,
        1684
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "906": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1666,
        1684
      ],
      "op": "SSTORE",
      "path": "17"
    },
    "907": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1737,
        1739
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 4,
      "value": "0xA"
    },
    "909": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1716,
        1739
      ],
      "op": "DUP2",
      "path": "17"
    },
    "910": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1716,
        1739
      ],
      "op": "GT",
      "path": "17"
    },
    "911": {
      "branch": 25,
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1716,
        1739
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "912": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1695,
        1805
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x3EC"
    },
    "915": {
      "branch": 25,
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1695,
        1805
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "916": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1695,
        1805
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "918": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1695,
        1805
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "919": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "923": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "925": {
      "op": "SHL"
    },
    "926": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1695,
        1805
      ],
      "op": "DUP2",
      "path": "17"
    },
    "927": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1695,
        1805
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "928": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "930": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1695,
        1805
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "932": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1695,
        1805
      ],
      "op": "DUP3",
      "path": "17"
    },
    "933": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1695,
        1805
      ],
      "op": "ADD",
      "path": "17"
    },
    "934": {
      "op": "MSTORE"
    },
    "935": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "937": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "939": {
      "op": "DUP3"
    },
    "940": {
      "op": "ADD"
    },
    "941": {
      "op": "MSTORE"
    },
    "942": {
      "op": "PUSH32",
      "value": "0x43616E277420736574206D6F7265207468616E203130206F70657261746F7273"
    },
    "975": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "977": {
      "op": "DUP3"
    },
    "978": {
      "op": "ADD"
    },
    "979": {
      "op": "MSTORE"
    },
    "980": {
      "op": "PUSH8",
      "value": "0x206174206F6E6365"
    },
    "989": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "991": {
      "op": "SHL"
    },
    "992": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "994": {
      "op": "DUP3"
    },
    "995": {
      "op": "ADD"
    },
    "996": {
      "op": "MSTORE"
    },
    "997": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "999": {
      "op": "ADD"
    },
    "1000": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1695,
        1805
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x319"
    },
    "1003": {
      "op": "JUMP"
    },
    "1004": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1695,
        1805
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1005": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1821,
        1828
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "1007": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1816,
        1963
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1008": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1834,
        1855
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xFF"
    },
    "1010": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1834,
        1855
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1011": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1834,
        1855
      ],
      "op": "AND",
      "path": "17"
    },
    "1012": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1834,
        1855
      ],
      "op": "DUP3",
      "path": "17"
    },
    "1013": {
      "op": "GT"
    },
    "1014": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1816,
        1963
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "1015": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1816,
        1963
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x4CA"
    },
    "1018": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1816,
        1963
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "1019": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1903,
        1907
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 5,
      "value": "0x1"
    },
    "1021": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1876,
        1885
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x2"
    },
    "1023": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1876,
        1900
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "1025": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1886,
        1896
      ],
      "op": "DUP6",
      "path": "17"
    },
    "1026": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1886,
        1896
      ],
      "op": "DUP6",
      "path": "17"
    },
    "1027": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1897,
        1898
      ],
      "op": "DUP6",
      "path": "17"
    },
    "1028": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1886,
        1899
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xFF"
    },
    "1030": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1886,
        1899
      ],
      "op": "AND",
      "path": "17"
    },
    "1031": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1886,
        1899
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1032": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1886,
        1899
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1033": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1886,
        1899
      ],
      "op": "LT",
      "path": "17"
    },
    "1034": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1886,
        1899
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x415"
    },
    "1037": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1886,
        1899
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "1038": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1886,
        1899
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x415"
    },
    "1041": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1886,
        1899
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xE26"
    },
    "1044": {
      "fn": "CryptoKeeper.initialize",
      "jump": "i",
      "offset": [
        1886,
        1899
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1045": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1886,
        1899
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1046": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1886,
        1899
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1047": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1886,
        1899
      ],
      "op": "POP",
      "path": "17"
    },
    "1048": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1886,
        1899
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "1050": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1886,
        1899
      ],
      "op": "MUL",
      "path": "17"
    },
    "1051": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1886,
        1899
      ],
      "op": "ADD",
      "path": "17"
    },
    "1052": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1886,
        1899
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "1054": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1886,
        1899
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1055": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1886,
        1899
      ],
      "op": "ADD",
      "path": "17"
    },
    "1056": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1886,
        1899
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1057": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1886,
        1899
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x42A"
    },
    "1060": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1886,
        1899
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "1061": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1886,
        1899
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1062": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1886,
        1899
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x93F"
    },
    "1065": {
      "fn": "CryptoKeeper.initialize",
      "jump": "i",
      "offset": [
        1886,
        1899
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1066": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1886,
        1899
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1067": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1069": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1071": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1073": {
      "op": "SHL"
    },
    "1074": {
      "op": "SUB"
    },
    "1075": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1876,
        1900
      ],
      "op": "AND",
      "path": "17"
    },
    "1076": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1876,
        1900
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1077": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1876,
        1900
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1078": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1876,
        1900
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "1080": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1876,
        1900
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1081": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1876,
        1900
      ],
      "op": "ADD",
      "path": "17"
    },
    "1082": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1876,
        1900
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "1083": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1876,
        1900
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1084": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1876,
        1900
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "1085": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1876,
        1900
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1086": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1876,
        1900
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1088": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1876,
        1900
      ],
      "op": "ADD",
      "path": "17"
    },
    "1089": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1091": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1876,
        1900
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "1092": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1876,
        1907
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1093": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1876,
        1907
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "1094": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1096": {
      "op": "NOT"
    },
    "1097": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1876,
        1907
      ],
      "op": "AND",
      "path": "17"
    },
    "1098": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1876,
        1907
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "1099": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1876,
        1907
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "1100": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1876,
        1907
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "1101": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1876,
        1907
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "1102": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1876,
        1907
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1103": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1876,
        1907
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "1104": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1876,
        1907
      ],
      "op": "OR",
      "path": "17"
    },
    "1105": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1876,
        1907
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1106": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1876,
        1907
      ],
      "op": "SSTORE",
      "path": "17"
    },
    "1107": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1926,
        1952
      ],
      "op": "PUSH32",
      "path": "17",
      "statement": 6,
      "value": "0xDA12EE837E6978172AAF54B16145FFE08414FD8710092EF033C71B8EB6EC189A"
    },
    "1140": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1938,
        1948
      ],
      "op": "DUP4",
      "path": "17"
    },
    "1141": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1938,
        1948
      ],
      "op": "DUP4",
      "path": "17"
    },
    "1142": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1876,
        1907
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xFF"
    },
    "1144": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1938,
        1951
      ],
      "op": "DUP5",
      "path": "17"
    },
    "1145": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1938,
        1951
      ],
      "op": "AND",
      "path": "17"
    },
    "1146": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1938,
        1951
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1147": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1938,
        1951
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1148": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1938,
        1951
      ],
      "op": "LT",
      "path": "17"
    },
    "1149": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1938,
        1951
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x488"
    },
    "1152": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1938,
        1951
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "1153": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1938,
        1951
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x488"
    },
    "1156": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1938,
        1951
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xE26"
    },
    "1159": {
      "fn": "CryptoKeeper.initialize",
      "jump": "i",
      "offset": [
        1938,
        1951
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1160": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1938,
        1951
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1161": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1938,
        1951
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1162": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1938,
        1951
      ],
      "op": "POP",
      "path": "17"
    },
    "1163": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1938,
        1951
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "1165": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1938,
        1951
      ],
      "op": "MUL",
      "path": "17"
    },
    "1166": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1938,
        1951
      ],
      "op": "ADD",
      "path": "17"
    },
    "1167": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1938,
        1951
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "1169": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1938,
        1951
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1170": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1938,
        1951
      ],
      "op": "ADD",
      "path": "17"
    },
    "1171": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1938,
        1951
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1172": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1938,
        1951
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x49D"
    },
    "1175": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1938,
        1951
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "1176": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1938,
        1951
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1177": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1938,
        1951
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x93F"
    },
    "1180": {
      "fn": "CryptoKeeper.initialize",
      "jump": "i",
      "offset": [
        1938,
        1951
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1181": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1938,
        1951
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1182": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1926,
        1952
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1184": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1926,
        1952
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1185": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1187": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1189": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1191": {
      "op": "SHL"
    },
    "1192": {
      "op": "SUB"
    },
    "1193": {
      "op": "SWAP1"
    },
    "1194": {
      "op": "SWAP2"
    },
    "1195": {
      "op": "AND"
    },
    "1196": {
      "op": "DUP2"
    },
    "1197": {
      "op": "MSTORE"
    },
    "1198": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1200": {
      "op": "ADD"
    },
    "1201": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1926,
        1952
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1203": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1926,
        1952
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1204": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1926,
        1952
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1205": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1926,
        1952
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "1206": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1926,
        1952
      ],
      "op": "SUB",
      "path": "17"
    },
    "1207": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1926,
        1952
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1208": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1926,
        1952
      ],
      "op": "LOG1",
      "path": "17"
    },
    "1209": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1857,
        1860
      ],
      "op": "DUP1",
      "path": "17",
      "statement": 7
    },
    "1210": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1857,
        1860
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x4C2"
    },
    "1213": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1857,
        1860
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1214": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1857,
        1860
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xE3C"
    },
    "1217": {
      "fn": "CryptoKeeper.initialize",
      "jump": "i",
      "offset": [
        1857,
        1860
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1218": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1857,
        1860
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1219": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1857,
        1860
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "1220": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1857,
        1860
      ],
      "op": "POP",
      "path": "17"
    },
    "1221": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1857,
        1860
      ],
      "op": "POP",
      "path": "17"
    },
    "1222": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1816,
        1963
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x3EF"
    },
    "1225": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1816,
        1963
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1226": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1816,
        1963
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1227": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1816,
        1963
      ],
      "op": "POP",
      "path": "17"
    },
    "1228": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1587,
        1969
      ],
      "op": "POP",
      "path": "17"
    },
    "1229": {
      "fn": "CryptoKeeper.initialize",
      "offset": [
        1587,
        1969
      ],
      "op": "POP",
      "path": "17"
    },
    "1230": {
      "fn": "CryptoKeeper.initialize",
      "jump": "o",
      "offset": [
        1587,
        1969
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1231": {
      "fn": "CryptoKeeper.execute",
      "offset": [
        1975,
        2252
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1232": {
      "offset": [
        1411,
        1422
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1"
    },
    "1234": {
      "fn": "CryptoKeeper.execute",
      "offset": [
        1411,
        1422
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "1235": {
      "fn": "CryptoKeeper.execute",
      "offset": [
        2160,
        2172
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x60"
    },
    "1237": {
      "fn": "CryptoKeeper.execute",
      "offset": [
        2160,
        2172
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1238": {
      "offset": [
        1411,
        1422
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xFF"
    },
    "1240": {
      "fn": "CryptoKeeper.execute",
      "offset": [
        1411,
        1422
      ],
      "op": "AND",
      "path": "17"
    },
    "1241": {
      "offset": [
        1403,
        1442
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x516"
    },
    "1244": {
      "offset": [
        1403,
        1442
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "1245": {
      "fn": "CryptoKeeper.execute",
      "offset": [
        1403,
        1442
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1247": {
      "fn": "CryptoKeeper.execute",
      "offset": [
        1403,
        1442
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1248": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1252": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1254": {
      "op": "SHL"
    },
    "1255": {
      "offset": [
        1403,
        1442
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1256": {
      "fn": "CryptoKeeper.execute",
      "offset": [
        1403,
        1442
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1257": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1259": {
      "offset": [
        1403,
        1442
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "1261": {
      "fn": "CryptoKeeper.execute",
      "offset": [
        1403,
        1442
      ],
      "op": "DUP3",
      "path": "17"
    },
    "1262": {
      "fn": "CryptoKeeper.execute",
      "offset": [
        1403,
        1442
      ],
      "op": "ADD",
      "path": "17"
    },
    "1263": {
      "op": "MSTORE"
    },
    "1264": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "1266": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1268": {
      "op": "DUP3"
    },
    "1269": {
      "op": "ADD"
    },
    "1270": {
      "op": "MSTORE"
    },
    "1271": {
      "op": "PUSH15",
      "value": "0x139BDD081A5B9A5D1A585B1A5E9959"
    },
    "1287": {
      "op": "PUSH1",
      "value": "0x8A"
    },
    "1289": {
      "op": "SHL"
    },
    "1290": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1292": {
      "op": "DUP3"
    },
    "1293": {
      "op": "ADD"
    },
    "1294": {
      "op": "MSTORE"
    },
    "1295": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1297": {
      "op": "ADD"
    },
    "1298": {
      "offset": [
        1403,
        1442
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x319"
    },
    "1301": {
      "op": "JUMP"
    },
    "1302": {
      "offset": [
        1403,
        1442
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1303": {
      "fn": "CryptoKeeper.execute",
      "offset": [
        2139,
        2149
      ],
      "op": "CALLER",
      "path": "17"
    },
    "1304": {
      "offset": [
        1524,
        1543
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "1306": {
      "fn": "CryptoKeeper.execute",
      "offset": [
        1524,
        1543
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1307": {
      "fn": "CryptoKeeper.execute",
      "offset": [
        1524,
        1543
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1308": {
      "fn": "CryptoKeeper.execute",
      "offset": [
        1524,
        1543
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1309": {
      "offset": [
        1524,
        1533
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x2"
    },
    "1311": {
      "offset": [
        1524,
        1543
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "1313": {
      "fn": "CryptoKeeper.execute",
      "offset": [
        1524,
        1543
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1314": {
      "fn": "CryptoKeeper.execute",
      "offset": [
        1524,
        1543
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1316": {
      "fn": "CryptoKeeper.execute",
      "offset": [
        1524,
        1543
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1317": {
      "fn": "CryptoKeeper.execute",
      "offset": [
        1524,
        1543
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "1318": {
      "fn": "CryptoKeeper.execute",
      "offset": [
        1524,
        1543
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "1319": {
      "fn": "CryptoKeeper.execute",
      "offset": [
        1524,
        1543
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xFF"
    },
    "1321": {
      "fn": "CryptoKeeper.execute",
      "offset": [
        1524,
        1543
      ],
      "op": "AND",
      "path": "17"
    },
    "1322": {
      "offset": [
        1516,
        1563
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x545"
    },
    "1325": {
      "offset": [
        1516,
        1563
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "1326": {
      "fn": "CryptoKeeper.execute",
      "offset": [
        1516,
        1563
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1328": {
      "fn": "CryptoKeeper.execute",
      "offset": [
        1516,
        1563
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1329": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1333": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1335": {
      "op": "SHL"
    },
    "1336": {
      "offset": [
        1516,
        1563
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1337": {
      "fn": "CryptoKeeper.execute",
      "offset": [
        1516,
        1563
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1338": {
      "fn": "CryptoKeeper.execute",
      "offset": [
        1516,
        1563
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "1340": {
      "fn": "CryptoKeeper.execute",
      "offset": [
        1516,
        1563
      ],
      "op": "ADD",
      "path": "17"
    },
    "1341": {
      "fn": "CryptoKeeper.execute",
      "offset": [
        1516,
        1563
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x319"
    },
    "1344": {
      "fn": "CryptoKeeper.execute",
      "offset": [
        1516,
        1563
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1345": {
      "fn": "CryptoKeeper.execute",
      "offset": [
        1516,
        1563
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xDFD"
    },
    "1348": {
      "fn": "CryptoKeeper.execute",
      "jump": "i",
      "offset": [
        1516,
        1563
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1349": {
      "fn": "CryptoKeeper.execute",
      "offset": [
        1516,
        1563
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1350": {
      "fn": "CryptoKeeper.execute",
      "offset": [
        2191,
        2245
      ],
      "op": "PUSH2",
      "path": "17",
      "statement": 8,
      "value": "0x553"
    },
    "1353": {
      "fn": "CryptoKeeper.execute",
      "offset": [
        2200,
        2212
      ],
      "op": "DUP7",
      "path": "17"
    },
    "1354": {
      "fn": "CryptoKeeper.execute",
      "offset": [
        2214,
        2230
      ],
      "op": "DUP7",
      "path": "17"
    },
    "1355": {
      "fn": "CryptoKeeper.execute",
      "offset": [
        2214,
        2230
      ],
      "op": "DUP7",
      "path": "17"
    },
    "1356": {
      "fn": "CryptoKeeper.execute",
      "offset": [
        2232,
        2233
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "1358": {
      "fn": "CryptoKeeper.execute",
      "offset": [
        2235,
        2244
      ],
      "op": "DUP8",
      "path": "17"
    },
    "1359": {
      "fn": "CryptoKeeper.execute",
      "offset": [
        2191,
        2199
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x6A8"
    },
    "1362": {
      "fn": "CryptoKeeper.execute",
      "jump": "i",
      "offset": [
        2191,
        2245
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1363": {
      "fn": "CryptoKeeper.execute",
      "offset": [
        2191,
        2245
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1364": {
      "fn": "CryptoKeeper.execute",
      "offset": [
        2184,
        2245
      ],
      "op": "SWAP7",
      "path": "17"
    },
    "1365": {
      "fn": "CryptoKeeper.execute",
      "offset": [
        1975,
        2252
      ],
      "op": "SWAP6",
      "path": "17"
    },
    "1366": {
      "op": "POP"
    },
    "1367": {
      "op": "POP"
    },
    "1368": {
      "op": "POP"
    },
    "1369": {
      "op": "POP"
    },
    "1370": {
      "op": "POP"
    },
    "1371": {
      "op": "POP"
    },
    "1372": {
      "fn": "CryptoKeeper.execute",
      "jump": "o",
      "offset": [
        1975,
        2252
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1373": {
      "fn": "CryptoKeeper.removeOperator",
      "offset": [
        3595,
        3755
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1374": {
      "fn": "CryptoKeeper.removeOperator",
      "offset": [
        3659,
        3669
      ],
      "op": "CALLER",
      "path": "17"
    },
    "1375": {
      "offset": [
        1524,
        1543
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "1377": {
      "fn": "CryptoKeeper.removeOperator",
      "offset": [
        1524,
        1543
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1378": {
      "fn": "CryptoKeeper.removeOperator",
      "offset": [
        1524,
        1543
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1379": {
      "fn": "CryptoKeeper.removeOperator",
      "offset": [
        1524,
        1543
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1380": {
      "offset": [
        1524,
        1533
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x2"
    },
    "1382": {
      "offset": [
        1524,
        1543
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "1384": {
      "fn": "CryptoKeeper.removeOperator",
      "offset": [
        1524,
        1543
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1385": {
      "fn": "CryptoKeeper.removeOperator",
      "offset": [
        1524,
        1543
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1387": {
      "fn": "CryptoKeeper.removeOperator",
      "offset": [
        1524,
        1543
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1388": {
      "fn": "CryptoKeeper.removeOperator",
      "offset": [
        1524,
        1543
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "1389": {
      "fn": "CryptoKeeper.removeOperator",
      "offset": [
        1524,
        1543
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "1390": {
      "fn": "CryptoKeeper.removeOperator",
      "offset": [
        1524,
        1543
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xFF"
    },
    "1392": {
      "fn": "CryptoKeeper.removeOperator",
      "offset": [
        1524,
        1543
      ],
      "op": "AND",
      "path": "17"
    },
    "1393": {
      "offset": [
        1516,
        1563
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x58C"
    },
    "1396": {
      "offset": [
        1516,
        1563
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "1397": {
      "fn": "CryptoKeeper.removeOperator",
      "offset": [
        1516,
        1563
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1399": {
      "fn": "CryptoKeeper.removeOperator",
      "offset": [
        1516,
        1563
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1400": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1404": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1406": {
      "op": "SHL"
    },
    "1407": {
      "offset": [
        1516,
        1563
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1408": {
      "fn": "CryptoKeeper.removeOperator",
      "offset": [
        1516,
        1563
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1409": {
      "fn": "CryptoKeeper.removeOperator",
      "offset": [
        1516,
        1563
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "1411": {
      "fn": "CryptoKeeper.removeOperator",
      "offset": [
        1516,
        1563
      ],
      "op": "ADD",
      "path": "17"
    },
    "1412": {
      "fn": "CryptoKeeper.removeOperator",
      "offset": [
        1516,
        1563
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x319"
    },
    "1415": {
      "fn": "CryptoKeeper.removeOperator",
      "offset": [
        1516,
        1563
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1416": {
      "fn": "CryptoKeeper.removeOperator",
      "offset": [
        1516,
        1563
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xDFD"
    },
    "1419": {
      "fn": "CryptoKeeper.removeOperator",
      "jump": "i",
      "offset": [
        1516,
        1563
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1420": {
      "fn": "CryptoKeeper.removeOperator",
      "offset": [
        1516,
        1563
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1421": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1423": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1425": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1427": {
      "op": "SHL"
    },
    "1428": {
      "op": "SUB"
    },
    "1429": {
      "fn": "CryptoKeeper.removeOperator",
      "offset": [
        3681,
        3700
      ],
      "op": "DUP3",
      "path": "17",
      "statement": 9
    },
    "1430": {
      "fn": "CryptoKeeper.removeOperator",
      "offset": [
        3681,
        3700
      ],
      "op": "AND",
      "path": "17"
    },
    "1431": {
      "fn": "CryptoKeeper.removeOperator",
      "offset": [
        3703,
        3708
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "1433": {
      "fn": "CryptoKeeper.removeOperator",
      "offset": [
        3681,
        3700
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1434": {
      "fn": "CryptoKeeper.removeOperator",
      "offset": [
        3681,
        3700
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1435": {
      "fn": "CryptoKeeper.removeOperator",
      "offset": [
        3681,
        3700
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1436": {
      "fn": "CryptoKeeper.removeOperator",
      "offset": [
        3681,
        3690
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x2"
    },
    "1438": {
      "fn": "CryptoKeeper.removeOperator",
      "offset": [
        3681,
        3700
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "1440": {
      "fn": "CryptoKeeper.removeOperator",
      "offset": [
        3681,
        3700
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1441": {
      "fn": "CryptoKeeper.removeOperator",
      "offset": [
        3681,
        3700
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1442": {
      "fn": "CryptoKeeper.removeOperator",
      "offset": [
        3681,
        3700
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1443": {
      "fn": "CryptoKeeper.removeOperator",
      "offset": [
        3681,
        3700
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1445": {
      "fn": "CryptoKeeper.removeOperator",
      "offset": [
        3681,
        3700
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "1446": {
      "fn": "CryptoKeeper.removeOperator",
      "offset": [
        3681,
        3700
      ],
      "op": "DUP3",
      "path": "17"
    },
    "1447": {
      "fn": "CryptoKeeper.removeOperator",
      "offset": [
        3681,
        3700
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1448": {
      "fn": "CryptoKeeper.removeOperator",
      "offset": [
        3681,
        3700
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "1449": {
      "fn": "CryptoKeeper.removeOperator",
      "offset": [
        3681,
        3708
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1450": {
      "fn": "CryptoKeeper.removeOperator",
      "offset": [
        3681,
        3708
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "1451": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1453": {
      "op": "NOT"
    },
    "1454": {
      "fn": "CryptoKeeper.removeOperator",
      "offset": [
        3681,
        3708
      ],
      "op": "AND",
      "path": "17"
    },
    "1455": {
      "fn": "CryptoKeeper.removeOperator",
      "offset": [
        3681,
        3708
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1456": {
      "fn": "CryptoKeeper.removeOperator",
      "offset": [
        3681,
        3708
      ],
      "op": "SSTORE",
      "path": "17"
    },
    "1457": {
      "fn": "CryptoKeeper.removeOperator",
      "offset": [
        3723,
        3748
      ],
      "op": "SWAP1",
      "path": "17",
      "statement": 10
    },
    "1458": {
      "fn": "CryptoKeeper.removeOperator",
      "offset": [
        3723,
        3748
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1459": {
      "op": "SWAP2"
    },
    "1460": {
      "op": "DUP3"
    },
    "1461": {
      "op": "MSTORE"
    },
    "1462": {
      "fn": "CryptoKeeper.removeOperator",
      "offset": [
        3723,
        3748
      ],
      "op": "PUSH32",
      "path": "17",
      "value": "0x80C0B871B97B595B16A7741C1B06FED0C6F6F558639F18CCBCE50724325DC40D"
    },
    "1495": {
      "fn": "CryptoKeeper.removeOperator",
      "offset": [
        3723,
        3748
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "1496": {
      "op": "ADD"
    },
    "1497": {
      "fn": "CryptoKeeper.removeOperator",
      "offset": [
        3723,
        3748
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x372"
    },
    "1500": {
      "op": "JUMP"
    },
    "1501": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        724,
        971
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1502": {
      "op": "PUSH4",
      "value": "0xBC197C81"
    },
    "1507": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1509": {
      "op": "SHL"
    },
    "1510": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        724,
        971
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1511": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        724,
        971
      ],
      "op": "SWAP6",
      "path": "4"
    },
    "1512": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        724,
        971
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "1513": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        724,
        971
      ],
      "op": "POP",
      "path": "4"
    },
    "1514": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        724,
        971
      ],
      "op": "POP",
      "path": "4"
    },
    "1515": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        724,
        971
      ],
      "op": "POP",
      "path": "4"
    },
    "1516": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        724,
        971
      ],
      "op": "POP",
      "path": "4"
    },
    "1517": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        724,
        971
      ],
      "op": "POP",
      "path": "4"
    },
    "1518": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "jump": "o",
      "offset": [
        724,
        971
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1519": {
      "fn": "CryptoKeeper.executeWithValue",
      "offset": [
        2258,
        2564
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1520": {
      "offset": [
        1411,
        1422
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1"
    },
    "1522": {
      "fn": "CryptoKeeper.executeWithValue",
      "offset": [
        1411,
        1422
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "1523": {
      "fn": "CryptoKeeper.executeWithValue",
      "offset": [
        2458,
        2470
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x60"
    },
    "1525": {
      "fn": "CryptoKeeper.executeWithValue",
      "offset": [
        2458,
        2470
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1526": {
      "offset": [
        1411,
        1422
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xFF"
    },
    "1528": {
      "branch": 26,
      "fn": "CryptoKeeper.executeWithValue",
      "offset": [
        1411,
        1422
      ],
      "op": "AND",
      "path": "17"
    },
    "1529": {
      "offset": [
        1403,
        1442
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x636"
    },
    "1532": {
      "branch": 26,
      "offset": [
        1403,
        1442
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "1533": {
      "fn": "CryptoKeeper.executeWithValue",
      "offset": [
        1403,
        1442
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1535": {
      "fn": "CryptoKeeper.executeWithValue",
      "offset": [
        1403,
        1442
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1536": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1540": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1542": {
      "op": "SHL"
    },
    "1543": {
      "offset": [
        1403,
        1442
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1544": {
      "fn": "CryptoKeeper.executeWithValue",
      "offset": [
        1403,
        1442
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1545": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1547": {
      "offset": [
        1403,
        1442
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "1549": {
      "fn": "CryptoKeeper.executeWithValue",
      "offset": [
        1403,
        1442
      ],
      "op": "DUP3",
      "path": "17"
    },
    "1550": {
      "fn": "CryptoKeeper.executeWithValue",
      "offset": [
        1403,
        1442
      ],
      "op": "ADD",
      "path": "17"
    },
    "1551": {
      "op": "MSTORE"
    },
    "1552": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "1554": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1556": {
      "op": "DUP3"
    },
    "1557": {
      "op": "ADD"
    },
    "1558": {
      "op": "MSTORE"
    },
    "1559": {
      "op": "PUSH15",
      "value": "0x139BDD081A5B9A5D1A585B1A5E9959"
    },
    "1575": {
      "op": "PUSH1",
      "value": "0x8A"
    },
    "1577": {
      "op": "SHL"
    },
    "1578": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1580": {
      "op": "DUP3"
    },
    "1581": {
      "op": "ADD"
    },
    "1582": {
      "op": "MSTORE"
    },
    "1583": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1585": {
      "op": "ADD"
    },
    "1586": {
      "offset": [
        1403,
        1442
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x319"
    },
    "1589": {
      "op": "JUMP"
    },
    "1590": {
      "offset": [
        1403,
        1442
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1591": {
      "fn": "CryptoKeeper.executeWithValue",
      "offset": [
        2437,
        2447
      ],
      "op": "CALLER",
      "path": "17"
    },
    "1592": {
      "offset": [
        1524,
        1543
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "1594": {
      "fn": "CryptoKeeper.executeWithValue",
      "offset": [
        1524,
        1543
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1595": {
      "fn": "CryptoKeeper.executeWithValue",
      "offset": [
        1524,
        1543
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1596": {
      "fn": "CryptoKeeper.executeWithValue",
      "offset": [
        1524,
        1543
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1597": {
      "offset": [
        1524,
        1533
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x2"
    },
    "1599": {
      "offset": [
        1524,
        1543
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "1601": {
      "fn": "CryptoKeeper.executeWithValue",
      "offset": [
        1524,
        1543
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1602": {
      "fn": "CryptoKeeper.executeWithValue",
      "offset": [
        1524,
        1543
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1604": {
      "fn": "CryptoKeeper.executeWithValue",
      "offset": [
        1524,
        1543
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1605": {
      "fn": "CryptoKeeper.executeWithValue",
      "offset": [
        1524,
        1543
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "1606": {
      "fn": "CryptoKeeper.executeWithValue",
      "offset": [
        1524,
        1543
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "1607": {
      "fn": "CryptoKeeper.executeWithValue",
      "offset": [
        1524,
        1543
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xFF"
    },
    "1609": {
      "branch": 27,
      "fn": "CryptoKeeper.executeWithValue",
      "offset": [
        1524,
        1543
      ],
      "op": "AND",
      "path": "17"
    },
    "1610": {
      "offset": [
        1516,
        1563
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x665"
    },
    "1613": {
      "branch": 27,
      "offset": [
        1516,
        1563
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "1614": {
      "fn": "CryptoKeeper.executeWithValue",
      "offset": [
        1516,
        1563
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1616": {
      "fn": "CryptoKeeper.executeWithValue",
      "offset": [
        1516,
        1563
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1617": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1621": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1623": {
      "op": "SHL"
    },
    "1624": {
      "offset": [
        1516,
        1563
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1625": {
      "fn": "CryptoKeeper.executeWithValue",
      "offset": [
        1516,
        1563
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1626": {
      "fn": "CryptoKeeper.executeWithValue",
      "offset": [
        1516,
        1563
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "1628": {
      "fn": "CryptoKeeper.executeWithValue",
      "offset": [
        1516,
        1563
      ],
      "op": "ADD",
      "path": "17"
    },
    "1629": {
      "fn": "CryptoKeeper.executeWithValue",
      "offset": [
        1516,
        1563
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x319"
    },
    "1632": {
      "fn": "CryptoKeeper.executeWithValue",
      "offset": [
        1516,
        1563
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1633": {
      "fn": "CryptoKeeper.executeWithValue",
      "offset": [
        1516,
        1563
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xDFD"
    },
    "1636": {
      "fn": "CryptoKeeper.executeWithValue",
      "jump": "i",
      "offset": [
        1516,
        1563
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1637": {
      "fn": "CryptoKeeper.executeWithValue",
      "offset": [
        1516,
        1563
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1638": {
      "fn": "CryptoKeeper.executeWithValue",
      "offset": [
        2493,
        2557
      ],
      "op": "PUSH2",
      "path": "17",
      "statement": 11,
      "value": "0x553"
    },
    "1641": {
      "fn": "CryptoKeeper.executeWithValue",
      "offset": [
        2502,
        2514
      ],
      "op": "DUP7",
      "path": "17"
    },
    "1642": {
      "fn": "CryptoKeeper.executeWithValue",
      "offset": [
        2516,
        2532
      ],
      "op": "DUP7",
      "path": "17"
    },
    "1643": {
      "fn": "CryptoKeeper.executeWithValue",
      "offset": [
        2516,
        2532
      ],
      "op": "DUP7",
      "path": "17"
    },
    "1644": {
      "fn": "CryptoKeeper.executeWithValue",
      "offset": [
        2534,
        2540
      ],
      "op": "DUP7",
      "path": "17"
    },
    "1645": {
      "offset": [
        979,
        980
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1"
    },
    "1647": {
      "fn": "CryptoKeeper.executeWithValue",
      "offset": [
        2493,
        2501
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x6A8"
    },
    "1650": {
      "fn": "CryptoKeeper.executeWithValue",
      "jump": "i",
      "offset": [
        2493,
        2557
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1651": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        387,
        608
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1652": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        489,
        493
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1654": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1656": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1658": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1660": {
      "op": "SHL"
    },
    "1661": {
      "op": "SUB"
    },
    "1662": {
      "op": "NOT"
    },
    "1663": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        512,
        561
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 12
    },
    "1664": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        512,
        561
      ],
      "op": "AND",
      "path": "5"
    },
    "1665": {
      "op": "PUSH4",
      "value": "0x2711897"
    },
    "1670": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1672": {
      "op": "SHL"
    },
    "1673": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        512,
        561
      ],
      "op": "EQ",
      "path": "5"
    },
    "1674": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        512,
        561
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1675": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        512,
        601
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2E4"
    },
    "1678": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        512,
        601
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1679": {
      "op": "POP"
    },
    "1680": {
      "op": "PUSH4",
      "value": "0x1FFC9A7"
    },
    "1685": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1687": {
      "op": "SHL"
    },
    "1688": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1690": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1692": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1694": {
      "op": "SHL"
    },
    "1695": {
      "op": "SUB"
    },
    "1696": {
      "op": "NOT"
    },
    "1697": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        937,
        977
      ],
      "op": "DUP4",
      "path": "13",
      "statement": 13
    },
    "1698": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        937,
        977
      ],
      "op": "AND",
      "path": "13"
    },
    "1699": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        937,
        977
      ],
      "op": "EQ",
      "path": "13"
    },
    "1700": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        565,
        601
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2E4"
    },
    "1703": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        829,
        984
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1704": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        2570,
        3431
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1705": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        2744,
        2756
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x60"
    },
    "1707": {
      "offset": [
        2261,
        2282
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6B2"
    },
    "1710": {
      "offset": [
        2261,
        2280
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x83A"
    },
    "1713": {
      "jump": "i",
      "offset": [
        2261,
        2282
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1714": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        2261,
        2282
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1715": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        2769,
        2781
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "1717": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        2791,
        2810
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x60"
    },
    "1719": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1721": {
      "op": "NOT"
    },
    "1722": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        2824,
        2851
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xFF"
    },
    "1724": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        2824,
        2851
      ],
      "op": "DUP6",
      "path": "17"
    },
    "1725": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        2824,
        2851
      ],
      "op": "AND",
      "path": "17"
    },
    "1726": {
      "branch": 28,
      "fn": "CryptoKeeper._execute",
      "offset": [
        2824,
        2851
      ],
      "op": "ADD",
      "path": "17"
    },
    "1727": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        2821,
        3169
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x72A"
    },
    "1730": {
      "branch": 28,
      "fn": "CryptoKeeper._execute",
      "offset": [
        2821,
        3169
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "1731": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        2887,
        2899
      ],
      "op": "DUP8",
      "path": "17",
      "statement": 14
    },
    "1732": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1734": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1736": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1738": {
      "op": "SHL"
    },
    "1739": {
      "op": "SUB"
    },
    "1740": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        2887,
        2904
      ],
      "op": "AND",
      "path": "17"
    },
    "1741": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        2912,
        2918
      ],
      "op": "DUP6",
      "path": "17"
    },
    "1742": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        2937,
        2953
      ],
      "op": "DUP9",
      "path": "17"
    },
    "1743": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        2937,
        2953
      ],
      "op": "DUP9",
      "path": "17"
    },
    "1744": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        2887,
        2967
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1746": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        2887,
        2967
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1747": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        2887,
        2967
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x6DD"
    },
    "1750": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        2887,
        2967
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "1751": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        2887,
        2967
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "1752": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        2887,
        2967
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1753": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        2887,
        2967
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xE69"
    },
    "1756": {
      "fn": "CryptoKeeper._execute",
      "jump": "i",
      "offset": [
        2887,
        2967
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1757": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        2887,
        2967
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1758": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        2887,
        2967
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "1760": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        2887,
        2967
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1762": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        2887,
        2967
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1763": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        2887,
        2967
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1764": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        2887,
        2967
      ],
      "op": "DUP4",
      "path": "17"
    },
    "1765": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        2887,
        2967
      ],
      "op": "SUB",
      "path": "17"
    },
    "1766": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        2887,
        2967
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1767": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        2887,
        2967
      ],
      "op": "DUP6",
      "path": "17"
    },
    "1768": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        2887,
        2967
      ],
      "op": "DUP8",
      "path": "17"
    },
    "1769": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        2887,
        2967
      ],
      "op": "GAS",
      "path": "17"
    },
    "1770": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        2887,
        2967
      ],
      "op": "CALL",
      "path": "17"
    },
    "1771": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        2887,
        2967
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "1772": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        2887,
        2967
      ],
      "op": "POP",
      "path": "17"
    },
    "1773": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        2887,
        2967
      ],
      "op": "POP",
      "path": "17"
    },
    "1774": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        2887,
        2967
      ],
      "op": "POP",
      "path": "17"
    },
    "1775": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        2887,
        2967
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "1776": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        2887,
        2967
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1777": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        2887,
        2967
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "1779": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        2887,
        2967
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1780": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        2887,
        2967
      ],
      "op": "EQ",
      "path": "17"
    },
    "1781": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        2887,
        2967
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x71A"
    },
    "1784": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        2887,
        2967
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "1785": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        2887,
        2967
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1787": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        2887,
        2967
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1788": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        2887,
        2967
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "1789": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        2887,
        2967
      ],
      "op": "POP",
      "path": "17"
    },
    "1790": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        2887,
        2967
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1F"
    },
    "1792": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        2887,
        2967
      ],
      "op": "NOT",
      "path": "17"
    },
    "1793": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        2887,
        2967
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x3F"
    },
    "1795": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        2887,
        2967
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "1796": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        2887,
        2967
      ],
      "op": "ADD",
      "path": "17"
    },
    "1797": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        2887,
        2967
      ],
      "op": "AND",
      "path": "17"
    },
    "1798": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        2887,
        2967
      ],
      "op": "DUP3",
      "path": "17"
    },
    "1799": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        2887,
        2967
      ],
      "op": "ADD",
      "path": "17"
    },
    "1800": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        2887,
        2967
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1802": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        2887,
        2967
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1803": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        2887,
        2967
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "1804": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        2887,
        2967
      ],
      "op": "DUP3",
      "path": "17"
    },
    "1805": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        2887,
        2967
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1806": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        2887,
        2967
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "1807": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        2887,
        2967
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "1809": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        2887,
        2967
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "1811": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        2887,
        2967
      ],
      "op": "DUP5",
      "path": "17"
    },
    "1812": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        2887,
        2967
      ],
      "op": "ADD",
      "path": "17"
    },
    "1813": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        2887,
        2967
      ],
      "op": "RETURNDATACOPY",
      "path": "17"
    },
    "1814": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        2887,
        2967
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x71F"
    },
    "1817": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        2887,
        2967
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1818": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        2887,
        2967
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1819": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        2887,
        2967
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x60"
    },
    "1821": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        2887,
        2967
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "1822": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        2887,
        2967
      ],
      "op": "POP",
      "path": "17"
    },
    "1823": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        2887,
        2967
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1824": {
      "op": "POP"
    },
    "1825": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        2867,
        2967
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1826": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        2867,
        2967
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "1827": {
      "op": "POP"
    },
    "1828": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        2867,
        2967
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1829": {
      "op": "POP"
    },
    "1830": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        2821,
        3169
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x7C5"
    },
    "1833": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        2821,
        3169
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1834": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        2821,
        3169
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1835": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1837": {
      "op": "NOT"
    },
    "1838": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        2988,
        3023
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xFF"
    },
    "1840": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        2988,
        3023
      ],
      "op": "DUP6",
      "path": "17"
    },
    "1841": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        2988,
        3023
      ],
      "op": "AND",
      "path": "17"
    },
    "1842": {
      "branch": 29,
      "fn": "CryptoKeeper._execute",
      "offset": [
        2988,
        3023
      ],
      "op": "ADD",
      "path": "17"
    },
    "1843": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        2984,
        3169
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x78B"
    },
    "1846": {
      "branch": 29,
      "fn": "CryptoKeeper._execute",
      "offset": [
        2984,
        3169
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "1847": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        3059,
        3071
      ],
      "op": "DUP8",
      "path": "17",
      "statement": 15
    },
    "1848": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1850": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1852": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1854": {
      "op": "SHL"
    },
    "1855": {
      "op": "SUB"
    },
    "1856": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        3059,
        3084
      ],
      "op": "AND",
      "path": "17"
    },
    "1857": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        3085,
        3101
      ],
      "op": "DUP8",
      "path": "17"
    },
    "1858": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        3085,
        3101
      ],
      "op": "DUP8",
      "path": "17"
    },
    "1859": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        3059,
        3102
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1861": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        3059,
        3102
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1862": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        3059,
        3102
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x750"
    },
    "1865": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        3059,
        3102
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "1866": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        3059,
        3102
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "1867": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        3059,
        3102
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1868": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        3059,
        3102
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xE69"
    },
    "1871": {
      "fn": "CryptoKeeper._execute",
      "jump": "i",
      "offset": [
        3059,
        3102
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1872": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        3059,
        3102
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1873": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        3059,
        3102
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "1875": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        3059,
        3102
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1877": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        3059,
        3102
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1878": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        3059,
        3102
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1879": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        3059,
        3102
      ],
      "op": "DUP4",
      "path": "17"
    },
    "1880": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        3059,
        3102
      ],
      "op": "SUB",
      "path": "17"
    },
    "1881": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        3059,
        3102
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1882": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        3059,
        3102
      ],
      "op": "DUP6",
      "path": "17"
    },
    "1883": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        3059,
        3102
      ],
      "op": "GAS",
      "path": "17"
    },
    "1884": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        3059,
        3102
      ],
      "op": "DELEGATECALL",
      "path": "17"
    },
    "1885": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        3059,
        3102
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "1886": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        3059,
        3102
      ],
      "op": "POP",
      "path": "17"
    },
    "1887": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        3059,
        3102
      ],
      "op": "POP",
      "path": "17"
    },
    "1888": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        3059,
        3102
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "1889": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        3059,
        3102
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1890": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        3059,
        3102
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "1892": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        3059,
        3102
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1893": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        3059,
        3102
      ],
      "op": "EQ",
      "path": "17"
    },
    "1894": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        3059,
        3102
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x71A"
    },
    "1897": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        3059,
        3102
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "1898": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        3059,
        3102
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1900": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        3059,
        3102
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1901": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        3059,
        3102
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "1902": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        3059,
        3102
      ],
      "op": "POP",
      "path": "17"
    },
    "1903": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        3059,
        3102
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1F"
    },
    "1905": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        3059,
        3102
      ],
      "op": "NOT",
      "path": "17"
    },
    "1906": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        3059,
        3102
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x3F"
    },
    "1908": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        3059,
        3102
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "1909": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        3059,
        3102
      ],
      "op": "ADD",
      "path": "17"
    },
    "1910": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        3059,
        3102
      ],
      "op": "AND",
      "path": "17"
    },
    "1911": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        3059,
        3102
      ],
      "op": "DUP3",
      "path": "17"
    },
    "1912": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        3059,
        3102
      ],
      "op": "ADD",
      "path": "17"
    },
    "1913": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        3059,
        3102
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1915": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        3059,
        3102
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1916": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        3059,
        3102
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "1917": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        3059,
        3102
      ],
      "op": "DUP3",
      "path": "17"
    },
    "1918": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        3059,
        3102
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1919": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        3059,
        3102
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "1920": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        3059,
        3102
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "1922": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        3059,
        3102
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "1924": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        3059,
        3102
      ],
      "op": "DUP5",
      "path": "17"
    },
    "1925": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        3059,
        3102
      ],
      "op": "ADD",
      "path": "17"
    },
    "1926": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        3059,
        3102
      ],
      "op": "RETURNDATACOPY",
      "path": "17"
    },
    "1927": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        3059,
        3102
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x71F"
    },
    "1930": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        3059,
        3102
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1931": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        2984,
        3169
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1932": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        3133,
        3158
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 16,
      "value": "0x40"
    },
    "1934": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        3133,
        3158
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1935": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1939": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1941": {
      "op": "SHL"
    },
    "1942": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        3133,
        3158
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1943": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        3133,
        3158
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1944": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1946": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        3133,
        3158
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "1948": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        3133,
        3158
      ],
      "op": "DUP3",
      "path": "17"
    },
    "1949": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        3133,
        3158
      ],
      "op": "ADD",
      "path": "17"
    },
    "1950": {
      "op": "MSTORE"
    },
    "1951": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "1953": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1955": {
      "op": "DUP3"
    },
    "1956": {
      "op": "ADD"
    },
    "1957": {
      "op": "MSTORE"
    },
    "1958": {
      "op": "PUSH15",
      "value": "0x2BB937B7339037B832B930BA34B7B7"
    },
    "1974": {
      "op": "PUSH1",
      "value": "0x89"
    },
    "1976": {
      "op": "SHL"
    },
    "1977": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1979": {
      "op": "DUP3"
    },
    "1980": {
      "op": "ADD"
    },
    "1981": {
      "op": "MSTORE"
    },
    "1982": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1984": {
      "op": "ADD"
    },
    "1985": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        3133,
        3158
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x319"
    },
    "1988": {
      "op": "JUMP"
    },
    "1989": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        2984,
        3169
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1990": {
      "branch": 30,
      "fn": "CryptoKeeper._execute",
      "offset": [
        3184,
        3191
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1991": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        3179,
        3247
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x7EC"
    },
    "1994": {
      "branch": 30,
      "fn": "CryptoKeeper._execute",
      "offset": [
        3179,
        3247
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "1995": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        3214,
        3235
      ],
      "op": "PUSH2",
      "path": "17",
      "statement": 17,
      "value": "0x7D3"
    },
    "1998": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        3214,
        3220
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1999": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        3214,
        3233
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x893"
    },
    "2002": {
      "fn": "CryptoKeeper._execute",
      "jump": "i",
      "offset": [
        3214,
        3235
      ],
      "op": "JUMP",
      "path": "17"
    },
    "2003": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        3214,
        3235
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2004": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        3207,
        3236
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "2006": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        3207,
        3236
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "2007": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2011": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2013": {
      "op": "SHL"
    },
    "2014": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        3207,
        3236
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2015": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        3207,
        3236
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "2016": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        3207,
        3236
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "2018": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        3207,
        3236
      ],
      "op": "ADD",
      "path": "17"
    },
    "2019": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        3207,
        3236
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x319"
    },
    "2022": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        3207,
        3236
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "2023": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        3207,
        3236
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2024": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        3207,
        3236
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xC01"
    },
    "2027": {
      "fn": "CryptoKeeper._execute",
      "jump": "i",
      "offset": [
        3207,
        3236
      ],
      "op": "JUMP",
      "path": "17"
    },
    "2028": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        3179,
        3247
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2029": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        3262,
        3400
      ],
      "op": "PUSH32",
      "path": "17",
      "statement": 18,
      "value": "0x4E2058815A1087A94D8A92ECDCE2F91D1370AA8C270EF97B0F28E0A3C6F68A87"
    },
    "2062": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        3284,
        3294
      ],
      "op": "CALLER",
      "path": "17"
    },
    "2063": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        3308,
        3320
      ],
      "op": "DUP10",
      "path": "17"
    },
    "2064": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        3334,
        3350
      ],
      "op": "DUP10",
      "path": "17"
    },
    "2065": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        3334,
        3350
      ],
      "op": "DUP10",
      "path": "17"
    },
    "2066": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        3364,
        3370
      ],
      "op": "DUP10",
      "path": "17"
    },
    "2067": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        3384,
        3390
      ],
      "op": "DUP7",
      "path": "17"
    },
    "2068": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        3262,
        3400
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "2070": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        3262,
        3400
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "2071": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        3262,
        3400
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x825"
    },
    "2074": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        3262,
        3400
      ],
      "op": "SWAP7",
      "path": "17"
    },
    "2075": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        3262,
        3400
      ],
      "op": "SWAP6",
      "path": "17"
    },
    "2076": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        3262,
        3400
      ],
      "op": "SWAP5",
      "path": "17"
    },
    "2077": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        3262,
        3400
      ],
      "op": "SWAP4",
      "path": "17"
    },
    "2078": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        3262,
        3400
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "2079": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        3262,
        3400
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "2080": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        3262,
        3400
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2081": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        3262,
        3400
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xE79"
    },
    "2084": {
      "fn": "CryptoKeeper._execute",
      "jump": "i",
      "offset": [
        3262,
        3400
      ],
      "op": "JUMP",
      "path": "17"
    },
    "2085": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        3262,
        3400
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2086": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        3262,
        3400
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "2088": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        3262,
        3400
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "2089": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        3262,
        3400
      ],
      "op": "DUP1",
      "path": "17"
    },
    "2090": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        3262,
        3400
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "2091": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        3262,
        3400
      ],
      "op": "SUB",
      "path": "17"
    },
    "2092": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        3262,
        3400
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2093": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        3262,
        3400
      ],
      "op": "LOG1",
      "path": "17"
    },
    "2094": {
      "fn": "CryptoKeeper._execute",
      "offset": [
        3418,
        3424
      ],
      "op": "SWAP2",
      "path": "17",
      "statement": 19
    },
    "2095": {
      "op": "POP"
    },
    "2096": {
      "op": "POP"
    },
    "2097": {
      "offset": [
        2303,
        2323
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5E6"
    },
    "2100": {
      "offset": [
        1716,
        1717
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "2102": {
      "fn": "ReentrancyGuard._nonReentrantAfter",
      "offset": [
        2809,
        2816
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 20,
      "value": "0x0"
    },
    "2104": {
      "fn": "ReentrancyGuard._nonReentrantAfter",
      "offset": [
        2809,
        2831
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "2105": {
      "fn": "ReentrancyGuard._nonReentrantAfter",
      "offset": [
        2629,
        2838
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2106": {
      "fn": "ReentrancyGuard._nonReentrantBefore",
      "offset": [
        2336,
        2623
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2107": {
      "offset": [
        1759,
        1760
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "2109": {
      "fn": "ReentrancyGuard._nonReentrantBefore",
      "offset": [
        2468,
        2475
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 21,
      "value": "0x0"
    },
    "2111": {
      "fn": "ReentrancyGuard._nonReentrantBefore",
      "offset": [
        2468,
        2475
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2112": {
      "branch": 32,
      "fn": "ReentrancyGuard._nonReentrantBefore",
      "offset": [
        2468,
        2487
      ],
      "op": "SUB",
      "path": "2"
    },
    "2113": {
      "fn": "ReentrancyGuard._nonReentrantBefore",
      "offset": [
        2460,
        2523
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x88C"
    },
    "2116": {
      "branch": 32,
      "fn": "ReentrancyGuard._nonReentrantBefore",
      "offset": [
        2460,
        2523
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2117": {
      "fn": "ReentrancyGuard._nonReentrantBefore",
      "offset": [
        2460,
        2523
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2119": {
      "fn": "ReentrancyGuard._nonReentrantBefore",
      "offset": [
        2460,
        2523
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2120": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2124": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2126": {
      "op": "SHL"
    },
    "2127": {
      "fn": "ReentrancyGuard._nonReentrantBefore",
      "offset": [
        2460,
        2523
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2128": {
      "fn": "ReentrancyGuard._nonReentrantBefore",
      "offset": [
        2460,
        2523
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2129": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2131": {
      "fn": "ReentrancyGuard._nonReentrantBefore",
      "offset": [
        2460,
        2523
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2133": {
      "fn": "ReentrancyGuard._nonReentrantBefore",
      "offset": [
        2460,
        2523
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2134": {
      "fn": "ReentrancyGuard._nonReentrantBefore",
      "offset": [
        2460,
        2523
      ],
      "op": "ADD",
      "path": "2"
    },
    "2135": {
      "op": "MSTORE"
    },
    "2136": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2138": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2140": {
      "op": "DUP3"
    },
    "2141": {
      "op": "ADD"
    },
    "2142": {
      "op": "MSTORE"
    },
    "2143": {
      "op": "PUSH32",
      "value": "0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
    },
    "2176": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2178": {
      "op": "DUP3"
    },
    "2179": {
      "op": "ADD"
    },
    "2180": {
      "op": "MSTORE"
    },
    "2181": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2183": {
      "op": "ADD"
    },
    "2184": {
      "fn": "ReentrancyGuard._nonReentrantBefore",
      "offset": [
        2460,
        2523
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x319"
    },
    "2187": {
      "op": "JUMP"
    },
    "2188": {
      "fn": "ReentrancyGuard._nonReentrantBefore",
      "offset": [
        2460,
        2523
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2189": {
      "offset": [
        1759,
        1760
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "2191": {
      "fn": "ReentrancyGuard._nonReentrantBefore",
      "offset": [
        2598,
        2605
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 22,
      "value": "0x0"
    },
    "2193": {
      "fn": "ReentrancyGuard._nonReentrantBefore",
      "offset": [
        2598,
        2616
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "2194": {
      "fn": "ReentrancyGuard._nonReentrantBefore",
      "jump": "o",
      "offset": [
        2336,
        2623
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2195": {
      "fn": "CallHelpers.getRevertMsg",
      "offset": [
        469,
        783
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2196": {
      "fn": "CallHelpers.getRevertMsg",
      "offset": [
        554,
        567
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x60"
    },
    "2198": {
      "fn": "CallHelpers.getRevertMsg",
      "offset": [
        604,
        606
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x44"
    },
    "2200": {
      "fn": "CallHelpers.getRevertMsg",
      "offset": [
        583,
        594
      ],
      "op": "DUP3",
      "path": "17"
    },
    "2201": {
      "fn": "CallHelpers.getRevertMsg",
      "offset": [
        583,
        601
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "2202": {
      "branch": 31,
      "fn": "CallHelpers.getRevertMsg",
      "offset": [
        583,
        606
      ],
      "op": "LT",
      "path": "17"
    },
    "2203": {
      "fn": "CallHelpers.getRevertMsg",
      "offset": [
        579,
        646
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "2204": {
      "fn": "CallHelpers.getRevertMsg",
      "offset": [
        579,
        646
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x8D8"
    },
    "2207": {
      "branch": 31,
      "fn": "CallHelpers.getRevertMsg",
      "offset": [
        579,
        646
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "2208": {
      "op": "POP"
    },
    "2209": {
      "op": "POP"
    },
    "2210": {
      "fn": "CallHelpers.getRevertMsg",
      "offset": [
        608,
        646
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 23,
      "value": "0x40"
    },
    "2212": {
      "fn": "CallHelpers.getRevertMsg",
      "offset": [
        608,
        646
      ],
      "op": "DUP1",
      "path": "17"
    },
    "2213": {
      "fn": "CallHelpers.getRevertMsg",
      "offset": [
        608,
        646
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "2214": {
      "fn": "CallHelpers.getRevertMsg",
      "offset": [
        608,
        646
      ],
      "op": "DUP1",
      "path": "17"
    },
    "2215": {
      "fn": "CallHelpers.getRevertMsg",
      "offset": [
        608,
        646
      ],
      "op": "DUP3",
      "path": "17"
    },
    "2216": {
      "fn": "CallHelpers.getRevertMsg",
      "offset": [
        608,
        646
      ],
      "op": "ADD",
      "path": "17"
    },
    "2217": {
      "fn": "CallHelpers.getRevertMsg",
      "offset": [
        608,
        646
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2218": {
      "fn": "CallHelpers.getRevertMsg",
      "offset": [
        608,
        646
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "2219": {
      "fn": "CallHelpers.getRevertMsg",
      "offset": [
        608,
        646
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "2220": {
      "fn": "CallHelpers.getRevertMsg",
      "offset": [
        608,
        646
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1D"
    },
    "2222": {
      "fn": "CallHelpers.getRevertMsg",
      "offset": [
        608,
        646
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2223": {
      "fn": "CallHelpers.getRevertMsg",
      "offset": [
        608,
        646
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "2224": {
      "fn": "CallHelpers.getRevertMsg",
      "offset": [
        608,
        646
      ],
      "op": "PUSH32",
      "path": "17",
      "value": "0x5472616E73616374696F6E2072657665727465642073696C656E746C79000000"
    },
    "2257": {
      "fn": "CallHelpers.getRevertMsg",
      "offset": [
        608,
        646
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "2259": {
      "fn": "CallHelpers.getRevertMsg",
      "offset": [
        608,
        646
      ],
      "op": "DUP3",
      "path": "17"
    },
    "2260": {
      "fn": "CallHelpers.getRevertMsg",
      "offset": [
        608,
        646
      ],
      "op": "ADD",
      "path": "17"
    },
    "2261": {
      "fn": "CallHelpers.getRevertMsg",
      "offset": [
        608,
        646
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "2262": {
      "fn": "CallHelpers.getRevertMsg",
      "offset": [
        608,
        646
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2263": {
      "fn": "CallHelpers.getRevertMsg",
      "jump": "o",
      "offset": [
        469,
        783
      ],
      "op": "JUMP",
      "path": "17"
    },
    "2264": {
      "fn": "CallHelpers.getRevertMsg",
      "offset": [
        579,
        646
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2265": {
      "fn": "CallHelpers.getRevertMsg",
      "offset": [
        712,
        716
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "2267": {
      "fn": "CallHelpers.getRevertMsg",
      "offset": [
        699,
        710
      ],
      "op": "DUP3",
      "path": "17"
    },
    "2268": {
      "fn": "CallHelpers.getRevertMsg",
      "offset": [
        695,
        717
      ],
      "op": "ADD",
      "path": "17"
    },
    "2269": {
      "fn": "CallHelpers.getRevertMsg",
      "offset": [
        680,
        717
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "2270": {
      "fn": "CallHelpers.getRevertMsg",
      "offset": [
        680,
        717
      ],
      "op": "POP",
      "path": "17"
    },
    "2271": {
      "fn": "CallHelpers.getRevertMsg",
      "offset": [
        754,
        765
      ],
      "op": "DUP2",
      "path": "17",
      "statement": 24
    },
    "2272": {
      "fn": "CallHelpers.getRevertMsg",
      "offset": [
        743,
        776
      ],
      "op": "DUP1",
      "path": "17"
    },
    "2273": {
      "fn": "CallHelpers.getRevertMsg",
      "offset": [
        743,
        776
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "2275": {
      "fn": "CallHelpers.getRevertMsg",
      "offset": [
        743,
        776
      ],
      "op": "ADD",
      "path": "17"
    },
    "2276": {
      "fn": "CallHelpers.getRevertMsg",
      "offset": [
        743,
        776
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2277": {
      "fn": "CallHelpers.getRevertMsg",
      "offset": [
        743,
        776
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "2278": {
      "fn": "CallHelpers.getRevertMsg",
      "offset": [
        743,
        776
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2279": {
      "fn": "CallHelpers.getRevertMsg",
      "offset": [
        743,
        776
      ],
      "op": "ADD",
      "path": "17"
    },
    "2280": {
      "fn": "CallHelpers.getRevertMsg",
      "offset": [
        743,
        776
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2281": {
      "fn": "CallHelpers.getRevertMsg",
      "offset": [
        743,
        776
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2E4"
    },
    "2284": {
      "fn": "CallHelpers.getRevertMsg",
      "offset": [
        743,
        776
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "2285": {
      "fn": "CallHelpers.getRevertMsg",
      "offset": [
        743,
        776
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2286": {
      "fn": "CallHelpers.getRevertMsg",
      "offset": [
        743,
        776
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xEE2"
    },
    "2289": {
      "fn": "CallHelpers.getRevertMsg",
      "jump": "i",
      "offset": [
        743,
        776
      ],
      "op": "JUMP",
      "path": "17"
    },
    "2290": {
      "op": "JUMPDEST"
    },
    "2291": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2293": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2295": {
      "op": "DUP3"
    },
    "2296": {
      "op": "DUP5"
    },
    "2297": {
      "op": "SUB"
    },
    "2298": {
      "op": "SLT"
    },
    "2299": {
      "op": "ISZERO"
    },
    "2300": {
      "op": "PUSH2",
      "value": "0x904"
    },
    "2303": {
      "op": "JUMPI"
    },
    "2304": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2306": {
      "op": "DUP1"
    },
    "2307": {
      "op": "REVERT"
    },
    "2308": {
      "op": "JUMPDEST"
    },
    "2309": {
      "op": "DUP2"
    },
    "2310": {
      "op": "CALLDATALOAD"
    },
    "2311": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2313": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2315": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2317": {
      "op": "SHL"
    },
    "2318": {
      "op": "SUB"
    },
    "2319": {
      "op": "NOT"
    },
    "2320": {
      "op": "DUP2"
    },
    "2321": {
      "op": "AND"
    },
    "2322": {
      "op": "DUP2"
    },
    "2323": {
      "op": "EQ"
    },
    "2324": {
      "op": "PUSH2",
      "value": "0x91C"
    },
    "2327": {
      "op": "JUMPI"
    },
    "2328": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2330": {
      "op": "DUP1"
    },
    "2331": {
      "op": "REVERT"
    },
    "2332": {
      "op": "JUMPDEST"
    },
    "2333": {
      "op": "SWAP4"
    },
    "2334": {
      "op": "SWAP3"
    },
    "2335": {
      "op": "POP"
    },
    "2336": {
      "op": "POP"
    },
    "2337": {
      "op": "POP"
    },
    "2338": {
      "jump": "o",
      "op": "JUMP"
    },
    "2339": {
      "op": "JUMPDEST"
    },
    "2340": {
      "op": "DUP1"
    },
    "2341": {
      "op": "CALLDATALOAD"
    },
    "2342": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2344": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2346": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2348": {
      "op": "SHL"
    },
    "2349": {
      "op": "SUB"
    },
    "2350": {
      "op": "DUP2"
    },
    "2351": {
      "op": "AND"
    },
    "2352": {
      "op": "DUP2"
    },
    "2353": {
      "op": "EQ"
    },
    "2354": {
      "op": "PUSH2",
      "value": "0x93A"
    },
    "2357": {
      "op": "JUMPI"
    },
    "2358": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2360": {
      "op": "DUP1"
    },
    "2361": {
      "op": "REVERT"
    },
    "2362": {
      "op": "JUMPDEST"
    },
    "2363": {
      "op": "SWAP2"
    },
    "2364": {
      "op": "SWAP1"
    },
    "2365": {
      "op": "POP"
    },
    "2366": {
      "jump": "o",
      "op": "JUMP"
    },
    "2367": {
      "op": "JUMPDEST"
    },
    "2368": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2370": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2372": {
      "op": "DUP3"
    },
    "2373": {
      "op": "DUP5"
    },
    "2374": {
      "op": "SUB"
    },
    "2375": {
      "op": "SLT"
    },
    "2376": {
      "op": "ISZERO"
    },
    "2377": {
      "op": "PUSH2",
      "value": "0x951"
    },
    "2380": {
      "op": "JUMPI"
    },
    "2381": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2383": {
      "op": "DUP1"
    },
    "2384": {
      "op": "REVERT"
    },
    "2385": {
      "op": "JUMPDEST"
    },
    "2386": {
      "op": "PUSH2",
      "value": "0x91C"
    },
    "2389": {
      "op": "DUP3"
    },
    "2390": {
      "op": "PUSH2",
      "value": "0x923"
    },
    "2393": {
      "jump": "i",
      "op": "JUMP"
    },
    "2394": {
      "op": "JUMPDEST"
    },
    "2395": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2400": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2402": {
      "op": "SHL"
    },
    "2403": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2405": {
      "op": "MSTORE"
    },
    "2406": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "2408": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2410": {
      "op": "MSTORE"
    },
    "2411": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2413": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2415": {
      "op": "REVERT"
    },
    "2416": {
      "op": "JUMPDEST"
    },
    "2417": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2419": {
      "op": "MLOAD"
    },
    "2420": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2422": {
      "op": "DUP3"
    },
    "2423": {
      "op": "ADD"
    },
    "2424": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2426": {
      "op": "NOT"
    },
    "2427": {
      "op": "AND"
    },
    "2428": {
      "op": "DUP2"
    },
    "2429": {
      "op": "ADD"
    },
    "2430": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2439": {
      "op": "DUP2"
    },
    "2440": {
      "op": "GT"
    },
    "2441": {
      "op": "DUP3"
    },
    "2442": {
      "op": "DUP3"
    },
    "2443": {
      "op": "LT"
    },
    "2444": {
      "op": "OR"
    },
    "2445": {
      "op": "ISZERO"
    },
    "2446": {
      "op": "PUSH2",
      "value": "0x999"
    },
    "2449": {
      "op": "JUMPI"
    },
    "2450": {
      "op": "PUSH2",
      "value": "0x999"
    },
    "2453": {
      "op": "PUSH2",
      "value": "0x95A"
    },
    "2456": {
      "jump": "i",
      "op": "JUMP"
    },
    "2457": {
      "op": "JUMPDEST"
    },
    "2458": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2460": {
      "op": "MSTORE"
    },
    "2461": {
      "op": "SWAP2"
    },
    "2462": {
      "op": "SWAP1"
    },
    "2463": {
      "op": "POP"
    },
    "2464": {
      "jump": "o",
      "op": "JUMP"
    },
    "2465": {
      "op": "JUMPDEST"
    },
    "2466": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2468": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2477": {
      "op": "DUP3"
    },
    "2478": {
      "op": "GT"
    },
    "2479": {
      "op": "ISZERO"
    },
    "2480": {
      "op": "PUSH2",
      "value": "0x9BB"
    },
    "2483": {
      "op": "JUMPI"
    },
    "2484": {
      "op": "PUSH2",
      "value": "0x9BB"
    },
    "2487": {
      "op": "PUSH2",
      "value": "0x95A"
    },
    "2490": {
      "jump": "i",
      "op": "JUMP"
    },
    "2491": {
      "op": "JUMPDEST"
    },
    "2492": {
      "op": "POP"
    },
    "2493": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2495": {
      "op": "ADD"
    },
    "2496": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2498": {
      "op": "NOT"
    },
    "2499": {
      "op": "AND"
    },
    "2500": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2502": {
      "op": "ADD"
    },
    "2503": {
      "op": "SWAP1"
    },
    "2504": {
      "jump": "o",
      "op": "JUMP"
    },
    "2505": {
      "op": "JUMPDEST"
    },
    "2506": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2508": {
      "op": "DUP3"
    },
    "2509": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2511": {
      "op": "DUP4"
    },
    "2512": {
      "op": "ADD"
    },
    "2513": {
      "op": "SLT"
    },
    "2514": {
      "op": "PUSH2",
      "value": "0x9DA"
    },
    "2517": {
      "op": "JUMPI"
    },
    "2518": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2520": {
      "op": "DUP1"
    },
    "2521": {
      "op": "REVERT"
    },
    "2522": {
      "op": "JUMPDEST"
    },
    "2523": {
      "op": "DUP2"
    },
    "2524": {
      "op": "CALLDATALOAD"
    },
    "2525": {
      "op": "PUSH2",
      "value": "0x9ED"
    },
    "2528": {
      "op": "PUSH2",
      "value": "0x9E8"
    },
    "2531": {
      "op": "DUP3"
    },
    "2532": {
      "op": "PUSH2",
      "value": "0x9A1"
    },
    "2535": {
      "jump": "i",
      "op": "JUMP"
    },
    "2536": {
      "op": "JUMPDEST"
    },
    "2537": {
      "op": "PUSH2",
      "value": "0x970"
    },
    "2540": {
      "jump": "i",
      "op": "JUMP"
    },
    "2541": {
      "op": "JUMPDEST"
    },
    "2542": {
      "op": "DUP2"
    },
    "2543": {
      "op": "DUP2"
    },
    "2544": {
      "op": "MSTORE"
    },
    "2545": {
      "op": "DUP5"
    },
    "2546": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2548": {
      "op": "DUP4"
    },
    "2549": {
      "op": "DUP7"
    },
    "2550": {
      "op": "ADD"
    },
    "2551": {
      "op": "ADD"
    },
    "2552": {
      "op": "GT"
    },
    "2553": {
      "op": "ISZERO"
    },
    "2554": {
      "op": "PUSH2",
      "value": "0xA02"
    },
    "2557": {
      "op": "JUMPI"
    },
    "2558": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2560": {
      "op": "DUP1"
    },
    "2561": {
      "op": "REVERT"
    },
    "2562": {
      "op": "JUMPDEST"
    },
    "2563": {
      "op": "DUP2"
    },
    "2564": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2566": {
      "op": "DUP6"
    },
    "2567": {
      "op": "ADD"
    },
    "2568": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2570": {
      "op": "DUP4"
    },
    "2571": {
      "op": "ADD"
    },
    "2572": {
      "op": "CALLDATACOPY"
    },
    "2573": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2575": {
      "op": "SWAP2"
    },
    "2576": {
      "op": "DUP2"
    },
    "2577": {
      "op": "ADD"
    },
    "2578": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2580": {
      "op": "ADD"
    },
    "2581": {
      "op": "SWAP2"
    },
    "2582": {
      "op": "SWAP1"
    },
    "2583": {
      "op": "SWAP2"
    },
    "2584": {
      "op": "MSTORE"
    },
    "2585": {
      "op": "SWAP4"
    },
    "2586": {
      "op": "SWAP3"
    },
    "2587": {
      "op": "POP"
    },
    "2588": {
      "op": "POP"
    },
    "2589": {
      "op": "POP"
    },
    "2590": {
      "jump": "o",
      "op": "JUMP"
    },
    "2591": {
      "op": "JUMPDEST"
    },
    "2592": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2594": {
      "op": "DUP1"
    },
    "2595": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2597": {
      "op": "DUP1"
    },
    "2598": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2600": {
      "op": "DUP6"
    },
    "2601": {
      "op": "DUP8"
    },
    "2602": {
      "op": "SUB"
    },
    "2603": {
      "op": "SLT"
    },
    "2604": {
      "op": "ISZERO"
    },
    "2605": {
      "op": "PUSH2",
      "value": "0xA35"
    },
    "2608": {
      "op": "JUMPI"
    },
    "2609": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2611": {
      "op": "DUP1"
    },
    "2612": {
      "op": "REVERT"
    },
    "2613": {
      "op": "JUMPDEST"
    },
    "2614": {
      "op": "PUSH2",
      "value": "0xA3E"
    },
    "2617": {
      "op": "DUP6"
    },
    "2618": {
      "op": "PUSH2",
      "value": "0x923"
    },
    "2621": {
      "jump": "i",
      "op": "JUMP"
    },
    "2622": {
      "op": "JUMPDEST"
    },
    "2623": {
      "op": "SWAP4"
    },
    "2624": {
      "op": "POP"
    },
    "2625": {
      "op": "PUSH2",
      "value": "0xA4C"
    },
    "2628": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2630": {
      "op": "DUP7"
    },
    "2631": {
      "op": "ADD"
    },
    "2632": {
      "op": "PUSH2",
      "value": "0x923"
    },
    "2635": {
      "jump": "i",
      "op": "JUMP"
    },
    "2636": {
      "op": "JUMPDEST"
    },
    "2637": {
      "op": "SWAP3"
    },
    "2638": {
      "op": "POP"
    },
    "2639": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2641": {
      "op": "DUP6"
    },
    "2642": {
      "op": "ADD"
    },
    "2643": {
      "op": "CALLDATALOAD"
    },
    "2644": {
      "op": "SWAP2"
    },
    "2645": {
      "op": "POP"
    },
    "2646": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2648": {
      "op": "DUP6"
    },
    "2649": {
      "op": "ADD"
    },
    "2650": {
      "op": "CALLDATALOAD"
    },
    "2651": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2660": {
      "op": "DUP2"
    },
    "2661": {
      "op": "GT"
    },
    "2662": {
      "op": "ISZERO"
    },
    "2663": {
      "op": "PUSH2",
      "value": "0xA6F"
    },
    "2666": {
      "op": "JUMPI"
    },
    "2667": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2669": {
      "op": "DUP1"
    },
    "2670": {
      "op": "REVERT"
    },
    "2671": {
      "op": "JUMPDEST"
    },
    "2672": {
      "op": "PUSH2",
      "value": "0xA7B"
    },
    "2675": {
      "op": "DUP8"
    },
    "2676": {
      "op": "DUP3"
    },
    "2677": {
      "op": "DUP9"
    },
    "2678": {
      "op": "ADD"
    },
    "2679": {
      "op": "PUSH2",
      "value": "0x9C9"
    },
    "2682": {
      "jump": "i",
      "op": "JUMP"
    },
    "2683": {
      "op": "JUMPDEST"
    },
    "2684": {
      "op": "SWAP2"
    },
    "2685": {
      "op": "POP"
    },
    "2686": {
      "op": "POP"
    },
    "2687": {
      "op": "SWAP3"
    },
    "2688": {
      "op": "SWAP6"
    },
    "2689": {
      "op": "SWAP2"
    },
    "2690": {
      "op": "SWAP5"
    },
    "2691": {
      "op": "POP"
    },
    "2692": {
      "op": "SWAP3"
    },
    "2693": {
      "op": "POP"
    },
    "2694": {
      "jump": "o",
      "op": "JUMP"
    },
    "2695": {
      "op": "JUMPDEST"
    },
    "2696": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2698": {
      "op": "DUP1"
    },
    "2699": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2701": {
      "op": "DUP4"
    },
    "2702": {
      "op": "DUP6"
    },
    "2703": {
      "op": "SUB"
    },
    "2704": {
      "op": "SLT"
    },
    "2705": {
      "op": "ISZERO"
    },
    "2706": {
      "op": "PUSH2",
      "value": "0xA9A"
    },
    "2709": {
      "op": "JUMPI"
    },
    "2710": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2712": {
      "op": "DUP1"
    },
    "2713": {
      "op": "REVERT"
    },
    "2714": {
      "op": "JUMPDEST"
    },
    "2715": {
      "op": "DUP3"
    },
    "2716": {
      "op": "CALLDATALOAD"
    },
    "2717": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2726": {
      "op": "DUP1"
    },
    "2727": {
      "op": "DUP3"
    },
    "2728": {
      "op": "GT"
    },
    "2729": {
      "op": "ISZERO"
    },
    "2730": {
      "op": "PUSH2",
      "value": "0xAB2"
    },
    "2733": {
      "op": "JUMPI"
    },
    "2734": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2736": {
      "op": "DUP1"
    },
    "2737": {
      "op": "REVERT"
    },
    "2738": {
      "op": "JUMPDEST"
    },
    "2739": {
      "op": "DUP2"
    },
    "2740": {
      "op": "DUP6"
    },
    "2741": {
      "op": "ADD"
    },
    "2742": {
      "op": "SWAP2"
    },
    "2743": {
      "op": "POP"
    },
    "2744": {
      "op": "DUP6"
    },
    "2745": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2747": {
      "op": "DUP4"
    },
    "2748": {
      "op": "ADD"
    },
    "2749": {
      "op": "SLT"
    },
    "2750": {
      "op": "PUSH2",
      "value": "0xAC6"
    },
    "2753": {
      "op": "JUMPI"
    },
    "2754": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2756": {
      "op": "DUP1"
    },
    "2757": {
      "op": "REVERT"
    },
    "2758": {
      "op": "JUMPDEST"
    },
    "2759": {
      "op": "DUP2"
    },
    "2760": {
      "op": "CALLDATALOAD"
    },
    "2761": {
      "op": "DUP2"
    },
    "2762": {
      "op": "DUP2"
    },
    "2763": {
      "op": "GT"
    },
    "2764": {
      "op": "ISZERO"
    },
    "2765": {
      "op": "PUSH2",
      "value": "0xAD5"
    },
    "2768": {
      "op": "JUMPI"
    },
    "2769": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2771": {
      "op": "DUP1"
    },
    "2772": {
      "op": "REVERT"
    },
    "2773": {
      "op": "JUMPDEST"
    },
    "2774": {
      "op": "DUP7"
    },
    "2775": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2777": {
      "op": "DUP3"
    },
    "2778": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "2780": {
      "op": "SHL"
    },
    "2781": {
      "op": "DUP6"
    },
    "2782": {
      "op": "ADD"
    },
    "2783": {
      "op": "ADD"
    },
    "2784": {
      "op": "GT"
    },
    "2785": {
      "op": "ISZERO"
    },
    "2786": {
      "op": "PUSH2",
      "value": "0xAEA"
    },
    "2789": {
      "op": "JUMPI"
    },
    "2790": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2792": {
      "op": "DUP1"
    },
    "2793": {
      "op": "REVERT"
    },
    "2794": {
      "op": "JUMPDEST"
    },
    "2795": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2797": {
      "op": "SWAP3"
    },
    "2798": {
      "op": "SWAP1"
    },
    "2799": {
      "op": "SWAP3"
    },
    "2800": {
      "op": "ADD"
    },
    "2801": {
      "op": "SWAP7"
    },
    "2802": {
      "op": "SWAP2"
    },
    "2803": {
      "op": "SWAP6"
    },
    "2804": {
      "op": "POP"
    },
    "2805": {
      "op": "SWAP1"
    },
    "2806": {
      "op": "SWAP4"
    },
    "2807": {
      "op": "POP"
    },
    "2808": {
      "op": "POP"
    },
    "2809": {
      "op": "POP"
    },
    "2810": {
      "op": "POP"
    },
    "2811": {
      "jump": "o",
      "op": "JUMP"
    },
    "2812": {
      "op": "JUMPDEST"
    },
    "2813": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2815": {
      "op": "DUP1"
    },
    "2816": {
      "op": "DUP4"
    },
    "2817": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2819": {
      "op": "DUP5"
    },
    "2820": {
      "op": "ADD"
    },
    "2821": {
      "op": "SLT"
    },
    "2822": {
      "op": "PUSH2",
      "value": "0xB0E"
    },
    "2825": {
      "op": "JUMPI"
    },
    "2826": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2828": {
      "op": "DUP1"
    },
    "2829": {
      "op": "REVERT"
    },
    "2830": {
      "op": "JUMPDEST"
    },
    "2831": {
      "op": "POP"
    },
    "2832": {
      "op": "DUP2"
    },
    "2833": {
      "op": "CALLDATALOAD"
    },
    "2834": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2843": {
      "op": "DUP2"
    },
    "2844": {
      "op": "GT"
    },
    "2845": {
      "op": "ISZERO"
    },
    "2846": {
      "op": "PUSH2",
      "value": "0xB26"
    },
    "2849": {
      "op": "JUMPI"
    },
    "2850": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2852": {
      "op": "DUP1"
    },
    "2853": {
      "op": "REVERT"
    },
    "2854": {
      "op": "JUMPDEST"
    },
    "2855": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2857": {
      "op": "DUP4"
    },
    "2858": {
      "op": "ADD"
    },
    "2859": {
      "op": "SWAP2"
    },
    "2860": {
      "op": "POP"
    },
    "2861": {
      "op": "DUP4"
    },
    "2862": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2864": {
      "op": "DUP3"
    },
    "2865": {
      "op": "DUP6"
    },
    "2866": {
      "op": "ADD"
    },
    "2867": {
      "op": "ADD"
    },
    "2868": {
      "op": "GT"
    },
    "2869": {
      "op": "ISZERO"
    },
    "2870": {
      "op": "PUSH2",
      "value": "0xB3E"
    },
    "2873": {
      "op": "JUMPI"
    },
    "2874": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2876": {
      "op": "DUP1"
    },
    "2877": {
      "op": "REVERT"
    },
    "2878": {
      "op": "JUMPDEST"
    },
    "2879": {
      "op": "SWAP3"
    },
    "2880": {
      "op": "POP"
    },
    "2881": {
      "op": "SWAP3"
    },
    "2882": {
      "op": "SWAP1"
    },
    "2883": {
      "op": "POP"
    },
    "2884": {
      "jump": "o",
      "op": "JUMP"
    },
    "2885": {
      "op": "JUMPDEST"
    },
    "2886": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2888": {
      "op": "DUP1"
    },
    "2889": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2891": {
      "op": "DUP1"
    },
    "2892": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2894": {
      "op": "DUP6"
    },
    "2895": {
      "op": "DUP8"
    },
    "2896": {
      "op": "SUB"
    },
    "2897": {
      "op": "SLT"
    },
    "2898": {
      "op": "ISZERO"
    },
    "2899": {
      "op": "PUSH2",
      "value": "0xB5B"
    },
    "2902": {
      "op": "JUMPI"
    },
    "2903": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2905": {
      "op": "DUP1"
    },
    "2906": {
      "op": "REVERT"
    },
    "2907": {
      "op": "JUMPDEST"
    },
    "2908": {
      "op": "PUSH2",
      "value": "0xB64"
    },
    "2911": {
      "op": "DUP6"
    },
    "2912": {
      "op": "PUSH2",
      "value": "0x923"
    },
    "2915": {
      "jump": "i",
      "op": "JUMP"
    },
    "2916": {
      "op": "JUMPDEST"
    },
    "2917": {
      "op": "SWAP4"
    },
    "2918": {
      "op": "POP"
    },
    "2919": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2921": {
      "op": "DUP6"
    },
    "2922": {
      "op": "ADD"
    },
    "2923": {
      "op": "CALLDATALOAD"
    },
    "2924": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2933": {
      "op": "DUP2"
    },
    "2934": {
      "op": "GT"
    },
    "2935": {
      "op": "ISZERO"
    },
    "2936": {
      "op": "PUSH2",
      "value": "0xB80"
    },
    "2939": {
      "op": "JUMPI"
    },
    "2940": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2942": {
      "op": "DUP1"
    },
    "2943": {
      "op": "REVERT"
    },
    "2944": {
      "op": "JUMPDEST"
    },
    "2945": {
      "op": "PUSH2",
      "value": "0xB8C"
    },
    "2948": {
      "op": "DUP8"
    },
    "2949": {
      "op": "DUP3"
    },
    "2950": {
      "op": "DUP9"
    },
    "2951": {
      "op": "ADD"
    },
    "2952": {
      "op": "PUSH2",
      "value": "0xAFC"
    },
    "2955": {
      "jump": "i",
      "op": "JUMP"
    },
    "2956": {
      "op": "JUMPDEST"
    },
    "2957": {
      "op": "SWAP1"
    },
    "2958": {
      "op": "SWAP5"
    },
    "2959": {
      "op": "POP"
    },
    "2960": {
      "op": "SWAP3"
    },
    "2961": {
      "op": "POP"
    },
    "2962": {
      "op": "POP"
    },
    "2963": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2965": {
      "op": "DUP6"
    },
    "2966": {
      "op": "ADD"
    },
    "2967": {
      "op": "CALLDATALOAD"
    },
    "2968": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2970": {
      "op": "DUP2"
    },
    "2971": {
      "op": "AND"
    },
    "2972": {
      "op": "DUP2"
    },
    "2973": {
      "op": "EQ"
    },
    "2974": {
      "op": "PUSH2",
      "value": "0xBA6"
    },
    "2977": {
      "op": "JUMPI"
    },
    "2978": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2980": {
      "op": "DUP1"
    },
    "2981": {
      "op": "REVERT"
    },
    "2982": {
      "op": "JUMPDEST"
    },
    "2983": {
      "op": "SWAP4"
    },
    "2984": {
      "op": "SWAP7"
    },
    "2985": {
      "op": "SWAP3"
    },
    "2986": {
      "op": "SWAP6"
    },
    "2987": {
      "op": "POP"
    },
    "2988": {
      "op": "SWAP1"
    },
    "2989": {
      "op": "SWAP4"
    },
    "2990": {
      "op": "POP"
    },
    "2991": {
      "op": "POP"
    },
    "2992": {
      "jump": "o",
      "op": "JUMP"
    },
    "2993": {
      "op": "JUMPDEST"
    },
    "2994": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2996": {
      "op": "JUMPDEST"
    },
    "2997": {
      "op": "DUP4"
    },
    "2998": {
      "op": "DUP2"
    },
    "2999": {
      "op": "LT"
    },
    "3000": {
      "op": "ISZERO"
    },
    "3001": {
      "op": "PUSH2",
      "value": "0xBCC"
    },
    "3004": {
      "op": "JUMPI"
    },
    "3005": {
      "op": "DUP2"
    },
    "3006": {
      "op": "DUP2"
    },
    "3007": {
      "op": "ADD"
    },
    "3008": {
      "op": "MLOAD"
    },
    "3009": {
      "op": "DUP4"
    },
    "3010": {
      "op": "DUP3"
    },
    "3011": {
      "op": "ADD"
    },
    "3012": {
      "op": "MSTORE"
    },
    "3013": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3015": {
      "op": "ADD"
    },
    "3016": {
      "op": "PUSH2",
      "value": "0xBB4"
    },
    "3019": {
      "op": "JUMP"
    },
    "3020": {
      "op": "JUMPDEST"
    },
    "3021": {
      "op": "POP"
    },
    "3022": {
      "op": "POP"
    },
    "3023": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3025": {
      "op": "SWAP2"
    },
    "3026": {
      "op": "ADD"
    },
    "3027": {
      "op": "MSTORE"
    },
    "3028": {
      "jump": "o",
      "op": "JUMP"
    },
    "3029": {
      "op": "JUMPDEST"
    },
    "3030": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3032": {
      "op": "DUP2"
    },
    "3033": {
      "op": "MLOAD"
    },
    "3034": {
      "op": "DUP1"
    },
    "3035": {
      "op": "DUP5"
    },
    "3036": {
      "op": "MSTORE"
    },
    "3037": {
      "op": "PUSH2",
      "value": "0xBED"
    },
    "3040": {
      "op": "DUP2"
    },
    "3041": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3043": {
      "op": "DUP7"
    },
    "3044": {
      "op": "ADD"
    },
    "3045": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3047": {
      "op": "DUP7"
    },
    "3048": {
      "op": "ADD"
    },
    "3049": {
      "op": "PUSH2",
      "value": "0xBB1"
    },
    "3052": {
      "jump": "i",
      "op": "JUMP"
    },
    "3053": {
      "op": "JUMPDEST"
    },
    "3054": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3056": {
      "op": "ADD"
    },
    "3057": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3059": {
      "op": "NOT"
    },
    "3060": {
      "op": "AND"
    },
    "3061": {
      "op": "SWAP3"
    },
    "3062": {
      "op": "SWAP1"
    },
    "3063": {
      "op": "SWAP3"
    },
    "3064": {
      "op": "ADD"
    },
    "3065": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3067": {
      "op": "ADD"
    },
    "3068": {
      "op": "SWAP3"
    },
    "3069": {
      "op": "SWAP2"
    },
    "3070": {
      "op": "POP"
    },
    "3071": {
      "op": "POP"
    },
    "3072": {
      "jump": "o",
      "op": "JUMP"
    },
    "3073": {
      "op": "JUMPDEST"
    },
    "3074": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3076": {
      "op": "DUP2"
    },
    "3077": {
      "op": "MSTORE"
    },
    "3078": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3080": {
      "op": "PUSH2",
      "value": "0x91C"
    },
    "3083": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3085": {
      "op": "DUP4"
    },
    "3086": {
      "op": "ADD"
    },
    "3087": {
      "op": "DUP5"
    },
    "3088": {
      "op": "PUSH2",
      "value": "0xBD5"
    },
    "3091": {
      "jump": "i",
      "op": "JUMP"
    },
    "3092": {
      "op": "JUMPDEST"
    },
    "3093": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3095": {
      "op": "DUP3"
    },
    "3096": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3098": {
      "op": "DUP4"
    },
    "3099": {
      "op": "ADD"
    },
    "3100": {
      "op": "SLT"
    },
    "3101": {
      "op": "PUSH2",
      "value": "0xC25"
    },
    "3104": {
      "op": "JUMPI"
    },
    "3105": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3107": {
      "op": "DUP1"
    },
    "3108": {
      "op": "REVERT"
    },
    "3109": {
      "op": "JUMPDEST"
    },
    "3110": {
      "op": "DUP2"
    },
    "3111": {
      "op": "CALLDATALOAD"
    },
    "3112": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3114": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3123": {
      "op": "DUP3"
    },
    "3124": {
      "op": "GT"
    },
    "3125": {
      "op": "ISZERO"
    },
    "3126": {
      "op": "PUSH2",
      "value": "0xC41"
    },
    "3129": {
      "op": "JUMPI"
    },
    "3130": {
      "op": "PUSH2",
      "value": "0xC41"
    },
    "3133": {
      "op": "PUSH2",
      "value": "0x95A"
    },
    "3136": {
      "jump": "i",
      "op": "JUMP"
    },
    "3137": {
      "op": "JUMPDEST"
    },
    "3138": {
      "op": "DUP2"
    },
    "3139": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "3141": {
      "op": "SHL"
    },
    "3142": {
      "op": "PUSH2",
      "value": "0xC50"
    },
    "3145": {
      "op": "DUP3"
    },
    "3146": {
      "op": "DUP3"
    },
    "3147": {
      "op": "ADD"
    },
    "3148": {
      "op": "PUSH2",
      "value": "0x970"
    },
    "3151": {
      "jump": "i",
      "op": "JUMP"
    },
    "3152": {
      "op": "JUMPDEST"
    },
    "3153": {
      "op": "SWAP3"
    },
    "3154": {
      "op": "DUP4"
    },
    "3155": {
      "op": "MSTORE"
    },
    "3156": {
      "op": "DUP5"
    },
    "3157": {
      "op": "DUP2"
    },
    "3158": {
      "op": "ADD"
    },
    "3159": {
      "op": "DUP3"
    },
    "3160": {
      "op": "ADD"
    },
    "3161": {
      "op": "SWAP3"
    },
    "3162": {
      "op": "DUP3"
    },
    "3163": {
      "op": "DUP2"
    },
    "3164": {
      "op": "ADD"
    },
    "3165": {
      "op": "SWAP1"
    },
    "3166": {
      "op": "DUP8"
    },
    "3167": {
      "op": "DUP6"
    },
    "3168": {
      "op": "GT"
    },
    "3169": {
      "op": "ISZERO"
    },
    "3170": {
      "op": "PUSH2",
      "value": "0xC6A"
    },
    "3173": {
      "op": "JUMPI"
    },
    "3174": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3176": {
      "op": "DUP1"
    },
    "3177": {
      "op": "REVERT"
    },
    "3178": {
      "op": "JUMPDEST"
    },
    "3179": {
      "op": "DUP4"
    },
    "3180": {
      "op": "DUP8"
    },
    "3181": {
      "op": "ADD"
    },
    "3182": {
      "op": "SWAP3"
    },
    "3183": {
      "op": "POP"
    },
    "3184": {
      "op": "JUMPDEST"
    },
    "3185": {
      "op": "DUP5"
    },
    "3186": {
      "op": "DUP4"
    },
    "3187": {
      "op": "LT"
    },
    "3188": {
      "op": "ISZERO"
    },
    "3189": {
      "op": "PUSH2",
      "value": "0xC89"
    },
    "3192": {
      "op": "JUMPI"
    },
    "3193": {
      "op": "DUP3"
    },
    "3194": {
      "op": "CALLDATALOAD"
    },
    "3195": {
      "op": "DUP3"
    },
    "3196": {
      "op": "MSTORE"
    },
    "3197": {
      "op": "SWAP2"
    },
    "3198": {
      "op": "DUP4"
    },
    "3199": {
      "op": "ADD"
    },
    "3200": {
      "op": "SWAP2"
    },
    "3201": {
      "op": "SWAP1"
    },
    "3202": {
      "op": "DUP4"
    },
    "3203": {
      "op": "ADD"
    },
    "3204": {
      "op": "SWAP1"
    },
    "3205": {
      "op": "PUSH2",
      "value": "0xC70"
    },
    "3208": {
      "op": "JUMP"
    },
    "3209": {
      "op": "JUMPDEST"
    },
    "3210": {
      "op": "SWAP8"
    },
    "3211": {
      "op": "SWAP7"
    },
    "3212": {
      "op": "POP"
    },
    "3213": {
      "op": "POP"
    },
    "3214": {
      "op": "POP"
    },
    "3215": {
      "op": "POP"
    },
    "3216": {
      "op": "POP"
    },
    "3217": {
      "op": "POP"
    },
    "3218": {
      "op": "POP"
    },
    "3219": {
      "jump": "o",
      "op": "JUMP"
    },
    "3220": {
      "op": "JUMPDEST"
    },
    "3221": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3223": {
      "op": "DUP1"
    },
    "3224": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3226": {
      "op": "DUP1"
    },
    "3227": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3229": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3231": {
      "op": "DUP7"
    },
    "3232": {
      "op": "DUP9"
    },
    "3233": {
      "op": "SUB"
    },
    "3234": {
      "op": "SLT"
    },
    "3235": {
      "op": "ISZERO"
    },
    "3236": {
      "op": "PUSH2",
      "value": "0xCAC"
    },
    "3239": {
      "op": "JUMPI"
    },
    "3240": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3242": {
      "op": "DUP1"
    },
    "3243": {
      "op": "REVERT"
    },
    "3244": {
      "op": "JUMPDEST"
    },
    "3245": {
      "op": "PUSH2",
      "value": "0xCB5"
    },
    "3248": {
      "op": "DUP7"
    },
    "3249": {
      "op": "PUSH2",
      "value": "0x923"
    },
    "3252": {
      "jump": "i",
      "op": "JUMP"
    },
    "3253": {
      "op": "JUMPDEST"
    },
    "3254": {
      "op": "SWAP5"
    },
    "3255": {
      "op": "POP"
    },
    "3256": {
      "op": "PUSH2",
      "value": "0xCC3"
    },
    "3259": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3261": {
      "op": "DUP8"
    },
    "3262": {
      "op": "ADD"
    },
    "3263": {
      "op": "PUSH2",
      "value": "0x923"
    },
    "3266": {
      "jump": "i",
      "op": "JUMP"
    },
    "3267": {
      "op": "JUMPDEST"
    },
    "3268": {
      "op": "SWAP4"
    },
    "3269": {
      "op": "POP"
    },
    "3270": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3272": {
      "op": "DUP7"
    },
    "3273": {
      "op": "ADD"
    },
    "3274": {
      "op": "CALLDATALOAD"
    },
    "3275": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3284": {
      "op": "DUP1"
    },
    "3285": {
      "op": "DUP3"
    },
    "3286": {
      "op": "GT"
    },
    "3287": {
      "op": "ISZERO"
    },
    "3288": {
      "op": "PUSH2",
      "value": "0xCE0"
    },
    "3291": {
      "op": "JUMPI"
    },
    "3292": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3294": {
      "op": "DUP1"
    },
    "3295": {
      "op": "REVERT"
    },
    "3296": {
      "op": "JUMPDEST"
    },
    "3297": {
      "op": "PUSH2",
      "value": "0xCEC"
    },
    "3300": {
      "op": "DUP10"
    },
    "3301": {
      "op": "DUP4"
    },
    "3302": {
      "op": "DUP11"
    },
    "3303": {
      "op": "ADD"
    },
    "3304": {
      "op": "PUSH2",
      "value": "0xC14"
    },
    "3307": {
      "jump": "i",
      "op": "JUMP"
    },
    "3308": {
      "op": "JUMPDEST"
    },
    "3309": {
      "op": "SWAP5"
    },
    "3310": {
      "op": "POP"
    },
    "3311": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3313": {
      "op": "DUP9"
    },
    "3314": {
      "op": "ADD"
    },
    "3315": {
      "op": "CALLDATALOAD"
    },
    "3316": {
      "op": "SWAP2"
    },
    "3317": {
      "op": "POP"
    },
    "3318": {
      "op": "DUP1"
    },
    "3319": {
      "op": "DUP3"
    },
    "3320": {
      "op": "GT"
    },
    "3321": {
      "op": "ISZERO"
    },
    "3322": {
      "op": "PUSH2",
      "value": "0xD02"
    },
    "3325": {
      "op": "JUMPI"
    },
    "3326": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3328": {
      "op": "DUP1"
    },
    "3329": {
      "op": "REVERT"
    },
    "3330": {
      "op": "JUMPDEST"
    },
    "3331": {
      "op": "PUSH2",
      "value": "0xD0E"
    },
    "3334": {
      "op": "DUP10"
    },
    "3335": {
      "op": "DUP4"
    },
    "3336": {
      "op": "DUP11"
    },
    "3337": {
      "op": "ADD"
    },
    "3338": {
      "op": "PUSH2",
      "value": "0xC14"
    },
    "3341": {
      "jump": "i",
      "op": "JUMP"
    },
    "3342": {
      "op": "JUMPDEST"
    },
    "3343": {
      "op": "SWAP4"
    },
    "3344": {
      "op": "POP"
    },
    "3345": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3347": {
      "op": "DUP9"
    },
    "3348": {
      "op": "ADD"
    },
    "3349": {
      "op": "CALLDATALOAD"
    },
    "3350": {
      "op": "SWAP2"
    },
    "3351": {
      "op": "POP"
    },
    "3352": {
      "op": "DUP1"
    },
    "3353": {
      "op": "DUP3"
    },
    "3354": {
      "op": "GT"
    },
    "3355": {
      "op": "ISZERO"
    },
    "3356": {
      "op": "PUSH2",
      "value": "0xD24"
    },
    "3359": {
      "op": "JUMPI"
    },
    "3360": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3362": {
      "op": "DUP1"
    },
    "3363": {
      "op": "REVERT"
    },
    "3364": {
      "op": "JUMPDEST"
    },
    "3365": {
      "op": "POP"
    },
    "3366": {
      "op": "PUSH2",
      "value": "0xD31"
    },
    "3369": {
      "op": "DUP9"
    },
    "3370": {
      "op": "DUP3"
    },
    "3371": {
      "op": "DUP10"
    },
    "3372": {
      "op": "ADD"
    },
    "3373": {
      "op": "PUSH2",
      "value": "0x9C9"
    },
    "3376": {
      "jump": "i",
      "op": "JUMP"
    },
    "3377": {
      "op": "JUMPDEST"
    },
    "3378": {
      "op": "SWAP2"
    },
    "3379": {
      "op": "POP"
    },
    "3380": {
      "op": "POP"
    },
    "3381": {
      "op": "SWAP3"
    },
    "3382": {
      "op": "SWAP6"
    },
    "3383": {
      "op": "POP"
    },
    "3384": {
      "op": "SWAP3"
    },
    "3385": {
      "op": "SWAP6"
    },
    "3386": {
      "op": "SWAP1"
    },
    "3387": {
      "op": "SWAP4"
    },
    "3388": {
      "op": "POP"
    },
    "3389": {
      "jump": "o",
      "op": "JUMP"
    },
    "3390": {
      "op": "JUMPDEST"
    },
    "3391": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3393": {
      "op": "DUP1"
    },
    "3394": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3396": {
      "op": "DUP1"
    },
    "3397": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3399": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3401": {
      "op": "DUP7"
    },
    "3402": {
      "op": "DUP9"
    },
    "3403": {
      "op": "SUB"
    },
    "3404": {
      "op": "SLT"
    },
    "3405": {
      "op": "ISZERO"
    },
    "3406": {
      "op": "PUSH2",
      "value": "0xD56"
    },
    "3409": {
      "op": "JUMPI"
    },
    "3410": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3412": {
      "op": "DUP1"
    },
    "3413": {
      "op": "REVERT"
    },
    "3414": {
      "op": "JUMPDEST"
    },
    "3415": {
      "op": "PUSH2",
      "value": "0xD5F"
    },
    "3418": {
      "op": "DUP7"
    },
    "3419": {
      "op": "PUSH2",
      "value": "0x923"
    },
    "3422": {
      "jump": "i",
      "op": "JUMP"
    },
    "3423": {
      "op": "JUMPDEST"
    },
    "3424": {
      "op": "SWAP5"
    },
    "3425": {
      "op": "POP"
    },
    "3426": {
      "op": "PUSH2",
      "value": "0xD6D"
    },
    "3429": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3431": {
      "op": "DUP8"
    },
    "3432": {
      "op": "ADD"
    },
    "3433": {
      "op": "PUSH2",
      "value": "0x923"
    },
    "3436": {
      "jump": "i",
      "op": "JUMP"
    },
    "3437": {
      "op": "JUMPDEST"
    },
    "3438": {
      "op": "SWAP4"
    },
    "3439": {
      "op": "POP"
    },
    "3440": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3442": {
      "op": "DUP7"
    },
    "3443": {
      "op": "ADD"
    },
    "3444": {
      "op": "CALLDATALOAD"
    },
    "3445": {
      "op": "SWAP3"
    },
    "3446": {
      "op": "POP"
    },
    "3447": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3449": {
      "op": "DUP7"
    },
    "3450": {
      "op": "ADD"
    },
    "3451": {
      "op": "CALLDATALOAD"
    },
    "3452": {
      "op": "SWAP2"
    },
    "3453": {
      "op": "POP"
    },
    "3454": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3456": {
      "op": "DUP7"
    },
    "3457": {
      "op": "ADD"
    },
    "3458": {
      "op": "CALLDATALOAD"
    },
    "3459": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3468": {
      "op": "DUP2"
    },
    "3469": {
      "op": "GT"
    },
    "3470": {
      "op": "ISZERO"
    },
    "3471": {
      "op": "PUSH2",
      "value": "0xD97"
    },
    "3474": {
      "op": "JUMPI"
    },
    "3475": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3477": {
      "op": "DUP1"
    },
    "3478": {
      "op": "REVERT"
    },
    "3479": {
      "op": "JUMPDEST"
    },
    "3480": {
      "op": "PUSH2",
      "value": "0xD31"
    },
    "3483": {
      "op": "DUP9"
    },
    "3484": {
      "op": "DUP3"
    },
    "3485": {
      "op": "DUP10"
    },
    "3486": {
      "op": "ADD"
    },
    "3487": {
      "op": "PUSH2",
      "value": "0x9C9"
    },
    "3490": {
      "jump": "i",
      "op": "JUMP"
    },
    "3491": {
      "op": "JUMPDEST"
    },
    "3492": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3494": {
      "op": "DUP1"
    },
    "3495": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3497": {
      "op": "DUP1"
    },
    "3498": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3500": {
      "op": "DUP6"
    },
    "3501": {
      "op": "DUP8"
    },
    "3502": {
      "op": "SUB"
    },
    "3503": {
      "op": "SLT"
    },
    "3504": {
      "op": "ISZERO"
    },
    "3505": {
      "op": "PUSH2",
      "value": "0xDB9"
    },
    "3508": {
      "op": "JUMPI"
    },
    "3509": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3511": {
      "op": "DUP1"
    },
    "3512": {
      "op": "REVERT"
    },
    "3513": {
      "op": "JUMPDEST"
    },
    "3514": {
      "op": "PUSH2",
      "value": "0xDC2"
    },
    "3517": {
      "op": "DUP6"
    },
    "3518": {
      "op": "PUSH2",
      "value": "0x923"
    },
    "3521": {
      "jump": "i",
      "op": "JUMP"
    },
    "3522": {
      "op": "JUMPDEST"
    },
    "3523": {
      "op": "SWAP4"
    },
    "3524": {
      "op": "POP"
    },
    "3525": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3527": {
      "op": "DUP6"
    },
    "3528": {
      "op": "ADD"
    },
    "3529": {
      "op": "CALLDATALOAD"
    },
    "3530": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3539": {
      "op": "DUP2"
    },
    "3540": {
      "op": "GT"
    },
    "3541": {
      "op": "ISZERO"
    },
    "3542": {
      "op": "PUSH2",
      "value": "0xDDE"
    },
    "3545": {
      "op": "JUMPI"
    },
    "3546": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3548": {
      "op": "DUP1"
    },
    "3549": {
      "op": "REVERT"
    },
    "3550": {
      "op": "JUMPDEST"
    },
    "3551": {
      "op": "PUSH2",
      "value": "0xDEA"
    },
    "3554": {
      "op": "DUP8"
    },
    "3555": {
      "op": "DUP3"
    },
    "3556": {
      "op": "DUP9"
    },
    "3557": {
      "op": "ADD"
    },
    "3558": {
      "op": "PUSH2",
      "value": "0xAFC"
    },
    "3561": {
      "jump": "i",
      "op": "JUMP"
    },
    "3562": {
      "op": "JUMPDEST"
    },
    "3563": {
      "op": "SWAP6"
    },
    "3564": {
      "op": "SWAP9"
    },
    "3565": {
      "op": "SWAP1"
    },
    "3566": {
      "op": "SWAP8"
    },
    "3567": {
      "op": "POP"
    },
    "3568": {
      "op": "SWAP5"
    },
    "3569": {
      "op": "SWAP6"
    },
    "3570": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3572": {
      "op": "ADD"
    },
    "3573": {
      "op": "CALLDATALOAD"
    },
    "3574": {
      "op": "SWAP5"
    },
    "3575": {
      "op": "SWAP4"
    },
    "3576": {
      "op": "POP"
    },
    "3577": {
      "op": "POP"
    },
    "3578": {
      "op": "POP"
    },
    "3579": {
      "op": "POP"
    },
    "3580": {
      "jump": "o",
      "op": "JUMP"
    },
    "3581": {
      "op": "JUMPDEST"
    },
    "3582": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3584": {
      "op": "DUP1"
    },
    "3585": {
      "op": "DUP3"
    },
    "3586": {
      "op": "MSTORE"
    },
    "3587": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "3589": {
      "op": "SWAP1"
    },
    "3590": {
      "op": "DUP3"
    },
    "3591": {
      "op": "ADD"
    },
    "3592": {
      "op": "MSTORE"
    },
    "3593": {
      "op": "PUSH15",
      "value": "0x2737BA1030B71037B832B930BA37B9"
    },
    "3609": {
      "op": "PUSH1",
      "value": "0x89"
    },
    "3611": {
      "op": "SHL"
    },
    "3612": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3614": {
      "op": "DUP3"
    },
    "3615": {
      "op": "ADD"
    },
    "3616": {
      "op": "MSTORE"
    },
    "3617": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3619": {
      "op": "ADD"
    },
    "3620": {
      "op": "SWAP1"
    },
    "3621": {
      "jump": "o",
      "op": "JUMP"
    },
    "3622": {
      "op": "JUMPDEST"
    },
    "3623": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3628": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3630": {
      "op": "SHL"
    },
    "3631": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3633": {
      "op": "MSTORE"
    },
    "3634": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "3636": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3638": {
      "op": "MSTORE"
    },
    "3639": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3641": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3643": {
      "op": "REVERT"
    },
    "3644": {
      "op": "JUMPDEST"
    },
    "3645": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3647": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3649": {
      "op": "DUP3"
    },
    "3650": {
      "op": "AND"
    },
    "3651": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3653": {
      "op": "DUP2"
    },
    "3654": {
      "op": "SUB"
    },
    "3655": {
      "op": "PUSH2",
      "value": "0xE60"
    },
    "3658": {
      "op": "JUMPI"
    },
    "3659": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3664": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3666": {
      "op": "SHL"
    },
    "3667": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3669": {
      "op": "MSTORE"
    },
    "3670": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "3672": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3674": {
      "op": "MSTORE"
    },
    "3675": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3677": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3679": {
      "op": "REVERT"
    },
    "3680": {
      "op": "JUMPDEST"
    },
    "3681": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3683": {
      "op": "ADD"
    },
    "3684": {
      "op": "SWAP3"
    },
    "3685": {
      "op": "SWAP2"
    },
    "3686": {
      "op": "POP"
    },
    "3687": {
      "op": "POP"
    },
    "3688": {
      "jump": "o",
      "op": "JUMP"
    },
    "3689": {
      "op": "JUMPDEST"
    },
    "3690": {
      "op": "DUP2"
    },
    "3691": {
      "op": "DUP4"
    },
    "3692": {
      "op": "DUP3"
    },
    "3693": {
      "op": "CALLDATACOPY"
    },
    "3694": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3696": {
      "op": "SWAP2"
    },
    "3697": {
      "op": "ADD"
    },
    "3698": {
      "op": "SWAP1"
    },
    "3699": {
      "op": "DUP2"
    },
    "3700": {
      "op": "MSTORE"
    },
    "3701": {
      "op": "SWAP2"
    },
    "3702": {
      "op": "SWAP1"
    },
    "3703": {
      "op": "POP"
    },
    "3704": {
      "jump": "o",
      "op": "JUMP"
    },
    "3705": {
      "op": "JUMPDEST"
    },
    "3706": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3708": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3710": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3712": {
      "op": "SHL"
    },
    "3713": {
      "op": "SUB"
    },
    "3714": {
      "op": "DUP8"
    },
    "3715": {
      "op": "DUP2"
    },
    "3716": {
      "op": "AND"
    },
    "3717": {
      "op": "DUP3"
    },
    "3718": {
      "op": "MSTORE"
    },
    "3719": {
      "op": "DUP7"
    },
    "3720": {
      "op": "AND"
    },
    "3721": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3723": {
      "op": "DUP3"
    },
    "3724": {
      "op": "ADD"
    },
    "3725": {
      "op": "MSTORE"
    },
    "3726": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3728": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3730": {
      "op": "DUP3"
    },
    "3731": {
      "op": "ADD"
    },
    "3732": {
      "op": "DUP2"
    },
    "3733": {
      "op": "SWAP1"
    },
    "3734": {
      "op": "MSTORE"
    },
    "3735": {
      "op": "DUP2"
    },
    "3736": {
      "op": "ADD"
    },
    "3737": {
      "op": "DUP5"
    },
    "3738": {
      "op": "SWAP1"
    },
    "3739": {
      "op": "MSTORE"
    },
    "3740": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3742": {
      "op": "DUP5"
    },
    "3743": {
      "op": "DUP7"
    },
    "3744": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "3746": {
      "op": "DUP5"
    },
    "3747": {
      "op": "ADD"
    },
    "3748": {
      "op": "CALLDATACOPY"
    },
    "3749": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3751": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "3753": {
      "op": "DUP7"
    },
    "3754": {
      "op": "DUP5"
    },
    "3755": {
      "op": "ADD"
    },
    "3756": {
      "op": "ADD"
    },
    "3757": {
      "op": "MSTORE"
    },
    "3758": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3760": {
      "op": "NOT"
    },
    "3761": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3763": {
      "op": "DUP7"
    },
    "3764": {
      "op": "ADD"
    },
    "3765": {
      "op": "AND"
    },
    "3766": {
      "op": "DUP3"
    },
    "3767": {
      "op": "ADD"
    },
    "3768": {
      "op": "DUP5"
    },
    "3769": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3771": {
      "op": "DUP5"
    },
    "3772": {
      "op": "ADD"
    },
    "3773": {
      "op": "MSTORE"
    },
    "3774": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "3776": {
      "op": "DUP4"
    },
    "3777": {
      "op": "DUP3"
    },
    "3778": {
      "op": "SUB"
    },
    "3779": {
      "op": "ADD"
    },
    "3780": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3782": {
      "op": "DUP5"
    },
    "3783": {
      "op": "ADD"
    },
    "3784": {
      "op": "MSTORE"
    },
    "3785": {
      "op": "PUSH2",
      "value": "0xED5"
    },
    "3788": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "3790": {
      "op": "DUP3"
    },
    "3791": {
      "op": "ADD"
    },
    "3792": {
      "op": "DUP6"
    },
    "3793": {
      "op": "PUSH2",
      "value": "0xBD5"
    },
    "3796": {
      "jump": "i",
      "op": "JUMP"
    },
    "3797": {
      "op": "JUMPDEST"
    },
    "3798": {
      "op": "SWAP10"
    },
    "3799": {
      "op": "SWAP9"
    },
    "3800": {
      "op": "POP"
    },
    "3801": {
      "op": "POP"
    },
    "3802": {
      "op": "POP"
    },
    "3803": {
      "op": "POP"
    },
    "3804": {
      "op": "POP"
    },
    "3805": {
      "op": "POP"
    },
    "3806": {
      "op": "POP"
    },
    "3807": {
      "op": "POP"
    },
    "3808": {
      "op": "POP"
    },
    "3809": {
      "jump": "o",
      "op": "JUMP"
    },
    "3810": {
      "op": "JUMPDEST"
    },
    "3811": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3813": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3815": {
      "op": "DUP3"
    },
    "3816": {
      "op": "DUP5"
    },
    "3817": {
      "op": "SUB"
    },
    "3818": {
      "op": "SLT"
    },
    "3819": {
      "op": "ISZERO"
    },
    "3820": {
      "op": "PUSH2",
      "value": "0xEF4"
    },
    "3823": {
      "op": "JUMPI"
    },
    "3824": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3826": {
      "op": "DUP1"
    },
    "3827": {
      "op": "REVERT"
    },
    "3828": {
      "op": "JUMPDEST"
    },
    "3829": {
      "op": "DUP2"
    },
    "3830": {
      "op": "MLOAD"
    },
    "3831": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3840": {
      "op": "DUP2"
    },
    "3841": {
      "op": "GT"
    },
    "3842": {
      "op": "ISZERO"
    },
    "3843": {
      "op": "PUSH2",
      "value": "0xF0B"
    },
    "3846": {
      "op": "JUMPI"
    },
    "3847": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3849": {
      "op": "DUP1"
    },
    "3850": {
      "op": "REVERT"
    },
    "3851": {
      "op": "JUMPDEST"
    },
    "3852": {
      "op": "DUP3"
    },
    "3853": {
      "op": "ADD"
    },
    "3854": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3856": {
      "op": "DUP2"
    },
    "3857": {
      "op": "ADD"
    },
    "3858": {
      "op": "DUP5"
    },
    "3859": {
      "op": "SGT"
    },
    "3860": {
      "op": "PUSH2",
      "value": "0xF1C"
    },
    "3863": {
      "op": "JUMPI"
    },
    "3864": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3866": {
      "op": "DUP1"
    },
    "3867": {
      "op": "REVERT"
    },
    "3868": {
      "op": "JUMPDEST"
    },
    "3869": {
      "op": "DUP1"
    },
    "3870": {
      "op": "MLOAD"
    },
    "3871": {
      "op": "PUSH2",
      "value": "0xF2A"
    },
    "3874": {
      "op": "PUSH2",
      "value": "0x9E8"
    },
    "3877": {
      "op": "DUP3"
    },
    "3878": {
      "op": "PUSH2",
      "value": "0x9A1"
    },
    "3881": {
      "jump": "i",
      "op": "JUMP"
    },
    "3882": {
      "op": "JUMPDEST"
    },
    "3883": {
      "op": "DUP2"
    },
    "3884": {
      "op": "DUP2"
    },
    "3885": {
      "op": "MSTORE"
    },
    "3886": {
      "op": "DUP6"
    },
    "3887": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3889": {
      "op": "DUP4"
    },
    "3890": {
      "op": "DUP6"
    },
    "3891": {
      "op": "ADD"
    },
    "3892": {
      "op": "ADD"
    },
    "3893": {
      "op": "GT"
    },
    "3894": {
      "op": "ISZERO"
    },
    "3895": {
      "op": "PUSH2",
      "value": "0xF3F"
    },
    "3898": {
      "op": "JUMPI"
    },
    "3899": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3901": {
      "op": "DUP1"
    },
    "3902": {
      "op": "REVERT"
    },
    "3903": {
      "op": "JUMPDEST"
    },
    "3904": {
      "op": "PUSH2",
      "value": "0x5E6"
    },
    "3907": {
      "op": "DUP3"
    },
    "3908": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3910": {
      "op": "DUP4"
    },
    "3911": {
      "op": "ADD"
    },
    "3912": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3914": {
      "op": "DUP7"
    },
    "3915": {
      "op": "ADD"
    },
    "3916": {
      "op": "PUSH2",
      "value": "0xBB1"
    },
    "3919": {
      "jump": "i",
      "op": "JUMP"
    }
  },
  "sha1": "b9de8cd1e6a7d4bbf93cfa33a8d49a0b4e430ac3",
  "source": "// SCH Course Copyright Policy (C): DO-NOT-SHARE-WITH-ANYONE\n// https://smartcontractshacking.com/#copyright-policy\npragma solidity ^0.8.13;\n\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/utils/introspection/ERC165.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\";\nimport \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\";\nimport \"./ICryptoKeeper.sol\";\n\nlibrary CallHelpers {\n    function getRevertMsg(\n        bytes memory _returnData\n    ) internal pure returns (string memory) {\n        if (_returnData.length < 68) return \"Transaction reverted silently\";\n\n        assembly {\n            _returnData := add(_returnData, 0x04)\n        }\n        return abi.decode(_returnData, (string));\n    }\n}\n\ncontract CryptoKeeper is\n    ICryptoKeeper,\n    ERC165,\n    ERC721Holder,\n    ERC1155Holder,\n    ReentrancyGuard\n{\n    using CallHelpers for bytes;\n\n    uint8 constant public CALL_OPERATION = 1;\n    uint8 constant public DELEGATECALL_OPERATION = 2;\n\n    event Executed(\n        address caller,\n        address destAddress,\n        bytes encodedCalldata,\n        uint256 value,\n        bytes result\n    );\n    event NewOperator(address operator);\n    event OperatorRemoved(address operator);\n\n    bool public initialized = false;\n    mapping(address => bool) public operators;\n\n    modifier isInitialized() {\n        require(initialized, \"Not initialized\");\n        _;\n    }\n\n    modifier onlyOperator(address _account) {\n        require(operators[_account], \"Not an operator\");\n        _;\n    }\n\n    function initialize(address[] calldata _operators) external {\n        \n        initialized = true;\n\n        require(\n            _operators.length <= 10,\n            \"Can't set more than 10 operators at once\"\n        );\n\n        for (uint8 i = 0; i < _operators.length; i++) {\n            operators[_operators[i]] = true;\n            emit NewOperator(_operators[i]);\n        }\n    }\n\n    function execute(\n        address _destAddress,\n        bytes calldata _encodedCalldata,\n        uint8 operation\n    ) \n        external isInitialized onlyOperator(msg.sender) returns (bytes memory) {\n        return _execute(_destAddress, _encodedCalldata, 0, operation);\n    }\n\n    function executeWithValue(\n        address _destAddress,\n        bytes calldata _encodedCalldata,\n        uint256 _value\n    )\n        external payable isInitialized onlyOperator(msg.sender) returns (bytes memory)\n    {\n        return _execute(_destAddress, _encodedCalldata, _value, CALL_OPERATION);\n    }\n\n    function _execute(\n        address _destAddress,\n        bytes calldata _encodedCalldata,\n        uint256 _value,\n        uint8 operation\n    ) private nonReentrant returns (bytes memory) {\n\n        bool success;\n        bytes memory result;\n\n        if(operation == CALL_OPERATION) {\n            (success, result) = _destAddress.call{value: _value}(\n                _encodedCalldata\n            );\n        } else if (operation == DELEGATECALL_OPERATION) {\n            (success, result) = _destAddress.delegatecall(_encodedCalldata);\n        } else {\n            revert(\"Wrong operation\");\n        }\n\n        if (!success) {\n            revert(result.getRevertMsg());\n        }\n\n        emit Executed(\n            msg.sender,\n            _destAddress,\n            _encodedCalldata,\n            _value,\n            result\n        );\n\n        return result;\n    }\n\n    function addOperator(address _address) external onlyOperator(msg.sender) {\n        operators[_address] = true;\n        emit NewOperator(_address);\n    }\n\n    function removeOperator(address _address) external onlyOperator(msg.sender) {\n        operators[_address] = false;\n        emit OperatorRemoved(_address);\n    }\n\n    function supportsInterface(bytes4 interfaceId)\n        public\n        view\n        virtual\n        override(ERC165, ERC1155Receiver)\n        returns (bool)\n    {\n        return\n            interfaceId == type(ICryptoKeeper).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n    \n    receive() external payable {}\n}",
  "sourceMap": "787:3309:17:-:0;;;1283:31;;;-1:-1:-1;;1283:31:17;;;787:3309;;;;;;;;;-1:-1:-1;1716:1:2;1821:7;:22;787:3309:17;;;;;;",
  "sourcePath": "contracts/call-attacks-3/CryptoKeeper.sol",
  "type": "contract"
}